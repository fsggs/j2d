{"version":3,"sources":["require.js"],"names":["requirejs","require","define","global","isFunction","it","ostring","call","isArray","each","ary","func","i","length","eachReverse","hasProp","obj","prop","hasOwn","getOwn","eachProp","mixin","target","source","force","deepStringMixin","value","RegExp","bind","fn","apply","arguments","scripts","document","getElementsByTagName","defaultOnError","err","getGlobal","g","split","part","makeError","id","msg","requireModules","e","Error","requireType","originalError","newContext","contextName","trimDots","splice","normalize","name","baseName","applyMap","pkgMain","mapValue","nameParts","j","nameSegment","lastIndex","foundMap","foundI","foundStarMap","starI","normalizedBaseParts","baseParts","map","config","starMap","nodeIdCompat","jsSuffixRegExp","test","replace","charAt","slice","concat","join","outerLoop","pkgs","removeScript","isBrowser","scriptNode","getAttribute","context","parentNode","removeChild","hasPathFallback","pathConfig","paths","shift","undef","makeRequire","skipMap","splitPrefix","prefix","index","indexOf","substring","makeModuleMap","parentModuleMap","isNormalized","url","pluginModule","suffix","parentName","originalName","isDefine","normalizedName","requireCounter","defined","nameToUrl","unnormalizedCounter","parentMap","unnormalized","getModule","depMap","mod","registry","Module","on","defineEmitComplete","error","onError","errback","ids","notified","events","emit","req","takeGlobalQueue","globalDefQueue","queueItem","defQueueMap","defQueue","push","cleanRegistry","enabledRegistry","breakCycle","traced","processed","depMaps","depId","dep","depMatched","defineDep","check","checkLoaded","usingPathFallback","waitInterval","waitSeconds","expired","startTime","Date","getTime","noLoads","reqCalls","stillLoading","needCycleCheck","inCheckLoaded","modId","enabled","inited","fetched","isWebWorker","checkLoadedTimeoutId","setTimeout","callGetModule","args","init","removeListener","node","ieName","detachEvent","isOpera","removeEventListener","getScriptData","evt","currentTarget","srcElement","onScriptLoad","onScriptError","intakeDefines","handlers","baseUrl","bundles","shim","undefEvents","urlFetched","bundlesMap","exports","usingExports","module","uri","this","depExports","pluginMaps","depCount","prototype","factory","options","ignore","enable","fetch","enableBuildCallback","deps","callPlugin","load","enabling","cjsModule","defining","execCb","undefined","requireMap","console","onResourceLoad","resLoadMaps","normalizedMap","defineEmitted","pluginMap","plugin","normalizedMod","bundleId","localRequire","fromText","text","textAlt","moduleName","moduleMap","hasInteractive","useInteractive","exec","completeLoad","handler","undefed","cb","cbs","nextTick","configure","cfg","objs","v","exportsFn","makeShimExports","packages","pkgObj","location","main","currDirRegExp","callback","ret","relMap","requireMod","__requireJsBuild","get","toUrl","moduleNamePlusExt","ext","lastIndexOf","segment","isRelative","specified","found","shExports","enforceDefine","skipExt","syms","parentModule","parentPath","jsExtRegExp","match","urlArgs","type","readyRegExp","readyState","interactiveScript","data","parents","key","getInteractiveScript","script","s","head","baseElement","dataMain","src","currentlyAddingScript","mainScript","subPath","version","commentRegExp","cjsRequireRegExp","op","Object","toString","hasOwnProperty","ap","Array","window","navigator","importScripts","platform","defContextName","opera","contexts","optional","ctx","createNode","xhtml","createElementNS","createElement","scriptType","charset","async","onNodeCreated","setAttribute","attachEvent","addEventListener","insertBefore","appendChild","skipDataMain","pop","amd","jQuery","eval"],"mappings":"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","file":"require.min","sourcesContent":["/** vim: et:ts=4:sw=4:sts=4\n * @license RequireJS 2.1.22 Copyright (c) 2010-2015, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/requirejs for details\n */\n//Not using strict: uneven strict support in browsers, #392, and causes\n//problems with requirejs.exec()/transpiler plugins that may not be strict.\n/*jslint regexp: true, nomen: true, sloppy: true */\n/*global window, navigator, document, importScripts, setTimeout, opera */\n\nvar requirejs, require, define;\n(function (global) {\n    var req, s, head, baseElement, dataMain, src,\n        interactiveScript, currentlyAddingScript, mainScript, subPath,\n        version = '2.1.22',\n        commentRegExp = /(\\/\\*([\\s\\S]*?)\\*\\/|([^:]|^)\\/\\/(.*)$)/mg,\n        cjsRequireRegExp = /[^.]\\s*require\\s*\\(\\s*[\"']([^'\"\\s]+)[\"']\\s*\\)/g,\n        jsSuffixRegExp = /\\.js$/,\n        currDirRegExp = /^\\.\\//,\n        op = Object.prototype,\n        ostring = op.toString,\n        hasOwn = op.hasOwnProperty,\n        ap = Array.prototype,\n        isBrowser = !!(typeof window !== 'undefined' && typeof navigator !== 'undefined' && window.document),\n        isWebWorker = !isBrowser && typeof importScripts !== 'undefined',\n        //PS3 indicates loaded and complete, but need to wait for complete\n        //specifically. Sequence is 'loading', 'loaded', execution,\n        // then 'complete'. The UA check is unfortunate, but not sure how\n        //to feature test w/o causing perf issues.\n        readyRegExp = isBrowser && navigator.platform === 'PLAYSTATION 3' ?\n                      /^complete$/ : /^(complete|loaded)$/,\n        defContextName = '_',\n        //Oh the tragedy, detecting opera. See the usage of isOpera for reason.\n        isOpera = typeof opera !== 'undefined' && opera.toString() === '[object Opera]',\n        contexts = {},\n        cfg = {},\n        globalDefQueue = [],\n        useInteractive = false;\n\n    function isFunction(it) {\n        return ostring.call(it) === '[object Function]';\n    }\n\n    function isArray(it) {\n        return ostring.call(it) === '[object Array]';\n    }\n\n    /**\n     * Helper function for iterating over an array. If the func returns\n     * a true value, it will break out of the loop.\n     */\n    function each(ary, func) {\n        if (ary) {\n            var i;\n            for (i = 0; i < ary.length; i += 1) {\n                if (ary[i] && func(ary[i], i, ary)) {\n                    break;\n                }\n            }\n        }\n    }\n\n    /**\n     * Helper function for iterating over an array backwards. If the func\n     * returns a true value, it will break out of the loop.\n     */\n    function eachReverse(ary, func) {\n        if (ary) {\n            var i;\n            for (i = ary.length - 1; i > -1; i -= 1) {\n                if (ary[i] && func(ary[i], i, ary)) {\n                    break;\n                }\n            }\n        }\n    }\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    function getOwn(obj, prop) {\n        return hasProp(obj, prop) && obj[prop];\n    }\n\n    /**\n     * Cycles over properties in an object and calls a function for each\n     * property value. If the function returns a truthy value, then the\n     * iteration is stopped.\n     */\n    function eachProp(obj, func) {\n        var prop;\n        for (prop in obj) {\n            if (hasProp(obj, prop)) {\n                if (func(obj[prop], prop)) {\n                    break;\n                }\n            }\n        }\n    }\n\n    /**\n     * Simple function to mix in properties from source into target,\n     * but only if target does not already have a property of the same name.\n     */\n    function mixin(target, source, force, deepStringMixin) {\n        if (source) {\n            eachProp(source, function (value, prop) {\n                if (force || !hasProp(target, prop)) {\n                    if (deepStringMixin && typeof value === 'object' && value &&\n                        !isArray(value) && !isFunction(value) &&\n                        !(value instanceof RegExp)) {\n\n                        if (!target[prop]) {\n                            target[prop] = {};\n                        }\n                        mixin(target[prop], value, force, deepStringMixin);\n                    } else {\n                        target[prop] = value;\n                    }\n                }\n            });\n        }\n        return target;\n    }\n\n    //Similar to Function.prototype.bind, but the 'this' object is specified\n    //first, since it is easier to read/figure out what 'this' will be.\n    function bind(obj, fn) {\n        return function () {\n            return fn.apply(obj, arguments);\n        };\n    }\n\n    function scripts() {\n        return document.getElementsByTagName('script');\n    }\n\n    function defaultOnError(err) {\n        throw err;\n    }\n\n    //Allow getting a global that is expressed in\n    //dot notation, like 'a.b.c'.\n    function getGlobal(value) {\n        if (!value) {\n            return value;\n        }\n        var g = global;\n        each(value.split('.'), function (part) {\n            g = g[part];\n        });\n        return g;\n    }\n\n    /**\n     * Constructs an error with a pointer to an URL with more information.\n     * @param {String} id the error ID that maps to an ID on a web page.\n     * @param {String} message human readable error.\n     * @param {Error} [err] the original error, if there is one.\n     *\n     * @returns {Error}\n     */\n    function makeError(id, msg, err, requireModules) {\n        var e = new Error(msg + '\\nhttp://requirejs.org/docs/errors.html#' + id);\n        e.requireType = id;\n        e.requireModules = requireModules;\n        if (err) {\n            e.originalError = err;\n        }\n        return e;\n    }\n\n    if (typeof define !== 'undefined') {\n        //If a define is already in play via another AMD loader,\n        //do not overwrite.\n        return;\n    }\n\n    if (typeof requirejs !== 'undefined') {\n        if (isFunction(requirejs)) {\n            //Do not overwrite an existing requirejs instance.\n            return;\n        }\n        cfg = requirejs;\n        requirejs = undefined;\n    }\n\n    //Allow for a require config object\n    if (typeof require !== 'undefined' && !isFunction(require)) {\n        //assume it is a config object.\n        cfg = require;\n        require = undefined;\n    }\n\n    function newContext(contextName) {\n        var inCheckLoaded, Module, context, handlers,\n            checkLoadedTimeoutId,\n            config = {\n                //Defaults. Do not set a default for map\n                //config to speed up normalize(), which\n                //will run faster if there is no default.\n                waitSeconds: 7,\n                baseUrl: './',\n                paths: {},\n                bundles: {},\n                pkgs: {},\n                shim: {},\n                config: {}\n            },\n            registry = {},\n            //registry of just enabled modules, to speed\n            //cycle breaking code when lots of modules\n            //are registered, but not activated.\n            enabledRegistry = {},\n            undefEvents = {},\n            defQueue = [],\n            defined = {},\n            urlFetched = {},\n            bundlesMap = {},\n            requireCounter = 1,\n            unnormalizedCounter = 1;\n\n        /**\n         * Trims the . and .. from an array of path segments.\n         * It will keep a leading path segment if a .. will become\n         * the first path segment, to help with module name lookups,\n         * which act like paths, but can be remapped. But the end result,\n         * all paths that use this function should look normalized.\n         * NOTE: this method MODIFIES the input array.\n         * @param {Array} ary the array of path segments.\n         */\n        function trimDots(ary) {\n            var i, part;\n            for (i = 0; i < ary.length; i++) {\n                part = ary[i];\n                if (part === '.') {\n                    ary.splice(i, 1);\n                    i -= 1;\n                } else if (part === '..') {\n                    // If at the start, or previous value is still ..,\n                    // keep them so that when converted to a path it may\n                    // still work when converted to a path, even though\n                    // as an ID it is less than ideal. In larger point\n                    // releases, may be better to just kick out an error.\n                    if (i === 0 || (i === 1 && ary[2] === '..') || ary[i - 1] === '..') {\n                        continue;\n                    } else if (i > 0) {\n                        ary.splice(i - 1, 2);\n                        i -= 2;\n                    }\n                }\n            }\n        }\n\n        /**\n         * Given a relative module name, like ./something, normalize it to\n         * a real name that can be mapped to a path.\n         * @param {String} name the relative name\n         * @param {String} baseName a real name that the name arg is relative\n         * to.\n         * @param {Boolean} applyMap apply the map config to the value. Should\n         * only be done if this normalization is for a dependency ID.\n         * @returns {String} normalized name\n         */\n        function normalize(name, baseName, applyMap) {\n            var pkgMain, mapValue, nameParts, i, j, nameSegment, lastIndex,\n                foundMap, foundI, foundStarMap, starI, normalizedBaseParts,\n                baseParts = (baseName && baseName.split('/')),\n                map = config.map,\n                starMap = map && map['*'];\n\n            //Adjust any relative paths.\n            if (name) {\n                name = name.split('/');\n                lastIndex = name.length - 1;\n\n                // If wanting node ID compatibility, strip .js from end\n                // of IDs. Have to do this here, and not in nameToUrl\n                // because node allows either .js or non .js to map\n                // to same file.\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n                }\n\n                // Starts with a '.' so need the baseName\n                if (name[0].charAt(0) === '.' && baseParts) {\n                    //Convert baseName to array, and lop off the last part,\n                    //so that . matches that 'directory' and not name of the baseName's\n                    //module. For instance, baseName of 'one/two/three', maps to\n                    //'one/two/three.js', but we want the directory, 'one/two' for\n                    //this normalization.\n                    normalizedBaseParts = baseParts.slice(0, baseParts.length - 1);\n                    name = normalizedBaseParts.concat(name);\n                }\n\n                trimDots(name);\n                name = name.join('/');\n            }\n\n            //Apply map config if available.\n            if (applyMap && map && (baseParts || starMap)) {\n                nameParts = name.split('/');\n\n                outerLoop: for (i = nameParts.length; i > 0; i -= 1) {\n                    nameSegment = nameParts.slice(0, i).join('/');\n\n                    if (baseParts) {\n                        //Find the longest baseName segment match in the config.\n                        //So, do joins on the biggest to smallest lengths of baseParts.\n                        for (j = baseParts.length; j > 0; j -= 1) {\n                            mapValue = getOwn(map, baseParts.slice(0, j).join('/'));\n\n                            //baseName segment has config, find if it has one for\n                            //this name.\n                            if (mapValue) {\n                                mapValue = getOwn(mapValue, nameSegment);\n                                if (mapValue) {\n                                    //Match, update name to the new value.\n                                    foundMap = mapValue;\n                                    foundI = i;\n                                    break outerLoop;\n                                }\n                            }\n                        }\n                    }\n\n                    //Check for a star map match, but just hold on to it,\n                    //if there is a shorter segment match later in a matching\n                    //config, then favor over this star map.\n                    if (!foundStarMap && starMap && getOwn(starMap, nameSegment)) {\n                        foundStarMap = getOwn(starMap, nameSegment);\n                        starI = i;\n                    }\n                }\n\n                if (!foundMap && foundStarMap) {\n                    foundMap = foundStarMap;\n                    foundI = starI;\n                }\n\n                if (foundMap) {\n                    nameParts.splice(0, foundI, foundMap);\n                    name = nameParts.join('/');\n                }\n            }\n\n            // If the name points to a package's name, use\n            // the package main instead.\n            pkgMain = getOwn(config.pkgs, name);\n\n            return pkgMain ? pkgMain : name;\n        }\n\n        function removeScript(name) {\n            if (isBrowser) {\n                each(scripts(), function (scriptNode) {\n                    if (scriptNode.getAttribute('data-requiremodule') === name &&\n                            scriptNode.getAttribute('data-requirecontext') === context.contextName) {\n                        scriptNode.parentNode.removeChild(scriptNode);\n                        return true;\n                    }\n                });\n            }\n        }\n\n        function hasPathFallback(id) {\n            var pathConfig = getOwn(config.paths, id);\n            if (pathConfig && isArray(pathConfig) && pathConfig.length > 1) {\n                //Pop off the first array value, since it failed, and\n                //retry\n                pathConfig.shift();\n                context.require.undef(id);\n\n                //Custom require that does not do map translation, since\n                //ID is \"absolute\", already mapped/resolved.\n                context.makeRequire(null, {\n                    skipMap: true\n                })([id]);\n\n                return true;\n            }\n        }\n\n        //Turns a plugin!resource to [plugin, resource]\n        //with the plugin being undefined if the name\n        //did not have a plugin prefix.\n        function splitPrefix(name) {\n            var prefix,\n                index = name ? name.indexOf('!') : -1;\n            if (index > -1) {\n                prefix = name.substring(0, index);\n                name = name.substring(index + 1, name.length);\n            }\n            return [prefix, name];\n        }\n\n        /**\n         * Creates a module mapping that includes plugin prefix, module\n         * name, and path. If parentModuleMap is provided it will\n         * also normalize the name via require.normalize()\n         *\n         * @param {String} name the module name\n         * @param {String} [parentModuleMap] parent module map\n         * for the module name, used to resolve relative names.\n         * @param {Boolean} isNormalized: is the ID already normalized.\n         * This is true if this call is done for a define() module ID.\n         * @param {Boolean} applyMap: apply the map config to the ID.\n         * Should only be true if this map is for a dependency.\n         *\n         * @returns {Object}\n         */\n        function makeModuleMap(name, parentModuleMap, isNormalized, applyMap) {\n            var url, pluginModule, suffix, nameParts,\n                prefix = null,\n                parentName = parentModuleMap ? parentModuleMap.name : null,\n                originalName = name,\n                isDefine = true,\n                normalizedName = '';\n\n            //If no name, then it means it is a require call, generate an\n            //internal name.\n            if (!name) {\n                isDefine = false;\n                name = '_@r' + (requireCounter += 1);\n            }\n\n            nameParts = splitPrefix(name);\n            prefix = nameParts[0];\n            name = nameParts[1];\n\n            if (prefix) {\n                prefix = normalize(prefix, parentName, applyMap);\n                pluginModule = getOwn(defined, prefix);\n            }\n\n            //Account for relative paths if there is a base name.\n            if (name) {\n                if (prefix) {\n                    if (pluginModule && pluginModule.normalize) {\n                        //Plugin is loaded, use its normalize method.\n                        normalizedName = pluginModule.normalize(name, function (name) {\n                            return normalize(name, parentName, applyMap);\n                        });\n                    } else {\n                        // If nested plugin references, then do not try to\n                        // normalize, as it will not normalize correctly. This\n                        // places a restriction on resourceIds, and the longer\n                        // term solution is not to normalize until plugins are\n                        // loaded and all normalizations to allow for async\n                        // loading of a loader plugin. But for now, fixes the\n                        // common uses. Details in #1131\n                        normalizedName = name.indexOf('!') === -1 ?\n                                         normalize(name, parentName, applyMap) :\n                                         name;\n                    }\n                } else {\n                    //A regular module.\n                    normalizedName = normalize(name, parentName, applyMap);\n\n                    //Normalized name may be a plugin ID due to map config\n                    //application in normalize. The map config values must\n                    //already be normalized, so do not need to redo that part.\n                    nameParts = splitPrefix(normalizedName);\n                    prefix = nameParts[0];\n                    normalizedName = nameParts[1];\n                    isNormalized = true;\n\n                    url = context.nameToUrl(normalizedName);\n                }\n            }\n\n            //If the id is a plugin id that cannot be determined if it needs\n            //normalization, stamp it with a unique ID so two matching relative\n            //ids that may conflict can be separate.\n            suffix = prefix && !pluginModule && !isNormalized ?\n                     '_unnormalized' + (unnormalizedCounter += 1) :\n                     '';\n\n            return {\n                prefix: prefix,\n                name: normalizedName,\n                parentMap: parentModuleMap,\n                unnormalized: !!suffix,\n                url: url,\n                originalName: originalName,\n                isDefine: isDefine,\n                id: (prefix ?\n                        prefix + '!' + normalizedName :\n                        normalizedName) + suffix\n            };\n        }\n\n        function getModule(depMap) {\n            var id = depMap.id,\n                mod = getOwn(registry, id);\n\n            if (!mod) {\n                mod = registry[id] = new context.Module(depMap);\n            }\n\n            return mod;\n        }\n\n        function on(depMap, name, fn) {\n            var id = depMap.id,\n                mod = getOwn(registry, id);\n\n            if (hasProp(defined, id) &&\n                    (!mod || mod.defineEmitComplete)) {\n                if (name === 'defined') {\n                    fn(defined[id]);\n                }\n            } else {\n                mod = getModule(depMap);\n                if (mod.error && name === 'error') {\n                    fn(mod.error);\n                } else {\n                    mod.on(name, fn);\n                }\n            }\n        }\n\n        function onError(err, errback) {\n            var ids = err.requireModules,\n                notified = false;\n\n            if (errback) {\n                errback(err);\n            } else {\n                each(ids, function (id) {\n                    var mod = getOwn(registry, id);\n                    if (mod) {\n                        //Set error on module, so it skips timeout checks.\n                        mod.error = err;\n                        if (mod.events.error) {\n                            notified = true;\n                            mod.emit('error', err);\n                        }\n                    }\n                });\n\n                if (!notified) {\n                    req.onError(err);\n                }\n            }\n        }\n\n        /**\n         * Internal method to transfer globalQueue items to this context's\n         * defQueue.\n         */\n        function takeGlobalQueue() {\n            //Push all the globalDefQueue items into the context's defQueue\n            if (globalDefQueue.length) {\n                each(globalDefQueue, function(queueItem) {\n                    var id = queueItem[0];\n                    if (typeof id === 'string') {\n                        context.defQueueMap[id] = true;\n                    }\n                    defQueue.push(queueItem);\n                });\n                globalDefQueue = [];\n            }\n        }\n\n        handlers = {\n            'require': function (mod) {\n                if (mod.require) {\n                    return mod.require;\n                } else {\n                    return (mod.require = context.makeRequire(mod.map));\n                }\n            },\n            'exports': function (mod) {\n                mod.usingExports = true;\n                if (mod.map.isDefine) {\n                    if (mod.exports) {\n                        return (defined[mod.map.id] = mod.exports);\n                    } else {\n                        return (mod.exports = defined[mod.map.id] = {});\n                    }\n                }\n            },\n            'module': function (mod) {\n                if (mod.module) {\n                    return mod.module;\n                } else {\n                    return (mod.module = {\n                        id: mod.map.id,\n                        uri: mod.map.url,\n                        config: function () {\n                            return getOwn(config.config, mod.map.id) || {};\n                        },\n                        exports: mod.exports || (mod.exports = {})\n                    });\n                }\n            }\n        };\n\n        function cleanRegistry(id) {\n            //Clean up machinery used for waiting modules.\n            delete registry[id];\n            delete enabledRegistry[id];\n        }\n\n        function breakCycle(mod, traced, processed) {\n            var id = mod.map.id;\n\n            if (mod.error) {\n                mod.emit('error', mod.error);\n            } else {\n                traced[id] = true;\n                each(mod.depMaps, function (depMap, i) {\n                    var depId = depMap.id,\n                        dep = getOwn(registry, depId);\n\n                    //Only force things that have not completed\n                    //being defined, so still in the registry,\n                    //and only if it has not been matched up\n                    //in the module already.\n                    if (dep && !mod.depMatched[i] && !processed[depId]) {\n                        if (getOwn(traced, depId)) {\n                            mod.defineDep(i, defined[depId]);\n                            mod.check(); //pass false?\n                        } else {\n                            breakCycle(dep, traced, processed);\n                        }\n                    }\n                });\n                processed[id] = true;\n            }\n        }\n\n        function checkLoaded() {\n            var err, usingPathFallback,\n                waitInterval = config.waitSeconds * 1000,\n                //It is possible to disable the wait interval by using waitSeconds of 0.\n                expired = waitInterval && (context.startTime + waitInterval) < new Date().getTime(),\n                noLoads = [],\n                reqCalls = [],\n                stillLoading = false,\n                needCycleCheck = true;\n\n            //Do not bother if this call was a result of a cycle break.\n            if (inCheckLoaded) {\n                return;\n            }\n\n            inCheckLoaded = true;\n\n            //Figure out the state of all the modules.\n            eachProp(enabledRegistry, function (mod) {\n                var map = mod.map,\n                    modId = map.id;\n\n                //Skip things that are not enabled or in error state.\n                if (!mod.enabled) {\n                    return;\n                }\n\n                if (!map.isDefine) {\n                    reqCalls.push(mod);\n                }\n\n                if (!mod.error) {\n                    //If the module should be executed, and it has not\n                    //been inited and time is up, remember it.\n                    if (!mod.inited && expired) {\n                        if (hasPathFallback(modId)) {\n                            usingPathFallback = true;\n                            stillLoading = true;\n                        } else {\n                            noLoads.push(modId);\n                            removeScript(modId);\n                        }\n                    } else if (!mod.inited && mod.fetched && map.isDefine) {\n                        stillLoading = true;\n                        if (!map.prefix) {\n                            //No reason to keep looking for unfinished\n                            //loading. If the only stillLoading is a\n                            //plugin resource though, keep going,\n                            //because it may be that a plugin resource\n                            //is waiting on a non-plugin cycle.\n                            return (needCycleCheck = false);\n                        }\n                    }\n                }\n            });\n\n            if (expired && noLoads.length) {\n                //If wait time expired, throw error of unloaded modules.\n                err = makeError('timeout', 'Load timeout for modules: ' + noLoads, null, noLoads);\n                err.contextName = context.contextName;\n                return onError(err);\n            }\n\n            //Not expired, check for a cycle.\n            if (needCycleCheck) {\n                each(reqCalls, function (mod) {\n                    breakCycle(mod, {}, {});\n                });\n            }\n\n            //If still waiting on loads, and the waiting load is something\n            //other than a plugin resource, or there are still outstanding\n            //scripts, then just try back later.\n            if ((!expired || usingPathFallback) && stillLoading) {\n                //Something is still waiting to load. Wait for it, but only\n                //if a timeout is not already in effect.\n                if ((isBrowser || isWebWorker) && !checkLoadedTimeoutId) {\n                    checkLoadedTimeoutId = setTimeout(function () {\n                        checkLoadedTimeoutId = 0;\n                        checkLoaded();\n                    }, 50);\n                }\n            }\n\n            inCheckLoaded = false;\n        }\n\n        Module = function (map) {\n            this.events = getOwn(undefEvents, map.id) || {};\n            this.map = map;\n            this.shim = getOwn(config.shim, map.id);\n            this.depExports = [];\n            this.depMaps = [];\n            this.depMatched = [];\n            this.pluginMaps = {};\n            this.depCount = 0;\n\n            /* this.exports this.factory\n               this.depMaps = [],\n               this.enabled, this.fetched\n            */\n        };\n\n        Module.prototype = {\n            init: function (depMaps, factory, errback, options) {\n                options = options || {};\n\n                //Do not do more inits if already done. Can happen if there\n                //are multiple define calls for the same module. That is not\n                //a normal, common case, but it is also not unexpected.\n                if (this.inited) {\n                    return;\n                }\n\n                this.factory = factory;\n\n                if (errback) {\n                    //Register for errors on this module.\n                    this.on('error', errback);\n                } else if (this.events.error) {\n                    //If no errback already, but there are error listeners\n                    //on this module, set up an errback to pass to the deps.\n                    errback = bind(this, function (err) {\n                        this.emit('error', err);\n                    });\n                }\n\n                //Do a copy of the dependency array, so that\n                //source inputs are not modified. For example\n                //\"shim\" deps are passed in here directly, and\n                //doing a direct modification of the depMaps array\n                //would affect that config.\n                this.depMaps = depMaps && depMaps.slice(0);\n\n                this.errback = errback;\n\n                //Indicate this module has be initialized\n                this.inited = true;\n\n                this.ignore = options.ignore;\n\n                //Could have option to init this module in enabled mode,\n                //or could have been previously marked as enabled. However,\n                //the dependencies are not known until init is called. So\n                //if enabled previously, now trigger dependencies as enabled.\n                if (options.enabled || this.enabled) {\n                    //Enable this module and dependencies.\n                    //Will call this.check()\n                    this.enable();\n                } else {\n                    this.check();\n                }\n            },\n\n            defineDep: function (i, depExports) {\n                //Because of cycles, defined callback for a given\n                //export can be called more than once.\n                if (!this.depMatched[i]) {\n                    this.depMatched[i] = true;\n                    this.depCount -= 1;\n                    this.depExports[i] = depExports;\n                }\n            },\n\n            fetch: function () {\n                if (this.fetched) {\n                    return;\n                }\n                this.fetched = true;\n\n                context.startTime = (new Date()).getTime();\n\n                var map = this.map;\n\n                //If the manager is for a plugin managed resource,\n                //ask the plugin to load it now.\n                if (this.shim) {\n                    context.makeRequire(this.map, {\n                        enableBuildCallback: true\n                    })(this.shim.deps || [], bind(this, function () {\n                        return map.prefix ? this.callPlugin() : this.load();\n                    }));\n                } else {\n                    //Regular dependency.\n                    return map.prefix ? this.callPlugin() : this.load();\n                }\n            },\n\n            load: function () {\n                var url = this.map.url;\n\n                //Regular dependency.\n                if (!urlFetched[url]) {\n                    urlFetched[url] = true;\n                    context.load(this.map.id, url);\n                }\n            },\n\n            /**\n             * Checks if the module is ready to define itself, and if so,\n             * define it.\n             */\n            check: function () {\n                if (!this.enabled || this.enabling) {\n                    return;\n                }\n\n                var err, cjsModule,\n                    id = this.map.id,\n                    depExports = this.depExports,\n                    exports = this.exports,\n                    factory = this.factory;\n\n                if (!this.inited) {\n                    // Only fetch if not already in the defQueue.\n                    if (!hasProp(context.defQueueMap, id)) {\n                        this.fetch();\n                    }\n                } else if (this.error) {\n                    this.emit('error', this.error);\n                } else if (!this.defining) {\n                    //The factory could trigger another require call\n                    //that would result in checking this module to\n                    //define itself again. If already in the process\n                    //of doing that, skip this work.\n                    this.defining = true;\n\n                    if (this.depCount < 1 && !this.defined) {\n                        if (isFunction(factory)) {\n                            try {\n                                exports = context.execCb(id, factory, depExports, exports);\n                            } catch (e) {\n                                err = e;\n                            }\n\n                            // Favor return value over exports. If node/cjs in play,\n                            // then will not have a return value anyway. Favor\n                            // module.exports assignment over exports object.\n                            if (this.map.isDefine && exports === undefined) {\n                                cjsModule = this.module;\n                                if (cjsModule) {\n                                    exports = cjsModule.exports;\n                                } else if (this.usingExports) {\n                                    //exports already set the defined value.\n                                    exports = this.exports;\n                                }\n                            }\n\n                            if (err) {\n                                // If there is an error listener, favor passing\n                                // to that instead of throwing an error. However,\n                                // only do it for define()'d  modules. require\n                                // errbacks should not be called for failures in\n                                // their callbacks (#699). However if a global\n                                // onError is set, use that.\n                                if ((this.events.error && this.map.isDefine) ||\n                                    req.onError !== defaultOnError) {\n                                    err.requireMap = this.map;\n                                    err.requireModules = this.map.isDefine ? [this.map.id] : null;\n                                    err.requireType = this.map.isDefine ? 'define' : 'require';\n                                    return onError((this.error = err));\n                                } else if (typeof console !== 'undefined' &&\n                                           console.error) {\n                                    // Log the error for debugging. If promises could be\n                                    // used, this would be different, but making do.\n                                    console.error(err);\n                                } else {\n                                    // Do not want to completely lose the error. While this\n                                    // will mess up processing and lead to similar results\n                                    // as bug 1440, it at least surfaces the error.\n                                    req.onError(err);\n                                }\n                            }\n                        } else {\n                            //Just a literal value\n                            exports = factory;\n                        }\n\n                        this.exports = exports;\n\n                        if (this.map.isDefine && !this.ignore) {\n                            defined[id] = exports;\n\n                            if (req.onResourceLoad) {\n                                var resLoadMaps = [];\n                                each(this.depMaps, function (depMap) {\n                                    resLoadMaps.push(depMap.normalizedMap || depMap);\n                                });\n                                req.onResourceLoad(context, this.map, resLoadMaps);\n                            }\n                        }\n\n                        //Clean up\n                        cleanRegistry(id);\n\n                        this.defined = true;\n                    }\n\n                    //Finished the define stage. Allow calling check again\n                    //to allow define notifications below in the case of a\n                    //cycle.\n                    this.defining = false;\n\n                    if (this.defined && !this.defineEmitted) {\n                        this.defineEmitted = true;\n                        this.emit('defined', this.exports);\n                        this.defineEmitComplete = true;\n                    }\n\n                }\n            },\n\n            callPlugin: function () {\n                var map = this.map,\n                    id = map.id,\n                    //Map already normalized the prefix.\n                    pluginMap = makeModuleMap(map.prefix);\n\n                //Mark this as a dependency for this plugin, so it\n                //can be traced for cycles.\n                this.depMaps.push(pluginMap);\n\n                on(pluginMap, 'defined', bind(this, function (plugin) {\n                    var load, normalizedMap, normalizedMod,\n                        bundleId = getOwn(bundlesMap, this.map.id),\n                        name = this.map.name,\n                        parentName = this.map.parentMap ? this.map.parentMap.name : null,\n                        localRequire = context.makeRequire(map.parentMap, {\n                            enableBuildCallback: true\n                        });\n\n                    //If current map is not normalized, wait for that\n                    //normalized name to load instead of continuing.\n                    if (this.map.unnormalized) {\n                        //Normalize the ID if the plugin allows it.\n                        if (plugin.normalize) {\n                            name = plugin.normalize(name, function (name) {\n                                return normalize(name, parentName, true);\n                            }) || '';\n                        }\n\n                        //prefix and name should already be normalized, no need\n                        //for applying map config again either.\n                        normalizedMap = makeModuleMap(map.prefix + '!' + name,\n                                                      this.map.parentMap);\n                        on(normalizedMap,\n                            'defined', bind(this, function (value) {\n                                this.map.normalizedMap = normalizedMap;\n                                this.init([], function () { return value; }, null, {\n                                    enabled: true,\n                                    ignore: true\n                                });\n                            }));\n\n                        normalizedMod = getOwn(registry, normalizedMap.id);\n                        if (normalizedMod) {\n                            //Mark this as a dependency for this plugin, so it\n                            //can be traced for cycles.\n                            this.depMaps.push(normalizedMap);\n\n                            if (this.events.error) {\n                                normalizedMod.on('error', bind(this, function (err) {\n                                    this.emit('error', err);\n                                }));\n                            }\n                            normalizedMod.enable();\n                        }\n\n                        return;\n                    }\n\n                    //If a paths config, then just load that file instead to\n                    //resolve the plugin, as it is built into that paths layer.\n                    if (bundleId) {\n                        this.map.url = context.nameToUrl(bundleId);\n                        this.load();\n                        return;\n                    }\n\n                    load = bind(this, function (value) {\n                        this.init([], function () { return value; }, null, {\n                            enabled: true\n                        });\n                    });\n\n                    load.error = bind(this, function (err) {\n                        this.inited = true;\n                        this.error = err;\n                        err.requireModules = [id];\n\n                        //Remove temp unnormalized modules for this module,\n                        //since they will never be resolved otherwise now.\n                        eachProp(registry, function (mod) {\n                            if (mod.map.id.indexOf(id + '_unnormalized') === 0) {\n                                cleanRegistry(mod.map.id);\n                            }\n                        });\n\n                        onError(err);\n                    });\n\n                    //Allow plugins to load other code without having to know the\n                    //context or how to 'complete' the load.\n                    load.fromText = bind(this, function (text, textAlt) {\n                        /*jslint evil: true */\n                        var moduleName = map.name,\n                            moduleMap = makeModuleMap(moduleName),\n                            hasInteractive = useInteractive;\n\n                        //As of 2.1.0, support just passing the text, to reinforce\n                        //fromText only being called once per resource. Still\n                        //support old style of passing moduleName but discard\n                        //that moduleName in favor of the internal ref.\n                        if (textAlt) {\n                            text = textAlt;\n                        }\n\n                        //Turn off interactive script matching for IE for any define\n                        //calls in the text, then turn it back on at the end.\n                        if (hasInteractive) {\n                            useInteractive = false;\n                        }\n\n                        //Prime the system by creating a module instance for\n                        //it.\n                        getModule(moduleMap);\n\n                        //Transfer any config to this other module.\n                        if (hasProp(config.config, id)) {\n                            config.config[moduleName] = config.config[id];\n                        }\n\n                        try {\n                            req.exec(text);\n                        } catch (e) {\n                            return onError(makeError('fromtexteval',\n                                             'fromText eval for ' + id +\n                                            ' failed: ' + e,\n                                             e,\n                                             [id]));\n                        }\n\n                        if (hasInteractive) {\n                            useInteractive = true;\n                        }\n\n                        //Mark this as a dependency for the plugin\n                        //resource\n                        this.depMaps.push(moduleMap);\n\n                        //Support anonymous modules.\n                        context.completeLoad(moduleName);\n\n                        //Bind the value of that module to the value for this\n                        //resource ID.\n                        localRequire([moduleName], load);\n                    });\n\n                    //Use parentName here since the plugin's name is not reliable,\n                    //could be some weird string with no path that actually wants to\n                    //reference the parentName's path.\n                    plugin.load(map.name, localRequire, load, config);\n                }));\n\n                context.enable(pluginMap, this);\n                this.pluginMaps[pluginMap.id] = pluginMap;\n            },\n\n            enable: function () {\n                enabledRegistry[this.map.id] = this;\n                this.enabled = true;\n\n                //Set flag mentioning that the module is enabling,\n                //so that immediate calls to the defined callbacks\n                //for dependencies do not trigger inadvertent load\n                //with the depCount still being zero.\n                this.enabling = true;\n\n                //Enable each dependency\n                each(this.depMaps, bind(this, function (depMap, i) {\n                    var id, mod, handler;\n\n                    if (typeof depMap === 'string') {\n                        //Dependency needs to be converted to a depMap\n                        //and wired up to this module.\n                        depMap = makeModuleMap(depMap,\n                                               (this.map.isDefine ? this.map : this.map.parentMap),\n                                               false,\n                                               !this.skipMap);\n                        this.depMaps[i] = depMap;\n\n                        handler = getOwn(handlers, depMap.id);\n\n                        if (handler) {\n                            this.depExports[i] = handler(this);\n                            return;\n                        }\n\n                        this.depCount += 1;\n\n                        on(depMap, 'defined', bind(this, function (depExports) {\n                            if (this.undefed) {\n                                return;\n                            }\n                            this.defineDep(i, depExports);\n                            this.check();\n                        }));\n\n                        if (this.errback) {\n                            on(depMap, 'error', bind(this, this.errback));\n                        } else if (this.events.error) {\n                            // No direct errback on this module, but something\n                            // else is listening for errors, so be sure to\n                            // propagate the error correctly.\n                            on(depMap, 'error', bind(this, function(err) {\n                                this.emit('error', err);\n                            }));\n                        }\n                    }\n\n                    id = depMap.id;\n                    mod = registry[id];\n\n                    //Skip special modules like 'require', 'exports', 'module'\n                    //Also, don't call enable if it is already enabled,\n                    //important in circular dependency cases.\n                    if (!hasProp(handlers, id) && mod && !mod.enabled) {\n                        context.enable(depMap, this);\n                    }\n                }));\n\n                //Enable each plugin that is used in\n                //a dependency\n                eachProp(this.pluginMaps, bind(this, function (pluginMap) {\n                    var mod = getOwn(registry, pluginMap.id);\n                    if (mod && !mod.enabled) {\n                        context.enable(pluginMap, this);\n                    }\n                }));\n\n                this.enabling = false;\n\n                this.check();\n            },\n\n            on: function (name, cb) {\n                var cbs = this.events[name];\n                if (!cbs) {\n                    cbs = this.events[name] = [];\n                }\n                cbs.push(cb);\n            },\n\n            emit: function (name, evt) {\n                each(this.events[name], function (cb) {\n                    cb(evt);\n                });\n                if (name === 'error') {\n                    //Now that the error handler was triggered, remove\n                    //the listeners, since this broken Module instance\n                    //can stay around for a while in the registry.\n                    delete this.events[name];\n                }\n            }\n        };\n\n        function callGetModule(args) {\n            //Skip modules already defined.\n            if (!hasProp(defined, args[0])) {\n                getModule(makeModuleMap(args[0], null, true)).init(args[1], args[2]);\n            }\n        }\n\n        function removeListener(node, func, name, ieName) {\n            //Favor detachEvent because of IE9\n            //issue, see attachEvent/addEventListener comment elsewhere\n            //in this file.\n            if (node.detachEvent && !isOpera) {\n                //Probably IE. If not it will throw an error, which will be\n                //useful to know.\n                if (ieName) {\n                    node.detachEvent(ieName, func);\n                }\n            } else {\n                node.removeEventListener(name, func, false);\n            }\n        }\n\n        /**\n         * Given an event from a script node, get the requirejs info from it,\n         * and then removes the event listeners on the node.\n         * @param {Event} evt\n         * @returns {Object}\n         */\n        function getScriptData(evt) {\n            //Using currentTarget instead of target for Firefox 2.0's sake. Not\n            //all old browsers will be supported, but this one was easy enough\n            //to support and still makes sense.\n            var node = evt.currentTarget || evt.srcElement;\n\n            //Remove the listeners once here.\n            removeListener(node, context.onScriptLoad, 'load', 'onreadystatechange');\n            removeListener(node, context.onScriptError, 'error');\n\n            return {\n                node: node,\n                id: node && node.getAttribute('data-requiremodule')\n            };\n        }\n\n        function intakeDefines() {\n            var args;\n\n            //Any defined modules in the global queue, intake them now.\n            takeGlobalQueue();\n\n            //Make sure any remaining defQueue items get properly processed.\n            while (defQueue.length) {\n                args = defQueue.shift();\n                if (args[0] === null) {\n                    return onError(makeError('mismatch', 'Mismatched anonymous define() module: ' +\n                        args[args.length - 1]));\n                } else {\n                    //args are id, deps, factory. Should be normalized by the\n                    //define() function.\n                    callGetModule(args);\n                }\n            }\n            context.defQueueMap = {};\n        }\n\n        context = {\n            config: config,\n            contextName: contextName,\n            registry: registry,\n            defined: defined,\n            urlFetched: urlFetched,\n            defQueue: defQueue,\n            defQueueMap: {},\n            Module: Module,\n            makeModuleMap: makeModuleMap,\n            nextTick: req.nextTick,\n            onError: onError,\n\n            /**\n             * Set a configuration for the context.\n             * @param {Object} cfg config object to integrate.\n             */\n            configure: function (cfg) {\n                //Make sure the baseUrl ends in a slash.\n                if (cfg.baseUrl) {\n                    if (cfg.baseUrl.charAt(cfg.baseUrl.length - 1) !== '/') {\n                        cfg.baseUrl += '/';\n                    }\n                }\n\n                //Save off the paths since they require special processing,\n                //they are additive.\n                var shim = config.shim,\n                    objs = {\n                        paths: true,\n                        bundles: true,\n                        config: true,\n                        map: true\n                    };\n\n                eachProp(cfg, function (value, prop) {\n                    if (objs[prop]) {\n                        if (!config[prop]) {\n                            config[prop] = {};\n                        }\n                        mixin(config[prop], value, true, true);\n                    } else {\n                        config[prop] = value;\n                    }\n                });\n\n                //Reverse map the bundles\n                if (cfg.bundles) {\n                    eachProp(cfg.bundles, function (value, prop) {\n                        each(value, function (v) {\n                            if (v !== prop) {\n                                bundlesMap[v] = prop;\n                            }\n                        });\n                    });\n                }\n\n                //Merge shim\n                if (cfg.shim) {\n                    eachProp(cfg.shim, function (value, id) {\n                        //Normalize the structure\n                        if (isArray(value)) {\n                            value = {\n                                deps: value\n                            };\n                        }\n                        if ((value.exports || value.init) && !value.exportsFn) {\n                            value.exportsFn = context.makeShimExports(value);\n                        }\n                        shim[id] = value;\n                    });\n                    config.shim = shim;\n                }\n\n                //Adjust packages if necessary.\n                if (cfg.packages) {\n                    each(cfg.packages, function (pkgObj) {\n                        var location, name;\n\n                        pkgObj = typeof pkgObj === 'string' ? {name: pkgObj} : pkgObj;\n\n                        name = pkgObj.name;\n                        location = pkgObj.location;\n                        if (location) {\n                            config.paths[name] = pkgObj.location;\n                        }\n\n                        //Save pointer to main module ID for pkg name.\n                        //Remove leading dot in main, so main paths are normalized,\n                        //and remove any trailing .js, since different package\n                        //envs have different conventions: some use a module name,\n                        //some use a file name.\n                        config.pkgs[name] = pkgObj.name + '/' + (pkgObj.main || 'main')\n                                     .replace(currDirRegExp, '')\n                                     .replace(jsSuffixRegExp, '');\n                    });\n                }\n\n                //If there are any \"waiting to execute\" modules in the registry,\n                //update the maps for them, since their info, like URLs to load,\n                //may have changed.\n                eachProp(registry, function (mod, id) {\n                    //If module already has init called, since it is too\n                    //late to modify them, and ignore unnormalized ones\n                    //since they are transient.\n                    if (!mod.inited && !mod.map.unnormalized) {\n                        mod.map = makeModuleMap(id, null, true);\n                    }\n                });\n\n                //If a deps array or a config callback is specified, then call\n                //require with those args. This is useful when require is defined as a\n                //config object before require.js is loaded.\n                if (cfg.deps || cfg.callback) {\n                    context.require(cfg.deps || [], cfg.callback);\n                }\n            },\n\n            makeShimExports: function (value) {\n                function fn() {\n                    var ret;\n                    if (value.init) {\n                        ret = value.init.apply(global, arguments);\n                    }\n                    return ret || (value.exports && getGlobal(value.exports));\n                }\n                return fn;\n            },\n\n            makeRequire: function (relMap, options) {\n                options = options || {};\n\n                function localRequire(deps, callback, errback) {\n                    var id, map, requireMod;\n\n                    if (options.enableBuildCallback && callback && isFunction(callback)) {\n                        callback.__requireJsBuild = true;\n                    }\n\n                    if (typeof deps === 'string') {\n                        if (isFunction(callback)) {\n                            //Invalid call\n                            return onError(makeError('requireargs', 'Invalid require call'), errback);\n                        }\n\n                        //If require|exports|module are requested, get the\n                        //value for them from the special handlers. Caveat:\n                        //this only works while module is being defined.\n                        if (relMap && hasProp(handlers, deps)) {\n                            return handlers[deps](registry[relMap.id]);\n                        }\n\n                        //Synchronous access to one module. If require.get is\n                        //available (as in the Node adapter), prefer that.\n                        if (req.get) {\n                            return req.get(context, deps, relMap, localRequire);\n                        }\n\n                        //Normalize module name, if it contains . or ..\n                        map = makeModuleMap(deps, relMap, false, true);\n                        id = map.id;\n\n                        if (!hasProp(defined, id)) {\n                            return onError(makeError('notloaded', 'Module name \"' +\n                                        id +\n                                        '\" has not been loaded yet for context: ' +\n                                        contextName +\n                                        (relMap ? '' : '. Use require([])')));\n                        }\n                        return defined[id];\n                    }\n\n                    //Grab defines waiting in the global queue.\n                    intakeDefines();\n\n                    //Mark all the dependencies as needing to be loaded.\n                    context.nextTick(function () {\n                        //Some defines could have been added since the\n                        //require call, collect them.\n                        intakeDefines();\n\n                        requireMod = getModule(makeModuleMap(null, relMap));\n\n                        //Store if map config should be applied to this require\n                        //call for dependencies.\n                        requireMod.skipMap = options.skipMap;\n\n                        requireMod.init(deps, callback, errback, {\n                            enabled: true\n                        });\n\n                        checkLoaded();\n                    });\n\n                    return localRequire;\n                }\n\n                mixin(localRequire, {\n                    isBrowser: isBrowser,\n\n                    /**\n                     * Converts a module name + .extension into an URL path.\n                     * *Requires* the use of a module name. It does not support using\n                     * plain URLs like nameToUrl.\n                     */\n                    toUrl: function (moduleNamePlusExt) {\n                        var ext,\n                            index = moduleNamePlusExt.lastIndexOf('.'),\n                            segment = moduleNamePlusExt.split('/')[0],\n                            isRelative = segment === '.' || segment === '..';\n\n                        //Have a file extension alias, and it is not the\n                        //dots from a relative path.\n                        if (index !== -1 && (!isRelative || index > 1)) {\n                            ext = moduleNamePlusExt.substring(index, moduleNamePlusExt.length);\n                            moduleNamePlusExt = moduleNamePlusExt.substring(0, index);\n                        }\n\n                        return context.nameToUrl(normalize(moduleNamePlusExt,\n                                                relMap && relMap.id, true), ext,  true);\n                    },\n\n                    defined: function (id) {\n                        return hasProp(defined, makeModuleMap(id, relMap, false, true).id);\n                    },\n\n                    specified: function (id) {\n                        id = makeModuleMap(id, relMap, false, true).id;\n                        return hasProp(defined, id) || hasProp(registry, id);\n                    }\n                });\n\n                //Only allow undef on top level require calls\n                if (!relMap) {\n                    localRequire.undef = function (id) {\n                        //Bind any waiting define() calls to this context,\n                        //fix for #408\n                        takeGlobalQueue();\n\n                        var map = makeModuleMap(id, relMap, true),\n                            mod = getOwn(registry, id);\n\n                        mod.undefed = true;\n                        removeScript(id);\n\n                        delete defined[id];\n                        delete urlFetched[map.url];\n                        delete undefEvents[id];\n\n                        //Clean queued defines too. Go backwards\n                        //in array so that the splices do not\n                        //mess up the iteration.\n                        eachReverse(defQueue, function(args, i) {\n                            if (args[0] === id) {\n                                defQueue.splice(i, 1);\n                            }\n                        });\n                        delete context.defQueueMap[id];\n\n                        if (mod) {\n                            //Hold on to listeners in case the\n                            //module will be attempted to be reloaded\n                            //using a different config.\n                            if (mod.events.defined) {\n                                undefEvents[id] = mod.events;\n                            }\n\n                            cleanRegistry(id);\n                        }\n                    };\n                }\n\n                return localRequire;\n            },\n\n            /**\n             * Called to enable a module if it is still in the registry\n             * awaiting enablement. A second arg, parent, the parent module,\n             * is passed in for context, when this method is overridden by\n             * the optimizer. Not shown here to keep code compact.\n             */\n            enable: function (depMap) {\n                var mod = getOwn(registry, depMap.id);\n                if (mod) {\n                    getModule(depMap).enable();\n                }\n            },\n\n            /**\n             * Internal method used by environment adapters to complete a load event.\n             * A load event could be a script load or just a load pass from a synchronous\n             * load call.\n             * @param {String} moduleName the name of the module to potentially complete.\n             */\n            completeLoad: function (moduleName) {\n                var found, args, mod,\n                    shim = getOwn(config.shim, moduleName) || {},\n                    shExports = shim.exports;\n\n                takeGlobalQueue();\n\n                while (defQueue.length) {\n                    args = defQueue.shift();\n                    if (args[0] === null) {\n                        args[0] = moduleName;\n                        //If already found an anonymous module and bound it\n                        //to this name, then this is some other anon module\n                        //waiting for its completeLoad to fire.\n                        if (found) {\n                            break;\n                        }\n                        found = true;\n                    } else if (args[0] === moduleName) {\n                        //Found matching define call for this script!\n                        found = true;\n                    }\n\n                    callGetModule(args);\n                }\n                context.defQueueMap = {};\n\n                //Do this after the cycle of callGetModule in case the result\n                //of those calls/init calls changes the registry.\n                mod = getOwn(registry, moduleName);\n\n                if (!found && !hasProp(defined, moduleName) && mod && !mod.inited) {\n                    if (config.enforceDefine && (!shExports || !getGlobal(shExports))) {\n                        if (hasPathFallback(moduleName)) {\n                            return;\n                        } else {\n                            return onError(makeError('nodefine',\n                                             'No define call for ' + moduleName,\n                                             null,\n                                             [moduleName]));\n                        }\n                    } else {\n                        //A script that does not call define(), so just simulate\n                        //the call for it.\n                        callGetModule([moduleName, (shim.deps || []), shim.exportsFn]);\n                    }\n                }\n\n                checkLoaded();\n            },\n\n            /**\n             * Converts a module name to a file path. Supports cases where\n             * moduleName may actually be just an URL.\n             * Note that it **does not** call normalize on the moduleName,\n             * it is assumed to have already been normalized. This is an\n             * internal API, not a public one. Use toUrl for the public API.\n             */\n            nameToUrl: function (moduleName, ext, skipExt) {\n                var paths, syms, i, parentModule, url,\n                    parentPath, bundleId,\n                    pkgMain = getOwn(config.pkgs, moduleName);\n\n                if (pkgMain) {\n                    moduleName = pkgMain;\n                }\n\n                bundleId = getOwn(bundlesMap, moduleName);\n\n                if (bundleId) {\n                    return context.nameToUrl(bundleId, ext, skipExt);\n                }\n\n                //If a colon is in the URL, it indicates a protocol is used and it is just\n                //an URL to a file, or if it starts with a slash, contains a query arg (i.e. ?)\n                //or ends with .js, then assume the user meant to use an url and not a module id.\n                //The slash is important for protocol-less URLs as well as full paths.\n                if (req.jsExtRegExp.test(moduleName)) {\n                    //Just a plain path, not module name lookup, so just return it.\n                    //Add extension if it is included. This is a bit wonky, only non-.js things pass\n                    //an extension, this method probably needs to be reworked.\n                    url = moduleName + (ext || '');\n                } else {\n                    //A module that needs to be converted to a path.\n                    paths = config.paths;\n\n                    syms = moduleName.split('/');\n                    //For each module name segment, see if there is a path\n                    //registered for it. Start with most specific name\n                    //and work up from it.\n                    for (i = syms.length; i > 0; i -= 1) {\n                        parentModule = syms.slice(0, i).join('/');\n\n                        parentPath = getOwn(paths, parentModule);\n                        if (parentPath) {\n                            //If an array, it means there are a few choices,\n                            //Choose the one that is desired\n                            if (isArray(parentPath)) {\n                                parentPath = parentPath[0];\n                            }\n                            syms.splice(0, i, parentPath);\n                            break;\n                        }\n                    }\n\n                    //Join the path parts together, then figure out if baseUrl is needed.\n                    url = syms.join('/');\n                    url += (ext || (/^data\\:|\\?/.test(url) || skipExt ? '' : '.js'));\n                    url = (url.charAt(0) === '/' || url.match(/^[\\w\\+\\.\\-]+:/) ? '' : config.baseUrl) + url;\n                }\n\n                return config.urlArgs ? url +\n                                        ((url.indexOf('?') === -1 ? '?' : '&') +\n                                         config.urlArgs) : url;\n            },\n\n            //Delegates to req.load. Broken out as a separate function to\n            //allow overriding in the optimizer.\n            load: function (id, url) {\n                req.load(context, id, url);\n            },\n\n            /**\n             * Executes a module callback function. Broken out as a separate function\n             * solely to allow the build system to sequence the files in the built\n             * layer in the right sequence.\n             *\n             * @private\n             */\n            execCb: function (name, callback, args, exports) {\n                return callback.apply(exports, args);\n            },\n\n            /**\n             * callback for script loads, used to check status of loading.\n             *\n             * @param {Event} evt the event from the browser for the script\n             * that was loaded.\n             */\n            onScriptLoad: function (evt) {\n                //Using currentTarget instead of target for Firefox 2.0's sake. Not\n                //all old browsers will be supported, but this one was easy enough\n                //to support and still makes sense.\n                if (evt.type === 'load' ||\n                        (readyRegExp.test((evt.currentTarget || evt.srcElement).readyState))) {\n                    //Reset interactive script so a script node is not held onto for\n                    //to long.\n                    interactiveScript = null;\n\n                    //Pull out the name of the module and the context.\n                    var data = getScriptData(evt);\n                    context.completeLoad(data.id);\n                }\n            },\n\n            /**\n             * Callback for script errors.\n             */\n            onScriptError: function (evt) {\n                var data = getScriptData(evt);\n                if (!hasPathFallback(data.id)) {\n                    var parents = [];\n                    eachProp(registry, function(value, key) {\n                        if (key.indexOf('_@r') !== 0) {\n                            each(value.depMaps, function(depMap) {\n                                if (depMap.id === data.id) {\n                                    parents.push(key);\n                                }\n                                return true;\n                            });\n                        }\n                    });\n                    return onError(makeError('scripterror', 'Script error for \"' + data.id +\n                                             (parents.length ?\n                                             '\", needed by: ' + parents.join(', ') :\n                                             '\"'), evt, [data.id]));\n                }\n            }\n        };\n\n        context.require = context.makeRequire();\n        return context;\n    }\n\n    /**\n     * Main entry point.\n     *\n     * If the only argument to require is a string, then the module that\n     * is represented by that string is fetched for the appropriate context.\n     *\n     * If the first argument is an array, then it will be treated as an array\n     * of dependency string names to fetch. An optional function callback can\n     * be specified to execute when all of those dependencies are available.\n     *\n     * Make a local req variable to help Caja compliance (it assumes things\n     * on a require that are not standardized), and to give a short\n     * name for minification/local scope use.\n     */\n    req = requirejs = function (deps, callback, errback, optional) {\n\n        //Find the right context, use default\n        var context, config,\n            contextName = defContextName;\n\n        // Determine if have config object in the call.\n        if (!isArray(deps) && typeof deps !== 'string') {\n            // deps is a config object\n            config = deps;\n            if (isArray(callback)) {\n                // Adjust args if there are dependencies\n                deps = callback;\n                callback = errback;\n                errback = optional;\n            } else {\n                deps = [];\n            }\n        }\n\n        if (config && config.context) {\n            contextName = config.context;\n        }\n\n        context = getOwn(contexts, contextName);\n        if (!context) {\n            context = contexts[contextName] = req.s.newContext(contextName);\n        }\n\n        if (config) {\n            context.configure(config);\n        }\n\n        return context.require(deps, callback, errback);\n    };\n\n    /**\n     * Support require.config() to make it easier to cooperate with other\n     * AMD loaders on globally agreed names.\n     */\n    req.config = function (config) {\n        return req(config);\n    };\n\n    /**\n     * Execute something after the current tick\n     * of the event loop. Override for other envs\n     * that have a better solution than setTimeout.\n     * @param  {Function} fn function to execute later.\n     */\n    req.nextTick = typeof setTimeout !== 'undefined' ? function (fn) {\n        setTimeout(fn, 4);\n    } : function (fn) { fn(); };\n\n    /**\n     * Export require as a global, but only if it does not already exist.\n     */\n    if (!require) {\n        require = req;\n    }\n\n    req.version = version;\n\n    //Used to filter out dependencies that are already paths.\n    req.jsExtRegExp = /^\\/|:|\\?|\\.js$/;\n    req.isBrowser = isBrowser;\n    s = req.s = {\n        contexts: contexts,\n        newContext: newContext\n    };\n\n    //Create default context.\n    req({});\n\n    //Exports some context-sensitive methods on global require.\n    each([\n        'toUrl',\n        'undef',\n        'defined',\n        'specified'\n    ], function (prop) {\n        //Reference from contexts instead of early binding to default context,\n        //so that during builds, the latest instance of the default context\n        //with its config gets used.\n        req[prop] = function () {\n            var ctx = contexts[defContextName];\n            return ctx.require[prop].apply(ctx, arguments);\n        };\n    });\n\n    if (isBrowser) {\n        head = s.head = document.getElementsByTagName('head')[0];\n        //If BASE tag is in play, using appendChild is a problem for IE6.\n        //When that browser dies, this can be removed. Details in this jQuery bug:\n        //http://dev.jquery.com/ticket/2709\n        baseElement = document.getElementsByTagName('base')[0];\n        if (baseElement) {\n            head = s.head = baseElement.parentNode;\n        }\n    }\n\n    /**\n     * Any errors that require explicitly generates will be passed to this\n     * function. Intercept/override it if you want custom error handling.\n     * @param {Error} err the error object.\n     */\n    req.onError = defaultOnError;\n\n    /**\n     * Creates the node for the load command. Only used in browser envs.\n     */\n    req.createNode = function (config, moduleName, url) {\n        var node = config.xhtml ?\n                document.createElementNS('http://www.w3.org/1999/xhtml', 'html:script') :\n                document.createElement('script');\n        node.type = config.scriptType || 'text/javascript';\n        node.charset = 'utf-8';\n        node.async = true;\n        return node;\n    };\n\n    /**\n     * Does the request to load a module for the browser case.\n     * Make this a separate function to allow other environments\n     * to override it.\n     *\n     * @param {Object} context the require context to find state.\n     * @param {String} moduleName the name of the module.\n     * @param {Object} url the URL to the module.\n     */\n    req.load = function (context, moduleName, url) {\n        var config = (context && context.config) || {},\n            node;\n        if (isBrowser) {\n            //In the browser so use a script tag\n            node = req.createNode(config, moduleName, url);\n            if (config.onNodeCreated) {\n                config.onNodeCreated(node, config, moduleName, url);\n            }\n\n            node.setAttribute('data-requirecontext', context.contextName);\n            node.setAttribute('data-requiremodule', moduleName);\n\n            //Set up load listener. Test attachEvent first because IE9 has\n            //a subtle issue in its addEventListener and script onload firings\n            //that do not match the behavior of all other browsers with\n            //addEventListener support, which fire the onload event for a\n            //script right after the script execution. See:\n            //https://connect.microsoft.com/IE/feedback/details/648057/script-onload-event-is-not-fired-immediately-after-script-execution\n            //UNFORTUNATELY Opera implements attachEvent but does not follow the script\n            //script execution mode.\n            if (node.attachEvent &&\n                    //Check if node.attachEvent is artificially added by custom script or\n                    //natively supported by browser\n                    //read https://github.com/jrburke/requirejs/issues/187\n                    //if we can NOT find [native code] then it must NOT natively supported.\n                    //in IE8, node.attachEvent does not have toString()\n                    //Note the test for \"[native code\" with no closing brace, see:\n                    //https://github.com/jrburke/requirejs/issues/273\n                    !(node.attachEvent.toString && node.attachEvent.toString().indexOf('[native code') < 0) &&\n                    !isOpera) {\n                //Probably IE. IE (at least 6-8) do not fire\n                //script onload right after executing the script, so\n                //we cannot tie the anonymous define call to a name.\n                //However, IE reports the script as being in 'interactive'\n                //readyState at the time of the define call.\n                useInteractive = true;\n\n                node.attachEvent('onreadystatechange', context.onScriptLoad);\n                //It would be great to add an error handler here to catch\n                //404s in IE9+. However, onreadystatechange will fire before\n                //the error handler, so that does not help. If addEventListener\n                //is used, then IE will fire error before load, but we cannot\n                //use that pathway given the connect.microsoft.com issue\n                //mentioned above about not doing the 'script execute,\n                //then fire the script load event listener before execute\n                //next script' that other browsers do.\n                //Best hope: IE10 fixes the issues,\n                //and then destroys all installs of IE 6-9.\n                //node.attachEvent('onerror', context.onScriptError);\n            } else {\n                node.addEventListener('load', context.onScriptLoad, false);\n                node.addEventListener('error', context.onScriptError, false);\n            }\n            node.src = url;\n\n            //For some cache cases in IE 6-8, the script executes before the end\n            //of the appendChild execution, so to tie an anonymous define\n            //call to the module name (which is stored on the node), hold on\n            //to a reference to this node, but clear after the DOM insertion.\n            currentlyAddingScript = node;\n            if (baseElement) {\n                head.insertBefore(node, baseElement);\n            } else {\n                head.appendChild(node);\n            }\n            currentlyAddingScript = null;\n\n            return node;\n        } else if (isWebWorker) {\n            try {\n                //In a web worker, use importScripts. This is not a very\n                //efficient use of importScripts, importScripts will block until\n                //its script is downloaded and evaluated. However, if web workers\n                //are in play, the expectation is that a build has been done so\n                //that only one script needs to be loaded anyway. This may need\n                //to be reevaluated if other use cases become common.\n                importScripts(url);\n\n                //Account for anonymous modules\n                context.completeLoad(moduleName);\n            } catch (e) {\n                context.onError(makeError('importscripts',\n                                'importScripts failed for ' +\n                                    moduleName + ' at ' + url,\n                                e,\n                                [moduleName]));\n            }\n        }\n    };\n\n    function getInteractiveScript() {\n        if (interactiveScript && interactiveScript.readyState === 'interactive') {\n            return interactiveScript;\n        }\n\n        eachReverse(scripts(), function (script) {\n            if (script.readyState === 'interactive') {\n                return (interactiveScript = script);\n            }\n        });\n        return interactiveScript;\n    }\n\n    //Look for a data-main script attribute, which could also adjust the baseUrl.\n    if (isBrowser && !cfg.skipDataMain) {\n        //Figure out baseUrl. Get it from the script tag with require.js in it.\n        eachReverse(scripts(), function (script) {\n            //Set the 'head' where we can append children by\n            //using the script's parent.\n            if (!head) {\n                head = script.parentNode;\n            }\n\n            //Look for a data-main attribute to set main script for the page\n            //to load. If it is there, the path to data main becomes the\n            //baseUrl, if it is not already set.\n            dataMain = script.getAttribute('data-main');\n            if (dataMain) {\n                //Preserve dataMain in case it is a path (i.e. contains '?')\n                mainScript = dataMain;\n\n                //Set final baseUrl if there is not already an explicit one.\n                if (!cfg.baseUrl) {\n                    //Pull off the directory of data-main for use as the\n                    //baseUrl.\n                    src = mainScript.split('/');\n                    mainScript = src.pop();\n                    subPath = src.length ? src.join('/')  + '/' : './';\n\n                    cfg.baseUrl = subPath;\n                }\n\n                //Strip off any trailing .js since mainScript is now\n                //like a module name.\n                mainScript = mainScript.replace(jsSuffixRegExp, '');\n\n                //If mainScript is still a path, fall back to dataMain\n                if (req.jsExtRegExp.test(mainScript)) {\n                    mainScript = dataMain;\n                }\n\n                //Put the data-main script in the files to load.\n                cfg.deps = cfg.deps ? cfg.deps.concat(mainScript) : [mainScript];\n\n                return true;\n            }\n        });\n    }\n\n    /**\n     * The function that handles definitions of modules. Differs from\n     * require() in that a string for the module should be the first argument,\n     * and the function to execute after dependencies are loaded should\n     * return a value to define the module corresponding to the first argument's\n     * name.\n     */\n    define = function (name, deps, callback) {\n        var node, context;\n\n        //Allow for anonymous modules\n        if (typeof name !== 'string') {\n            //Adjust args appropriately\n            callback = deps;\n            deps = name;\n            name = null;\n        }\n\n        //This module may not have dependencies\n        if (!isArray(deps)) {\n            callback = deps;\n            deps = null;\n        }\n\n        //If no name, and callback is a function, then figure out if it a\n        //CommonJS thing with dependencies.\n        if (!deps && isFunction(callback)) {\n            deps = [];\n            //Remove comments from the callback string,\n            //look for require calls, and pull them into the dependencies,\n            //but only if there are function args.\n            if (callback.length) {\n                callback\n                    .toString()\n                    .replace(commentRegExp, '')\n                    .replace(cjsRequireRegExp, function (match, dep) {\n                        deps.push(dep);\n                    });\n\n                //May be a CommonJS thing even without require calls, but still\n                //could use exports, and module. Avoid doing exports and module\n                //work though if it just needs require.\n                //REQUIRES the function to expect the CommonJS variables in the\n                //order listed below.\n                deps = (callback.length === 1 ? ['require'] : ['require', 'exports', 'module']).concat(deps);\n            }\n        }\n\n        //If in IE 6-8 and hit an anonymous define() call, do the interactive\n        //work.\n        if (useInteractive) {\n            node = currentlyAddingScript || getInteractiveScript();\n            if (node) {\n                if (!name) {\n                    name = node.getAttribute('data-requiremodule');\n                }\n                context = contexts[node.getAttribute('data-requirecontext')];\n            }\n        }\n\n        //Always save off evaluating the def call until the script onload handler.\n        //This allows multiple modules to be in a file without prematurely\n        //tracing dependencies, and allows for anonymous module support,\n        //where the module name is not known until the script onload event\n        //occurs. If no context, use the global queue, and get it processed\n        //in the onscript load callback.\n        if (context) {\n            context.defQueue.push([name, deps, callback]);\n            context.defQueueMap[name] = true;\n        } else {\n            globalDefQueue.push([name, deps, callback]);\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n\n    /**\n     * Executes the text. Normally just uses eval, but can be modified\n     * to use a better, environment-specific call. Only used for transpiling\n     * loader plugins, not for plain JS modules.\n     * @param {String} text the text to execute/evaluate.\n     */\n    req.exec = function (text) {\n        /*jslint evil: true */\n        return eval(text);\n    };\n\n    //Set up with config info.\n    req(cfg);\n}(this));\n"],"sourceRoot":"/source/"}