{"version":3,"sources":["vanilla.override.js"],"names":["root","factory","define","amd","global","vanilla","version","console","info","Array","prototype","equals","warn","array","this","length","i","l","Object","defineProperty","enumerable","contains","object","each","callback","result","add","key","value","push","remove","splice","dateFormat","token","timezone","timezoneClip","pad","val","len","String","date","mask","utc","dF","arguments","toString","call","test","undefined","Date","isNaN","SyntaxError","masks","slice","_","d","D","m","y","H","M","s","L","o","getTimezoneOffset","flags","dd","ddd","i18n","dayNames","dddd","mm","mmm","monthNames","mmmm","yy","yyyy","h","hh","HH","MM","ss","Math","round","t","tt","T","TT","Z","match","pop","replace","floor","abs","S","$0","default","shortDate","mediumDate","longDate","fullDate","shortTime","mediumTime","longTime","isoDate","isoTime","isoDateTime","isoUtcDateTime","format"],"mappings":"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","file":"vanilla.override.js","sourcesContent":["/**\r\n * J2D Vanilla Override Module\r\n *\r\n * @authors DeVinterX\r\n * @license BSD\r\n * @version 1.0.3\r\n */\r\n\r\n!function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('vanilla.override', [], factory);\r\n    } else {\r\n        factory();\r\n    }\r\n}(global, function () {\r\n        \"use strict\";\r\n\r\n        var vanilla = {\r\n            version: '1.0.3'\r\n        };\r\n\r\n        (function () {\r\n            if (!global.vanilla || global.vanilla.version !== vanilla.version) {\r\n                global.vanilla = vanilla;\r\n\r\n                console.info('J2D Initialize \"vanilla.override\" module.');\r\n\r\n                if (Array.prototype.equals) {\r\n                    console.warn('Overriding existing Array.prototype.equals.');\r\n                }\r\n                global.Array.prototype.equals = function (array) {\r\n                    if (!array)\r\n                        return false;\r\n\r\n                    if (this.length != array.length)\r\n                        return false;\r\n\r\n                    for (var i = 0, l = this.length; i < l; i++) {\r\n                        if (this[i] instanceof Array && array[i] instanceof Array) {\r\n                            if (!this[i].equals(array[i]))\r\n                                return false;\r\n                        }\r\n                        else if (this[i] != array[i]) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                Object.defineProperty(Array.prototype, 'equals', {enumerable: false});\r\n\r\n                if (Array.prototype.contains) {\r\n                    console.warn('Overriding existing Array.prototype.contains.');\r\n                }\r\n                Array.prototype.contains = function (object) {\r\n                    var i = this.length;\r\n                    while (i--) {\r\n                        if (this[i] === object) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                    return false;\r\n                };\r\n                Object.defineProperty(Array.prototype, 'contains', {enumerable: false});\r\n\r\n                if (Array.prototype.each) {\r\n                    console.warn('Overriding existing Array.prototype.each.');\r\n                }\r\n                Array.prototype.each = function (callback) {\r\n                    if (!callback) return false;\r\n                    var result = false;\r\n                    for (var i = 0; i < this.length; i++) {\r\n                        if ((result = callback(this[i], i)) == false) {\r\n                            return result;\r\n                        }\r\n                    }\r\n                };\r\n                Object.defineProperty(Array.prototype, 'each', {enumerable: false});\r\n\r\n                if (Array.prototype.add) {\r\n                    console.warn('Overriding existing Array.prototype.add.');\r\n                }\r\n                Array.prototype.add = function (key, value) {\r\n                    if (this.contains(key))\r\n                        this[key] = value;\r\n                    else {\r\n                        this.push(key);\r\n                        this[key] = value;\r\n                    }\r\n                };\r\n                Object.defineProperty(Array.prototype, 'add', {enumerable: false});\r\n\r\n                if (Array.prototype.remove) {\r\n                    console.warn('Overriding existing Array.prototype.remove.');\r\n                }\r\n                Array.prototype.remove = function (key) {\r\n                    for (var i = 0; i < this.length; ++i) {\r\n                        if (this[i] == key) {\r\n                            this.splice(i, 1);\r\n                            return;\r\n                        }\r\n                    }\r\n                };\r\n                Object.defineProperty(Array.prototype, 'remove', {enumerable: false});\r\n\r\n                /** Date **/\r\n                var dateFormat = function () {\r\n                    var token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|[LloSZ]|\"[^\"]*\"|'[^']*'/g,\r\n                        timezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g,\r\n                        timezoneClip = /[^-+\\dA-Z]/g,\r\n                        pad = function (val, len) {\r\n                            val = String(val);\r\n                            len = len || 2;\r\n                            while (val.length < len) val = \"0\" + val;\r\n                            return val;\r\n                        };\r\n\r\n                    return function (date, mask, utc) {\r\n                        var dF = dateFormat;\r\n\r\n                        if (arguments.length == 1 && Object.prototype.toString.call(date) == \"[object String]\" && !/\\d/.test(date)) {\r\n                            mask = date;\r\n                            date = undefined;\r\n                        }\r\n\r\n                        date = date ? new Date(date) : new Date;\r\n                        if (isNaN(date)) throw new SyntaxError(\"invalid date\");\r\n\r\n                        mask = String(dF.masks[mask] || mask || dF.masks[\"default\"]);\r\n\r\n                        if (mask.slice(0, 4) == \"UTC:\") {\r\n                            mask = mask.slice(4);\r\n                            utc = true;\r\n                        }\r\n\r\n                        var _ = utc ? \"getUTC\" : \"get\",\r\n                            d = date[_ + \"Date\"](),\r\n                            D = date[_ + \"Day\"](),\r\n                            m = date[_ + \"Month\"](),\r\n                            y = date[_ + \"FullYear\"](),\r\n                            H = date[_ + \"Hours\"](),\r\n                            M = date[_ + \"Minutes\"](),\r\n                            s = date[_ + \"Seconds\"](),\r\n                            L = date[_ + \"Milliseconds\"](),\r\n                            o = utc ? 0 : date.getTimezoneOffset(),\r\n                            flags = {\r\n                                d: d,\r\n                                dd: pad(d),\r\n                                ddd: dF.i18n.dayNames[D],\r\n                                dddd: dF.i18n.dayNames[D + 7],\r\n                                m: m + 1,\r\n                                mm: pad(m + 1),\r\n                                mmm: dF.i18n.monthNames[m],\r\n                                mmmm: dF.i18n.monthNames[m + 12],\r\n                                yy: String(y).slice(2),\r\n                                yyyy: y,\r\n                                h: H % 12 || 12,\r\n                                hh: pad(H % 12 || 12),\r\n                                H: H,\r\n                                HH: pad(H),\r\n                                M: M,\r\n                                MM: pad(M),\r\n                                s: s,\r\n                                ss: pad(s),\r\n                                l: pad(L, 3),\r\n                                L: pad(L > 99 ? Math.round(L / 10) : L),\r\n                                t: H < 12 ? \"a\" : \"p\",\r\n                                tt: H < 12 ? \"am\" : \"pm\",\r\n                                T: H < 12 ? \"A\" : \"P\",\r\n                                TT: H < 12 ? \"AM\" : \"PM\",\r\n                                Z: utc ? \"UTC\" : (String(date).match(timezone) || [\"\"]).pop().replace(timezoneClip, \"\"),\r\n                                o: (o > 0 ? \"-\" : \"+\") + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4),\r\n                                S: [\"th\", \"st\", \"nd\", \"rd\"][d % 10 > 3 ? 0 : (d % 100 - d % 10 != 10) * d % 10]\r\n                            };\r\n\r\n                        return mask.replace(token, function ($0) {\r\n                            return $0 in flags ? flags[$0] : $0.slice(1, $0.length - 1);\r\n                        });\r\n                    };\r\n                }();\r\n\r\n                dateFormat.masks = {\r\n                    \"default\": \"ddd mmm dd yyyy HH:MM:ss\",\r\n                    shortDate: \"m/d/yy\",\r\n                    mediumDate: \"mmm d, yyyy\",\r\n                    longDate: \"mmmm d, yyyy\",\r\n                    fullDate: \"dddd, mmmm d, yyyy\",\r\n                    shortTime: \"h:MM TT\",\r\n                    mediumTime: \"h:MM:ss TT\",\r\n                    longTime: \"h:MM:ss TT Z\",\r\n                    isoDate: \"yyyy-mm-dd\",\r\n                    isoTime: \"HH:MM:ss\",\r\n                    isoDateTime: \"yyyy-mm-dd'T'HH:MM:ss\",\r\n                    isoUtcDateTime: \"UTC:yyyy-mm-dd'T'HH:MM:ss'Z'\"\r\n                };\r\n\r\n                dateFormat.i18n = {\r\n                    dayNames: [\r\n                        \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\",\r\n                        \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"\r\n                    ],\r\n                    monthNames: [\r\n                        \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\",\r\n                        \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n                    ]\r\n                };\r\n\r\n                if (Date.prototype.format) {\r\n                    console.warn('Overriding existing Date.prototype.format.');\r\n                }\r\n                Date.prototype.format = function (mask, utc) {\r\n                    return dateFormat(this, mask, utc);\r\n                };\r\n                Object.defineProperty(Date.prototype, 'format', {enumerable: false});\r\n            }\r\n        })();\r\n\r\n        return vanilla;\r\n    }\r\n);\r\n"],"sourceRoot":"/source/"}