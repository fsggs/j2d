{"version":3,"sources":["jquery.j2d.all.js","vanilla.override.js","j2d.frame.js","j2d.scene.js","j2d.layers.js","jquery.j2d.js","j2d/j2d.base.js","j2d/j2d.circle.js","j2d/j2d.fps.js","j2d/j2d.input.js","j2d/j2d.io.legacy.js","j2d/j2d.line.js","j2d/j2d.rect.js","j2d/j2d.sprite.js","j2d/j2d.storage.js","j2d/j2d.text.js","j2d/j2d.textures.js","j2d/j2d.webGL2d.js"],"names":["root","factory","define","amd","global","vanilla","version","console","info","Array","prototype","equals","warn","array","this","length","i","l","Object","defineProperty","enumerable","contains","object","each","callback","result","add","key","value","push","remove","splice","dateFormat","token","timezone","timezoneClip","pad","val","len","String","date","mask","utc","dF","arguments","toString","call","test","undefined","Date","isNaN","SyntaxError","masks","slice","_","d","D","m","y","H","M","s","L","o","getTimezoneOffset","flags","dd","ddd","i18n","dayNames","dddd","mm","mmm","monthNames","mmmm","yy","yyyy","h","hh","HH","MM","ss","Math","round","t","tt","T","TT","Z","match","pop","replace","floor","abs","S","$0","default","shortDate","mediumDate","longDate","fullDate","shortTime","mediumTime","longTime","isoDate","isoTime","isoDateTime","isoUtcDateTime","format","instance","engineStack","dataStack","options","frameLimit","frameRun","breakAnimationFrame","requestAnimationFrame","window","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","now","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","FrameManager","start","name","engine","params","data","j2d","deltaTime","lastTime","sceneStartTime","sceneSkipTime","interval","pulse","stop","runMainLoop","timestamp","frameManager","index","hasOwnProperty","io","pause","update","clear","setDefaultFrameLimit","Init","J2D","instanceFrameManager","Scene","parent","enableFullscreen","layerName","layers","resize","width","height","list","async","setGameState","setActiveEngine","element","trigger","init","fullScreen","fullscreen","document","getElementById","attr","requestFullscreen","webkitRequestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","exitFullscreen","webkitExitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","resizeToFullPage","$","toggle","scene","originalWidth","originalHeight","device","css","originalMargin","scaleToFullScreen","layer","canvas","style","toggleFullScreen","setViewPosition","position","viewport","x","ceil","setViewFocus","id","offset","getPosition","viewMove","getLayer","heigth","context","visible","cancelClear","vector","vec2df","ready","append","WebGL2D","LayersManager","WebGL_API","zIndex","createElement","webGL","enable","getContext","smoothing","disableSmoothing","util","shadowColor","left","top","opacity","angle","fillColor","onContext","fill","color","fillStyle","fillRect","setOpacity","getOpacity","setVisible","display","isVisible","setIndex","clearRect","clearNode","node","isLookScene","pos","size","save","restore","jQuery","defaults","getInfo","site","author","getIO","IOHandler","handler","setWindow","customWindow","html","flush","addClass","resume","removeClass","focus","isPlay","enableWebGL","setSmoothing","disableWebGL","getDevice","parseInt","screen","innerWidth","innerHeight","vec2di","math","toInt","number","randomColor","min","max","random","omitZero","rad","PI","chrome","navigator","userAgent","getLayers","getScene","initJQueryPlugin","j2dPlugin","pluginInit","fn","filter","extend","guid","c","r","v","tabIndex","click","$array","isFullScreen","webkitFullscreenElement","webkitCurrentFullScreenElement","mozFullScreenElement","msFullscreenElement","on","e","current","addBaseNode","BaseNode","nodeName","alpha","box","mergeOptions","constructor","saveJSON","JSON","stringify","loadJSON","json","parse","resizeBox","setLayer","setAlpha","getAlpha","moveTo","to","move","setPosition","setSize","getSize","setParent","getDistance","sqrt","pow","getDistanceXY","isIntersect","x1","x2","y1","y2","isCollision","yes","turn","setRotation","getRotation","isOutScene","all","moveDir","speed","cos","sin","drawBox","translate","rotate","lineWidth","strokeStyle","lineCap","beginPath","rect","stroke","addCircleNode","radius","CircleNode","create","draw","tmpAlpha","globalAlpha","arc","FPSMeter","tmp_of_fps","maxFPS","tmp_of_time","fps","end","getFPS","getKey","keys","InputManager","mouse","startPosition","currentPosition","previousDistance","distance","enabled","enableAdditionalData","keysPressed","writeMode","timePressed","preventAll","cursor","image","keyMap","FULLSCREEN","KEY_CTRL","KEY_F11","checkKeyMap","enableCallback","manager","keyCode","which","isArray","eval","events","onMouseClick","hasClass","event","inArray","pageX","pageY","timeStamp","preventDefault","indexOf","onMouseWheel","originalEvent","wheelDelta","fixMouseWheel","mouseWheelCancel","onMouseMove","toFixed","onKeyboardPress","char","fromCharCode","onTouchTap","touch","touches","changedTouches","onTouchMove","bindEvents","selector","unbindEvents","off","dX","offsetWidth","dY","offsetHeight","keyPressed","SCROLL_MOUSE_UP","SCROLL_MOUSE_DOWN","disable","load","newKeyMap","oldKeyMap","setKeys","mapObject","getPressData","keyList","time","getMouseMoveDistance","previous","checkPressedKeyList","checkPressedKeyMap","onNode","setWriteMode","mode","isWriteMode","setCursorImage","toggleCursor","isCursorVisible","KEY_MOUSE_LEFT","KEY_MOUSE_MIDDLE","KEY_MOUSE_RIGHT","KEY_BACKSPACE","KEY_TAB","KEY_ENTER","KEY_SHIFT","KEY_ALT","KEY_PAUSE","KEY_BREAK","KEY_CAPS_LOCK","KEY_ESCAPE","KEY_SPACE_BAR","KEY_PAGE_UP","KEY_PAGE_DOWN","KEY_END","KEY_HOME","KEY_LEFT_ARROW","KEY_UP_ARROW","KEY_RIGHT_ARROW","KEY_DOWN_ARROW","KEY_INSERT","KEY_DELETE","KEY_0","KEY_1","KEY_2","KEY_3","KEY_4","KEY_5","KEY_6","KEY_7","KEY_8","KEY_9","KEY_A","KEY_B","KEY_C","KEY_D","KEY_E","KEY_F","KEY_G","KEY_H","KEY_I","KEY_J","KEY_K","KEY_L","KEY_M","KEY_N","KEY_O","KEY_P","KEY_Q","KEY_R","KEY_S","KEY_T","KEY_U","KEY_V","KEY_W","KEY_X","KEY_Y","KEY_Z","KEY_LEFT_WINDOW_KEY","KEY_RIGHT_WINDOW_KEY","KEY_SELECT_KEY","KEY_NUMPAD_0","KEY_NUMPAD_1","KEY_NUMPAD_2","KEY_NUMPAD_3","KEY_NUMPAD_4","KEY_NUMPAD_5","KEY_NUMPAD_6","KEY_NUMPAD_7","KEY_NUMPAD_8","KEY_NUMPAD_9","KEY_MULTIPLY","KEY_ADD","KEY_SUBTRACT","KEY_DECIMAL_POINT","KEY_DIVIDE","KEY_F1","KEY_F2","KEY_F3","KEY_F4","KEY_F5","KEY_F6","KEY_F7","KEY_F8","KEY_F9","KEY_F10","KEY_F12","KEY_NUM_LOCK","KEY_SCROLL_LOCK","KEY_SEMI_COLON","KEY_EQUAL_SIGN","KEY_COMMA","KEY_DASH","KEY_PERIOD","KEY_FORWARD_SLASH","KEY_GRAVE_ACCENT","KEY_OPEN_BRACKET","KEY_BACK_SLASH","KEY_CLOSE_BRACKET","KEY_SINGLE_QUOTE","KEY_LEFT_COMMAND","KEY_RIGHT_COMMAND","IO","lClick","mClick","rClick","keyDown","keyPress","keyUp","keyUpped","canceled","body","anyKey","displayCursor","activeElement","ontouchstart","onTouch","ontouchmove","ontouchend","falseInput","oncontextmenu","onselectstart","ondragstart","onmousedown","onClick","onmouseup","onmousemove","cursorPosition","onkeydown","keyEvent","onkeyup","onkeypress","arrayList","isKeyDown","code","isKeyPress","isKeyUp","type","charCode","cancel","scrollLeft","scrollTop","button","curImg","LEFT","RIGHT","UP","DOWN","SPACE","CTRL","SHIFT","ALT","ESC","ENTER","MINUS","PLUS","CAPS_LOCK","BACKSPACE","TAB","Q","W","E","R","Y","U","I","O","P","A","F","G","J","K","X","V","B","N","0","1","2","3","4","5","6","7","8","C","9","NUM_0","NUM_1","NUM_2","NUM_3","NUM_4","NUM_5","NUM_6","NUM_7","NUM_8","NUM_9","NUM_MINUS","NUM_PLUS","NUM_LOCK","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","addLineNode","points","scale","cFill","LineNode","lineTo","addRectNode","RectNode","addSpriteNode","animation","SpriteNode","tmpSpeed","frame","flip","setFlip","frameCount","drawFrame","drawImage","imageMap","img","sourceX","sourceW","sourceY","sourceH","setAnimation","map","method","cookiePrefix","cookieOptions","path","domain","expires","support","getItem","returns","cookie","arr","setItem","removeItem","reg","RegExp","opts","split","trim","substr","Storage","uid","storageType","storage","exist","loadNode","saveNode","addTextNode","text","sizePx","family","colorL","TextNode","vAlign","hAlign","fullText","maxWidth","lines","font","measureText","drawSimpleText","textAlign","textBaseline","strokeText","fillText","getText","setText","TextureManager","loadImageMap","createImageMap","templates","imageObject","getAnimation","loaded","crossOrigin","src","onload","ellipsis","strokeRect","gradientL","colors","izHorizontal","gradient","createLinearGradient","step","j","addColorStop","gradientR","pos1","r1","pos2","r2","createRadialGradient","getTextureManager","isPOT","Transform","mat","clearStack","mat3","identity","multiply","m1","m2","m10","m11","m12","m13","m14","m15","m16","m17","m18","m20","m21","m22","m23","m24","m25","m26","m27","m28","vec2_multiply","mOut","transpose","STACK_DEPTH_LIMIT","init_mat","m_stack","m_cache","c_stack","valid","getIdentity","setIdentity","getResult","pushMatrix","popMatrix","translateMatrix","trMatrix","tr","a","b","f","scaleMatrix","rotateMatrix","ang","sAng","cAng","gl","fs","vs","shaderProgram","transform","shaderPool","maxTextureSize","gl2d","$getContext","force","initShaders","initBuffers","initCanvas2DAPI","BLEND","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","getParameter","MAX_TEXTURE_SIZE","postInit","shaderMask","texture","crop","getFragmentShaderSource","sMask","fsSource","join","getVertexShaderSource","stackDepth","vsSource","transformStackDepth","storedShader","useProgram","createShader","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","VERTEX_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","vertexPositionAttribute","getAttribLocation","enableVertexAttribArray","uColor","getUniformLocation","uSampler","uCropSource","pMatrix","uTransforms","uniformMatrix4fv","rectVerts","Float32Array","rectVertexPositionBuffer","createBuffer","rectVertexColorBuffer","pathVertexPositionBuffer","pathVertexColorBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","instances","hue2rgb","p","q","HSLAToRGBA","g","colorStringToVec4","channel","isPercent","hasAlpha","alphaChannel","sameType","reRGBAColor","exec","parseFloat","reHSLAColor","reHex6Color","colorInt","reHex3Color","hexString","toLowerCase","colorKeywords","colorVecToString","vec4","saveDrawState","bakedDrawState","drawState","globalCompositeOperation","lineJoin","miterLimit","shadowBlur","shadowOffsetX","shadowOffsetY","imageSmoothingEnabled","drawStateStack","restoreDrawState","sendTransformStack","sp","stack","maxI","uniformMatrix3fv","SubPath","closed","verts","fillSubPath","subPath","subPaths","vertexAttribPointer","FLOAT","uniform4f","drawArrays","TRIANGLE_FAN","strokeSubPath","LINE_LOOP","LINE_STRIP","Texture","obj","createTexture","textureCache","imageCache","ctx","GL_FUNCTION","LINEAR","GL_MIPMAP_FUNCTION","LINEAR_MIPMAP_LINEAR","NEAREST","LINEAR_MIPMAP_NEAREST","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","generateMipmap","textCanvas","textCtx","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","get","set","drawStyle","$lineWidth","tempCanvas","tempCtx","createImageData","getImageData","buffer","Uint8Array","readPixels","w","maxJ","index1","index2","putImageData","imageData","dx","dy","setTransform","apply","closePath","prevPath","startX","startY","newPath","quadraticApproximateCount","quadraticCurveTo","hx","hy","tx","ty","fromx","fromy","bezierApproximateCount","bezierCurveTo","h1x","h1y","h2x","h2y","arcTo","arcApproximateCount","cx","cy","startAngle","endAngle","anticlockwise","count","fixed","clip","isPointInPath","drawFocusRing","doCrop","cacheIndex","activeTexture","TEXTURE0","uniform1i","configurable","writable"],"mappings":"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","file":"jquery.j2d.all.js","sourcesContent":[null,"/**\r\n * J2D Vanilla Override Module\r\n *\r\n * @authors DeVinterX\r\n * @license BSD\r\n * @version 1.0.3\r\n */\r\n\r\n!function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('vanilla.override', [], factory);\r\n    } else {\r\n        factory();\r\n    }\r\n}(global, function () {\r\n        \"use strict\";\r\n\r\n        var vanilla = {\r\n            version: '1.0.3'\r\n        };\r\n\r\n        (function () {\r\n            if (!global.vanilla || global.vanilla.version !== vanilla.version) {\r\n                global.vanilla = vanilla;\r\n\r\n                console.info('J2D Initialize \"vanilla.override\" module.');\r\n\r\n                if (Array.prototype.equals) {\r\n                    console.warn('Overriding existing Array.prototype.equals.');\r\n                }\r\n                global.Array.prototype.equals = function (array) {\r\n                    if (!array)\r\n                        return false;\r\n\r\n                    if (this.length != array.length)\r\n                        return false;\r\n\r\n                    for (var i = 0, l = this.length; i < l; i++) {\r\n                        if (this[i] instanceof Array && array[i] instanceof Array) {\r\n                            if (!this[i].equals(array[i]))\r\n                                return false;\r\n                        }\r\n                        else if (this[i] != array[i]) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                Object.defineProperty(Array.prototype, 'equals', {enumerable: false});\r\n\r\n                if (Array.prototype.contains) {\r\n                    console.warn('Overriding existing Array.prototype.contains.');\r\n                }\r\n                Array.prototype.contains = function (object) {\r\n                    var i = this.length;\r\n                    while (i--) {\r\n                        if (this[i] === object) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                    return false;\r\n                };\r\n                Object.defineProperty(Array.prototype, 'contains', {enumerable: false});\r\n\r\n                if (Array.prototype.each) {\r\n                    console.warn('Overriding existing Array.prototype.each.');\r\n                }\r\n                Array.prototype.each = function (callback) {\r\n                    if (!callback) return false;\r\n                    var result = false;\r\n                    for (var i = 0; i < this.length; i++) {\r\n                        if ((result = callback(this[i], i)) == false) {\r\n                            return result;\r\n                        }\r\n                    }\r\n                };\r\n                Object.defineProperty(Array.prototype, 'each', {enumerable: false});\r\n\r\n                if (Array.prototype.add) {\r\n                    console.warn('Overriding existing Array.prototype.add.');\r\n                }\r\n                Array.prototype.add = function (key, value) {\r\n                    if (this.contains(key))\r\n                        this[key] = value;\r\n                    else {\r\n                        this.push(key);\r\n                        this[key] = value;\r\n                    }\r\n                };\r\n                Object.defineProperty(Array.prototype, 'add', {enumerable: false});\r\n\r\n                if (Array.prototype.remove) {\r\n                    console.warn('Overriding existing Array.prototype.remove.');\r\n                }\r\n                Array.prototype.remove = function (key) {\r\n                    for (var i = 0; i < this.length; ++i) {\r\n                        if (this[i] == key) {\r\n                            this.splice(i, 1);\r\n                            return;\r\n                        }\r\n                    }\r\n                };\r\n                Object.defineProperty(Array.prototype, 'remove', {enumerable: false});\r\n\r\n                /** Date **/\r\n                var dateFormat = function () {\r\n                    var token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|[LloSZ]|\"[^\"]*\"|'[^']*'/g,\r\n                        timezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g,\r\n                        timezoneClip = /[^-+\\dA-Z]/g,\r\n                        pad = function (val, len) {\r\n                            val = String(val);\r\n                            len = len || 2;\r\n                            while (val.length < len) val = \"0\" + val;\r\n                            return val;\r\n                        };\r\n\r\n                    return function (date, mask, utc) {\r\n                        var dF = dateFormat;\r\n\r\n                        if (arguments.length == 1 && Object.prototype.toString.call(date) == \"[object String]\" && !/\\d/.test(date)) {\r\n                            mask = date;\r\n                            date = undefined;\r\n                        }\r\n\r\n                        date = date ? new Date(date) : new Date;\r\n                        if (isNaN(date)) throw new SyntaxError(\"invalid date\");\r\n\r\n                        mask = String(dF.masks[mask] || mask || dF.masks[\"default\"]);\r\n\r\n                        if (mask.slice(0, 4) == \"UTC:\") {\r\n                            mask = mask.slice(4);\r\n                            utc = true;\r\n                        }\r\n\r\n                        var _ = utc ? \"getUTC\" : \"get\",\r\n                            d = date[_ + \"Date\"](),\r\n                            D = date[_ + \"Day\"](),\r\n                            m = date[_ + \"Month\"](),\r\n                            y = date[_ + \"FullYear\"](),\r\n                            H = date[_ + \"Hours\"](),\r\n                            M = date[_ + \"Minutes\"](),\r\n                            s = date[_ + \"Seconds\"](),\r\n                            L = date[_ + \"Milliseconds\"](),\r\n                            o = utc ? 0 : date.getTimezoneOffset(),\r\n                            flags = {\r\n                                d: d,\r\n                                dd: pad(d),\r\n                                ddd: dF.i18n.dayNames[D],\r\n                                dddd: dF.i18n.dayNames[D + 7],\r\n                                m: m + 1,\r\n                                mm: pad(m + 1),\r\n                                mmm: dF.i18n.monthNames[m],\r\n                                mmmm: dF.i18n.monthNames[m + 12],\r\n                                yy: String(y).slice(2),\r\n                                yyyy: y,\r\n                                h: H % 12 || 12,\r\n                                hh: pad(H % 12 || 12),\r\n                                H: H,\r\n                                HH: pad(H),\r\n                                M: M,\r\n                                MM: pad(M),\r\n                                s: s,\r\n                                ss: pad(s),\r\n                                l: pad(L, 3),\r\n                                L: pad(L > 99 ? Math.round(L / 10) : L),\r\n                                t: H < 12 ? \"a\" : \"p\",\r\n                                tt: H < 12 ? \"am\" : \"pm\",\r\n                                T: H < 12 ? \"A\" : \"P\",\r\n                                TT: H < 12 ? \"AM\" : \"PM\",\r\n                                Z: utc ? \"UTC\" : (String(date).match(timezone) || [\"\"]).pop().replace(timezoneClip, \"\"),\r\n                                o: (o > 0 ? \"-\" : \"+\") + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4),\r\n                                S: [\"th\", \"st\", \"nd\", \"rd\"][d % 10 > 3 ? 0 : (d % 100 - d % 10 != 10) * d % 10]\r\n                            };\r\n\r\n                        return mask.replace(token, function ($0) {\r\n                            return $0 in flags ? flags[$0] : $0.slice(1, $0.length - 1);\r\n                        });\r\n                    };\r\n                }();\r\n\r\n                dateFormat.masks = {\r\n                    \"default\": \"ddd mmm dd yyyy HH:MM:ss\",\r\n                    shortDate: \"m/d/yy\",\r\n                    mediumDate: \"mmm d, yyyy\",\r\n                    longDate: \"mmmm d, yyyy\",\r\n                    fullDate: \"dddd, mmmm d, yyyy\",\r\n                    shortTime: \"h:MM TT\",\r\n                    mediumTime: \"h:MM:ss TT\",\r\n                    longTime: \"h:MM:ss TT Z\",\r\n                    isoDate: \"yyyy-mm-dd\",\r\n                    isoTime: \"HH:MM:ss\",\r\n                    isoDateTime: \"yyyy-mm-dd'T'HH:MM:ss\",\r\n                    isoUtcDateTime: \"UTC:yyyy-mm-dd'T'HH:MM:ss'Z'\"\r\n                };\r\n\r\n                dateFormat.i18n = {\r\n                    dayNames: [\r\n                        \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\",\r\n                        \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"\r\n                    ],\r\n                    monthNames: [\r\n                        \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\",\r\n                        \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n                    ]\r\n                };\r\n\r\n                if (Date.prototype.format) {\r\n                    console.warn('Overriding existing Date.prototype.format.');\r\n                }\r\n                Date.prototype.format = function (mask, utc) {\r\n                    return dateFormat(this, mask, utc);\r\n                };\r\n                Object.defineProperty(Date.prototype, 'format', {enumerable: false});\r\n            }\r\n        })();\r\n\r\n        return vanilla;\r\n    }\r\n);\r\n","/**\r\n * J2D (jQuery plugin of the fork j2ds)\r\n *\r\n * @authors DeVinterX\r\n * @license BSD\r\n * @version 0.1.5a\r\n */\r\n\r\n!function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('j2d.frame', ['vanilla.override'], factory);\r\n    } else {\r\n        factory();\r\n    }\r\n}(global, function () {\r\n    \"use strict\";\r\n\r\n    var instance;\r\n    var engineStack = [], dataStack = [];\r\n\r\n    var options = {\r\n        frameLimit: 60,\r\n        frameRun: false,\r\n        breakAnimationFrame: false\r\n    };\r\n\r\n    var requestAnimationFrame = (function () {\r\n        return window.requestAnimationFrame ||\r\n            window.webkitRequestAnimationFrame ||\r\n            window.mozRequestAnimationFrame ||\r\n            window.oRequestAnimationFrame ||\r\n            window.msRequestAnimationFrame ||\r\n            function (callback) {\r\n                if (!options.breakAnimationFrame) {\r\n                    window.setTimeout(callback.call(callback, [\r\n                        Date.now() //TODO:: fix this\r\n                    ]), 1000.0 / options.frameLimit);\r\n                } else {\r\n                    options.breakAnimationFrame = false\r\n                }\r\n            };\r\n    })();\r\n\r\n    var cancelAnimationFrame = (function () {\r\n        options.breakAnimationFrame = true;\r\n\r\n        return window.cancelAnimationFrame ||\r\n            window.webkitCancelAnimationFrame ||\r\n            window.mozCancelAnimationFrame ||\r\n            window.oCancelAnimationFrame ||\r\n            window.msCancelAnimationFrame;\r\n    })();\r\n\r\n\r\n    var FrameManager = function () {\r\n    };\r\n\r\n    FrameManager.prototype.start = function (name, engine, params) {\r\n        var data = {\r\n            j2d: undefined,\r\n            frameLimit: options.frameLimit,\r\n            now: 0,\r\n            deltaTime: 0,\r\n            lastTime: 0,\r\n            sceneStartTime: 0,\r\n            sceneSkipTime: 0\r\n        };\r\n\r\n        if (params.frameLimit !== undefined && params.frameLimit <= options.frameLimit) data.frameLimit = params.frameLimit;\r\n\r\n        if (params.j2d !== undefined) {\r\n            data.j2d = params.j2d;\r\n        } else {\r\n            throw 'j2d not transported to FrameManager.start(id, engine, {... j2d: j2d ...});';\r\n        }\r\n\r\n        data.interval = 1000.0 / data.frameLimit;\r\n        data.lastTime = Date.now();\r\n\r\n        engineStack.add(name, engine);\r\n        dataStack.add(name, data);\r\n        if (!options.frameRun) this.pulse();\r\n    };\r\n\r\n    FrameManager.prototype.stop = function (name) {\r\n        engineStack.remove(name);\r\n        dataStack.remove(name);\r\n    };\r\n\r\n    FrameManager.prototype.pulse = function () {\r\n        this.runMainLoop(Date.now());\r\n    };\r\n\r\n    FrameManager.prototype.runMainLoop = function (timestamp, frameManager) {\r\n        if (frameManager === undefined) frameManager = this;\r\n\r\n        if (engineStack.length <= 0 && options.frameRun) {\r\n            options.frameRun = false;\r\n            return cancelAnimationFrame(this.runMainLoop);\r\n        }\r\n        options.frameRun = true;\r\n\r\n        for (var index in engineStack) {\r\n            if (engineStack.hasOwnProperty(index) && 'function' === typeof engineStack[index]) {\r\n                var engine = engineStack[index];\r\n                var data = dataStack[index];\r\n\r\n                data.now = Date.now();\r\n                data.j2d.options.deltaTime = data.deltaTime = (data.now - data.lastTime) / 100.0;\r\n\r\n                if (data.j2d.options.io && !data.j2d.options.pause) data.j2d.options.io.update();\r\n                if ((data.deltaTime * 100.0) > data.interval) {\r\n                    data.lastTime = data.now - ((data.deltaTime * 100.0) % data.interval);\r\n\r\n                    if (!data.j2d.options.pause) {\r\n                        data.j2d.options.deltaTime = data.deltaTime;\r\n\r\n                        engine(timestamp, data);\r\n\r\n                    }\r\n                }\r\n                if (data.j2d.options.io && !data.j2d.options.pause) data.j2d.options.io.clear();\r\n            }\r\n        }\r\n\r\n        requestAnimationFrame(function (timestamp) {\r\n            frameManager.runMainLoop(timestamp, frameManager);\r\n        });\r\n    };\r\n\r\n    FrameManager.prototype.setDefaultFrameLimit = function (frameLimit) {\r\n        if (frameLimit <= 60 && frameLimit > 0) {\r\n            options.frameLimit = frameLimit\r\n        }\r\n    };\r\n\r\n    /* Singleton */\r\n    FrameManager.Init = function () {\r\n        if (window.J2D !== undefined) {\r\n            return window.instanceFrameManager || (window.instanceFrameManager = new FrameManager());\r\n        } else {\r\n            return instance || (instance = new FrameManager());\r\n        }\r\n    };\r\n\r\n    if (global.J2D !== undefined) global.FrameManager = FrameManager.Init();\r\n    return FrameManager.Init();\r\n});\r\n","/**\r\n * J2D (jQuery plugin of the fork j2ds)\r\n *\r\n * @authors Skaner, likerRr, DeVinterX\r\n * @license zlib\r\n * @version 0.1.5a\r\n * @see https://github.com/SkanerSoft/J2ds/commit/d91880bd189a29b364cc6fd2a3af069f139c5f8a\r\n */\r\n\r\n!function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('j2d.scene', [], factory);\r\n    } else {\r\n        factory();\r\n    }\r\n}(global, function () {\r\n    \"use strict\";\r\n\r\n    var Scene = function (j2d) {\r\n        this.parent = j2d;\r\n        this.enableFullscreen = false;\r\n        this.layerName = 'sceneNode';\r\n        this.layers = (parent.layers) ? parent.layers : {};\r\n    };\r\n\r\n    Scene.prototype.resize = function (width, height) {\r\n        var j2d = this.parent;\r\n\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        for (var i in j2d.layers.list) {\r\n            if (j2d.layers.list.hasOwnProperty(i)) {\r\n                j2d.layers.list[i].resize(width, height);\r\n            }\r\n        }\r\n    };\r\n\r\n    Scene.prototype.async = function (callback, data) {\r\n        setTimeout(callback.call(callback, data), 0);\r\n    };\r\n\r\n    Scene.prototype.setGameState = function (engine) {\r\n        this.parent.setActiveEngine(engine);\r\n        this.parent.element.trigger('changedGameState');\r\n    };\r\n\r\n    Scene.prototype.start = function (engine, frameLimit) {\r\n        if (this.parent.options.io) {\r\n            this.parent.options.io.init();\r\n        }\r\n        this.parent.element.trigger('beforeStart');\r\n        this.parent.start(engine, frameLimit);\r\n        this.parent.element.trigger('afterStart');\r\n    };\r\n\r\n    Scene.prototype.fullScreen = function (fullscreen) {\r\n        var element = document.getElementById(this.parent.element.attr('id'));\r\n\r\n        if (undefined === element.requestFullscreen) {\r\n            element.requestFullscreen = element.webkitRequestFullscreen\r\n            || element.webkitRequestFullScreen\r\n            || element.mozRequestFullScreen\r\n            || element.msRequestFullscreen;\r\n        }\r\n\r\n        if (undefined === document.exitFullscreen) {\r\n            document.exitFullscreen = document.webkitExitFullscreen\r\n            || document.webkitCancelFullScreen\r\n            || document.mozCancelFullScreen\r\n            || document.msExitFullscreen;\r\n        }\r\n        if (fullscreen) {\r\n            element.requestFullscreen();\r\n        } else {\r\n            document.exitFullscreen();\r\n        }\r\n    };\r\n\r\n    Scene.prototype.resizeToFullPage = function (fullscreen) {\r\n        $('div.canvas[guid]:not(.active)').toggle(fullscreen);\r\n\r\n        var j2d = this.parent;\r\n        var scene = this;\r\n\r\n        if (fullscreen) {\r\n            scene.originalWidth = scene.width;\r\n            scene.originalHeight = scene.height;\r\n\r\n            scene.resize(j2d.device.width, j2d.device.height);\r\n            scene.enableFullscreen = true;\r\n\r\n            this.parent.element.width(j2d.device.width).height(j2d.device.height).css('margin', 0);\r\n        } else {\r\n            scene.resize(scene.originalWidth, scene.originalHeight);\r\n            scene.enableFullscreen = false;\r\n\r\n            this.parent.element.width(scene.originalWidth).height(scene.originalHeight).css('margin', scene.originalMargin);\r\n        }\r\n    };\r\n\r\n    Scene.prototype.scaleToFullScreen = function (fullscreen) {\r\n        $('div.canvas[guid]:not(.active)').toggle(fullscreen);\r\n\r\n        var layer, i;\r\n        if (fullscreen) {\r\n            for (i in this.parent.layers.list) {\r\n                if (this.parent.layers.list.hasOwnProperty(i)) {\r\n                    layer = this.parent.layers.list[i].canvas;\r\n                    layer.style.width = this.parent.device.width + 'px';\r\n                    layer.style.height = this.parent.device.height + 'px';\r\n                }\r\n            }\r\n            this.enableFullscreen = true;\r\n            this.parent.element.width(this.parent.device.width).height(this.parent.device.height).css('margin', 0);\r\n        } else {\r\n            for (i in this.parent.layers.list) {\r\n                if (this.parent.layers.list.hasOwnProperty(i)) {\r\n                    layer = this.parent.layers.list[i].canvas;\r\n                    layer.style.width = this.width + 'px';\r\n                    layer.style.height = this.height + 'px';\r\n                }\r\n            }\r\n            this.enableFullscreen = false;\r\n            this.parent.element.width(this.width).height(this.height).css('margin', this.originalMargin);\r\n        }\r\n    };\r\n\r\n    Scene.prototype.toggleFullScreen = function (j2d, data) {\r\n        if (data === undefined) {\r\n            data = {fullscreen: undefined};\r\n        }\r\n        if (!j2d.scene.enableFullscreen || data.fullscreen) {\r\n            j2d.scene.fullScreen(true);\r\n        } else {\r\n            j2d.scene.fullScreen(false);\r\n        }\r\n    };\r\n\r\n    // Устанавливает позицию для камеры\r\n    Scene.prototype.setViewPosition = function (position) {\r\n        this.parent.scene.viewport.x = position.x - Math.ceil(this.parent.scene.width / 2);\r\n        this.parent.scene.viewport.y = position.y - Math.ceil(this.parent.scene.height / 2);\r\n    };\r\n\r\n    //! Движение \"камеры\" вслед за объектом\r\n    Scene.prototype.setViewFocus = function (id, offset) {\r\n        this.parent.scene.viewport.x = id.getPosition().x - Math.ceil(this.parent.scene.width / 2) + (offset ? offset.x : 0);\r\n        this.parent.scene.viewport.y = id.getPosition().y - Math.ceil(this.parent.scene.height / 2) + (offset ? offset.y : 0);\r\n    };\r\n\r\n    //! Движение \"камеры\"\r\n    Scene.prototype.viewMove = function (position) {\r\n        this.parent.scene.viewport.x += position.x;\r\n        this.parent.scene.viewport.y += position.y;\r\n    };\r\n\r\n    //! Очистка отрисованного предыдущего кадра сцены\r\n    Scene.prototype.clear = function () {\r\n        this.getLayer().clear();\r\n    };\r\n\r\n    Scene.prototype.getLayer = function () {\r\n        return this.parent.layers.getLayer('sceneNode');\r\n    };\r\n\r\n    // инициализация сцены\r\n    Scene.prototype.init = function (width, heigth) {\r\n        var j2d = this.parent;\r\n        j2d.element.trigger('beforeInit');\r\n\r\n        this.width = this.originalWidth = width;\r\n        this.height = this.originalHeight = heigth;\r\n        this.originalMargin = j2d.element.css('margin');\r\n\r\n        this.parent.element.width(width).height(heigth);\r\n\r\n        j2d.layers.add('sceneNode', 0);\r\n\r\n        this.context = j2d.layers.getLayer('sceneNode').context;\r\n        this.canvas = j2d.layers.getLayer('sceneNode').canvas;\r\n        this.visible = true;\r\n\r\n        this.cancelClear = false;\r\n\r\n        /* Вид \"камеры\" */\r\n        this.viewport = j2d.vector.vec2df(0, 0);\r\n\r\n        j2d.element.trigger('afterInit');\r\n\r\n        $(window).ready(function () {\r\n            for (var i in j2d.layers.list) {\r\n                if (j2d.layers.list.hasOwnProperty(i)) {\r\n                    j2d.element.append(j2d.layers.getLayer(i).canvas);\r\n                }\r\n            }\r\n            j2d.options.ready = true;\r\n            j2d.element.trigger('ready');\r\n        });\r\n    };\r\n\r\n    if (global.J2D !== undefined) global.Scene = Scene;\r\n    return Scene;\r\n});\r\n","/**\r\n * J2D (jQuery plugin of the fork j2ds)\r\n *\r\n * @authors Skaner, likerRr, DeVinterX\r\n * @license zlib\r\n * @version 0.1.5a\r\n * @see https://github.com/SkanerSoft/J2ds/commit/d91880bd189a29b364cc6fd2a3af069f139c5f8a\r\n */\r\n\r\n!function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('j2d.layers', [], factory);\r\n    } else {\r\n        factory();\r\n    }\r\n}(global, function () {\r\n    \"use strict\";\r\n\r\n    var WebGL2D;\r\n\r\n    var LayersManager = function (j2d, WebGL_API) {\r\n        this.parent = j2d;\r\n        this.list = {};\r\n\r\n        WebGL2D = WebGL_API;\r\n    };\r\n\r\n    LayersManager.prototype.getLayer = function (id) {\r\n        return this.list[id];\r\n    };\r\n    LayersManager.prototype.add = function (id, zIndex) {\r\n        if (this.list[id]) {\r\n            return false;\r\n        }\r\n\r\n        var layer = {};\r\n        var j2d = this.parent;\r\n\r\n        layer.layerName = id;\r\n        layer.canvas = document.createElement('canvas');\r\n        layer.canvas.width = j2d.scene.width;\r\n        layer.canvas.height = j2d.scene.height;\r\n        layer.width = j2d.scene.width;\r\n        layer.height = j2d.scene.height;\r\n        if (j2d.options.webGL) {\r\n            WebGL2D.enable(layer.canvas);\r\n            layer.context = layer.canvas.getContext('WebGL-2d');\r\n        } else {\r\n            layer.context = layer.canvas.getContext('2d');\r\n        }\r\n        if (!j2d.options.smoothing) {\r\n            layer.smoothing = false;\r\n            layer.disableSmoothing = j2d.util.disableSmoothing;\r\n            j2d.util.disableSmoothing(layer.context);\r\n        } else layer.smoothing = true;\r\n        layer.context.shadowColor = 'rgba(0,0,0,0)';\r\n        layer.canvas.style.zIndex = 1000 + zIndex;\r\n        layer.canvas.style.position = 'absolute';\r\n        layer.canvas.style.left = '0';\r\n        layer.canvas.style.top = '0';\r\n        layer.canvas.id = id;\r\n        layer.opacity = 1;\r\n        layer.angle = 0;\r\n        layer.visible = 1;\r\n\r\n        layer.fillColor = false;\r\n\r\n        layer.onContext = function (callback) {\r\n            callback(this.context);\r\n        };\r\n\r\n        layer.fill = function (color) {\r\n            this.fillColor = color;\r\n            this.context.fillStyle = color;\r\n            this.context.fillRect(0, 0, this.width, this.height);\r\n        };\r\n\r\n        layer.setOpacity = function (opacity) {\r\n            this.canvas.style.opacity = opacity;\r\n            this.opacity = opacity;\r\n        };\r\n\r\n        layer.getOpacity = function () {\r\n            return this.opacity;\r\n        };\r\n\r\n        layer.setVisible = function (visible) {\r\n            if (visible) {\r\n                this.canvas.style.display = 'block';\r\n                this.visible = true;\r\n            } else {\r\n                this.canvas.style.display = 'none';\r\n                this.visible = false;\r\n            }\r\n        };\r\n\r\n        layer.isVisible = function () {\r\n            return this.visible;\r\n        };\r\n\r\n        layer.setIndex = function (zIndex) {\r\n            this.canvas.style.zIndex = 1000 + zIndex;\r\n        };\r\n\r\n        layer.clear = function () {\r\n            this.context.clearRect(0, 0, this.width, this.height);\r\n        };\r\n\r\n        layer.clearNode = function (node) {\r\n            if (node.isLookScene()) {\r\n                this.context.clearRect(node.pos.x - j2d.scene.viewport.x, node.pos.y - j2d.scene.viewport.y, node.size.x, node.size.y);\r\n            }\r\n        };\r\n\r\n        layer.clearRect = function (pos, size) {\r\n            this.context.clearRect(pos.x - j2d.scene.viewport.x, pos.y - j2d.scene.viewport.y, size.x, size.y);\r\n        };\r\n\r\n        layer.resize = function (width, height) {\r\n            this.canvas.width = width;\r\n            this.canvas.height = height;\r\n            this.width = width;\r\n            this.height = height;\r\n\r\n            if (this.fillColor) {\r\n                this.context.save();\r\n\r\n                this.context.fillStyle = this.fillColor;\r\n                this.context.fillRect(0, 0, this.width, this.height);\r\n\r\n                this.context.restore();\r\n            }\r\n            if (!this.smoothing) this.disableSmoothing(this.context);\r\n        };\r\n\r\n        this.list[id] = layer;\r\n\r\n        if (j2d.options.ready) {\r\n            j2d.element.append(this.list[id].canvas);\r\n        }\r\n\r\n        return layer;\r\n    };\r\n\r\n    if (global.J2D !== undefined) global.LayersManager = LayersManager;\r\n    return LayersManager;\r\n});\r\n","/**\r\n * J2D (jQuery plugin of the fork j2ds)\r\n *\r\n * @authors Skaner, likerRr, DeVinterX\r\n * @license BSD, zlib\r\n * @version 0.1.5\r\n * @see https://github.com/SkanerSoft/J2ds/commit/501b8993fc41960794572dc481a5f2fe492da349\r\n */\r\n\r\n!function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('jquery.j2d', ['jquery', 'j2d.webGL2d', 'j2d.frame', 'j2d.scene', 'j2d.layers'], factory);\r\n    } else {\r\n        factory(root.jQuery, root.WebGL2D, FrameManager, Scene, LayersManager);\r\n    }\r\n}(global, function ($, WebGL2D, FrameManager, Scene, LayersManager) {\r\n    if (J2D === undefined) var J2D;\r\n    'use strict';\r\n\r\n    var defaults = {\r\n        id: undefined,\r\n        io: undefined,\r\n        deltaTime: 0,\r\n        pause: false,\r\n        ready: false,\r\n\r\n        frameLimit: 60,\r\n        smoothing: true,\r\n\r\n        window: global,\r\n\r\n        webGL: false\r\n    };\r\n\r\n    J2D = function J2D(id, element, options) {\r\n        this.id = id;\r\n        this.element = element;\r\n        this.options = options;\r\n\r\n        this.options.id = this.id;\r\n\r\n        this.layers = new LayersManager(this, WebGL2D);\r\n        this.scene = new Scene(this);\r\n    };\r\n\r\n    /** +links getters **/\r\n    J2D.prototype.getInfo = function () {\r\n        return {\r\n            'name': 'jquery.j2d',\r\n            'version': '0.1.5',\r\n            'site': 'https://github.com/fsggs/jquery.j2d',\r\n            'info': 'jquery.j2d - jQuery plugin of the fork j2ds.',\r\n            'author': 'DeVinterX, Skaner(j2ds)'\r\n        };\r\n    };\r\n\r\n    J2D.prototype.getIO = function () {\r\n        return this.options.io;\r\n    };\r\n    /** -links getters **/\r\n\r\n    /** +GameEngine **/\r\n    J2D.prototype.IOHandler = function (handler) {\r\n        return this.options.io = handler;\r\n    };\r\n\r\n    J2D.prototype.setWindow = function (customWindow) {\r\n        this.window = customWindow ? customWindow : global;\r\n    };\r\n\r\n    // старт игры\r\n    J2D.prototype.start = function (engine, frameLimit) {\r\n        var j2d = this;\r\n\r\n        engine = engine || function () {\r\n            j2d.element.html('Please init game engine function!');\r\n            console.warn('Please init game engine function for ' + j2d.id + '!');\r\n        };\r\n\r\n        FrameManager.start(j2d.id, engine, {\r\n            j2d: j2d,\r\n            frameLimit: frameLimit\r\n        });\r\n\r\n        j2d.options.frameLimit = frameLimit;\r\n\r\n        j2d.element.trigger('start');\r\n    };\r\n\r\n    J2D.prototype.stop = function () {\r\n        //if(this.options.io) this.options.io.disable();\r\n        FrameManager.stop(this.id);\r\n        this.element.trigger('stop');\r\n    };\r\n\r\n    J2D.prototype.pause = function () {\r\n        if (this.options.io) this.options.io.flush();\r\n        this.options.pause = true;\r\n        this.element.addClass('pause');\r\n        this.element.trigger('pause');\r\n    };\r\n\r\n    J2D.prototype.resume = function () {\r\n        this.element.removeClass('pause').focus();\r\n        this.options.pause = false;\r\n        if (this.options.io) this.options.io.flush();\r\n        this.element.trigger('resume');\r\n    };\r\n\r\n    J2D.prototype.isPlay = function () {\r\n        return !this.options.pause;\r\n    };\r\n\r\n    J2D.prototype.enableWebGL = function () {\r\n        this.options.webGL = true;\r\n        this.element.addClass('WebGL');\r\n    };\r\n\r\n    J2D.prototype.setSmoothing = function (value) {\r\n        this.options.smoothing = !!value;\r\n    };\r\n\r\n    J2D.prototype.disableWebGL = function () {\r\n        this.options.webGL = false;\r\n        this.element.removeClass('WebGL');\r\n    };\r\n\r\n    J2D.prototype.setActiveEngine = function (engine) {\r\n        var j2d = this;\r\n\r\n        engine = engine || function () {\r\n            j2d.element.html('Please set game engine function!');\r\n            console.warn('Please set game engine function for ' + j2d.id + '!');\r\n        };\r\n\r\n        FrameManager.stop(j2d.id);\r\n\r\n        FrameManager.start(j2d.id, engine, {\r\n            j2d: j2d,\r\n            frameLimit: j2d.options.frameLimit\r\n        });\r\n    };\r\n    /** -GameEngine **/\r\n\r\n    /** Device **/\r\n    J2D.prototype.getDevice = function () {\r\n        return this.device;\r\n    };\r\n\r\n    J2D.prototype.device = {\r\n        width: parseInt($(document).width()) < parseInt(screen.width) ? parseInt($(document).width()) : parseInt(screen.width),\r\n        height: parseInt($(document).height()) < parseInt(screen.height) ? parseInt($(document).height()) : parseInt(screen.height),\r\n\r\n        resize: function () {\r\n            this.width = global.innerWidth;\r\n            this.height = global.innerHeight;\r\n        }\r\n    };\r\n\r\n    /** Vector **/\r\n    J2D.prototype.vector = {\r\n        vec2df: function (x, y) {\r\n            return {x: x, y: y};\r\n        },\r\n        vec2di: function (x, y) {\r\n            return {x: (x >> 0), y: (y >> 0)};\r\n        }\r\n    };\r\n\r\n    /** Math **/\r\n    J2D.math = {\r\n        toInt: function (number) {\r\n            return number >> 0;\r\n        },\r\n        randomColor: function (min, max, opacity) {\r\n            return 'rgba('\r\n                + J2D.math.random(min, max) + ', '\r\n                + J2D.math.random(min, max) + ', '\r\n                + J2D.math.random(min, max) + ', '\r\n                + opacity + ')';\r\n        },\r\n        random: function (min, max, omitZero) {\r\n            var random = (Math.floor(Math.random() * (max - min + 1) + min));\r\n            return (omitZero && random == 0)\r\n                ? J2D.math.random(min, max, omitZero)\r\n                : random;\r\n        },\r\n        rad: function (number) {\r\n            return number * (Math.PI / 180);\r\n        }\r\n    };\r\n\r\n    J2D.prototype.math = J2D.math;\r\n\r\n    /** Utils **/\r\n    J2D.util = {\r\n        disableSmoothing: function (context) {\r\n            var chrome = global.navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);\r\n            var version = chrome ? parseInt(chrome[2], 10) : false;\r\n\r\n            context['imageSmoothingEnabled'] = false;\r\n            context['mozImageSmoothingEnabled'] = false;\r\n            context['oImageSmoothingEnabled'] = false;\r\n            if (version && version <= 29) {\r\n                context['webkitImageSmoothingEnabled'] = false;\r\n            }\r\n            context['msImageSmoothingEnabled'] = false;\r\n        }\r\n    };\r\n    J2D.prototype.util = J2D.util;\r\n\r\n    /** +Layers **/\r\n    J2D.prototype.getLayers = function () {\r\n        return this.layers;\r\n    };\r\n    /** -Layers **/\r\n\r\n    /** +Scene **/\r\n    J2D.prototype.getScene = function () {\r\n        return this.scene;\r\n    };\r\n    /** -Scene **/\r\n\r\n    J2D.initJQueryPlugin = function () {\r\n        if (global.j2dPlugin !== undefined) return null;\r\n        global.j2dPlugin = {pluginInit: true};\r\n\r\n        $.fn.j2d = function (options) {\r\n            this.filter('div.canvas:not([guid])').each(function () {\r\n                var options = $.extend(true, {}, defaults, options);\r\n\r\n                var guid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n                    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n                    return v.toString(16);\r\n                });\r\n                $(this).attr('guid', guid);\r\n                var id = $(this).attr('id');\r\n                if (typeof id === typeof undefined || id === false) {\r\n                    $(this).attr('id', guid);\r\n                }\r\n                var tabIndex = $(this).attr('tabindex');\r\n                if (typeof tabIndex === typeof undefined || tabIndex === false) {\r\n                    $(this).attr('tabindex', '-1');\r\n                }\r\n                $(this).data('j2d', new J2D(guid, $(this), options)).addClass('j2d');\r\n                $(this).click().focus();\r\n            });\r\n\r\n            var $array = [];\r\n            this.filter('div.canvas[guid]').each(function () {\r\n                $array.push($(this).data('j2d'));\r\n            });\r\n\r\n            if (1 === $array.length) {\r\n                return $(this).data('j2d');\r\n            } else {\r\n                return $array;\r\n            }\r\n        };\r\n\r\n        var isFullScreen = function () {\r\n            return !!(document.webkitFullscreenElement\r\n            || document.webkitCurrentFullScreenElement\r\n            || document.mozFullScreenElement\r\n            || document.msFullscreenElement\r\n            );\r\n        };\r\n\r\n        $(document).on('fullscreenchange webkitfullscreenchange mozfullscreenchange MSFullscreenChange', function (e) {\r\n            var fullScreen = isFullScreen();\r\n            if (!fullScreen) {\r\n                $('div.canvas[guid].active').data('j2d').scene.resizeToFullPage(fullScreen);\r\n                $('div.canvas[guid]:not(.active)').toggle(!fullScreen);\r\n            }\r\n        });\r\n\r\n        $(document).on('click', 'div.canvas[guid].pause', function () {\r\n            $(this).data('j2d').resume();\r\n\r\n            var current = this;\r\n            $('div.canvas[guid]:not(.pause-disable):not(:focus)').each(function () {\r\n                if (current !== this) $(this).removeClass('active').data('j2d').pause();\r\n            });\r\n            $('div.canvas[guid].active.pause-disable:not(:focus)').each(function () {\r\n                if (current !== this) $(this).removeClass('active');\r\n            });\r\n        });\r\n\r\n        $(document).on('click touch mouseenter', 'div.canvas[guid]:not(.resume-by-click):not(:focus)', function (e) {\r\n            $(this).addClass('active').focus().data('j2d').resume();\r\n\r\n            var current = this;\r\n            $('div.canvas[guid]:not(.pause-disable):not(:focus)').each(function () {\r\n                if (current !== this) $(this).removeClass('active').data('j2d').pause();\r\n            });\r\n            $('div.canvas[guid].active.pause-disable:not(:focus)').each(function () {\r\n                if (current !== this) $(this).removeClass('active');\r\n            });\r\n        });\r\n\r\n        $(global).on('focus', function () {\r\n            $('div.canvas[guid].active').each(function () {\r\n                $(this).data('j2d').resume();\r\n            });\r\n        }).on('blur', function () {\r\n            $('div.canvas[guid]').each(function () {\r\n                $(this).data('j2d').pause();\r\n            });\r\n        });\r\n\r\n        $(global).on('resize', function () {\r\n            $('div.canvas[guid]').each(function () {\r\n                $(this).data('j2d').device.resize();\r\n            });\r\n            var fullScreen = isFullScreen();\r\n            if (fullScreen) {\r\n                $('div.canvas[guid].active').data('j2d').scene.resizeToFullPage(fullScreen);\r\n            }\r\n        });\r\n\r\n        FrameManager.pulse();\r\n    };\r\n\r\n    if (global.J2D !== undefined) global.J2D = J2D;\r\n    return J2D;\r\n});\r\n","/**\r\n * J2D (jQuery plugin of the fork j2ds)\r\n *\r\n * @authors Skaner, likerRr, DeVinterX\r\n * @license zlib\r\n * @version 0.1.5a\r\n * @see https://github.com/SkanerSoft/J2ds/commit/501b8993fc41960794572dc481a5f2fe492da349\r\n */\r\n\r\n!function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('j2d.base', ['jquery.j2d', 'j2d.scene'], factory);\r\n    } else {\r\n        factory(root.J2D, Scene);\r\n    }\r\n}(global, function (J2D, Scene) {\r\n    \"use strict\";\r\n\r\n    if (!Scene.prototype.addBaseNode) {\r\n        Scene.prototype.addBaseNode = function (position, size) {\r\n            return new BaseNode(this.parent, position, size);\r\n        };\r\n    }\r\n\r\n    var BaseNode = function (j2d, position, size) {\r\n        this.nodeName = 'BaseNode';\r\n        this.j2d = j2d;\r\n        this.layer = j2d.scene;\r\n\r\n        this.options = {\r\n            visible: true,\r\n            alpha: 1,\r\n            position: position,\r\n            size: size,\r\n            parent: false,\r\n            angle: 0,\r\n            box: {\r\n                offset: {\r\n                    x: 0,\r\n                    y: 0\r\n                },\r\n                size: {\r\n                    x: 0,\r\n                    y: 0\r\n                }\r\n            }\r\n        };\r\n    };\r\n\r\n    BaseNode.prototype.mergeOptions = function (data, options) {\r\n        if (options === undefined) options = this.options;\r\n        for (var i in data) {\r\n            if (data.hasOwnProperty(i)) {\r\n                try {\r\n                    if (data[i].constructor == Object) {\r\n                        options[i] = this.mergeOptions(data[i], options[i]);\r\n                    } else options[i] = data[i];\r\n                } catch (e) {\r\n                    options[i] = data[i];\r\n                }\r\n            }\r\n        }\r\n        return options;\r\n    };\r\n\r\n    BaseNode.prototype.saveJSON = function () {\r\n        return JSON.stringify({\r\n            node: this.nodeName,\r\n            data: this.options\r\n        });\r\n    };\r\n\r\n    BaseNode.prototype.loadJSON = function (json) {\r\n        json = JSON.parse(json);\r\n        if (this.nodeName === json.node) {\r\n            return this.mergeOptions(json.data);\r\n        }\r\n        throw 'Node type invalid to loadJSON data.';\r\n    };\r\n\r\n    BaseNode.prototype.resizeBox = function (offset, size) {\r\n        this.options.box.offset = offset;\r\n        this.options.box.size = size;\r\n    };\r\n\r\n    BaseNode.prototype.setLayer = function (layer) {\r\n        this.layer = layer ? this.j2d.layers.getLayer(layer) : this.j2d.scene;\r\n    };\r\n\r\n    BaseNode.prototype.getLayer = function () {\r\n        return this.layer;\r\n    };\r\n\r\n    BaseNode.prototype.setVisible = function (visible) {\r\n        this.options.visible = visible;\r\n    };\r\n\r\n    BaseNode.prototype.isVisible = function () {\r\n        return this.options.visible;\r\n    };\r\n\r\n    BaseNode.prototype.setAlpha = function (alpha) {\r\n        if (alpha < 0) alpha = 0;\r\n        if (alpha > 1) alpha = 1;\r\n        this.options.alpha = alpha;\r\n    };\r\n\r\n    BaseNode.prototype.getAlpha = function (alpha) {\r\n        return this.options.alpha;\r\n    };\r\n\r\n    BaseNode.prototype.moveTo = function (to, t) {\r\n        t = t ? t : 1;\r\n        this.move(this.j2d.vector.vec2df(\r\n            ((to.x - this.getPosition().x) / t),\r\n            ((to.y - this.getPosition().y) / t)\r\n        ));\r\n    };\r\n\r\n    BaseNode.prototype.setPosition = function (position) {\r\n        this.options.position = this.j2d.vector.vec2df(\r\n            position.x - Math.ceil(this.options.size.x / 2),\r\n            position.y - Math.ceil(this.options.size.y / 2)\r\n        );\r\n    };\r\n\r\n    BaseNode.prototype.move = function (position) {\r\n        this.options.position.x += position.x;\r\n        this.options.position.y += position.y;\r\n    };\r\n\r\n    BaseNode.prototype.getPosition = function () {\r\n        return this.j2d.vector.vec2df(\r\n            this.options.position.x + Math.ceil(this.options.size.x / 2),\r\n            this.options.position.y + Math.ceil(this.options.size.y / 2)\r\n        );\r\n    };\r\n\r\n    BaseNode.prototype.setSize = function (size) {\r\n        this.options.size = size;\r\n    };\r\n\r\n    BaseNode.prototype.getSize = function () {\r\n        return this.options.size;\r\n    };\r\n\r\n    BaseNode.prototype.setParent = function (id) {\r\n        this.parent = id;\r\n    };\r\n\r\n    BaseNode.prototype.getDistance = function (id) {\r\n        return Math.ceil(Math.sqrt(\r\n                Math.pow(id.getPosition().x - this.getPosition().x, 2) +\r\n                Math.pow(id.getPosition().y - this.getPosition().y, 2)\r\n            )\r\n        );\r\n    };\r\n\r\n    BaseNode.prototype.getDistanceXY = function (id) {\r\n        return this.j2d.vector.vec2df(\r\n            Math.abs(id.getPosition().x - this.getPosition().x),\r\n            Math.abs(id.getPosition().y - this.getPosition().y)\r\n        );\r\n    };\r\n\r\n    BaseNode.prototype.isIntersect = function (id) {\r\n        var pos = {\r\n            x1: this.options.position.x + this.options.box.offset.x,\r\n            x2: id.options.position.x + id.options.box.offset.x,\r\n            y1: this.options.position.y + this.options.box.offset.y,\r\n            y2: id.options.position.y + id.options.box.offset.y\r\n        };\r\n\r\n        var size = {\r\n            x1: this.options.size.x + this.options.box.size.x,\r\n            x2: id.options.size.x + id.options.box.size.x,\r\n            y1: this.options.size.y + this.options.box.size.y,\r\n            y2: id.options.size.y + id.options.box.size.y\r\n        };\r\n\r\n        return (\r\n            (pos.y1 + size.y1 >= pos.y2) &&\r\n            (pos.x1 + size.x1 >= pos.x2)\r\n            ) && (\r\n            (pos.x1 < pos.x2 + size.x2) &&\r\n            (pos.y1 < pos.y2 + size.y2)\r\n            );\r\n    };\r\n\r\n    BaseNode.prototype.isCollision = function (id) {\r\n        var result = false;\r\n        if (\r\n            (this.getDistanceXY(id).x < (this.options.size.x / 2 + id.options.size.x / 2)) &&\r\n            (this.getDistanceXY(id).y < (this.options.size.y / 2 + id.options.size.y / 2))\r\n        ) {\r\n            result = true;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    BaseNode.prototype.isLookScene = function () {\r\n        var yes = true;\r\n        if (\r\n            (this.options.position.x > this.j2d.scene.viewport.x + this.j2d.scene.width ||\r\n            this.options.position.x + this.options.size.x < this.j2d.scene.viewport.x) ||\r\n            (this.options.position.y > this.j2d.scene.viewport.y + this.j2d.scene.height ||\r\n            this.options.position.y + this.options.size.y < this.j2d.scene.viewport.y)\r\n        ) {\r\n            yes = false;\r\n        }\r\n        return yes;\r\n    };\r\n\r\n    BaseNode.prototype.turn = function (angle) {\r\n        this.options.angle = (this.options.angle % 360);\r\n        this.options.angle += angle;\r\n    };\r\n\r\n    BaseNode.prototype.setRotation = function (angle) {\r\n        this.options.angle = angle % 360;\r\n    };\r\n\r\n    BaseNode.prototype.getRotation = function (angle) {\r\n        return this.options.angle;\r\n    };\r\n\r\n    BaseNode.prototype.isOutScene = function () {\r\n        return {\r\n            x: (this.options.position.x + this.options.size.x >= this.j2d.scene.viewport.x + this.j2d.scene.width)\r\n                ? 1 : ((this.options.position.x <= this.j2d.scene.viewport.x) ? -1 : 0),\r\n            y: (this.options.position.y + this.options.size.y >= this.j2d.scene.viewport.y + this.j2d.scene.height)\r\n                ? 1 : ((this.options.position.y <= this.j2d.scene.viewport.y) ? -1 : 0),\r\n            all: (this.x || this.y)\r\n        };\r\n    };\r\n\r\n    BaseNode.prototype.moveDir = function (speed) {\r\n        this.options.position.x += speed * (Math.cos(this.j2d.math.rad(this.options.angle)));\r\n        this.options.position.y += speed * (Math.sin(this.j2d.math.rad(this.options.angle)));\r\n    };\r\n\r\n    BaseNode.prototype.drawBox = function () {\r\n        var context = this.layer.context;\r\n\r\n        if (this.options.angle) {\r\n            context.save();\r\n            context.translate(this.getPosition().x - this.j2d.scene.viewport.x, this.getPosition().y - this.j2d.scene.viewport.y);\r\n            context.rotate(this.j2d.math.rad(this.options.angle));\r\n            context.translate(-(this.getPosition().x - this.j2d.scene.viewport.x), -(this.getPosition().y - this.j2d.scene.viewport.y));\r\n        }\r\n\r\n        context.lineWidth = 2;\r\n        context.strokeStyle = 'black';\r\n        context.lineCap = 'round';\r\n        context.beginPath();\r\n\r\n        context.rect(\r\n            this.options.position.x - this.j2d.scene.viewport.x,\r\n            this.options.position.y - this.j2d.scene.viewport.y,\r\n            this.options.size.x, this.options.size.y);\r\n        context.stroke();\r\n\r\n        context.strokeStyle = 'yellow';\r\n\r\n        context.beginPath();\r\n        context.rect(\r\n            this.options.box.offset.x + this.options.position.x - this.j2d.scene.viewport.x,\r\n            this.options.box.offset.y + this.options.position.y - this.j2d.scene.viewport.y,\r\n            this.options.box.size.x + this.options.size.x,\r\n            this.options.box.size.y + this.options.size.y\r\n        );\r\n        context.stroke();\r\n\r\n        context.lineCap = 'butt';\r\n        if (this.options.angle) {\r\n            context.restore();\r\n        }\r\n    };\r\n\r\n    if(global.J2D !== undefined) global.BaseNode = BaseNode;\r\n    return BaseNode;\r\n});\r\n","/**\r\n * J2D (jQuery plugin of the fork j2ds)\r\n *\r\n * @authors Skaner, likerRr, DeVinterX\r\n * @license zlib\r\n * @version 0.1.5a\r\n * @see https://github.com/SkanerSoft/J2ds/commit/501b8993fc41960794572dc481a5f2fe492da349\r\n */\r\n\r\n!function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('j2d.circle', ['jquery.j2d', 'j2d.base', 'j2d.scene'], factory);\r\n    } else {\r\n        factory(root.J2D, BaseNode, Scene);\r\n    }\r\n}(global, function (J2D, BaseNode, Scene) {\r\n    \"use strict\";\r\n\r\n    if (!Scene.prototype.addCircleNode) {\r\n        Scene.prototype.addCircleNode = function (position, radius, color) {\r\n            return new CircleNode(this.parent, position, radius, color);\r\n        };\r\n    }\r\n\r\n    var CircleNode = function (j2d, position, radius, color) {\r\n        BaseNode.call(this, j2d, position, j2d.vector.vec2df(radius * 2, radius * 2));\r\n        this.nodeName = 'CircleNode';\r\n        this.mergeOptions({\r\n            color: color,\r\n            radius: radius\r\n        });\r\n    };\r\n\r\n    CircleNode.prototype = Object.create(BaseNode.prototype);\r\n    CircleNode.prototype.constructor = CircleNode;\r\n\r\n    CircleNode.prototype.draw = function () {\r\n        var context = this.layer.context;\r\n        if (this.options.visible && this.isLookScene()) {\r\n            if (this.options.alpha != 1) {\r\n                var tmpAlpha = context.globalAlpha;\r\n                context.globalAlpha = this.options.alpha;\r\n            }\r\n            context.lineWidth = 0;\r\n            context.fillStyle = this.options.color;\r\n\r\n            context.beginPath();\r\n            context.arc(\r\n                this.options.position.x - this.j2d.scene.viewport.x + this.options.radius,\r\n                this.options.position.y - this.j2d.scene.viewport.y + this.options.radius,\r\n                this.options.radius, 0, 2 * Math.PI,\r\n                true\r\n            );\r\n            context.stroke();\r\n            context.fill();\r\n\r\n            if (this.options.alpha != 1) {\r\n                context.globalAlpha = tmpAlpha;\r\n            }\r\n        }\r\n    };\r\n\r\n    if (global.J2D !== undefined) global.CircleNode = CircleNode;\r\n    return CircleNode;\r\n});\r\n","/**\r\n * J2D (jQuery plugin of the fork j2ds)\r\n *\r\n * @authors Skaner, likerRr, DeVinterX\r\n * @license zlib\r\n * @version 0.1.5a\r\n * @see https://github.com/SkanerSoft/J2ds/commit/d91880bd189a29b364cc6fd2a3af069f139c5f8a\r\n */\r\n\r\n!function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('j2d.fps', factory);\r\n    } else {\r\n        factory();\r\n    }\r\n}(global, function () {\r\n    \"use strict\";\r\n\r\n    var FPSMeter = function () {\r\n        this.tmp_of_fps = 0;\r\n        this.maxFPS = 60;\r\n        this.tmp_of_time = Date.now();\r\n    };\r\n\r\n    FPSMeter.prototype.start = function (data) {\r\n        this.maxFPS = data.frameLimit;\r\n        if (this.fps === undefined) this.fps = data.frameLimit;\r\n        this.tmp_of_fps += 1;\r\n    };\r\n\r\n    FPSMeter.prototype.end = function (data) {\r\n        if (data.now - this.tmp_of_time >= 1000.0) {\r\n            this.fps = this.tmp_of_fps;\r\n            this.tmp_of_fps = 0;\r\n            this.tmp_of_time = data.now;\r\n        }\r\n    };\r\n\r\n    FPSMeter.prototype.getFPS = function () {\r\n        return (this.fps > this.maxFPS) ? this.maxFPS : this.fps;\r\n    };\r\n\r\n    if (global.J2D !== undefined) global.FPSMeter = FPSMeter;\r\n    return FPSMeter;\r\n});\r\n","/**\r\n * J2D Input Manager\r\n *\r\n * @authors DeVinterX\r\n * @license BSD\r\n * @version 0.1.5\r\n */\r\n\r\n!function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('j2d.input', ['jquery', 'vanilla.override'], factory);\r\n    } else {\r\n        factory(root.jQuery);\r\n    }\r\n}(global, function ($) {\r\n        \"use strict\";\r\n\r\n        var InputManager = function (j2d) {\r\n            this.j2d = j2d;\r\n\r\n            this.id = j2d.id;\r\n            this.element = j2d.element;\r\n\r\n            this.data = {\r\n                mouse: {\r\n                    startPosition: {\r\n                        x: 0,\r\n                        y: 0\r\n                    },\r\n                    currentPosition: {\r\n                        x: 0,\r\n                        y: 0\r\n                    },\r\n                    previousDistance: 0,\r\n                    distance: 0\r\n                },\r\n                viewport: {\r\n                    position: {\r\n                        x: 0,\r\n                        y: 0\r\n                    }\r\n                },\r\n                enabled: false,\r\n                enableAdditionalData: false,\r\n                keysPressed: [],\r\n                writeMode: false,\r\n                timePressed: 0,\r\n                preventAll: false,\r\n\r\n                cursor: {\r\n                    enabled: false,\r\n                    image: 'auto'\r\n                }\r\n            };\r\n            this.keyMap = {\r\n                //DEBUG_INFO: [[InputManager.key.KEY_CTRL, InputManager.key.KEY_F1], 'j2d.debug.toggleScreen', {}],\r\n                FULLSCREEN: [[InputManager.key.KEY_CTRL, InputManager.key.KEY_F11], 'j2d.scene.toggleFullScreen', {}]\r\n            };\r\n        };\r\n\r\n        var checkKeyMap = function (e, enableCallback) {\r\n            if (enableCallback === undefined) enableCallback = true;\r\n\r\n            var j2d = e.data.manager.j2d,\r\n                manager = e.data.manager,\r\n                keyCode = e.which,\r\n                keyMap = e.data.manager.keyMap;\r\n\r\n            for (var index in keyMap) {\r\n                if (keyMap.hasOwnProperty(index)) {\r\n                    var value = keyMap[index];\r\n                    if (!$.isArray(value[0]) && value[0] === keyCode && !!value[1]) {\r\n                        if (typeof value[1] === 'string') {\r\n                            value[1] = eval('(' + value[1] + ')');\r\n                        }\r\n                        if ((typeof value[1] === 'function') && enableCallback) {\r\n                            value[1](j2d, value[2]);\r\n                        }\r\n                        return true;\r\n                    } else if ($.isArray(value[0])\r\n                        && manager.data.keysPressed.equals(value[0]) && !!value[1]\r\n                    ) {\r\n                        if (typeof value[1] === 'string') {\r\n                            value[1] = eval('(' + value[1] + ')');\r\n                        }\r\n                        if (typeof value[1] === 'function' && enableCallback) {\r\n                            value[1](j2d, value[2]);\r\n                        }\r\n                        return true\r\n                    }\r\n                }\r\n            }\r\n            return false\r\n        };\r\n\r\n        var events = {\r\n            onMouseClick: function (e) {\r\n                var manager = e.data.manager;\r\n                if (!manager.data.enabled || !manager.j2d.isPlay() || !manager.j2d.element.hasClass('active')) return true;\r\n                var keysPressed = manager.data.keysPressed;\r\n                var keyCode = getKey(InputManager.key, e.which) || 'KEY_UNKNOWN_' + e.which;\r\n                var mouse = manager.data.mouse;\r\n\r\n                if (e.data.event !== 2) {\r\n                    if (e.data.event === 0) {\r\n                        if (-1 === $.inArray(InputManager.key[keyCode], keysPressed)) {\r\n                            keysPressed.push(InputManager.key[keyCode]);\r\n\r\n                            if (manager.data.enableAdditionalData) {\r\n                                mouse.startPosition.x = e.pageX;\r\n                                mouse.startPosition.y = e.pageY;\r\n                                mouse.distance = 0;\r\n\r\n                                manager.data.timePressed = e.timeStamp;\r\n                            }\r\n                        }\r\n                        if (checkKeyMap(e, false) || manager.data.preventAll) {\r\n                            e.preventDefault();\r\n                        }\r\n                    } else {\r\n                        if (checkKeyMap(e) || manager.data.preventAll) {\r\n                            e.preventDefault();\r\n                        }\r\n                        if (manager.data.enableAdditionalData) {\r\n                            mouse.previousDistance = mouse.distance;\r\n                            mouse.startPosition.x = 0;\r\n                            mouse.startPosition.y = 0;\r\n                        }\r\n\r\n                        keysPressed.splice(\r\n                            keysPressed.indexOf(InputManager.key[keyCode]), 1\r\n                        );\r\n                    }\r\n                    manager.element.trigger(e.data.event === 0 ?\r\n                            'mouseKeyDown' : 'mouseKeyUp', {keyCode: keyCode}\r\n                    );\r\n                } else {\r\n                    if (checkKeyMap(e, false)) {\r\n                        e.preventDefault();\r\n                    }\r\n                }\r\n            },\r\n\r\n            onMouseWheel: function (e) {\r\n                var manager = e.data.manager;\r\n                if (!manager.data.enabled || !manager.j2d.isPlay() || !manager.j2d.element.hasClass('active')) return true;\r\n                var keysPressed = manager.data.keysPressed;\r\n                var keyCode = (e.originalEvent.wheelDelta / 120 > 0) ?\r\n                    getKey(InputManager.key, 4) : getKey(InputManager.key, 5);\r\n\r\n                e.which = (e.originalEvent.wheelDelta / 120 > 0) ? 4 : 5;\r\n\r\n                if (-1 === $.inArray(InputManager.key[keyCode], keysPressed)) {\r\n                    keysPressed.push(InputManager.key[keyCode]);\r\n                }\r\n\r\n                if (checkKeyMap(e) || manager.data.preventAll) {\r\n                    e.preventDefault();\r\n                    manager.fixMouseWheel();\r\n                }\r\n\r\n                manager.element.trigger('mouseWheel', {keyCode: keyCode});\r\n            },\r\n\r\n            mouseWheelCancel: function (keysPressed, keyCode) {\r\n                keysPressed.splice(\r\n                    keysPressed.indexOf(InputManager.key[keyCode]), 1\r\n                );\r\n            },\r\n\r\n            onMouseMove: function (e) {\r\n                var manager = e.data.manager;\r\n                var mouse = e.data.manager.data.mouse;\r\n\r\n                manager.data.mouse.currentPosition.x = e.pageX;\r\n                manager.data.mouse.currentPosition.y = e.pageY;\r\n\r\n                if (e.data.manager.data.enableAdditionalData) {\r\n                    mouse.distance = Math.sqrt(\r\n                        Math.pow((mouse.currentPosition.x - mouse.startPosition.x), 2)\r\n                        + Math.pow((mouse.currentPosition.y - mouse.startPosition.y), 2)\r\n                    ).toFixed(1);\r\n                }\r\n            },\r\n\r\n            onKeyboardPress: function (e) {\r\n                var manager = e.data.manager;\r\n                if (!manager.data.enabled || !manager.j2d.isPlay() || !manager.element.hasClass('active')) return true;\r\n                var keysPressed = manager.data.keysPressed;\r\n                var keyCode = getKey(InputManager.key, e.which) || 'KEY_UNKNOWN_' + e.which;\r\n                if (e.data.event === 2 && true === manager.data.writeMode) {\r\n                    var char = String.fromCharCode(e.which || e.keyCode);\r\n                    e.preventDefault();\r\n                    manager.element.focus().trigger('keyboardCharPress', {\r\n                        key: e.which || e.keyCode,\r\n                        keyCode: keyCode,\r\n                        char: char\r\n                    });\r\n                }\r\n\r\n                if (e.data.event !== 2 && false === manager.data.writeMode) {\r\n                    if (e.data.event === 0) {\r\n                        if (-1 === $.inArray(InputManager.key[keyCode], keysPressed)) {\r\n                            keysPressed.push(InputManager.key[keyCode]);\r\n                            if (manager.data.enableAdditionalData) {\r\n                                manager.data.timePressed = e.timeStamp;\r\n                            }\r\n                        }\r\n                        if (checkKeyMap(e, false) || manager.data.preventAll) {\r\n                            e.preventDefault();\r\n                        }\r\n                    } else {\r\n                        if (checkKeyMap(e) || manager.data.preventAll) {\r\n                            e.preventDefault();\r\n                        }\r\n\r\n                        keysPressed.splice(\r\n                            keysPressed.indexOf(InputManager.key[keyCode]), 1\r\n                        );\r\n                    }\r\n\r\n                    manager.element.trigger(e.data.event === 0 ?\r\n                            'keyboardKeyDown' : 'keyboardKeyUp', {keyCode: keyCode, key: e.which || e.keyCode}\r\n                    );\r\n                }\r\n\r\n                if (e.data.event !== 2 && true === manager.data.writeMode) {\r\n                    manager.element.trigger(e.data.event === 0 ?\r\n                            'keyboardKeyDown' : 'keyboardKeyUp', {keyCode: keyCode, key: e.which || e.keyCode}\r\n                    );\r\n                }\r\n            },\r\n\r\n            onTouchTap: function (e) {\r\n                var manager = e.data.manager;\r\n                if (!manager.data.enabled || !manager.j2d.isPlay() || !manager.j2d.element.hasClass('active')) return true;\r\n                var keysPressed = manager.data.keysPressed;\r\n                var keyCode = getKey(InputManager.key, e.which + 1) || 'KEY_UNKNOWN_' + e.which;\r\n                var touch = e.originalEvent.touches[0] || e.originalEvent.changedTouches[0];\r\n                var mouse = manager.data.mouse;\r\n\r\n                if (e.data.event === 0) {\r\n                    if (-1 === $.inArray(InputManager.key[keyCode], keysPressed)) {\r\n                        keysPressed.push(InputManager.key[keyCode]);\r\n                        if (manager.data.enableAdditionalData) {\r\n                            mouse.startPosition.x = touch.pageX;\r\n                            mouse.startPosition.y = touch.pageY;\r\n                            mouse.distance = 0;\r\n\r\n                            manager.data.timePressed = e.timeStamp;\r\n                        }\r\n                    }\r\n                    if (checkKeyMap(e, false) || manager.data.preventAll) {\r\n                        e.preventDefault();\r\n                    }\r\n                } else {\r\n                    if (checkKeyMap(e) || manager.data.preventAll) {\r\n                        e.preventDefault();\r\n                    }\r\n\r\n                    if (manager.data.enableAdditionalData) {\r\n                        mouse.previousDistance = mouse.distance;\r\n                        mouse.startPosition.x = 0;\r\n                        mouse.startPosition.y = 0;\r\n                    }\r\n\r\n                    keysPressed.splice(\r\n                        keysPressed.indexOf(InputManager.key[keyCode]), 1\r\n                    );\r\n                }\r\n\r\n                manager.element.trigger(e.data.event === 0 ?\r\n                        'mouseKeyDown' : 'mouseKeyUp', {keyCode: keyCode}\r\n                );\r\n            },\r\n\r\n            onTouchMove: function (e) {\r\n                var touch = e.originalEvent.touches[0] || e.originalEvent.changedTouches[0];\r\n                var mouse = e.data.manager.data.mouse;\r\n\r\n                mouse.currentPosition.x = touch.pageX.toFixed(0);\r\n                mouse.currentPosition.y = touch.pageY.toFixed(0);\r\n\r\n                if (e.data.manager.data.enableAdditionalData) {\r\n                    mouse.distance = Math.sqrt(\r\n                        Math.pow((mouse.currentPosition.x - mouse.startPosition.x), 2)\r\n                        + Math.pow((mouse.currentPosition.y - mouse.startPosition.y), 2)\r\n                    ).toFixed(1);\r\n                }\r\n            }\r\n        };\r\n\r\n        var bindEvents = function (manager) {\r\n            var selector = '[guid=' + manager.id + ']';\r\n\r\n            $(document).on('contextmenu', selector, {manager: manager, event: 2}, events.onMouseClick);\r\n            $(document).on('mousedown', selector, {manager: manager, event: 0}, events.onMouseClick);\r\n            $(document).on('mouseup', selector, {manager: manager, event: 1}, events.onMouseClick);\r\n            $(document).on('mousewheel', selector, {manager: manager}, events.onMouseWheel);\r\n            $(document).on('mousemove', selector, {manager: manager}, events.onMouseMove);\r\n\r\n            $(document).on('keydown', null, {manager: manager, event: 0}, events.onKeyboardPress);\r\n            $(document).on('keyup', null, {manager: manager, event: 1}, events.onKeyboardPress);\r\n            $(document).on('keypress', null, {manager: manager, event: 2}, events.onKeyboardPress);\r\n\r\n            $(document).on('touchstart', selector, {manager: manager, event: 0}, events.onTouchTap);\r\n            $(document).on('touchend', selector, {manager: manager, event: 1}, events.onTouchTap);\r\n            $(document).on('touchmove ', selector, {manager: manager}, events.onTouchMove);\r\n        };\r\n\r\n        var unbindEvents = function (manager) {\r\n            var selector = '[guid=' + manager.id + ']';\r\n\r\n            $(document).off('contextmenu', selector, {manager: manager, event: 1}, events.onMouseClick);\r\n            $(document).off('mousedown', selector, {manager: manager, event: 0}, events.onMouseClick);\r\n            $(document).off('mouseup', selector, {manager: manager, event: 1}, events.onMouseClick);\r\n            $(document).off('mousewheel', selector, {manager: manager}, events.onMouseWheel);\r\n            $(document).off('mousemove', selector, {manager: manager}, events.onMouseMove);\r\n\r\n            $(document).off('keydown', null, {manager: manager, event: 0}, events.onKeyboardPress);\r\n            $(document).off('keyup', null, {manager: manager, event: 1}, events.onKeyboardPress);\r\n            $(document).off('keypress', null, {manager: manager, event: 2}, events.onKeyboardPress);\r\n\r\n            $(document).off('touchstart', selector, {manager: manager, event: 0}, events.onTouchTap);\r\n            $(document).off('touchend', selector, {manager: manager, event: 1}, events.onTouchTap);\r\n            $(document).off('touchmove ', selector, {manager: manager}, events.onTouchMove);\r\n        };\r\n\r\n        InputManager.prototype.init = function () {\r\n            if (!this.data.enabled && global.j2dPlugin.pluginInit) {\r\n                bindEvents(this);\r\n\r\n                this.data.enabled = true;\r\n            }\r\n        };\r\n\r\n        InputManager.prototype.update = function () {\r\n            if (!this.data.enabled) return false;\r\n\r\n            var dX = this.j2d.scene.canvas.offsetWidth / this.j2d.scene.width,\r\n                dY = this.j2d.scene.canvas.offsetHeight / this.j2d.scene.height,\r\n                x = this.data.mouse.currentPosition.x / dX,\r\n                y = this.data.mouse.currentPosition.y / dY;\r\n\r\n            var offset = this.element.offset();\r\n            this.data.viewport.x = this.j2d.scene.viewport.x + x - offset.left;\r\n            this.data.viewport.y = this.j2d.scene.viewport.y + y - offset.top;\r\n        };\r\n\r\n        InputManager.prototype.flush = function () {\r\n            this.data.keysPressed = [];\r\n        };\r\n\r\n        InputManager.prototype.clear = function () {\r\n        };\r\n\r\n        InputManager.prototype.fixMouseWheel = function () {\r\n            var keyPressed = this.data.keysPressed;\r\n            if (-1 !== $.inArray(InputManager.key.SCROLL_MOUSE_UP, keyPressed)) {\r\n                events.mouseWheelCancel(keyPressed, InputManager.key.SCROLL_MOUSE_UP);\r\n            } else if (-1 !== $.inArray(InputManager.key.SCROLL_MOUSE_DOWN, keyPressed)) {\r\n                events.mouseWheelCancel(keyPressed, InputManager.key.SCROLL_MOUSE_DOWN);\r\n            }\r\n        };\r\n\r\n        InputManager.prototype.enable = function () {\r\n            if (!this.data.enabled) {\r\n                //bindEvents(this);\r\n                this.data.enabled = false;\r\n            }\r\n        };\r\n\r\n        InputManager.prototype.disable = function () {\r\n            if (this.data.enabled) {\r\n                //unbindEvents(this);\r\n                this.data.enabled = false;\r\n            }\r\n        };\r\n\r\n        InputManager.prototype.load = function (newKeyMap) {\r\n            var oldKeyMap = JSON.stringify(this.keyMap);\r\n            this.keyMap = JSON.parse(newKeyMap);\r\n            return oldKeyMap;\r\n        };\r\n\r\n        InputManager.prototype.save = function () {\r\n            return JSON.stringify(this.keyMap);\r\n        };\r\n\r\n        /** +KeyMap Manager **/\r\n        InputManager.prototype.setKeys = function (mapObject) {\r\n            this.keyMap = $.extend(true, {}, this.keyMap, mapObject);\r\n        };\r\n        /** -KeyMap Manager **/\r\n\r\n        var getPressData = function (manager, keyList) {\r\n            if (!manager.data.enableAdditionalData) return true;\r\n            return {\r\n                keyList: keyList,\r\n                time: Date.now() - manager.data.timePressed\r\n            };\r\n        };\r\n\r\n        InputManager.prototype.getMouseMoveDistance = function () {\r\n            if (!this.data.enableAdditionalData) return 0;\r\n            return {current: this.data.mouse.distance, previous: this.data.mouse.previousDistance};\r\n        };\r\n\r\n        /** +Input Checkers **/\r\n        InputManager.prototype.checkPressedKeyList = function (keyList) {\r\n            if ($.isArray(keyList)) {\r\n                if (keyList.length !== this.data.keysPressed.length) {\r\n                    return false;\r\n                } else if (this.data.keysPressed.equals(keyList)) {\r\n                    this.fixMouseWheel();\r\n                    return getPressData(this, keyList);\r\n                }\r\n                this.fixMouseWheel();\r\n                return false;\r\n            }\r\n            //if (!this.data.keysPressed.equals([])) console.log(this.data.keysPressed);\r\n            if (isNaN(keyList)) return false;\r\n            if (-1 !== this.data.keysPressed.indexOf(keyList)) {\r\n                this.fixMouseWheel();\r\n                return getPressData(this, keyList);\r\n            }\r\n            this.fixMouseWheel();\r\n            return false;\r\n        };\r\n\r\n        InputManager.prototype.checkPressedKeyMap = function (key) {\r\n            if (this.keyMap[key] === undefined) return false;\r\n            var keyList = this.keyMap[key][0];\r\n\r\n            return this.checkPressedKeyList(keyList);\r\n        };\r\n\r\n        InputManager.prototype.getPosition = function () {\r\n            return this.j2d.vector.vec2df(this.data.viewport.x + 0.5, this.data.viewport.y + 0.5);\r\n        };\r\n\r\n        InputManager.prototype.onNode = function (id) {\r\n            if (!id.layer.visible) return false;\r\n            return (this.data.viewport.x > id.options.position.x && this.data.viewport.x < id.options.position.x + id.options.size.x) &&\r\n                (this.data.viewport.y > id.options.position.y && this.data.viewport.y < id.options.position.y + id.options.size.y);\r\n        };\r\n        /** -Input Checkers **/\r\n\r\n        /** +Input Write Mode **/\r\n        InputManager.prototype.setWriteMode = function (mode) {\r\n            this.data.writeMode = mode;\r\n        };\r\n\r\n        InputManager.prototype.isWriteMode = function () {\r\n            return !!this.data.writeMode;\r\n        };\r\n        /** -Input Write Mode **/\r\n\r\n        /** +Cursor **/\r\n        InputManager.prototype.setCursorImage = function (image) {\r\n            this.data.cursor.image = 'url(\"' + image + '\"), auto';\r\n            $(this.element).css('cursor', this.data.cursor.image);\r\n        };\r\n\r\n        InputManager.prototype.toggleCursor = function (enable) {\r\n            if (enable !== undefined) {\r\n                this.data.cursor.enable = enable;\r\n            } else {\r\n                this.data.cursor.enable = !this.data.cursor.enable;\r\n            }\r\n\r\n            if (!this.data.cursor.enable) {\r\n                this.data.cursor.image = $(this.j2d.element).css('cursor');\r\n                $(this.element).css('cursor', 'none');\r\n            } else {\r\n                $(this.element).css('cursor', this.data.cursor.image);\r\n            }\r\n        };\r\n\r\n        InputManager.prototype.isCursorVisible = function () {\r\n            return this.data.cursor.enable;\r\n        };\r\n        /** -Cursor **/\r\n\r\n        /** static keys arrayList **/\r\n        InputManager.key = {\r\n            KEY_MOUSE_LEFT: 1,\r\n            KEY_MOUSE_MIDDLE: 2,\r\n            KEY_MOUSE_RIGHT: 3,\r\n\r\n            SCROLL_MOUSE_UP: 4,\r\n            SCROLL_MOUSE_DOWN: 5,\r\n\r\n            KEY_BACKSPACE: 8,\r\n            KEY_TAB: 9,\r\n            KEY_ENTER: 13,\r\n            KEY_SHIFT: 16,\r\n            KEY_CTRL: 17,\r\n            KEY_ALT: 18,\r\n            KEY_PAUSE: 19,\r\n            KEY_BREAK: 19,\r\n            KEY_CAPS_LOCK: 20,\r\n            KEY_ESCAPE: 27,\r\n            KEY_SPACE_BAR: 32,\r\n            KEY_PAGE_UP: 33,\r\n            KEY_PAGE_DOWN: 34,\r\n            KEY_END: 35,\r\n            KEY_HOME: 36,\r\n            KEY_LEFT_ARROW: 37,\r\n            KEY_UP_ARROW: 38,\r\n            KEY_RIGHT_ARROW: 39,\r\n            KEY_DOWN_ARROW: 40,\r\n            KEY_INSERT: 45,\r\n            KEY_DELETE: 46,\r\n            KEY_0: 48,\r\n            KEY_1: 49,\r\n            KEY_2: 50,\r\n            KEY_3: 51,\r\n            KEY_4: 52,\r\n            KEY_5: 53,\r\n            KEY_6: 54,\r\n            KEY_7: 55,\r\n            KEY_8: 56,\r\n            KEY_9: 57,\r\n            KEY_A: 65,\r\n            KEY_B: 66,\r\n            KEY_C: 67,\r\n            KEY_D: 68,\r\n            KEY_E: 69,\r\n            KEY_F: 70,\r\n            KEY_G: 71,\r\n            KEY_H: 72,\r\n            KEY_I: 73,\r\n            KEY_J: 74,\r\n            KEY_K: 75,\r\n            KEY_L: 76,\r\n            KEY_M: 77,\r\n            KEY_N: 78,\r\n            KEY_O: 79,\r\n            KEY_P: 80,\r\n            KEY_Q: 81,\r\n            KEY_R: 82,\r\n            KEY_S: 83,\r\n            KEY_T: 84,\r\n            KEY_U: 85,\r\n            KEY_V: 86,\r\n            KEY_W: 87,\r\n            KEY_X: 88,\r\n            KEY_Y: 89,\r\n            KEY_Z: 90,\r\n            KEY_LEFT_WINDOW_KEY: 91,\r\n            KEY_RIGHT_WINDOW_KEY: 92,\r\n            KEY_SELECT_KEY: 93,\r\n            KEY_NUMPAD_0: 96,\r\n            KEY_NUMPAD_1: 97,\r\n            KEY_NUMPAD_2: 98,\r\n            KEY_NUMPAD_3: 99,\r\n            KEY_NUMPAD_4: 100,\r\n            KEY_NUMPAD_5: 101,\r\n            KEY_NUMPAD_6: 102,\r\n            KEY_NUMPAD_7: 103,\r\n            KEY_NUMPAD_8: 104,\r\n            KEY_NUMPAD_9: 105,\r\n            KEY_MULTIPLY: 106,\r\n            KEY_ADD: 107,\r\n            KEY_SUBTRACT: 109,\r\n            KEY_DECIMAL_POINT: 110,\r\n            KEY_DIVIDE: 111,\r\n            KEY_F1: 112,\r\n            KEY_F2: 113,\r\n            KEY_F3: 114,\r\n            KEY_F4: 115,\r\n            KEY_F5: 116,\r\n            KEY_F6: 117,\r\n            KEY_F7: 118,\r\n            KEY_F8: 119,\r\n            KEY_F9: 120,\r\n            KEY_F10: 121,\r\n            KEY_F11: 122,\r\n            KEY_F12: 123,\r\n            KEY_NUM_LOCK: 144,\r\n            KEY_SCROLL_LOCK: 145,\r\n            KEY_SEMI_COLON: 186,\r\n            KEY_EQUAL_SIGN: 187,\r\n            KEY_COMMA: 188,\r\n            KEY_DASH: 189,\r\n            KEY_PERIOD: 190,\r\n            KEY_FORWARD_SLASH: 191,\r\n            KEY_GRAVE_ACCENT: 192,\r\n            KEY_OPEN_BRACKET: 219,\r\n            KEY_BACK_SLASH: 220,\r\n            KEY_CLOSE_BRACKET: 221,\r\n            KEY_SINGLE_QUOTE: 222,\r\n            KEY_LEFT_COMMAND: 224,\r\n            KEY_RIGHT_COMMAND: 224\r\n        };\r\n\r\n        /** ^ES5+ **/\r\n        function getKey(object, value) {\r\n            return Object.keys(object).filter(function (key) {\r\n                return object[key] === value\r\n            })[0];\r\n        }\r\n\r\n        if (global.J2D !== undefined) global.InputManager = InputManager;\r\n        return InputManager;\r\n    }\r\n);\r\n","/**\r\n * J2D (jQuery plugin of the fork j2ds)\r\n *\r\n * @authors Skaner, likerRr, DeVinterX\r\n * @license zlib\r\n * @version 0.1.5a\r\n * @see https://github.com/SkanerSoft/J2ds/commit/81c85984b36cfd7ff413577737e10e8a81b0263c\r\n */\r\n\r\n!function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('j2d.io.legacy', ['jquery'], factory);\r\n    } else {\r\n        factory(root.jQuery);\r\n    }\r\n}(global, function ($) {\r\n    \"use strict\";\r\n\r\n    var IO = function (j2d) {\r\n        this.j2d = j2d;\r\n\r\n        this.data = {\r\n            pos: {x: 0, y: 0},\r\n            x: 0,\r\n            y: 0,\r\n            abs: {x: 0, y: 0},\r\n            lClick: false,\r\n            mClick: false,\r\n            rClick: false,\r\n            touch: false,\r\n            keyDown: [],\r\n            keyPress: [],\r\n            keyPressed: [],\r\n            keyUp: [],\r\n            keyUpped: false,\r\n            canceled: false,\r\n            body: false,\r\n            anyKey: false,\r\n            writeMode: false,\r\n            displayCursor: '',\r\n            visible: true\r\n        };\r\n    };\r\n\r\n    IO.prototype.init = function () {\r\n        var io = this;\r\n\r\n        IO.activeElement = io.j2d.element;\r\n        IO.activeElement.focus();\r\n        io.j2d.options.window.ontouchstart = io.onTouch;\r\n        io.j2d.options.window.ontouchmove = io.onTouch;\r\n        io.j2d.options.window.ontouchend = function () {\r\n            io.data.canceled = false;\r\n            io.falseInput();\r\n        };\r\n        io.j2d.options.window.oncontextmenu = function () {\r\n            return false;\r\n        };\r\n        io.j2d.options.window.onselectstart = io.j2d.options.window.oncontextmenu;\r\n        io.j2d.options.window.ondragstart = io.j2d.options.window.oncontextmenu;\r\n        io.j2d.options.window.onmousedown = io.onClick;\r\n        io.j2d.options.window.onmouseup = function () {\r\n            io.data.canceled = false;\r\n            io.falseInput();\r\n        };\r\n        io.j2d.options.window.onmousemove = io.cursorPosition;\r\n        io.j2d.options.window.onkeydown = function (e) {\r\n            io.keyEvent(e);\r\n        };\r\n        io.j2d.options.window.onkeyup = function (e) {\r\n            io.data.canceled = false;\r\n            io.keyEvent(e);\r\n        };\r\n        io.j2d.options.window.onkeypress = function (e) {\r\n            io.keyEvent(e);\r\n        };\r\n    };\r\n\r\n    IO.prototype.update = function () {\r\n        var dX = this.j2d.scene.canvas.offsetWidth / this.j2d.scene.width;\r\n        var dY = this.j2d.scene.canvas.offsetHeight / this.j2d.scene.height;\r\n        this.data.x = (this.data.abs.x / dX);\r\n        this.data.y = (this.data.abs.y / dY);\r\n\r\n        this.data.pos.x = this.j2d.scene.viewport.x + this.data.x;\r\n        this.data.pos.y = this.j2d.scene.viewport.y + this.data.y;\r\n    };\r\n\r\n    IO.prototype.clear = function () {\r\n        this.data.keyPress = [];\r\n        this.data.keyUp = [];\r\n    };\r\n\r\n    IO.prototype.keyList = function () {\r\n        var arrayList = [];\r\n        for (var i in IO.keys) {\r\n            if (IO.keys.hasOwnProperty(i)) {\r\n                arrayList.push(i);\r\n            }\r\n        }\r\n        return arrayList;\r\n    };\r\n\r\n    IO.prototype.isKeyDown = function (code) {\r\n        return this.data.keyDown[IO.keys[code]];\r\n    };\r\n\r\n    IO.prototype.isKeyPress = function (code) {\r\n        return this.data.keyPress[IO.keys[code]];\r\n    };\r\n\r\n    IO.prototype.isKeyUp = function (code) {\r\n        return this.data.keyUp[IO.keys[code]];\r\n    };\r\n\r\n    IO.prototype.getPosition = function () {\r\n        return this.j2d.vector.vec2df(this.data.pos.x, this.data.pos.y);\r\n    };\r\n\r\n    IO.prototype.setWriteMode = function (mode) {\r\n        this.data.writeMode = mode;\r\n    };\r\n\r\n    IO.prototype.isWriteMode = function () {\r\n        return this.data.writeMode;\r\n    };\r\n\r\n    IO.prototype.keyEvent = function (e) {\r\n        if (e.type == 'keydown') {\r\n            if (!this.data.keyPressed[e.keyCode]) {\r\n                this.data.keyPress[e.keyCode] = true;\r\n                this.data.keyPressed[e.keyCode] = true;\r\n            }\r\n            if (!this.data.writeMode) {\r\n                e.preventDefault();\r\n            } else {\r\n                $(this.j2d.element).trigger('keyPress');\r\n            }\r\n        } else if (e.type == 'keyup') {\r\n            if (this.data.keyPressed[e.keyCode]) {\r\n                this.data.keyPress[e.keyCode] = false;\r\n                this.data.keyPressed[e.keyCode] = false;\r\n                this.data.keyUp[e.keyCode] = true;\r\n                this.data.keyUpped = true;\r\n                e.preventDefault();\r\n            }\r\n        } else if (e.type == 'keypress' && (this.data.writeMode)) {\r\n            var char = '';\r\n            if (e.which != 0 && e.charCode != 0) {\r\n                if (e.which >= 32) {\r\n                    char = String.fromCharCode(e.which);\r\n                }\r\n            }\r\n            $(this.j2d.element).trigger('keyPress', [char]);\r\n        }\r\n\r\n        this.data.keyDown[e.keyCode] = (e.type == 'keydown') && (!this.data.canceled);\r\n        this.data.anyKey = e.keyCode;\r\n        return false;\r\n    };\r\n\r\n    //! системная\r\n    IO.prototype.cancel = function (id) {\r\n        if (!id) {\r\n            this.data.canceled = true;\r\n            this.falseInput();\r\n            this.data.keyDown = [];\r\n        }\r\n        else {\r\n            this.data.keyDown[IO.keys[id]] = false;\r\n        }\r\n    };\r\n\r\n    //! системная\r\n    // Вернет true, если мышь наxодится над объектом\r\n    IO.prototype.onNode = function (id) {\r\n        if (!id.layer.visible) return false;\r\n        return (this.data.pos.x > id.options.position.x && this.data.pos.x < id.options.position.x + id.options.size.x) &&\r\n            (this.data.pos.y > id.options.position.y && this.data.pos.y < id.options.position.y + id.options.size.y);\r\n    };\r\n\r\n    IO.prototype.cursorPosition = function (e) {\r\n        var io = IO.activeElement.j2d().options.io;\r\n\r\n        if (!io.data.touch) {\r\n            var x, y;\r\n\r\n            if (document.all) {\r\n                x = e.x + document.body.scrollLeft;\r\n                y = e.y + document.body.scrollTop;\r\n            } else {\r\n                x = e.pageX; // Координата X курсора\r\n                y = e.pageY;// Координата Y курсора\r\n            }\r\n            io.data.abs.x = x;\r\n            io.data.abs.y = y;\r\n        }\r\n    };\r\n\r\n\r\n    IO.prototype.onClick = function (e) {\r\n        var io = IO.activeElement.j2d().options.io;\r\n\r\n        if (!e.which && e.button) {\r\n            if (e.button & 1) e.which = 1;\r\n            else if (e.button & 4) e.which = 2;\r\n            else if (e.button & 2) e.which = 3;\r\n        }\r\n\r\n        io.data.lClick = (e.which == 1) && (!io.data.canceled);\r\n        io.data.mClick = (e.which == 2) && (!io.data.canceled);\r\n        io.data.rClick = (e.which == 3) && (!io.data.canceled);\r\n        IO.activeElement.focus();\r\n        e.preventDefault();\r\n        return false;\r\n    };\r\n\r\n    IO.prototype.onTouch = function (e) {\r\n        var io = IO.activeElement.j2d().options.io;\r\n\r\n        io.data.abs.x = e.touches[0].pageX;\r\n        io.data.abs.y = e.touches[0].pageY;\r\n        io.data.lClick = !io.data.canceled;\r\n        io.data.touch = !io.data.canceled;\r\n        IO.activeElement.focus();\r\n        e.preventDefault();\r\n        return false;\r\n    };\r\n\r\n    IO.prototype.falseInput = function () {\r\n        this.data.lClick = false;\r\n        this.data.mClick = false;\r\n        this.data.rClick = false;\r\n    };\r\n\r\n    IO.prototype.setCursorImage = function (curImg) {\r\n        $(this.j2d.element).css('cursor', 'url(\"' + curImg + '\"), auto');\r\n    };\r\n\r\n    IO.prototype.setVisible = function (visible) {\r\n        this.data.visible = visible;\r\n        if (!visible) {\r\n            this.data.displayCursor = $(this.j2d.element).css('cursor');\r\n            $(this.j2d.element).css('cursor', 'none');\r\n        } else {\r\n            $(this.j2d.element).css('cursor', this.data.displayCursor);\r\n        }\r\n    };\r\n\r\n    IO.prototype.isVisible = function () {\r\n        return this.data.visible;\r\n    };\r\n\r\n    IO.keys = {\r\n        'LEFT': 37,\r\n        'RIGHT': 39,\r\n        'UP': 38,\r\n        'DOWN': 40,\r\n        'SPACE': 32,\r\n        'CTRL': 17,\r\n        'SHIFT': 16,\r\n        'ALT': 18,\r\n        'ESC': 27,\r\n        'ENTER': 13,\r\n        'MINUS': 189,\r\n        'PLUS': 187,\r\n        'CAPS_LOCK': 20,\r\n        'BACKSPACE': 8,\r\n        'TAB': 9,\r\n        'Q': 81,\r\n        'W': 87,\r\n        'E': 69,\r\n        'R': 82,\r\n        'T': 84,\r\n        'Y': 89,\r\n        'U': 85,\r\n        'I': 73,\r\n        'O': 79,\r\n        'P': 80,\r\n        'A': 65,\r\n        'S': 83,\r\n        'D': 68,\r\n        'F': 70,\r\n        'G': 71,\r\n        'H': 72,\r\n        'J': 74,\r\n        'K': 75,\r\n        'L': 76,\r\n        'Z': 90,\r\n        'X': 88,\r\n        'V': 86,\r\n        'B': 66,\r\n        'N': 78,\r\n        'M': 77,\r\n        '0': 48,\r\n        '1': 49,\r\n        '2': 50,\r\n        '3': 51,\r\n        '4': 52,\r\n        '5': 53,\r\n        '6': 54,\r\n        '7': 55,\r\n        '8': 56,\r\n        'C': 67,\r\n        '9': 57,\r\n        'NUM_0': 45,\r\n        'NUM_1': 35,\r\n        'NUM_2': 40,\r\n        'NUM_3': 34,\r\n        'NUM_4': 37,\r\n        'NUM_5': 12,\r\n        'NUM_6': 39,\r\n        'NUM_7': 36,\r\n        'NUM_8': 38,\r\n        'NUM_9': 33,\r\n        'NUM_MINUS': 109,\r\n        'NUM_PLUS': 107,\r\n        'NUM_LOCK': 144,\r\n        'F1': 112,\r\n        'F2': 113,\r\n        'F3': 114,\r\n        'F4': 115,\r\n        'F5': 116,\r\n        'F6': 117,\r\n        'F7': 118,\r\n        'F8': 119,\r\n        'F9': 120,\r\n        'F10': 121,\r\n        'F11': 122,\r\n        'F12': 123\r\n    };\r\n\r\n    IO.activeElement = undefined;\r\n\r\n    if (global.J2D !== undefined) global.IO = IO;\r\n    return IO;\r\n});\r\n","/**\r\n * J2D (jQuery plugin of the fork j2ds)\r\n *\r\n * @authors Skaner, likerRr, DeVinterX\r\n * @license zlib\r\n * @version 0.1.5a\r\n * @see https://github.com/SkanerSoft/J2ds/commit/501b8993fc41960794572dc481a5f2fe492da349\r\n */\r\n\r\n!function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('j2d.line', ['jquery.j2d', 'j2d.base', 'j2d.scene'], factory);\r\n    } else {\r\n        factory(root.J2D, BaseNode, Scene);\r\n    }\r\n}(global, function (J2D, BaseNode, Scene) {\r\n    \"use strict\";\r\n\r\n    if (!Scene.prototype.addLineNode) {\r\n        Scene.prototype.addLineNode = function (position, points, scale, color, width, fill, cFill) {\r\n            return new LineNode(this.parent, position, points, scale, color, width, fill, cFill);\r\n        };\r\n    }\r\n\r\n    var LineNode = function (j2d, position, points, scale, color, width, fill, cFill) {\r\n        BaseNode.call(this, j2d, position, j2d.vector.vec2df(0, 0));\r\n        this.nodeName = 'LineNode';\r\n        this.mergeOptions({\r\n            color: color,\r\n            points: points,\r\n            fill: fill || false,\r\n            scale: scale || 0,\r\n            cFill: cFill,\r\n            lineWidth: width\r\n        });\r\n    };\r\n\r\n    LineNode.prototype = Object.create(BaseNode.prototype);\r\n    LineNode.prototype.constructor = LineNode;\r\n\r\n    LineNode.prototype.draw = function () {\r\n        var context = this.layer.context;\r\n        if (this.options.visible && this.isLookScene()) {\r\n\r\n            if (this.options.alpha != 1) {\r\n                var tmpAlpha = context.globalAlpha;\r\n                context.globalAlpha = this.options.alpha;\r\n            }\r\n\r\n            if (this.options.angle) {\r\n                context.save();\r\n                context.translate(this.getPosition().x - this.j2d.scene.viewport.x, this.getPosition().y - this.j2d.scene.viewport.y);\r\n                context.rotate(this.j2d.math.rad(this.options.angle));\r\n                context.translate(-(this.getPosition().x - this.j2d.scene.viewport.x), -(this.getPosition().y - this.j2d.scene.viewport.y));\r\n            }\r\n\r\n            context.strokeStyle = this.options.color;\r\n            context.lineWidth = this.options.lineWidth;\r\n            context.lineCap = 'round';\r\n\r\n            context.beginPath();\r\n            context.moveTo(\r\n                this.options.position.x - this.j2d.scene.viewport.x,\r\n                this.options.position.y - this.j2d.scene.viewport.y\r\n            );\r\n\r\n            for (var i = 0, len = this.options.points.length; i < len; i += 1) {\r\n                context.lineTo(\r\n                    this.options.position.x + this.options.points[i][0] * this.options.scale - this.j2d.scene.viewport.x,\r\n                    this.options.position.y + this.options.points[i][1] * this.options.scale - this.j2d.scene.viewport.y\r\n                );\r\n            }\r\n\r\n            context.stroke();\r\n            if (this.options.fill) {\r\n                context.fillStyle = this.options.cFill;\r\n                context.fill();\r\n            }\r\n\r\n            context.lineWidth = 0;\r\n            context.lineCap = 'butt';\r\n\r\n            if (this.options.angle) {\r\n                context.restore();\r\n            }\r\n\r\n            if (this.options.alpha != 1) {\r\n                context.globalAlpha = tmpAlpha;\r\n            }\r\n        }\r\n    };\r\n\r\n    if (global.J2D !== undefined) global.LineNode = LineNode;\r\n    return LineNode;\r\n});\r\n","/**\r\n * J2D (jQuery plugin of the fork j2ds)\r\n *\r\n * @authors Skaner, likerRr, DeVinterX\r\n * @license zlib\r\n * @version 0.1.5a\r\n * @see https://github.com/SkanerSoft/J2ds/commit/501b8993fc41960794572dc481a5f2fe492da349\r\n */\r\n\r\n!function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('j2d.rect', ['jquery.j2d', 'j2d.base', 'j2d.scene'], factory);\r\n    } else {\r\n        factory(root.J2D, BaseNode, Scene);\r\n    }\r\n}(global, function (J2D, BaseNode, Scene) {\r\n    \"use strict\";\r\n\r\n    if (!Scene.prototype.addRectNode) {\r\n        Scene.prototype.addRectNode = function (position, size, color) {\r\n            return new RectNode(this.parent, position, size, color);\r\n        };\r\n    }\r\n\r\n    var RectNode = function (j2d, position, size, color) {\r\n        BaseNode.call(this, j2d, position, size);\r\n        this.nodeName = 'RectNode';\r\n        this.mergeOptions({\r\n            color: color\r\n        });\r\n    };\r\n\r\n    RectNode.prototype = Object.create(BaseNode.prototype);\r\n    RectNode.prototype.constructor = RectNode;\r\n\r\n    RectNode.prototype.draw = function () {\r\n        var context = this.layer.context;\r\n        if (this.options.visible && this.isLookScene()) {\r\n\r\n            if (this.options.alpha != 1) {\r\n                var tmpAlpha = context.globalAlpha;\r\n                context.globalAlpha = this.options.alpha;\r\n            }\r\n\r\n            if (this.options.angle) {\r\n                context.save();\r\n                context.translate(this.getPosition().x - this.j2d.scene.viewport.x, this.getPosition().y - this.j2d.scene.viewport.y);\r\n                context.rotate(this.j2d.math.rad(this.options.angle));\r\n                context.translate(-(this.getPosition().x - this.j2d.scene.viewport.x), -(this.getPosition().y - this.j2d.scene.viewport.y));\r\n            }\r\n\r\n            context.fillStyle = this.options.color;\r\n            context.lineWidth = 0;\r\n\r\n            context.fillRect(\r\n                this.options.position.x - this.j2d.scene.viewport.x,\r\n                this.options.position.y - this.j2d.scene.viewport.y,\r\n                this.options.size.x, this.options.size.y);\r\n\r\n            if (this.options.angle) {\r\n                context.restore();\r\n            }\r\n\r\n            if (this.options.alpha != 1) {\r\n                context.globalAlpha = tmpAlpha;\r\n            }\r\n        }\r\n    };\r\n\r\n    if (global.J2D !== undefined) global.RectNode = RectNode;\r\n    return RectNode;\r\n});\r\n","/**\r\n * J2D (jQuery plugin of the fork j2ds)\r\n *\r\n * @authors Skaner, likerRr, DeVinterX\r\n * @license zlib\r\n * @version 0.1.5a\r\n * @see https://github.com/SkanerSoft/J2ds/commit/501b8993fc41960794572dc481a5f2fe492da349\r\n */\r\n\r\n!function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('j2d.sprite', ['jquery.j2d', 'j2d.base', 'j2d.scene'], factory);\r\n    } else {\r\n        factory(root.J2D, BaseNode, Scene);\r\n    }\r\n}(global, function (J2D, BaseNode, Scene) {\r\n    \"use strict\";\r\n\r\n    if (!Scene.prototype.addSpriteNode) {\r\n        Scene.prototype.addSpriteNode = function (position, size, animation) {\r\n            return new SpriteNode(this.parent, position, size, animation);\r\n        };\r\n    }\r\n\r\n    var SpriteNode = function (j2d, position, size, animation) {\r\n        BaseNode.call(this, j2d, position, size);\r\n        this.nodeName = 'SpriteNode';\r\n        this.mergeOptions({\r\n            tmpSpeed: 0,\r\n            frame: 0,\r\n            animation: animation,\r\n            flip: {\r\n                x: false,\r\n                y: false\r\n            }\r\n        });\r\n    };\r\n\r\n    SpriteNode.prototype = Object.create(BaseNode.prototype);\r\n    SpriteNode.prototype.constructor = SpriteNode;\r\n\r\n    SpriteNode.prototype.setFlip = function (x, y) {\r\n        this.options.flip = {\r\n            x: x,\r\n            y: y\r\n        };\r\n    };\r\n\r\n    SpriteNode.prototype.draw = function (speed) {\r\n        if (this.options.visible && this.isLookScene()) {\r\n            speed = speed || 1;\r\n\r\n            if (this.options.frame > this.options.animation.frameCount) {\r\n                this.options.frame = 0;\r\n            }\r\n            this.drawFrame(this.options.frame + 1);\r\n\r\n            if (this.options.tmpSpeed > speed) {\r\n                this.options.frame += 1;\r\n                this.options.tmpSpeed = 0;\r\n            } else {\r\n                this.options.tmpSpeed += 1;\r\n            }\r\n        }\r\n    };\r\n\r\n    // отрисовка одного кадра\r\n    SpriteNode.prototype.drawFrame = function (frame) {\r\n        var context = this.layer.context;\r\n        if (this.options.visible && this.isLookScene()) {\r\n\r\n            if (this.options.alpha != 1) {\r\n                var tmpAlpha = context.globalAlpha;\r\n                context.globalAlpha = this.options.alpha;\r\n            }\r\n\r\n            context.lineWidth = 0;\r\n\r\n            if (this.options.angle || this.options.flip.x || this.options.flip.y) {\r\n                context.save();\r\n                context.translate(this.getPosition().x - this.j2d.scene.viewport.x, this.getPosition().y - this.j2d.scene.viewport.y);\r\n                context.rotate(this.j2d.math.rad(this.options.angle));\r\n                context.scale(this.options.flip.x ? -1 : 1, this.options.flip.y ? -1 : 1);\r\n                context.translate(-(this.getPosition().x - this.j2d.scene.viewport.x), -(this.getPosition().y - this.j2d.scene.viewport.y));\r\n            }\r\n\r\n            frame = frame ? (frame - 1) : 0;\r\n\r\n            context.drawImage(\r\n                this.options.animation.imageMap.img,\r\n                (this.options.animation.sourceX + (this.options.animation.sourceW * frame)),\r\n                this.options.animation.sourceY,\r\n                this.options.animation.sourceW,\r\n                this.options.animation.sourceH,\r\n                this.options.position.x - this.j2d.scene.viewport.x,\r\n                this.options.position.y - this.j2d.scene.viewport.y,\r\n                this.options.size.x, this.options.size.y);\r\n\r\n            if (this.options.angle || this.options.flip.x || this.options.flip.y) {\r\n                context.restore();\r\n            }\r\n\r\n            if (this.options.alpha != 1) {\r\n                context.globalAlpha = tmpAlpha;\r\n            }\r\n        }\r\n    };\r\n\r\n    SpriteNode.prototype.setAnimation = function (id) {\r\n        if (this.options.animation != id) {\r\n            this.options.animation = id;\r\n        }\r\n    };\r\n\r\n    if (global.J2D !== undefined) global.SpriteNode = SpriteNode;\r\n    return SpriteNode;\r\n});\r\n","/**\r\n * J2D (jQuery plugin of the fork j2ds)\r\n *\r\n * @authors Skaner, likerRr, DeVinterX\r\n * @license BSD, zlib\r\n * @version 0.1.5a\r\n * @see https://github.com/SkanerSoft/J2ds/commit/501b8993fc41960794572dc481a5f2fe492da349\r\n */\r\n\r\n!function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define(['jquery'], factory);\r\n    } else {\r\n        factory(root.jQuery);\r\n    }\r\n}(global, function ($) {\r\n    \"use strict\";\r\n\r\n    /*!\r\n     * jquery.storage.js 0.0.3 - https://github.com/yckart/jquery.storage.js\r\n     * The client-side storage for every browser, on any device.\r\n     *\r\n     * Copyright (c) 2012 Yannick Albert (http://yckart.com)\r\n     * Licensed under the MIT license (http://www.opensource.org/licenses/mit-license.php).\r\n     * 2013/02/10\r\n     **/\r\n    if ($['localStorage'] === undefined || $['sessionStorage'] === undefined) {\r\n        $.map(['localStorage', 'sessionStorage'], function (method) {\r\n            var defaults = {\r\n                cookiePrefix: 'fallback:' + method + ':',\r\n                cookieOptions: {\r\n                    path: '/',\r\n                    domain: document.domain,\r\n                    expires: ('localStorage' === method) ? {expires: 365} : undefined\r\n                }\r\n            };\r\n\r\n            try {\r\n                $.support[method] = method in window && window[method] !== null;\r\n            } catch (e) {\r\n                $.support[method] = false;\r\n            }\r\n\r\n            $[method] = function (key, value) {\r\n                var options = $.extend({}, defaults, $[method].options);\r\n\r\n                this.getItem = function (key) {\r\n                    var returns = function (key) {\r\n                        return JSON.parse($.support[method] ? window[method].getItem(key) : $.cookie(options.cookiePrefix + key));\r\n                    };\r\n                    if (typeof key === 'string') return returns(key);\r\n\r\n                    var arr = [],\r\n                        i = key.length;\r\n                    while (i--) arr[i] = returns(key[i]);\r\n                    return arr;\r\n                };\r\n\r\n                this.setItem = function (key, value) {\r\n                    value = JSON.stringify(value);\r\n                    return $.support[method] ?\r\n                        window[method].setItem(key, value) : $.cookie(options.cookiePrefix + key, value, options.cookieOptions);\r\n                };\r\n\r\n                this.removeItem = function (key) {\r\n                    return $.support[method]\r\n                        ? window[method].removeItem(key)\r\n                        : $.cookie(options.cookiePrefix + key, null, $.extend(options.cookieOptions, {\r\n                            expires: -1\r\n                        }\r\n                    ));\r\n                };\r\n\r\n                this.clear = function () {\r\n                    if ($.support[method]) {\r\n                        return window[method].clear();\r\n                    } else {\r\n                        var reg = new RegExp('^' + options.cookiePrefix, ''),\r\n                            opts = $.extend(options.cookieOptions, {\r\n                                expires: -1\r\n                            });\r\n\r\n                        if (document.cookie && document.cookie !== '') {\r\n                            $.map(document.cookie.split(';'), function (cookie) {\r\n                                if (reg.test(cookie = $.trim(cookie))) {\r\n                                    $.cookie(cookie.substr(0, cookie.indexOf('=')), null, opts);\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                };\r\n\r\n                if (typeof key !== \"undefined\") {\r\n                    return typeof value !== \"undefined\"\r\n                        ? ( value === null ? this.removeItem(key) : this.setItem(key, value) ) : this.getItem(key);\r\n                }\r\n\r\n                return this;\r\n            };\r\n\r\n            $[method].options = defaults;\r\n        });\r\n    }\r\n    /*!\r\n     * End plugin for jquery\r\n     */\r\n\r\n    var Storage = function (uid, storageType) {\r\n        this.storage = (storageType === 'sessionStorage') ? 'sessionStorage' : 'localStorage';\r\n        this.id = (uid !== undefined && typeof uid === 'string') ? uid : 'xxxxxxxx'.replace(/[xy]/g,\r\n            function (c) {\r\n                var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n                return v.toString(16);\r\n            }\r\n        );\r\n    };\r\n\r\n    Storage.prototype.load = function (name) {\r\n        return $[this.storage](this.id + '_' + name);\r\n    };\r\n\r\n    Storage.prototype.exist = function (name) {\r\n        return !!($[this.storage](this.id + '_' + name));\r\n    };\r\n\r\n    Storage.prototype.save = function (name, value) {\r\n        $[this.storage](this.id + '_' + name, value);\r\n    };\r\n\r\n    Storage.prototype.loadNode = function (name, node) {\r\n        return node.loadJSON($[this.storage](this.id + '_' + name));\r\n    };\r\n\r\n    Storage.prototype.saveNode = function (name, node) {\r\n        $[this.storage](this.id + '_' + name, node.saveJSON());\r\n    };\r\n\r\n    if (global.J2D !== undefined) global.Storage = Storage;\r\n    return Storage;\r\n});\r\n","/**\r\n * J2D (jQuery plugin of the fork j2ds)\r\n *\r\n * @authors Skaner, likerRr, DeVinterX\r\n * @license zlib\r\n * @version 0.1.5a\r\n * @see https://github.com/SkanerSoft/J2ds/commit/501b8993fc41960794572dc481a5f2fe492da349\r\n */\r\n\r\n!function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('j2d.text', ['jquery.j2d', 'j2d.base', 'j2d.scene'], factory);\r\n    } else {\r\n        factory(root.J2D, BaseNode, Scene);\r\n    }\r\n}(global, function (J2D, BaseNode, Scene) {\r\n    \"use strict\";\r\n\r\n    if (!Scene.prototype.addTextNode) {\r\n        Scene.prototype.addTextNode = function (position, text, sizePx, color, family, width, colorL) {\r\n            return new TextNode(this.parent, position, text, sizePx, color, family, width, colorL);\r\n        };\r\n    }\r\n\r\n    //TODO::\r\n    var TextNode = function (j2d, position, text, sizePx, color, family, width, colorL) {\r\n        BaseNode.call(this, j2d, position, j2d.vector.vec2df(0, 0));\r\n        this.nodeName = 'TextNode';\r\n        this.mergeOptions({\r\n            vAlign: 'top',\r\n            hAlign: 'left',\r\n            color: color ? color : 'black',\r\n\r\n            family: family ? family : 'sans-serif',\r\n            sizePx: sizePx ? sizePx : 20,\r\n\r\n            box: {\r\n                offset: {\r\n                    y: this.j2d.math.toInt(this.sizePx * 0.26)\r\n                },\r\n                size: {\r\n                    y: -this.j2d.math.toInt(this.sizePx * 0.26)\r\n                }\r\n            },\r\n            lineWidth: width ? width : 0,\r\n            colorL: colorL ? colorL : 'black',\r\n\r\n            fullText: text,\r\n            maxWidth: 0,\r\n            lines: text.split(\"\\n\")\r\n        });\r\n\r\n        /*Свойства*/\r\n        this.options.font = this.options.sizePx + 'px ' + this.options.family;\r\n        this.j2d.scene.context.font = this.options.font;\r\n\r\n        for (var i = 0, len = this.options.lines.length; i < len; i += 1) {\r\n            this.options.maxWidth = (this.options.maxWidth < this.j2d.scene.context.measureText(this.options.lines[i]).width ?\r\n                this.j2d.scene.context.measureText(this.options.lines[i]).width :\r\n                this.options.maxWidth);\r\n        }\r\n\r\n        this.options.size.x = this.options.maxWidth;\r\n        this.options.size.y = this.options.lines.length * this.options.sizePx;\r\n    };\r\n\r\n    TextNode.prototype = Object.create(BaseNode.prototype);\r\n    TextNode.prototype.constructor = TextNode;\r\n\r\n    TextNode.prototype.setSize = function (sizePx) {\r\n        this.options.sizePx = sizePx;\r\n        this.options.font = this.options.sizePx + 'px ' + this.options.family;\r\n        this.j2d.scene.context.font = this.options.font;\r\n\r\n        this.options.box.offset.y = this.j2d.math.toInt(this.options.sizePx * 0.26);\r\n        this.options.box.size.y = -this.j2d.math.toInt(this.options.sizePx * 0.26);\r\n\r\n        for (var i = 0, len = this.options.lines.length; i < len; i += 1) {\r\n            this.options.maxWidth = (this.options.maxWidth < this.j2d.scene.context.measureText(this.options.lines[i]).width\r\n                ? this.j2d.scene.context.measureText(this.options.lines[i]).width\r\n                : this.options.maxWidth\r\n            );\r\n        }\r\n        this.options.size.x = this.options.maxWidth;\r\n        this.options.size.y = this.options.lines.length * this.options.sizePx;\r\n    };\r\n\r\n    TextNode.prototype.getSize = function () {\r\n        return this.options.sizePx;\r\n    };\r\n\r\n    TextNode.prototype.drawSimpleText = function (text, position, color, colorL) {\r\n        var context = this.layer.context;\r\n        context.fillStyle = color ? color : this.options.color;\r\n        context.textAlign = this.options.hAlign;\r\n        context.textBaseline = this.options.vAlign;\r\n        context.font = this.options.font;\r\n        context.lineWidth = this.options.lineWidth;\r\n        context.strokeStyle = colorL ? colorL : this.options.colorL;\r\n\r\n        var lines = text.split(\"\\n\");\r\n\r\n        position = position ? position : this.options.position;\r\n\r\n        for (var i = 0, len = lines.length; i < len; i += 1) {\r\n            if (this.options.lineWidth) {\r\n                context.strokeText(lines[i], position.x, position.y + this.options.sizePx * i);\r\n            }\r\n            context.fillText(lines[i], position.x, position.y + this.options.sizePx * i);\r\n        }\r\n        context.lineWidth = 0;\r\n        context.strokeStyle = 'black';\r\n    };\r\n\r\n    TextNode.prototype.getText = function () {\r\n        return this.options.fullText;\r\n    };\r\n\r\n    TextNode.prototype.setText = function (text) {\r\n        this.options.fullText = text;\r\n        this.options.maxWidth = 0;\r\n        this.options.lines = text.split(\"\\n\");\r\n\r\n        this.j2d.scene.context.font = this.options.font;\r\n\r\n        this.options.box.offset.y = this.j2d.math.toInt(this.options.sizePx * 0.26);\r\n        this.options.box.size.y = -this.j2d.math.toInt(this.options.sizePx * 0.26);\r\n\r\n        for (var i = 0, len = this.options.lines.length; i < len; i += 1) {\r\n            this.options.maxWidth = (this.options.maxWidth < this.j2d.scene.context.measureText(this.options.lines[i]).width\r\n                ? this.j2d.scene.context.measureText(this.options.lines[i]).width\r\n                : this.options.maxWidth\r\n            );\r\n        }\r\n        this.options.size.x = this.options.maxWidth;\r\n        this.options.size.y = this.options.lines.length * this.options.sizePx;\r\n    };\r\n\r\n    TextNode.prototype.draw = function () {\r\n        var context = this.layer.context;\r\n        if (this.options.visible && this.isLookScene()) {\r\n            if (this.options.alpha != 1) {\r\n                var tmpAlpha = context.globalAlpha;\r\n                context.globalAlpha = this.options.alpha;\r\n            }\r\n\r\n            if (this.options.angle) {\r\n                context.save();\r\n                context.translate(\r\n                    this.getPosition().x - this.j2d.scene.viewport.x,\r\n                    this.getPosition().y - this.j2d.scene.viewport.y\r\n                );\r\n                context.rotate(this.j2d.math.rad(this.options.angle));\r\n                context.translate(\r\n                    -(this.getPosition().x - this.j2d.scene.viewport.x),\r\n                    -(this.getPosition().y - this.j2d.scene.viewport.y)\r\n                );\r\n            }\r\n\r\n            context.fillStyle = this.options.color;\r\n            context.textAlign = this.options.hAlign;\r\n            context.textBaseline = this.options.vAlign;\r\n            context.font = this.options.font;\r\n            context.lineWidth = this.options.lineWidth;\r\n            context.strokeStyle = this.options.colorL;\r\n\r\n            for (var i = 0, len = this.options.lines.length; i < len; i += 1) {\r\n                if (this.options.lineWidth) {\r\n                    context.strokeText(this.options.lines[i], this.options.position.x, this.options.position.y + this.options.sizePx * i);\r\n                }\r\n                context.fillText(this.options.lines[i], this.options.position.x, this.options.position.y + this.options.sizePx * i);\r\n            }\r\n\r\n            context.lineWidth = 0;\r\n            context.strokeStyle = 'black';\r\n\r\n            if (this.options.angle) {\r\n                context.restore();\r\n            }\r\n\r\n            if (this.options.alpha != 1) {\r\n                context.globalAlpha = tmpAlpha;\r\n            }\r\n        }\r\n    };\r\n\r\n    if (global.J2D !== undefined) global.TextNode = TextNode;\r\n    return TextNode;\r\n});\r\n","/**\r\n * J2D (jQuery plugin of the fork j2ds)\r\n *\r\n * @authors Skaner, likerRr, DeVinterX\r\n * @license zlib\r\n * @version 0.1.4\r\n * @see https://github.com/SkanerSoft/J2ds/commit/501b8993fc41960794572dc481a5f2fe492da349\r\n */\r\n\r\n!function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('j2d.textures', ['jquery.j2d'], factory);\r\n    } else {\r\n        factory(root.J2D);\r\n    }\r\n}(global, function (J2D) {\r\n    \"use strict\";\r\n\r\n    var TextureManager = {\r\n        loadImageMap: false,   // загрузка из файла\r\n        createImageMap: false,    // создание анимации напрямую, минуя imageMap\r\n        templates: {}\r\n    };\r\n\r\n    TextureManager.createImageMap = function (width, height, callback) {\r\n        var imageObject = {\r\n            img: undefined,\r\n            width: width,\r\n            height: height\r\n        };\r\n\r\n        imageObject.img = document.createElement('canvas');\r\n        imageObject.context = imageObject.img.getContext('2d');\r\n        imageObject.img.width = imageObject.width;\r\n        imageObject.img.height = imageObject.height;\r\n\r\n        J2D.util.disableSmoothing(imageObject.context);\r\n\r\n        callback(imageObject.context);\r\n\r\n        /* Функции */\r\n        imageObject.getAnimation = function (sourceX, sourceY, sourceW, sourceH, frameCount) {\r\n            return {\r\n                imageMap: this,\r\n                sourceX: sourceX,\r\n                sourceY: sourceY,\r\n                sourceW: sourceW,\r\n                sourceH: sourceH,\r\n                frameCount: frameCount - 1\r\n            };\r\n        };\r\n\r\n        return imageObject;\r\n    };\r\n\r\n    TextureManager.loadImageMap = function (path, callback) {\r\n        var imageObject = {\r\n            img: undefined,\r\n            width: 0,\r\n            height: 0,\r\n            loaded: false\r\n        };\r\n\r\n        imageObject.img = document.createElement('img');\r\n        imageObject.crossOrigin = 'anonymous';\r\n        imageObject.img.src = path;\r\n        imageObject.img.onload = function () {\r\n            imageObject.width = imageObject.img.width;\r\n            imageObject.height = imageObject.img.height;\r\n            imageObject.loaded = true;\r\n\r\n            if (callback) callback();\r\n        };\r\n        /* Свойства */\r\n\r\n        /* Функции */\r\n        imageObject.getAnimation = function (sourceX, sourceY, sourceW, sourceH, frameCount) {\r\n            return {\r\n                imageMap: this,\r\n                sourceX: sourceX,\r\n                sourceY: sourceY,\r\n                sourceW: sourceW,\r\n                sourceH: sourceH,\r\n                frameCount: frameCount - 1\r\n            };\r\n        };\r\n\r\n        return imageObject;\r\n    };\r\n\r\n    /*----------- шаблоны текстур -------------*/\r\n\r\n    TextureManager.templates.ellipsis = function (context, size, color) {\r\n\r\n    };\r\n\r\n    TextureManager.templates.fillRect = function (context, size, color) {\r\n        context.fillStyle = color;\r\n        context.fillRect(0, 0, size.x, size.y);\r\n    };\r\n\r\n    TextureManager.templates.strokeRect = function (context, size, color, lineWidth) {\r\n        context.strokeStyle = color;\r\n        context.lineWidth = lineWidth;\r\n        context.strokeRect(0, 0, size.x, size.y);\r\n    };\r\n\r\n    TextureManager.templates.gradientL = function (context, size, colors, izHorizontal) {\r\n        var gradient = context.createLinearGradient(0, 0, size.x, 0);\r\n        var step = 1 / colors.length;\r\n        if (!izHorizontal) {\r\n            gradient = context.createLinearGradient(0, 0, 0, size.y);\r\n        }\r\n        for (var i = step / 2, j = 0; j < colors.length; j += 1, i += step) {\r\n            gradient.addColorStop(i, colors[j]);\r\n        }\r\n        context.fillStyle = gradient;\r\n        context.fillRect(0, 0, size.x, size.y);\r\n    };\r\n\r\n    TextureManager.templates.gradientR = function (context, size, pos1, r1, pos2, r2, colors) {\r\n        var gradient = context.createRadialGradient(pos1.x, pos1.y, r1, pos2.x, pos2.y, r2);\r\n        var step = 1 / colors.length;\r\n        for (var i = step / 2, j = 0; j < colors.length; j += 1, i += step) {\r\n            gradient.addColorStop(i, colors[j]);\r\n        }\r\n        context.fillStyle = gradient;\r\n        context.fillRect(0, 0, size.x, size.y);\r\n    };\r\n\r\n    J2D.prototype.getTextureManager = function () {\r\n        return TextureManager;\r\n    };\r\n\r\n    if (global.J2D !== undefined) global.TextureManager = TextureManager;\r\n    return TextureManager;\r\n});\r\n","/**\r\n *  WebGL-2D.js - HTML5 Canvas2D API in a WebGL context\r\n *\r\n *  Created by Corban Brook <corbanbrook@gmail.com> on 2011-03-02.\r\n *  Amended to by Bobby Richter <secretrobotron@gmail.com> on 2011-03-03\r\n *  CubicVR.js by Charles Cliffe <cj@cubicproductions.com> on 2011-03-03\r\n */\r\n\r\n!function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('j2d.webGL2d', [], factory);\r\n    } else {\r\n        factory();\r\n    }\r\n}(global, function () {\r\n    \"use strict\";\r\n\r\n    // Vector & Matrix libraries from CubicVR.js\r\n    var M_PI = 3.1415926535897932384626433832795028841968;\r\n    var M_TWO_PI = 2.0 * M_PI;\r\n    var M_HALF_PI = M_PI / 2.0;\r\n\r\n    function isPOT(value) {\r\n        return value > 0 && ((value - 1) & value) === 0;\r\n    }\r\n\r\n    var vec3 = {\r\n        length: function (pt) {\r\n            return Math.sqrt(pt[0] * pt[0] + pt[1] * pt[1] + pt[2] * pt[2]);\r\n        },\r\n\r\n        normalize: function (pt) {\r\n            var d = Math.sqrt((pt[0] * pt[0]) + (pt[1] * pt[1]) + (pt[2] * pt[2]));\r\n            if (d === 0) {\r\n                return [0, 0, 0];\r\n            }\r\n            return [pt[0] / d, pt[1] / d, pt[2] / d];\r\n        },\r\n\r\n        dot: function (v1, v2) {\r\n            return v1[0] * v2[0] + v1[1] * v2[1] + v1[2] * v2[2];\r\n        },\r\n\r\n        angle: function (v1, v2) {\r\n            return Math.acos((v1[0] * v2[0] + v1[1] * v2[1] + v1[2] * v2[2]) / (Math.sqrt(v1[0] * v1[0] + v1[1] * v1[1] + v1[2] * v1[2]) * Math.sqrt(v2[0] * v2[0] + v2[1] * v2[1] + v2[2] * v2[2])));\r\n        },\r\n\r\n        cross: function (vectA, vectB) {\r\n            return [vectA[1] * vectB[2] - vectB[1] * vectA[2], vectA[2] * vectB[0] - vectB[2] * vectA[0], vectA[0] * vectB[1] - vectB[0] * vectA[1]];\r\n        },\r\n\r\n        multiply: function (vectA, constB) {\r\n            return [vectA[0] * constB, vectA[1] * constB, vectA[2] * constB];\r\n        },\r\n\r\n        add: function (vectA, vectB) {\r\n            return [vectA[0] + vectB[0], vectA[1] + vectB[1], vectA[2] + vectB[2]];\r\n        },\r\n\r\n        subtract: function (vectA, vectB) {\r\n            return [vectA[0] - vectB[0], vectA[1] - vectB[1], vectA[2] - vectB[2]];\r\n        },\r\n\r\n        equal: function (a, b) {\r\n            var epsilon = 0.0000001;\r\n            if ((a === undefined) && (b === undefined)) {\r\n                return true;\r\n            }\r\n            if ((a === undefined) || (b === undefined)) {\r\n                return false;\r\n            }\r\n            return (Math.abs(a[0] - b[0]) < epsilon && Math.abs(a[1] - b[1]) < epsilon && Math.abs(a[2] - b[2]) < epsilon);\r\n        }\r\n    };\r\n\r\n    var mat3 = {\r\n        identity: [1.0, 0.0, 0.0,\r\n            0.0, 1.0, 0.0,\r\n            0.0, 0.0, 1.0],\r\n\r\n        multiply: function (m1, m2) {\r\n            var m10 = m1[0], m11 = m1[1], m12 = m1[2], m13 = m1[3], m14 = m1[4], m15 = m1[5], m16 = m1[6], m17 = m1[7], m18 = m1[8],\r\n                m20 = m2[0], m21 = m2[1], m22 = m2[2], m23 = m2[3], m24 = m2[4], m25 = m2[5], m26 = m2[6], m27 = m2[7], m28 = m2[8];\r\n\r\n            m2[0] = m20 * m10 + m23 * m11 + m26 * m12;\r\n            m2[1] = m21 * m10 + m24 * m11 + m27 * m12;\r\n            m2[2] = m22 * m10 + m25 * m11 + m28 * m12;\r\n            m2[3] = m20 * m13 + m23 * m14 + m26 * m15;\r\n            m2[4] = m21 * m13 + m24 * m14 + m27 * m15;\r\n            m2[5] = m22 * m13 + m25 * m14 + m28 * m15;\r\n            m2[6] = m20 * m16 + m23 * m17 + m26 * m18;\r\n            m2[7] = m21 * m16 + m24 * m17 + m27 * m18;\r\n            m2[8] = m22 * m16 + m25 * m17 + m28 * m18;\r\n        },\r\n\r\n        vec2_multiply: function (m1, m2) {\r\n            var mOut = [];\r\n            mOut[0] = m2[0] * m1[0] + m2[3] * m1[1] + m2[6];\r\n            mOut[1] = m2[1] * m1[0] + m2[4] * m1[1] + m2[7];\r\n            return mOut;\r\n        },\r\n\r\n        transpose: function (m) {\r\n            return [m[0], m[3], m[6], m[1], m[4], m[7], m[2], m[5], m[8]];\r\n        }\r\n    }; //mat3\r\n\r\n    // Transform library from CubicVR.js\r\n    function Transform(mat) {\r\n        return this.clearStack(mat);\r\n    }\r\n\r\n    var STACK_DEPTH_LIMIT = 16;\r\n\r\n    Transform.prototype.clearStack = function (init_mat) {\r\n        this.m_stack = [];\r\n        this.m_cache = [];\r\n        this.c_stack = 0;\r\n        this.valid = 0;\r\n        this.result = null;\r\n\r\n        for (var i = 0; i < STACK_DEPTH_LIMIT; i++) {\r\n            this.m_stack[i] = this.getIdentity();\r\n        }\r\n\r\n        if (init_mat !== undefined) {\r\n            this.m_stack[0] = init_mat;\r\n        } else {\r\n            this.setIdentity();\r\n        }\r\n    }; //clearStack\r\n\r\n    Transform.prototype.setIdentity = function () {\r\n        this.m_stack[this.c_stack] = this.getIdentity();\r\n        if (this.valid === this.c_stack && this.c_stack) {\r\n            this.valid--;\r\n        }\r\n    };\r\n\r\n    Transform.prototype.getIdentity = function () {\r\n        return [1.0, 0.0, 0.0,\r\n            0.0, 1.0, 0.0,\r\n            0.0, 0.0, 1.0];\r\n    };\r\n\r\n    Transform.prototype.getResult = function () {\r\n        if (!this.c_stack) {\r\n            return this.m_stack[0];\r\n        }\r\n\r\n        var m = mat3.identity;\r\n\r\n        if (this.valid > this.c_stack - 1) {\r\n            this.valid = this.c_stack - 1;\r\n        }\r\n\r\n        for (var i = this.valid; i < this.c_stack + 1; i++) {\r\n            m = mat3.multiply(this.m_stack[i], m);\r\n            this.m_cache[i] = m;\r\n        }\r\n\r\n        this.valid = this.c_stack - 1;\r\n\r\n        this.result = this.m_cache[this.c_stack];\r\n\r\n        return this.result;\r\n    };\r\n\r\n    Transform.prototype.pushMatrix = function () {\r\n        this.c_stack++;\r\n        this.m_stack[this.c_stack] = this.getIdentity();\r\n    };\r\n\r\n    Transform.prototype.popMatrix = function () {\r\n        if (this.c_stack === 0) {\r\n            return;\r\n        }\r\n        this.c_stack--;\r\n    };\r\n\r\n    var translateMatrix = Transform.prototype.getIdentity();\r\n\r\n    Transform.prototype.translate = function (x, y) {\r\n        translateMatrix[6] = x;\r\n        translateMatrix[7] = y;\r\n\r\n        mat3.multiply(translateMatrix, this.m_stack[this.c_stack]);\r\n\r\n        /*\r\n         if (this.valid === this.c_stack && this.c_stack) {\r\n         this.valid--;\r\n         }\r\n         */\r\n    };\r\n\r\n    var trMatrix = Transform.prototype.getIdentity();\r\n\r\n    Transform.prototype.tr = function (a, b, c, d, e, f) {\r\n        trMatrix[0] = a;\r\n        trMatrix[1] = b;\r\n        trMatrix[3] = c;\r\n        trMatrix[4] = d;\r\n        trMatrix[6] = e;\r\n        trMatrix[7] = f;\r\n\r\n        mat3.multiply(trMatrix, this.m_stack[this.c_stack]);\r\n    };\r\n\r\n    var scaleMatrix = Transform.prototype.getIdentity();\r\n\r\n    Transform.prototype.scale = function (x, y) {\r\n        scaleMatrix[0] = x;\r\n        scaleMatrix[4] = y;\r\n\r\n        mat3.multiply(scaleMatrix, this.m_stack[this.c_stack]);\r\n\r\n        /*\r\n         if (this.valid === this.c_stack && this.c_stack) {\r\n         this.valid--;\r\n         }\r\n         */\r\n    };\r\n\r\n    var rotateMatrix = Transform.prototype.getIdentity();\r\n\r\n    Transform.prototype.rotate = function (ang) {\r\n        var sAng, cAng;\r\n\r\n        sAng = Math.sin(-ang);\r\n        cAng = Math.cos(-ang);\r\n\r\n        rotateMatrix[0] = cAng;\r\n        rotateMatrix[3] = sAng;\r\n        rotateMatrix[1] = -sAng;\r\n        rotateMatrix[4] = cAng;\r\n\r\n        mat3.multiply(rotateMatrix, this.m_stack[this.c_stack]);\r\n\r\n        /*\r\n         if (this.valid === this.c_stack && this.c_stack) {\r\n         this.valid--;\r\n         }\r\n         */\r\n    };\r\n\r\n    var WebGL2D = global.WebGL2D = function WebGL2D(canvas, options) {\r\n        this.canvas = canvas;\r\n        this.options = options || {};\r\n        this.gl = undefined;\r\n        this.fs = undefined;\r\n        this.vs = undefined;\r\n        this.shaderProgram = undefined;\r\n        this.transform = new Transform();\r\n        this.shaderPool = [];\r\n        this.maxTextureSize = undefined;\r\n\r\n        // Save a reference to the WebGL2D instance on the canvas object\r\n        canvas.gl2d = this;\r\n\r\n        // Store getContext function for later use\r\n        canvas.$getContext = canvas.getContext;\r\n\r\n        // Override getContext function with \"webgl-2d\" enabled version\r\n        canvas.getContext = (function (gl2d) {\r\n            return function (context) {\r\n                if ((gl2d.options.force || context === \"WebGL-2d\") && !(canvas.width === 0 || canvas.height === 0)) {\r\n                    if (gl2d.gl) {\r\n                        return gl2d.gl;\r\n                    }\r\n\r\n                    var gl = gl2d.gl = gl2d.canvas.$getContext(\"experimental-webgl\");\r\n\r\n                    // If we failed to get a WebGL context, return a normal 2D context instead.\r\n                    if ((typeof (gl) === \"undefined\") || (gl === null)) {\r\n                        return gl2d.canvas.$getContext(\"2d\");\r\n                    }\r\n\r\n                    gl2d.initShaders();\r\n                    gl2d.initBuffers();\r\n\r\n                    // Append Canvas2D API features to the WebGL context\r\n                    gl2d.initCanvas2DAPI();\r\n\r\n                    // Disables writing to dest-alpha\r\n                    // gl.colorMask(1,1,1,0)\r\n\r\n                    // Depth options\r\n                    //gl.enable(gl.DEPTH_TEST);\r\n                    //gl.depthFunc(gl.LEQUAL);\r\n\r\n                    // Blending options\r\n                    // See http://stackoverflow.com/questions/11521035/blending-with-html-background-in-webgl\r\n                    gl.enable(gl.BLEND);\r\n                    gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n\r\n                    gl2d.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\r\n\r\n                    return gl;\r\n                } else {\r\n                    return gl2d.canvas.$getContext(context);\r\n                }\r\n            };\r\n        }(this));\r\n\r\n        this.postInit();\r\n    };\r\n\r\n    // Enables WebGL2D on your canvas\r\n    WebGL2D.enable = function (canvas, options) {\r\n        return canvas.gl2d || new WebGL2D(canvas, options);\r\n    };\r\n\r\n\r\n    // Shader Pool BitMasks, i.e. sMask = (shaderMask.texture+shaderMask.stroke)\r\n    var shaderMask = {\r\n        texture: 1,\r\n        crop: 2,\r\n        path: 4\r\n    };\r\n\r\n\r\n    // Fragment shader source\r\n    WebGL2D.prototype.getFragmentShaderSource = function getFragmentShaderSource(sMask) {\r\n        var fsSource = [\r\n            \"#ifdef GL_ES\",\r\n            \"precision highp float;\",\r\n            \"#endif\",\r\n\r\n            \"#define hasTexture \" + ((sMask & shaderMask.texture) ? \"1\" : \"0\"),\r\n            \"#define hasCrop \" + ((sMask & shaderMask.crop) ? \"1\" : \"0\"),\r\n\r\n            \"varying vec4 vColor;\",\r\n\r\n            \"#if hasTexture\",\r\n            \"varying vec2 vTextureCoord;\",\r\n            \"uniform sampler2D uSampler;\",\r\n            \"#if hasCrop\",\r\n            \"uniform vec4 uCropSource;\",\r\n            \"#endif\",\r\n            \"#endif\",\r\n\r\n            \"void main(void) {\",\r\n            \"#if hasTexture\",\r\n            \"#if hasCrop\",\r\n            \"gl_FragColor = texture2D(uSampler, vec2(vTextureCoord.x * uCropSource.z, vTextureCoord.y * uCropSource.w) + uCropSource.xy);\",\r\n            \"#else\",\r\n            \"gl_FragColor = texture2D(uSampler, vTextureCoord);\",\r\n            \"#endif\",\r\n            \"#else\",\r\n            \"gl_FragColor = vColor;\",\r\n            \"#endif\",\r\n            \"}\"\r\n        ].join(\"\\n\");\r\n\r\n        return fsSource;\r\n    };\r\n\r\n    WebGL2D.prototype.getVertexShaderSource = function getVertexShaderSource(stackDepth, sMask) {\r\n        stackDepth = stackDepth || 1;\r\n\r\n        var vsSource = [\r\n            \"#define hasTexture \" + ((sMask & shaderMask.texture) ? \"1\" : \"0\"),\r\n            \"attribute vec4 aVertexPosition;\",\r\n\r\n            \"#if hasTexture\",\r\n            \"varying vec2 vTextureCoord;\",\r\n            \"#endif\",\r\n\r\n            \"uniform vec4 uColor;\",\r\n            \"uniform mat3 uTransforms[\" + stackDepth + \"];\",\r\n\r\n            \"varying vec4 vColor;\",\r\n\r\n            \"uniform mat4 pMatrix;\",\r\n\r\n            \"mat3 crunchStack(void) {\",\r\n            \"mat3 result = uTransforms[0];\",\r\n            \"for (int i = 1; i < \" + stackDepth + \"; ++i) {\",\r\n            \"result = uTransforms[i] * result;\",\r\n            \"}\",\r\n            \"return result;\",\r\n            \"}\",\r\n\r\n            \"void main(void) {\",\r\n            \"vec3 position = crunchStack() * vec3(aVertexPosition.x, aVertexPosition.y, 1.0);\",\r\n            \"gl_Position = pMatrix * vec4(position, 1.0);\",\r\n            \"vColor = uColor;\",\r\n            \"#if hasTexture\",\r\n            \"vTextureCoord = aVertexPosition.zw;\",\r\n            \"#endif\",\r\n            \"}\"\r\n        ].join(\"\\n\");\r\n        return vsSource;\r\n    };\r\n\r\n\r\n    // Initialize fragment and vertex shaders\r\n    WebGL2D.prototype.initShaders = function initShaders(transformStackDepth, sMask) {\r\n        var gl = this.gl;\r\n\r\n        transformStackDepth = transformStackDepth || 1;\r\n        sMask = sMask || 0;\r\n        var storedShader = this.shaderPool[transformStackDepth];\r\n\r\n        if (!storedShader) {\r\n            storedShader = this.shaderPool[transformStackDepth] = [];\r\n        }\r\n        storedShader = storedShader[sMask];\r\n\r\n        if (storedShader) {\r\n            gl.useProgram(storedShader);\r\n            this.shaderProgram = storedShader;\r\n        } else {\r\n            var fs = this.fs = gl.createShader(gl.FRAGMENT_SHADER);\r\n            gl.shaderSource(this.fs, this.getFragmentShaderSource(sMask));\r\n            gl.compileShader(this.fs);\r\n\r\n            if (!gl.getShaderParameter(this.fs, gl.COMPILE_STATUS)) {\r\n                throw \"fragment shader error: \" + gl.getShaderInfoLog(this.fs);\r\n            }\r\n\r\n            var vs = this.vs = gl.createShader(gl.VERTEX_SHADER);\r\n            gl.shaderSource(this.vs, this.getVertexShaderSource(transformStackDepth, sMask));\r\n            gl.compileShader(this.vs);\r\n\r\n            if (!gl.getShaderParameter(this.vs, gl.COMPILE_STATUS)) {\r\n                throw \"vertex shader error: \" + gl.getShaderInfoLog(this.vs);\r\n            }\r\n\r\n\r\n            var shaderProgram = this.shaderProgram = gl.createProgram();\r\n            shaderProgram.stackDepth = transformStackDepth;\r\n            gl.attachShader(shaderProgram, fs);\r\n            gl.attachShader(shaderProgram, vs);\r\n            gl.linkProgram(shaderProgram);\r\n\r\n            if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\r\n                throw \"Could not initialise shaders.\";\r\n            }\r\n\r\n            gl.useProgram(shaderProgram);\r\n\r\n            shaderProgram.vertexPositionAttribute = gl.getAttribLocation(shaderProgram, \"aVertexPosition\");\r\n            gl.enableVertexAttribArray(shaderProgram.vertexPositionAttribute);\r\n\r\n            shaderProgram.uColor = gl.getUniformLocation(shaderProgram, 'uColor');\r\n            shaderProgram.uSampler = gl.getUniformLocation(shaderProgram, 'uSampler');\r\n            shaderProgram.uCropSource = gl.getUniformLocation(shaderProgram, 'uCropSource');\r\n\r\n            shaderProgram.pMatrix = gl.getUniformLocation(shaderProgram, 'pMatrix');\r\n\r\n            shaderProgram.uTransforms = [];\r\n            for (var i = 0; i < transformStackDepth; ++i) {\r\n                shaderProgram.uTransforms[i] = gl.getUniformLocation(shaderProgram, 'uTransforms[' + i + ']');\r\n            } //for\r\n            this.shaderPool[transformStackDepth][sMask] = shaderProgram;\r\n        } //if\r\n\r\n        pMatrix[0] = 2 / this.canvas.width;\r\n        pMatrix[5] = -2 / this.canvas.height;\r\n\r\n        gl.uniformMatrix4fv(this.shaderProgram.pMatrix, false, pMatrix);\r\n\r\n        gl.viewport(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n        return this.shaderProgram;\r\n    };\r\n\r\n    // 2D Vertices and Texture UV coords\r\n    var rectVerts = new Float32Array([\r\n        0, 0, 0, 0,\r\n        0, 1, 0, 1,\r\n        1, 1, 1, 1,\r\n        1, 0, 1, 0\r\n    ]);\r\n\r\n    var pMatrix = new Float32Array(16);\r\n    pMatrix[10] = 1;\r\n    pMatrix[11] = 1;\r\n    pMatrix[12] = -1;\r\n    pMatrix[13] = 1;\r\n\r\n    WebGL2D.prototype.initBuffers = function initBuffers() {\r\n        var gl = this.gl;\r\n\r\n        gl.rectVertexPositionBuffer = gl.createBuffer();\r\n        gl.rectVertexColorBuffer = gl.createBuffer();\r\n\r\n        gl.pathVertexPositionBuffer = gl.createBuffer();\r\n        gl.pathVertexColorBuffer = gl.createBuffer();\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, gl.rectVertexPositionBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, rectVerts, gl.STATIC_DRAW);\r\n    };\r\n\r\n    // Maintains an array of all WebGL2D instances\r\n    WebGL2D.instances = [];\r\n\r\n    WebGL2D.prototype.postInit = function () {\r\n        WebGL2D.instances.push(this);\r\n    };\r\n\r\n    // Extends gl context with Canvas2D API\r\n    WebGL2D.prototype.initCanvas2DAPI = function initCanvas2DAPI() {\r\n        var gl2d = this,\r\n            gl = this.gl;\r\n\r\n\r\n        // Rendering Canvas for text fonts\r\n        var textCanvas = document.createElement(\"canvas\");\r\n        textCanvas.width = gl2d.canvas.width;\r\n        textCanvas.height = gl2d.canvas.height;\r\n        var textCtx = textCanvas.getContext(\"2d\");\r\n\r\n        var reRGBAColor = /^rgb(a)?\\(\\s*(-?[\\d]+)(%)?\\s*,\\s*(-?[\\d]+)(%)?\\s*,\\s*(-?[\\d]+)(%)?\\s*,?\\s*(-?[\\d\\.]+)?\\s*\\)$/;\r\n        var reHSLAColor = /^hsl(a)?\\(\\s*(-?[\\d\\.]+)\\s*,\\s*(-?[\\d\\.]+)%\\s*,\\s*(-?[\\d\\.]+)%\\s*,?\\s*(-?[\\d\\.]+)?\\s*\\)$/;\r\n        var reHex6Color = /^#([0-9A-Fa-f]{6})$/;\r\n        var reHex3Color = /^#([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])$/;\r\n\r\n        function hue2rgb(p, q, t) {\r\n            if (t < 0) t += 1;\r\n            if (t > 1) t -= 1;\r\n            if (t < 1 / 6) return p + (q - p) * 6 * t;\r\n            if (t < 1 / 2) return q;\r\n            if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\r\n            return p;\r\n        }\r\n\r\n        // http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n        function HSLAToRGBA(h, s, l, a) {\r\n            var r, g, b, p, q;\r\n\r\n            // Clamp and Normalize values\r\n            h = (((h % 360) + 360) % 360) / 360;\r\n            s = s > 100 ? 1 : s / 100;\r\n            s = s < 0 ? 0 : s;\r\n            l = l > 100 ? 1 : l / 100;\r\n            l = l < 0 ? 0 : l;\r\n\r\n            if (s == 0) {\r\n                r = g = b = l; // achromatic\r\n            } else {\r\n                q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n                p = 2 * l - q;\r\n\r\n                r = hue2rgb(p, q, h + 1 / 3);\r\n                g = hue2rgb(p, q, h);\r\n                b = hue2rgb(p, q, h - 1 / 3);\r\n            }\r\n\r\n            return [r, g, b, a];\r\n        }\r\n\r\n\r\n        // Converts rgb(a) color string to gl color vector\r\n        function colorStringToVec4(value) {\r\n            var result = [], match, channel, isPercent, hasAlpha, alphaChannel, sameType;\r\n\r\n            if ((match = reRGBAColor.exec(value))) {\r\n                hasAlpha = match[1], alphaChannel = parseFloat(match[8]);\r\n\r\n                if ((hasAlpha && isNaN(alphaChannel)) || (!hasAlpha && !isNaN(alphaChannel))) {\r\n                    return false;\r\n                }\r\n\r\n                sameType = match[3];\r\n\r\n                for (var i = 2; i < 8; i += 2) {\r\n                    channel = match[i], isPercent = match[i + 1];\r\n\r\n                    if (isPercent !== sameType) {\r\n                        return false;\r\n                    }\r\n\r\n                    // Clamp and normalize values\r\n                    if (isPercent) {\r\n                        channel = channel > 100 ? 1 : channel / 100;\r\n                        channel = channel < 0 ? 0 : channel;\r\n                    } else {\r\n                        channel = channel > 255 ? 1 : channel / 255;\r\n                        channel = channel < 0 ? 0 : channel;\r\n                    }\r\n\r\n                    result.push(channel);\r\n                }\r\n\r\n                result.push(hasAlpha ? alphaChannel : 1.0);\r\n            } else if ((match = reHSLAColor.exec(value))) {\r\n                hasAlpha = match[1], alphaChannel = parseFloat(match[5]);\r\n                result = HSLAToRGBA(match[2], match[3], match[4], parseFloat(hasAlpha && alphaChannel ? alphaChannel : 1.0));\r\n            } else if ((match = reHex6Color.exec(value))) {\r\n                var colorInt = parseInt(match[1], 16);\r\n                result = [((colorInt & 0xFF0000) >> 16) / 255, ((colorInt & 0x00FF00) >> 8) / 255, (colorInt & 0x0000FF) / 255, 1.0];\r\n            } else if ((match = reHex3Color.exec(value))) {\r\n                var hexString = \"#\" + [match[1], match[1], match[2], match[2], match[3], match[3]].join(\"\");\r\n                result = colorStringToVec4(hexString);\r\n            } else if (value.toLowerCase() in colorKeywords) {\r\n                result = colorStringToVec4(colorKeywords[value.toLowerCase()]);\r\n            } else if (value.toLowerCase() === \"transparent\") {\r\n                result = [0, 0, 0, 0];\r\n            } else {\r\n                // Color keywords not yet implemented, ie \"orange\", return hot pink\r\n                return false;\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        function colorVecToString(vec4) {\r\n            return \"rgba(\" + (vec4[0] * 255) + \", \" + (vec4[1] * 255) + \", \" + (vec4[2] * 255) + \", \" + parseFloat(vec4[3]) + \")\";\r\n        }\r\n\r\n        var colorKeywords = {\r\n            aliceblue: \"#f0f8ff\",\r\n            antiquewhite: \"#faebd7\",\r\n            aqua: \"#00ffff\",\r\n            aquamarine: \"#7fffd4\",\r\n            azure: \"#f0ffff\",\r\n            beige: \"#f5f5dc\",\r\n            bisque: \"#ffe4c4\",\r\n            black: \"#000000\",\r\n            blanchedalmond: \"#ffebcd\",\r\n            blue: \"#0000ff\",\r\n            blueviolet: \"#8a2be2\",\r\n            brown: \"#a52a2a\",\r\n            burlywood: \"#deb887\",\r\n            cadetblue: \"#5f9ea0\",\r\n            chartreuse: \"#7fff00\",\r\n            chocolate: \"#d2691e\",\r\n            coral: \"#ff7f50\",\r\n            cornflowerblue: \"#6495ed\",\r\n            cornsilk: \"#fff8dc\",\r\n            crimson: \"#dc143c\",\r\n            cyan: \"#00ffff\",\r\n            darkblue: \"#00008b\",\r\n            darkcyan: \"#008b8b\",\r\n            darkgoldenrod: \"#b8860b\",\r\n            darkgray: \"#a9a9a9\",\r\n            darkgreen: \"#006400\",\r\n            darkkhaki: \"#bdb76b\",\r\n            darkmagenta: \"#8b008b\",\r\n            darkolivegreen: \"#556b2f\",\r\n            darkorange: \"#ff8c00\",\r\n            darkorchid: \"#9932cc\",\r\n            darkred: \"#8b0000\",\r\n            darksalmon: \"#e9967a\",\r\n            darkseagreen: \"#8fbc8f\",\r\n            darkslateblue: \"#483d8b\",\r\n            darkslategray: \"#2f4f4f\",\r\n            darkturquoise: \"#00ced1\",\r\n            darkviolet: \"#9400d3\",\r\n            deeppink: \"#ff1493\",\r\n            deepskyblue: \"#00bfff\",\r\n            dimgray: \"#696969\",\r\n            dodgerblue: \"#1e90ff\",\r\n            firebrick: \"#b22222\",\r\n            floralwhite: \"#fffaf0\",\r\n            forestgreen: \"#228b22\",\r\n            fuchsia: \"#ff00ff\",\r\n            gainsboro: \"#dcdcdc\",\r\n            ghostwhite: \"#f8f8ff\",\r\n            gold: \"#ffd700\",\r\n            goldenrod: \"#daa520\",\r\n            gray: \"#808080\",\r\n            green: \"#008000\",\r\n            greenyellow: \"#adff2f\",\r\n            grey: \"#808080\",\r\n            honeydew: \"#f0fff0\",\r\n            hotpink: \"#ff69b4\",\r\n            indianred: \"#cd5c5c\",\r\n            indigo: \"#4b0082\",\r\n            ivory: \"#fffff0\",\r\n            khaki: \"#f0e68c\",\r\n            lavender: \"#e6e6fa\",\r\n            lavenderblush: \"#fff0f5\",\r\n            lawngreen: \"#7cfc00\",\r\n            lemonchiffon: \"#fffacd\",\r\n            lightblue: \"#add8e6\",\r\n            lightcoral: \"#f08080\",\r\n            lightcyan: \"#e0ffff\",\r\n            lightgoldenrodyellow: \"#fafad2\",\r\n            lightgrey: \"#d3d3d3\",\r\n            lightgreen: \"#90ee90\",\r\n            lightpink: \"#ffb6c1\",\r\n            lightsalmon: \"#ffa07a\",\r\n            lightseagreen: \"#20b2aa\",\r\n            lightskyblue: \"#87cefa\",\r\n            lightslategray: \"#778899\",\r\n            lightsteelblue: \"#b0c4de\",\r\n            lightyellow: \"#ffffe0\",\r\n            lime: \"#00ff00\",\r\n            limegreen: \"#32cd32\",\r\n            linen: \"#faf0e6\",\r\n            magenta: \"#ff00ff\",\r\n            maroon: \"#800000\",\r\n            mediumaquamarine: \"#66cdaa\",\r\n            mediumblue: \"#0000cd\",\r\n            mediumorchid: \"#ba55d3\",\r\n            mediumpurple: \"#9370d8\",\r\n            mediumseagreen: \"#3cb371\",\r\n            mediumslateblue: \"#7b68ee\",\r\n            mediumspringgreen: \"#00fa9a\",\r\n            mediumturquoise: \"#48d1cc\",\r\n            mediumvioletred: \"#c71585\",\r\n            midnightblue: \"#191970\",\r\n            mintcream: \"#f5fffa\",\r\n            mistyrose: \"#ffe4e1\",\r\n            moccasin: \"#ffe4b5\",\r\n            navajowhite: \"#ffdead\",\r\n            navy: \"#000080\",\r\n            oldlace: \"#fdf5e6\",\r\n            olive: \"#808000\",\r\n            olivedrab: \"#6b8e23\",\r\n            orange: \"#ffa500\",\r\n            orangered: \"#ff4500\",\r\n            orchid: \"#da70d6\",\r\n            palegoldenrod: \"#eee8aa\",\r\n            palegreen: \"#98fb98\",\r\n            paleturquoise: \"#afeeee\",\r\n            palevioletred: \"#d87093\",\r\n            papayawhip: \"#ffefd5\",\r\n            peachpuff: \"#ffdab9\",\r\n            peru: \"#cd853f\",\r\n            pink: \"#ffc0cb\",\r\n            plum: \"#dda0dd\",\r\n            powderblue: \"#b0e0e6\",\r\n            purple: \"#800080\",\r\n            red: \"#ff0000\",\r\n            rosybrown: \"#bc8f8f\",\r\n            royalblue: \"#4169e1\",\r\n            saddlebrown: \"#8b4513\",\r\n            salmon: \"#fa8072\",\r\n            sandybrown: \"#f4a460\",\r\n            seagreen: \"#2e8b57\",\r\n            seashell: \"#fff5ee\",\r\n            sienna: \"#a0522d\",\r\n            silver: \"#c0c0c0\",\r\n            skyblue: \"#87ceeb\",\r\n            slateblue: \"#6a5acd\",\r\n            slategray: \"#708090\",\r\n            snow: \"#fffafa\",\r\n            springgreen: \"#00ff7f\",\r\n            steelblue: \"#4682b4\",\r\n            tan: \"#d2b48c\",\r\n            teal: \"#008080\",\r\n            thistle: \"#d8bfd8\",\r\n            tomato: \"#ff6347\",\r\n            turquoise: \"#40e0d0\",\r\n            violet: \"#ee82ee\",\r\n            wheat: \"#f5deb3\",\r\n            white: \"#ffffff\",\r\n            whitesmoke: \"#f5f5f5\",\r\n            yellow: \"#ffff00\",\r\n            yellowgreen: \"#9acd32\"\r\n        };\r\n\r\n        // Maintain drawing state params during gl.save and gl.restore. see saveDrawState() and restoreDrawState()\r\n        var drawState = {}, drawStateStack = [];\r\n\r\n        // A fast simple shallow clone\r\n        function cloneObject(obj) {\r\n            var target = {};\r\n            for (var i in obj) {\r\n                if (obj.hasOwnProperty(i)) {\r\n                    target[i] = obj[i];\r\n                }\r\n            }\r\n            return target;\r\n        }\r\n\r\n        function saveDrawState() {\r\n            var bakedDrawState = {\r\n                fillStyle: [drawState.fillStyle[0], drawState.fillStyle[1], drawState.fillStyle[2], drawState.fillStyle[3]],\r\n                strokeStyle: [drawState.strokeStyle[0], drawState.strokeStyle[1], drawState.strokeStyle[2], drawState.strokeStyle[3]],\r\n                globalAlpha: drawState.globalAlpha,\r\n                globalCompositeOperation: drawState.globalCompositeOperation,\r\n                lineCap: drawState.lineCap,\r\n                lineJoin: drawState.lineJoin,\r\n                lineWidth: drawState.lineWidth,\r\n                miterLimit: drawState.miterLimit,\r\n                shadowColor: drawState.shadowColor,\r\n                shadowBlur: drawState.shadowBlur,\r\n                shadowOffsetX: drawState.shadowOffsetX,\r\n                shadowOffsetY: drawState.shadowOffsetY,\r\n                textAlign: drawState.textAlign,\r\n                font: drawState.font,\r\n                textBaseline: drawState.textBaseline,\r\n                imageSmoothingEnabled: drawState.imageSmoothingEnabled\r\n            };\r\n\r\n            drawStateStack.push(bakedDrawState);\r\n        }\r\n\r\n        function restoreDrawState() {\r\n            if (drawStateStack.length) {\r\n                drawState = drawStateStack.pop();\r\n            }\r\n        }\r\n\r\n        // WebGL requires colors as a vector while Canvas2D sets colors as an rgba string\r\n        // These getters and setters store the original rgba string as well as convert to a vector\r\n        drawState.fillStyle = [0, 0, 0, 1]; // default black\r\n\r\n        Object.defineProperty(gl, \"fillStyle\", {\r\n            get: function () {\r\n                return colorVecToString(drawState.fillStyle);\r\n            },\r\n            set: function (value) {\r\n                drawState.fillStyle = colorStringToVec4(value) || drawState.fillStyle;\r\n            }\r\n        });\r\n\r\n        drawState.strokeStyle = [0, 0, 0, 1]; // default black\r\n\r\n        Object.defineProperty(gl, \"strokeStyle\", {\r\n            get: function () {\r\n                return colorVecToString(drawState.strokeStyle);\r\n            },\r\n            set: function (value) {\r\n                drawState.strokeStyle = colorStringToVec4(value) || drawStyle.strokeStyle;\r\n            }\r\n        });\r\n\r\n        // WebGL already has a lineWidth() function but Canvas2D requires a lineWidth property\r\n        // Store the original lineWidth() function for later use\r\n        gl.$lineWidth = gl.lineWidth;\r\n        drawState.lineWidth = 1.0;\r\n\r\n        Object.defineProperty(gl, \"lineWidth\", {\r\n            get: function () {\r\n                return drawState.lineWidth;\r\n            },\r\n            set: function (value) {\r\n                if (value > 0) {\r\n                    gl.$lineWidth(value);\r\n                    drawState.lineWidth = value;\r\n                }\r\n            }\r\n        });\r\n\r\n        // Currently unsupported attributes and their default values\r\n        drawState.lineCap = \"butt\";\r\n\r\n        Object.defineProperty(gl, \"lineCap\", {\r\n            get: function () {\r\n                return drawState.lineCap;\r\n            },\r\n            set: function (value) {\r\n                drawState.lineCap = value;\r\n            }\r\n        });\r\n\r\n        drawState.lineJoin = \"miter\";\r\n\r\n        Object.defineProperty(gl, \"lineJoin\", {\r\n            get: function () {\r\n                return drawState.lineJoin;\r\n            },\r\n            set: function (value) {\r\n                drawState.lineJoin = value;\r\n            }\r\n        });\r\n\r\n        drawState.miterLimit = 10;\r\n\r\n        Object.defineProperty(gl, \"miterLimit\", {\r\n            get: function () {\r\n                return drawState.miterLimit;\r\n            },\r\n            set: function (value) {\r\n                drawState.miterLimit = value;\r\n            }\r\n        });\r\n\r\n        drawState.shadowOffsetX = 0;\r\n\r\n        Object.defineProperty(gl, \"shadowOffsetX\", {\r\n            get: function () {\r\n                return drawState.shadowOffsetX;\r\n            },\r\n            set: function (value) {\r\n                drawState.shadowOffsetX = value;\r\n            }\r\n        });\r\n\r\n        drawState.shadowOffsetY = 0;\r\n\r\n        Object.defineProperty(gl, \"shadowOffsetY\", {\r\n            get: function () {\r\n                return drawState.shadowOffsetY;\r\n            },\r\n            set: function (value) {\r\n                drawState.shadowOffsetY = value;\r\n            }\r\n        });\r\n\r\n        drawState.shadowBlur = 0;\r\n\r\n        Object.defineProperty(gl, \"shadowBlur\", {\r\n            get: function () {\r\n                return drawState.shadowBlur;\r\n            },\r\n            set: function (value) {\r\n                drawState.shadowBlur = value;\r\n            }\r\n        });\r\n\r\n        drawState.shadowColor = \"rgba(0, 0, 0, 0.0)\";\r\n\r\n        Object.defineProperty(gl, \"shadowColor\", {\r\n            get: function () {\r\n                return drawState.shadowColor;\r\n            },\r\n            set: function (value) {\r\n                drawState.shadowColor = value;\r\n            }\r\n        });\r\n\r\n        drawState.font = \"10px sans-serif\";\r\n\r\n        Object.defineProperty(gl, \"font\", {\r\n            get: function () {\r\n                return drawState.font;\r\n            },\r\n            set: function (value) {\r\n                textCtx.font = value;\r\n                drawState.font = value;\r\n            }\r\n        });\r\n\r\n        drawState.textAlign = \"start\";\r\n\r\n        Object.defineProperty(gl, \"textAlign\", {\r\n            get: function () {\r\n                return drawState.textAlign;\r\n            },\r\n            set: function (value) {\r\n                drawState.textAlign = value;\r\n            }\r\n        });\r\n\r\n        drawState.textBaseline = \"alphabetic\";\r\n\r\n        Object.defineProperty(gl, \"textBaseline\", {\r\n            get: function () {\r\n                return drawState.textBaseline;\r\n            },\r\n            set: function (value) {\r\n                drawState.textBaseline = value;\r\n            }\r\n        });\r\n\r\n        // This attribute will need to control global alpha of objects drawn.\r\n        drawState.globalAlpha = 1.0;\r\n\r\n        Object.defineProperty(gl, \"globalAlpha\", {\r\n            get: function () {\r\n                return drawState.globalAlpha;\r\n            },\r\n            set: function (value) {\r\n                drawState.globalAlpha = value;\r\n            }\r\n        });\r\n\r\n        // This attribute will need to control smoothing of objects drawn.\r\n        drawState.imageSmoothingEnabled = true;\r\n\r\n        Object.defineProperty(gl, \"imageSmoothingEnabled\", {\r\n            get: function () {\r\n                return drawState.imageSmoothingEnabled;\r\n            },\r\n            set: function (value) {\r\n                drawState.imageSmoothingEnabled = !!value;\r\n            }\r\n        });\r\n\r\n        // This attribute will need to set the gl.blendFunc mode\r\n        drawState.globalCompositeOperation = \"source-over\";\r\n\r\n        Object.defineProperty(gl, \"globalCompositeOperation\", {\r\n            get: function () {\r\n                return drawState.globalCompositeOperation;\r\n            },\r\n            set: function (value) {\r\n                drawState.globalCompositeOperation = value;\r\n            }\r\n        });\r\n\r\n        // Need a solution for drawing text that isnt stupid slow\r\n        gl.fillText = function fillText(text, x, y) {\r\n            // if it exist --key\r\n            textCtx.clearRect(0, 0, gl2d.canvas.width, gl2d.canvas.height);\r\n            textCtx.fillStyle = gl.fillStyle;\r\n            textCtx.fillText(text, x, y);\r\n\r\n            gl.drawImage(textCanvas, 0, 0);\r\n        };\r\n\r\n        gl.strokeText = function strokeText() {\r\n        };\r\n\r\n        gl.measureText = function measureText() {\r\n            return 1;\r\n        };\r\n\r\n        var tempCanvas = document.createElement('canvas');\r\n        var tempCtx = tempCanvas.getContext('2d');\r\n\r\n        gl.save = function save() {\r\n            gl2d.transform.pushMatrix();\r\n            saveDrawState();\r\n        };\r\n\r\n        gl.restore = function restore() {\r\n            gl2d.transform.popMatrix();\r\n            restoreDrawState();\r\n        };\r\n\r\n        gl.translate = function translate(x, y) {\r\n            gl2d.transform.translate(x, y);\r\n        };\r\n\r\n        gl.rotate = function rotate(a) {\r\n            gl2d.transform.rotate(a);\r\n        };\r\n\r\n        gl.scale = function scale(x, y) {\r\n            gl2d.transform.scale(x, y);\r\n        };\r\n\r\n        gl.createImageData = function createImageData(width, height) {\r\n            return tempCtx.createImageData(width, height);\r\n        };\r\n\r\n        gl.getImageData = function getImageData(x, y, width, height) {\r\n            var data = tempCtx.createImageData(width, height);\r\n            var buffer = new Uint8Array(width * height * 4);\r\n            gl.readPixels(x, y, width, height, gl.RGBA, gl.UNSIGNED_BYTE, buffer);\r\n            var w = width * 4, h = height;\r\n            for (var i = 0, maxI = h / 2; i < maxI; ++i) {\r\n                for (var j = 0, maxJ = w; j < maxJ; ++j) {\r\n                    var index1 = i * w + j;\r\n                    var index2 = (h - i - 1) * w + j;\r\n                    data.data[index1] = buffer[index2];\r\n                    data.data[index2] = buffer[index1];\r\n                } //for\r\n            } //for\r\n\r\n            return data;\r\n        };\r\n\r\n        gl.putImageData = function putImageData(imageData, x, y) {\r\n            gl.drawImage(imageData, x, y);\r\n        };\r\n\r\n        gl.transform = function transform(m11, m12, m21, m22, dx, dy) {\r\n            gl2d.transform.tr(m11, m12, m21, m22, dx, dy);\r\n        };\r\n\r\n        function sendTransformStack(sp) {\r\n            var stack = gl2d.transform.m_stack;\r\n            for (var i = 0, maxI = gl2d.transform.c_stack + 1; i < maxI; ++i) {\r\n                gl.uniformMatrix3fv(sp.uTransforms[i], false, stack[maxI - 1 - i]);\r\n            } //for\r\n        }\r\n\r\n        gl.setTransform = function setTransform(m11, m12, m21, m22, dx, dy) {\r\n            gl2d.transform.setIdentity();\r\n            gl.transform.apply(this, arguments);\r\n        };\r\n\r\n        gl.fillRect = function fillRect(x, y, width, height) {\r\n            var transform = gl2d.transform;\r\n            var shaderProgram = gl2d.initShaders(transform.c_stack + 2, 0);\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, gl.rectVertexPositionBuffer);\r\n            gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, 4, gl.FLOAT, false, 0, 0);\r\n\r\n            transform.pushMatrix();\r\n\r\n            transform.translate(x, y);\r\n            transform.scale(width, height);\r\n\r\n            sendTransformStack(shaderProgram);\r\n\r\n            gl.uniform4f(shaderProgram.uColor, drawState.fillStyle[0], drawState.fillStyle[1], drawState.fillStyle[2], drawState.fillStyle[3]);\r\n\r\n            gl.drawArrays(gl.TRIANGLE_FAN, 0, 4);\r\n\r\n            transform.popMatrix();\r\n        };\r\n\r\n        gl.strokeRect = function strokeRect(x, y, width, height) {\r\n            var transform = gl2d.transform;\r\n            var shaderProgram = gl2d.initShaders(transform.c_stack + 2, 0);\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, gl.rectVertexPositionBuffer);\r\n            gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, 4, gl.FLOAT, false, 0, 0);\r\n\r\n            transform.pushMatrix();\r\n\r\n            transform.translate(x, y);\r\n            transform.scale(width, height);\r\n\r\n            sendTransformStack(shaderProgram);\r\n\r\n            gl.uniform4f(shaderProgram.uColor, drawState.strokeStyle[0], drawState.strokeStyle[1], drawState.strokeStyle[2], drawState.strokeStyle[3]);\r\n\r\n            gl.drawArrays(gl.LINE_LOOP, 0, 4);\r\n\r\n            transform.popMatrix();\r\n        };\r\n\r\n        gl.clearRect = function clearRect(x, y, width, height) {\r\n        };\r\n\r\n        var subPaths = [];\r\n\r\n        function SubPath(x, y) {\r\n            this.closed = false;\r\n            this.verts = [x, y, 0, 0];\r\n        }\r\n\r\n        // Empty the list of subpaths so that the context once again has zero subpaths\r\n        gl.beginPath = function beginPath() {\r\n            subPaths.length = 0;\r\n        };\r\n\r\n        // Mark last subpath as closed and create a new subpath with the same starting point as the previous subpath\r\n        gl.closePath = function closePath() {\r\n            if (subPaths.length) {\r\n                // Mark last subpath closed.\r\n                var prevPath = subPaths[subPaths.length - 1], startX = prevPath.verts[0], startY = prevPath.verts[1];\r\n                prevPath.closed = true;\r\n\r\n                // Create new subpath using the starting position of previous subpath\r\n                var newPath = new SubPath(startX, startY);\r\n                subPaths.push(newPath);\r\n            }\r\n        };\r\n\r\n        // Create a new subpath with the specified point as its first (and only) point\r\n        gl.moveTo = function moveTo(x, y) {\r\n            subPaths.push(new SubPath(x, y));\r\n        };\r\n\r\n        gl.lineTo = function lineTo(x, y) {\r\n            if (subPaths.length) {\r\n                subPaths[subPaths.length - 1].verts.push(x, y, 0, 0);\r\n            } else {\r\n                // Create a new subpath if none currently exist\r\n                gl.moveTo(x, y);\r\n            }\r\n        };\r\n\r\n        gl.quadraticApproximateCount = 50;\r\n        gl.quadraticCurveTo = function quadraticCurveTo(hx, hy, x, y) {\r\n            if (subPaths.length) {\r\n                var verts = subPaths[subPaths.length - 1].verts,\r\n                    fromx = verts[verts.length - 4],\r\n                    fromy = verts[verts.length - 3],\r\n                    t, i, tx, ty;\r\n                for (var j = 0; j < gl.quadraticApproximateCount; j++) {\r\n                    t = j / gl.quadraticApproximateCount;\r\n                    i = 1 - t;\r\n                    tx = i * i * fromx + 2 * i * t * hx + t * t * x;\r\n                    ty = i * i * fromy + 2 * i * t * hy + t * t * y;\r\n                    verts.push(tx, ty, 0, 0);\r\n                }\r\n            } else {\r\n                gl.moveTo(x, y);\r\n            }\r\n        };\r\n\r\n        gl.bezierApproximateCount = 50;\r\n        gl.bezierCurveTo = function quadraticCurveTo(h1x, h1y, h2x, h2y, x, y) {\r\n            if (subPaths.length) {\r\n                var verts = subPaths[subPaths.length - 1].verts,\r\n                    fromx = verts[verts.length - 4],\r\n                    fromy = verts[verts.length - 3],\r\n                    t, i, tx, ty;\r\n                for (var j = 0; j < gl.bezierApproximateCount; j++) {\r\n                    t = j / gl.bezierApproximateCount;\r\n                    i = 1 - t;\r\n                    tx = i * i * i * fromx + 3 * i * i * t * h1x + 3 * i * t * t * h2x + t * t * t * x;\r\n                    ty = i * i * i * fromy + 3 * i * i * t * h1y + 3 * i * t * t * h2y + t * t * t * y;\r\n                    verts.push(tx, ty, 0, 0);\r\n                }\r\n            } else {\r\n                gl.moveTo(x, y);\r\n            }\r\n        };\r\n\r\n        gl.arcTo = function arcTo() {\r\n            if (subPaths.length) {\r\n                ;\r\n            } else {\r\n                gl.moveTo(x, y);\r\n            }\r\n        };\r\n\r\n        // Adds a closed rect subpath and creates a new subpath\r\n        gl.rect = function rect(x, y, w, h) {\r\n            gl.moveTo(x, y);\r\n            gl.lineTo(x + w, y);\r\n            gl.lineTo(x + w, y + h);\r\n            gl.lineTo(x, y + h);\r\n            gl.closePath();\r\n        };\r\n\r\n        gl.arcApproximateCount = 100;\r\n        gl.arc = function arc(cx, cy, radius, startAngle, endAngle, anticlockwise) {\r\n            if (subPaths.length) {\r\n                var verts = subPaths[subPaths.length - 1].verts;\r\n\r\n                // startAngle\r\n                var x = cx + radius * Math.cos(startAngle),\r\n                    y = cy + radius * Math.sin(startAngle);\r\n                verts.push(x, y, 0, 0);\r\n\r\n                while (startAngle > Math.PI * 2)\r\n                    startAngle -= Math.PI * 2;\r\n                while (endAngle > Math.PI * 2)\r\n                    endAngle -= Math.PI * 2;\r\n                while (startAngle < -Math.PI * 2)\r\n                    startAngle += Math.PI * 2;\r\n                while (endAngle < -Math.PI * 2)\r\n                    endAngle += Math.PI * 2;\r\n                if (startAngle == endAngle)\r\n                    return;\r\n\r\n                var count = 1 / gl.arcApproximateCount,\r\n                    fixed = gl.arcApproximateCount,\r\n                    t;\r\n                if (anticlockwise) {\r\n                    endAngle -= Math.PI * 2;\r\n                    count = -count;\r\n                }\r\n                for (var i = startAngle; (i > endAngle && anticlockwise) || (i < endAngle && !anticlockwise); i += count) {\r\n                    if (t == (t = (i * fixed | 0) / fixed))\r\n                        continue;\r\n                    x = cx + radius * Math.cos(t);\r\n                    y = cy + radius * Math.sin(t);\r\n                    verts.push(x, y, 0, 0);\r\n                }\r\n            } else {\r\n                gl.moveTo(x, y);\r\n            }\r\n        };\r\n\r\n        function fillSubPath(index) {\r\n            var transform = gl2d.transform;\r\n            var shaderProgram = gl2d.initShaders(transform.c_stack + 2, 0);\r\n\r\n            var subPath = subPaths[index];\r\n            var verts = subPath.verts;\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, gl.pathVertexPositionBuffer);\r\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(verts), gl.STATIC_DRAW);\r\n\r\n            gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, 4, gl.FLOAT, false, 0, 0);\r\n\r\n            transform.pushMatrix();\r\n\r\n            sendTransformStack(shaderProgram);\r\n\r\n            gl.uniform4f(shaderProgram.uColor, drawState.fillStyle[0], drawState.fillStyle[1], drawState.fillStyle[2], drawState.fillStyle[3]);\r\n\r\n            gl.drawArrays(gl.TRIANGLE_FAN, 0, verts.length / 4);\r\n\r\n            transform.popMatrix();\r\n        }\r\n\r\n        gl.fill = function fill() {\r\n            for (var i = 0; i < subPaths.length; i++) {\r\n                fillSubPath(i);\r\n            }\r\n        };\r\n\r\n        function strokeSubPath(index) {\r\n            var transform = gl2d.transform;\r\n            var shaderProgram = gl2d.initShaders(transform.c_stack + 2, 0);\r\n\r\n            var subPath = subPaths[index];\r\n            var verts = subPath.verts;\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, gl.pathVertexPositionBuffer);\r\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(verts), gl.STATIC_DRAW);\r\n\r\n            gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, 4, gl.FLOAT, false, 0, 0);\r\n\r\n            transform.pushMatrix();\r\n\r\n            sendTransformStack(shaderProgram);\r\n\r\n            gl.uniform4f(shaderProgram.uColor, drawState.strokeStyle[0], drawState.strokeStyle[1], drawState.strokeStyle[2], drawState.strokeStyle[3]);\r\n\r\n            if (subPath.closed) {\r\n                gl.drawArrays(gl.LINE_LOOP, 0, verts.length / 4);\r\n            } else {\r\n                gl.drawArrays(gl.LINE_STRIP, 0, verts.length / 4);\r\n            }\r\n\r\n            transform.popMatrix();\r\n        }\r\n\r\n        gl.stroke = function stroke() {\r\n            for (var i = 0; i < subPaths.length; i++) {\r\n                strokeSubPath(i);\r\n            }\r\n        };\r\n\r\n        gl.clip = function clip() {\r\n        };\r\n\r\n        gl.isPointInPath = function isPointInPath() {\r\n        };\r\n\r\n        gl.drawFocusRing = function drawFocusRing() {\r\n        };\r\n\r\n\r\n        var imageCache = [], textureCache = [];\r\n\r\n        function Texture(image) {\r\n            this.obj = gl.createTexture();\r\n            this.index = textureCache.push(this);\r\n\r\n            imageCache.push(image);\r\n\r\n            // we may wish to consider tiling large images like this instead of scaling and\r\n            // adjust appropriately (flip to next texture source and tile offset) when drawing\r\n            if (image.width > gl2d.maxTextureSize || image.height > gl2d.maxTextureSize) {\r\n                var canvas = document.createElement(\"canvas\");\r\n\r\n                canvas.width = (image.width > gl2d.maxTextureSize) ? gl2d.maxTextureSize : image.width;\r\n                canvas.height = (image.height > gl2d.maxTextureSize) ? gl2d.maxTextureSize : image.height;\r\n\r\n                var ctx = canvas.getContext(\"2d\");\r\n\r\n                ctx.drawImage(image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height);\r\n\r\n                image = canvas;\r\n            }\r\n\r\n            var GL_FUNCTION = gl.LINEAR;\r\n            var GL_MIPMAP_FUNCTION = gl.LINEAR_MIPMAP_LINEAR;\r\n\r\n            if (!drawState.imageSmoothingEnabled) {\r\n                GL_FUNCTION = gl.NEAREST;\r\n                GL_MIPMAP_FUNCTION = gl.LINEAR_MIPMAP_NEAREST;\r\n            }\r\n\r\n            gl.bindTexture(gl.TEXTURE_2D, this.obj);\r\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, GL_FUNCTION);\r\n\r\n            // Enable Mip mapping on power-of-2 textures\r\n            if (isPOT(image.width) && isPOT(image.height)) {\r\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, GL_MIPMAP_FUNCTION);\r\n                gl.generateMipmap(gl.TEXTURE_2D);\r\n            } else {\r\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, GL_FUNCTION);\r\n            }\r\n\r\n            // Unbind texture\r\n            gl.bindTexture(gl.TEXTURE_2D, null);\r\n        }\r\n\r\n        gl.drawImage = function drawImage(image, a, b, c, d, e, f, g, h) {\r\n            var transform = gl2d.transform;\r\n\r\n            transform.pushMatrix();\r\n\r\n            var sMask = shaderMask.texture;\r\n            var doCrop = false;\r\n\r\n            //drawImage(image, dx, dy)\r\n            if (arguments.length === 3) {\r\n                transform.translate(a, b);\r\n                transform.scale(image.width, image.height);\r\n            }\r\n\r\n            //drawImage(image, dx, dy, dw, dh)\r\n            else if (arguments.length === 5) {\r\n                transform.translate(a, b);\r\n                transform.scale(c, d);\r\n            }\r\n\r\n            //drawImage(image, sx, sy, sw, sh, dx, dy, dw, dh)\r\n            else if (arguments.length === 9) {\r\n                transform.translate(e, f);\r\n                transform.scale(g, h);\r\n                sMask = sMask | shaderMask.crop;\r\n                doCrop = true;\r\n            }\r\n\r\n            var shaderProgram = gl2d.initShaders(transform.c_stack + 1, sMask);\r\n\r\n            var texture, cacheIndex = imageCache.indexOf(image);\r\n\r\n            if (cacheIndex !== -1) {\r\n                texture = textureCache[cacheIndex];\r\n            } else {\r\n                texture = new Texture(image);\r\n            }\r\n\r\n            if (doCrop) {\r\n                gl.uniform4f(shaderProgram.uCropSource, a / image.width, b / image.height, c / image.width, d / image.height);\r\n            }\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, gl.rectVertexPositionBuffer);\r\n            gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, 4, gl.FLOAT, false, 0, 0);\r\n\r\n            gl.bindTexture(gl.TEXTURE_2D, texture.obj);\r\n            gl.activeTexture(gl.TEXTURE0);\r\n\r\n            gl.uniform1i(shaderProgram.uSampler, 0);\r\n\r\n            sendTransformStack(shaderProgram);\r\n            gl.drawArrays(gl.TRIANGLE_FAN, 0, 4);\r\n\r\n            transform.popMatrix();\r\n        };\r\n\r\n        // This enables the user to detect whether they got a webgl-2d context or a 2d context.\r\n        Object.defineProperty(gl, \"isWebGL\", {\r\n            configurable: false,\r\n            enumerable: true,\r\n            writable: false,\r\n            value: true\r\n        });\r\n    };\r\n\r\n    return WebGL2D;\r\n});\r\n"],"sourceRoot":"/source/"}