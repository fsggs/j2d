{"version":3,"sources":["jquery.j2d.js","core/FrameManager.js","core/LayersManager.js","core/SceneManager.js","core/WebGL2D.js","io/InputManager.js","utils/ArrayMap.js","utils/DeviceUtil.js","utils/Exceptions.js","utils/MathUtil.js","utils/Vector2d.js","utils/Vector2dInteger.js"],"names":["root","factory","define","amd","module","exports","require","jQuery","SceneManager","DeviceUtil","window","global","$","defaults","id","io","deltaTime","pause","ready","frameLimit","smoothing","webGL","J2D","element","data","j2d","this","device","scene","Object","defineProperty","get","set","value","addClass","removeClass","prototype","start","trigger","stop","flush","resume","focus","getSceneManager","getLayersManager","layersManager","getFrameManager","frameManager","on","once","off","util","disableSmoothing","context","chrome","navigator","userAgent","match","version","parseInt","initPlugin","undefined","j2dPlugin","pluginInit","fn","options","filter","each","extend","guid","replace","c","r","Math","random","v","toString","attr","tabIndex","click","$array","push","length","isFullScreen","document","webkitFullscreenElement","webkitCurrentFullScreenElement","mozFullScreenElement","msFullscreenElement","fullScreen","resizeToFullPage","toggle","current","onResize","ArrayMap","instance","engineStack","dataStack","timestamp","frameRun","breakAnimationFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","Number","MAX_SAFE_INTEGER","Date","now","setTimeout","bind","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","FrameManager","name","engine","params","lastTime","sceneStartTime","sceneSkipTime","asyncUpdate","asyncRender","interval","add","pulse","remove","runMainLoop","index","hasOwnProperty","update","render","clear","setDefaultFrameLimit","Init","instanceFrameManager","LayersManager","list","WebGL2D","width","height","originalWidth","originalHeight","originalMargin","visible","position","top","left","zIndex","opacity","backgroundColor","enableFullScreen","viewport","x","y","gameState","sceneManager","canvas","fillStyle","fillRect","style","display","init","css","initCanvas","createElement","enable","getContext","shadowColor","append","pos","size","clearRect","resize","save","restore","setGameState","console","warn","async","call","fullscreen","getElementById","requestFullscreen","webkitRequestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","exitFullscreen","webkitExitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","enableFullscreen","toggleFullScreen","isPOT","Transform","mat","clearStack","mat3","identity","multiply","m1","m2","m10","m11","m12","m13","m14","m15","m16","m17","m18","m20","m21","m22","m23","m24","m25","m26","m27","m28","vec2_multiply","mOut","transpose","m","STACK_DEPTH_LIMIT","init_mat","m_stack","m_cache","c_stack","valid","result","i","getIdentity","setIdentity","getResult","pushMatrix","popMatrix","translateMatrix","translate","trMatrix","tr","a","b","d","e","f","scaleMatrix","scale","rotateMatrix","rotate","ang","sAng","cAng","sin","cos","gl","fs","vs","shaderProgram","transform","shaderPool","maxTextureSize","gl2d","$getContext","force","initShaders","initBuffers","initCanvas2DAPI","BLEND","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","getParameter","MAX_TEXTURE_SIZE","postInit","shaderMask","texture","crop","path","getFragmentShaderSource","sMask","fsSource","join","getVertexShaderSource","stackDepth","vsSource","transformStackDepth","storedShader","useProgram","createShader","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","VERTEX_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","vertexPositionAttribute","getAttribLocation","enableVertexAttribArray","uColor","getUniformLocation","uSampler","uCropSource","pMatrix","uTransforms","uniformMatrix4fv","rectVerts","Float32Array","rectVertexPositionBuffer","createBuffer","rectVertexColorBuffer","pathVertexPositionBuffer","pathVertexColorBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","instances","hue2rgb","p","q","t","HSLAToRGBA","h","s","l","g","colorStringToVec4","channel","isPercent","hasAlpha","alphaChannel","sameType","reRGBAColor","exec","parseFloat","isNaN","reHSLAColor","reHex6Color","colorInt","reHex3Color","hexString","toLowerCase","colorKeywords","colorVecToString","vec4","saveDrawState","bakedDrawState","drawState","strokeStyle","globalAlpha","globalCompositeOperation","lineCap","lineJoin","lineWidth","miterLimit","shadowBlur","shadowOffsetX","shadowOffsetY","textAlign","font","textBaseline","imageSmoothingEnabled","drawStateStack","restoreDrawState","pop","sendTransformStack","sp","stack","maxI","uniformMatrix3fv","SubPath","closed","verts","fillSubPath","subPath","subPaths","vertexAttribPointer","FLOAT","uniform4f","drawArrays","TRIANGLE_FAN","strokeSubPath","LINE_LOOP","LINE_STRIP","Texture","image","obj","createTexture","textureCache","imageCache","ctx","drawImage","GL_FUNCTION","LINEAR","GL_MIPMAP_FUNCTION","LINEAR_MIPMAP_LINEAR","NEAREST","LINEAR_MIPMAP_NEAREST","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","generateMipmap","textCanvas","textCtx","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","drawStyle","$lineWidth","fillText","text","strokeText","measureText","tempCanvas","tempCtx","createImageData","getImageData","buffer","Uint8Array","readPixels","w","j","maxJ","index1","index2","putImageData","imageData","dx","dy","setTransform","apply","arguments","strokeRect","beginPath","closePath","prevPath","startX","startY","newPath","moveTo","lineTo","quadraticApproximateCount","quadraticCurveTo","hx","hy","tx","ty","fromx","fromy","bezierApproximateCount","bezierCurveTo","h1x","h1y","h2x","h2y","arcTo","rect","arcApproximateCount","arc","cx","cy","radius","startAngle","endAngle","anticlockwise","PI","count","fixed","fill","stroke","clip","isPointInPath","drawFocusRing","doCrop","cacheIndex","indexOf","activeTexture","TEXTURE0","uniform1i","configurable","enumerable","writable","getKey","object","keys","key","InputManager","mouse","startPosition","currentPosition","previousDistance","distance","enabled","enableAdditionalData","keysPressed","writeMode","timePressed","preventAll","cursor","keyMap","FULLSCREEN","KEY_CTRL","KEY_F11","checkKeyMap","enableCallback","manager","keyCode","which","isArray","eval","equals","events","onMouseClick","isPlay","hasClass","event","inArray","pageX","pageY","timeStamp","preventDefault","splice","onMouseWheel","originalEvent","wheelDelta","fixMouseWheel","mouseWheelCancel","onMouseMove","sqrt","pow","toFixed","onKeyboardPress","char","String","fromCharCode","onTouchTap","touch","touches","changedTouches","onTouchMove","bindEvents","selector","unbindEvents","dX","offsetWidth","dY","offsetHeight","offset","keyPressed","SCROLL_MOUSE_UP","SCROLL_MOUSE_DOWN","disable","load","newKeyMap","oldKeyMap","JSON","stringify","parse","setKeys","mapObject","getPressData","keyList","time","getMouseMoveDistance","previous","checkPressedKeyList","checkPressedKeyMap","getPosition","vector","v2f","setWriteMode","mode","isWriteMode","setCursorImage","toggleCursor","isCursorVisible","KEY_MOUSE_LEFT","KEY_MOUSE_MIDDLE","KEY_MOUSE_RIGHT","KEY_BACKSPACE","KEY_TAB","KEY_ENTER","KEY_SHIFT","KEY_ALT","KEY_PAUSE","KEY_BREAK","KEY_CAPS_LOCK","KEY_ESCAPE","KEY_SPACE_BAR","KEY_PAGE_UP","KEY_PAGE_DOWN","KEY_END","KEY_HOME","KEY_LEFT_ARROW","KEY_UP_ARROW","KEY_RIGHT_ARROW","KEY_DOWN_ARROW","KEY_INSERT","KEY_DELETE","KEY_0","KEY_1","KEY_2","KEY_3","KEY_4","KEY_5","KEY_6","KEY_7","KEY_8","KEY_9","KEY_A","KEY_B","KEY_C","KEY_D","KEY_E","KEY_F","KEY_G","KEY_H","KEY_I","KEY_J","KEY_K","KEY_L","KEY_M","KEY_N","KEY_O","KEY_P","KEY_Q","KEY_R","KEY_S","KEY_T","KEY_U","KEY_V","KEY_W","KEY_X","KEY_Y","KEY_Z","KEY_LEFT_WINDOW_KEY","KEY_RIGHT_WINDOW_KEY","KEY_SELECT_KEY","KEY_NUMPAD_0","KEY_NUMPAD_1","KEY_NUMPAD_2","KEY_NUMPAD_3","KEY_NUMPAD_4","KEY_NUMPAD_5","KEY_NUMPAD_6","KEY_NUMPAD_7","KEY_NUMPAD_8","KEY_NUMPAD_9","KEY_MULTIPLY","KEY_ADD","KEY_SUBTRACT","KEY_DECIMAL_POINT","KEY_DIVIDE","KEY_F1","KEY_F2","KEY_F3","KEY_F4","KEY_F5","KEY_F6","KEY_F7","KEY_F8","KEY_F9","KEY_F10","KEY_F12","KEY_NUM_LOCK","KEY_SCROLL_LOCK","KEY_SEMI_COLON","KEY_EQUAL_SIGN","KEY_COMMA","KEY_DASH","KEY_PERIOD","KEY_FORWARD_SLASH","KEY_GRAVE_ACCENT","KEY_OPEN_BRACKET","KEY_BACK_SLASH","KEY_CLOSE_BRACKET","KEY_SINGLE_QUOTE","KEY_LEFT_COMMAND","KEY_RIGHT_COMMAND","args","Array","create","constructor","last","array","contains","Vector2dInteger","screen","innerWidth","innerHeight","getWidth","getHeight","getSize","Exception","message","Error","RuntimeException","InvalidArgumentException","BadFunctionCallException","BadMethodCallException","LengthException","LogicException","OutOfBoundsException","OutOfRangeException","RangeException","UnexpectedValueException","MathUtil","number2Integer","number","isInteger","isFinite","floor","randomColor","min","max","omitZero","degree2Radian","degree","radian2Degree","radian","Vector2d","getX","getY","getCoordinates","toArray","fromArray"],"mappings":"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","file":"jquery.j2d.js","sourcesContent":["/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n/*\r\n * TODO:: Events System\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('jquery.j2d', [\r\n            'jquery',\r\n            'core/SceneManager',\r\n            'utils/DeviceUtil'\r\n        ], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(\r\n            require('jquery'),\r\n            require('core/SceneManager'),\r\n            require('utils/DeviceUtil')\r\n        );\r\n    } else {\r\n        factory(\r\n            root.jQuery,\r\n            root.SceneManager,\r\n            root.DeviceUtil\r\n        );\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function ($, SceneManager, DeviceUtil) {\r\n    \"use strict\";\r\n\r\n    var defaults = {\r\n        id: null,\r\n        io: null,\r\n        deltaTime: 0,\r\n        pause: false,\r\n        ready: false,\r\n\r\n        frameLimit: 60,\r\n        smoothing: true,\r\n\r\n        webGL: false\r\n    };\r\n\r\n    var J2D = function J2D(element, data) {\r\n        var j2d = this;\r\n        this.element = element;\r\n        this.data = data;\r\n\r\n        this.device = new DeviceUtil();\r\n        this.scene = new SceneManager(this);\r\n\r\n        Object.defineProperty(this, 'WebGL', {\r\n            get: function () {\r\n                return j2d.data.webGL;\r\n            },\r\n            set: function (value) {\r\n                j2d.data.webGL = !!value;\r\n                if (!!value && !j2d.data.webGL) {\r\n                    j2d.element.addClass('WebGL');\r\n                } else if (!value && j2d.data.webGL) {\r\n                    j2d.element.removeClass('WebGL');\r\n                }\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(this, 'smoothing', {\r\n            get: function () {\r\n                return j2d.data.smoothing;\r\n            },\r\n            set: function (value) {\r\n                j2d.data.smoothing = !!value;\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(this, 'io', {\r\n            get: function () {\r\n                return j2d.data.io;\r\n            },\r\n            set: function (value) {\r\n                return j2d.data.io = value\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(this, 'isPlay', {\r\n            get: function () {\r\n                return !j2d.data.pause;\r\n            },\r\n            set: function () {\r\n            }\r\n        });\r\n    };\r\n\r\n    /** +GameEngine **/\r\n    J2D.prototype.start = function () {\r\n        this.scene.start();\r\n        this.trigger('start');\r\n    };\r\n\r\n    J2D.prototype.stop = function () {\r\n        this.scene.stop();\r\n        this.trigger('stop');\r\n    };\r\n\r\n    J2D.prototype.pause = function () {\r\n        if (this.data.io) this.data.io.flush();\r\n        this.data.pause = true;\r\n        this.element.addClass('pause');\r\n        this.trigger('pause');\r\n    };\r\n\r\n    J2D.prototype.resume = function () {\r\n        this.element.removeClass('pause').focus();\r\n        this.data.pause = false;\r\n        if (this.data.io) this.data.io.flush();\r\n        this.trigger('resume');\r\n    };\r\n    /** -GameEngine **/\r\n\r\n    /** +Scene **/\r\n    J2D.prototype.getSceneManager = function () {\r\n        return this.scene;\r\n    };\r\n    /** -Scene **/\r\n\r\n    /** +Layers **/\r\n    J2D.prototype.getLayersManager = function () {\r\n        return this.scene.layersManager;\r\n    };\r\n    /** -Layers **/\r\n\r\n    J2D.prototype.getFrameManager = function () {\r\n        return this.scene.frameManager;\r\n    };\r\n\r\n    J2D.prototype.on = function () {\r\n    };\r\n    J2D.prototype.once = function () {\r\n    };\r\n    J2D.prototype.off = function () {\r\n    };\r\n    J2D.prototype.trigger = function () {\r\n    };\r\n\r\n    /** Utils **/\r\n    J2D.util = {\r\n        disableSmoothing: function (context) {\r\n            var chrome = global.navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);\r\n            var version = chrome ? parseInt(chrome[2], 10) : false;\r\n\r\n            context['imageSmoothingEnabled'] = false;\r\n            context['mozImageSmoothingEnabled'] = false;\r\n            context['oImageSmoothingEnabled'] = false;\r\n            if (version && version <= 29) {\r\n                context['webkitImageSmoothingEnabled'] = false;\r\n            }\r\n            context['msImageSmoothingEnabled'] = false;\r\n        }\r\n    };\r\n    J2D.prototype.util = J2D.util;\r\n\r\n    /* ------------------------------ Plugin ------------------------------ */\r\n\r\n    (J2D.initPlugin = function () {\r\n        if (window.j2dPlugin !== undefined) return null;\r\n        window.j2dPlugin = {pluginInit: true};\r\n\r\n        $.fn.j2d = function (options) {\r\n            this.filter('div.canvas:not([guid])').each(function () {\r\n                var options = $.extend(true, {}, defaults, options);\r\n\r\n                var guid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n                    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n                    return v.toString(16);\r\n                });\r\n                options.id = guid;\r\n\r\n                $(this).attr('guid', guid);\r\n                var id = $(this).attr('id');\r\n                if (typeof id === 'undefined' || id === false) {\r\n                    $(this).attr('id', guid);\r\n                }\r\n                var tabIndex = $(this).attr('tabindex');\r\n                if (typeof tabIndex === 'undefined' || tabIndex === false) {\r\n                    $(this).attr('tabindex', '-1');\r\n                }\r\n                $(this).data('j2d', new J2D($(this), options)).addClass('j2d');\r\n                $(this).click().focus();\r\n            });\r\n\r\n            var $array = [];\r\n            this.filter('div.canvas[guid]').each(function () {\r\n                $array.push($(this).data('j2d'));\r\n            });\r\n\r\n            return (1 === $array.length) ? $(this).data('j2d') : $array;\r\n        };\r\n\r\n        var isFullScreen = function () {\r\n            //noinspection JSUnresolvedVariable\r\n            return !!(document.webkitFullscreenElement\r\n                || document.webkitCurrentFullScreenElement\r\n                || document.mozFullScreenElement\r\n                || document.msFullscreenElement\r\n            );\r\n        };\r\n\r\n        $(document).on('fullscreenchange webkitfullscreenchange mozfullscreenchange MSFullscreenChange', function () {\r\n            var fullScreen = isFullScreen();\r\n            if (!fullScreen) {\r\n                $('div.canvas[guid].active').data('j2d').scene.resizeToFullPage(fullScreen);\r\n                $('div.canvas[guid]:not(.active)').toggle(!fullScreen);\r\n            }\r\n        });\r\n\r\n        $(document).on('click', 'div.canvas[guid].pause', function () {\r\n            $(this).data('j2d').resume();\r\n\r\n            var current = this;\r\n            $('div.canvas[guid]:not(.pause-disable):not(:focus)').each(function () {\r\n                if (current !== this) $(this).removeClass('active').data('j2d').pause();\r\n            });\r\n            $('div.canvas[guid].active.pause-disable:not(:focus)').each(function () {\r\n                if (current !== this) $(this).removeClass('active');\r\n            });\r\n        });\r\n\r\n        $(document).on('click touch mouseenter', 'div.canvas[guid]:not(.resume-by-click):not(:focus)', function () {\r\n            $(this).addClass('active').focus().data('j2d').resume();\r\n\r\n            var current = this;\r\n            $('div.canvas[guid]:not(.pause-disable):not(:focus)').each(function () {\r\n                if (current !== this) $(this).removeClass('active').data('j2d').pause();\r\n            });\r\n            $('div.canvas[guid].active.pause-disable:not(:focus)').each(function () {\r\n                if (current !== this) $(this).removeClass('active');\r\n            });\r\n        });\r\n\r\n        $(window).on('focus', function () {\r\n            $('div.canvas[guid].active').each(function () {\r\n                $(this).data('j2d').resume();\r\n            });\r\n        }).on('blur', function () {\r\n            $('div.canvas[guid]').each(function () {\r\n                $(this).data('j2d').pause();\r\n            });\r\n        });\r\n\r\n        $(window).on('resize', function () {\r\n            $('div.canvas[guid]').each(function () {\r\n                $(this).data('j2d').device.onResize();\r\n            });\r\n            var fullScreen = isFullScreen();\r\n            if (fullScreen) {\r\n                $('div.canvas[guid].active').data('j2d').scene.resizeToFullPage(fullScreen);\r\n            }\r\n        });\r\n    })();\r\n\r\n    if (global.J2D === undefined) global.J2D = J2D;\r\n\r\n    return J2D;\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/FrameManager', ['utils/ArrayMap'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('utils/ArrayMap'));\r\n    } else {\r\n        factory(root.ArrayMap);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global,\r\n    /**\r\n     * @param {Function} ArrayMap\r\n     * @returns {FrameManager}\r\n     */\r\n    function (ArrayMap) {\r\n        \"use strict\";\r\n\r\n        var instance;\r\n        var engineStack = new ArrayMap(), dataStack = new ArrayMap();\r\n        var timestamp = 0;\r\n\r\n        var options = {\r\n            frameLimit: 60,\r\n            frameRun: false,\r\n            breakAnimationFrame: false\r\n        };\r\n\r\n        var requestAnimationFrame = (function () {\r\n            return global.requestAnimationFrame ||\r\n                global.webkitRequestAnimationFrame ||\r\n                global.mozRequestAnimationFrame ||\r\n                global.oRequestAnimationFrame ||\r\n                global.msRequestAnimationFrame ||\r\n                (function (callback) {\r\n                    if (!options.breakAnimationFrame) {\r\n                        if (timestamp >= Number.MAX_SAFE_INTEGER - 1) timestamp = 0;\r\n                        if (timestamp === 0) timestamp = Date.now();\r\n\r\n                        global.setTimeout(callback.bind(this, Date.now() - timestamp), 1000.0 / options.frameLimit);\r\n                    } else {\r\n                        options.breakAnimationFrame = false\r\n                    }\r\n                });\r\n        })();\r\n\r\n        var cancelAnimationFrame = (function () {\r\n            timestamp = 0;\r\n            return global.cancelAnimationFrame ||\r\n                global.webkitCancelAnimationFrame ||\r\n                global.mozCancelAnimationFrame ||\r\n                global.oCancelAnimationFrame ||\r\n                global.msCancelAnimationFrame;\r\n        })();\r\n\r\n\r\n        var FrameManager = function () {\r\n        };\r\n\r\n        FrameManager.prototype.start = function (name, engine, params) {\r\n            var data = {\r\n                j2d: null,\r\n                frameLimit: options.frameLimit,\r\n                now: 0,\r\n                deltaTime: 0,\r\n                lastTime: 0,\r\n                sceneStartTime: 0,\r\n                sceneSkipTime: 0,\r\n\r\n                asyncUpdate: true,\r\n                asyncRender: true\r\n            };\r\n\r\n            if (params.frameLimit !== undefined && params.frameLimit <= options.frameLimit) data.frameLimit = params.frameLimit;\r\n\r\n            if (params.j2d !== undefined) {\r\n                data.j2d = params.j2d;\r\n            } else {\r\n                throw 'j2d not transported to FrameManager.start(id, engine, {... j2d: j2d ...});';\r\n            }\r\n\r\n            data.interval = 1000.0 / data.frameLimit;\r\n            data.lastTime = Date.now();\r\n\r\n            engineStack.add(name, engine);\r\n            dataStack.add(name, data);\r\n            if (!options.frameRun) this.pulse();\r\n        };\r\n\r\n        FrameManager.prototype.stop = function (name) {\r\n            engineStack.remove(name);\r\n            dataStack.remove(name);\r\n        };\r\n\r\n        FrameManager.prototype.pulse = function () {\r\n            this.runMainLoop(Date.now());\r\n        };\r\n\r\n        FrameManager.prototype.runMainLoop = function (timestamp, frameManager) {\r\n            if (frameManager === undefined) frameManager = this;\r\n\r\n            if (engineStack.length <= 0 && options.frameRun) {\r\n                options.breakAnimationFrame = true;\r\n                options.frameRun = false;\r\n                return cancelAnimationFrame(this.runMainLoop);\r\n            }\r\n            options.frameRun = true;\r\n\r\n            requestAnimationFrame(function (timestamp) {\r\n                frameManager.runMainLoop(timestamp, frameManager);\r\n            });\r\n\r\n            engineStack.each(function (index) {\r\n                if (engineStack.hasOwnProperty(index) && 'object' === typeof engineStack[index]) {\r\n                    var engine = engineStack[index];\r\n                    var data = dataStack[index];\r\n\r\n                    data.now = Date.now();\r\n                    data.deltaTime = (data.now - data.lastTime) / 100.0;\r\n\r\n                    if (data.j2d.data.io && !data.j2d.data.pause) data.j2d.data.io.update();\r\n\r\n                    if (!data.j2d.data.pause) {\r\n                        if (engine.update !== undefined && 'function' === typeof engine.update) {\r\n                            if (data.asyncUpdate) {\r\n                                setTimeout(engine.update.bind(this, timestamp, data), 0);\r\n                            } else {\r\n                                engine.update(timestamp, data);\r\n                            }\r\n                        }\r\n\r\n                        if ((data.deltaTime * 100.0) > data.interval) {\r\n                            data.lastTime = data.now - ((data.deltaTime * 100.0) % data.interval);\r\n\r\n                            if (engine.render !== undefined && 'function' === typeof engine.render) {\r\n                                if (data.asyncRender) {\r\n                                    setTimeout(engine.render.bind(this, timestamp, data), 0);\r\n                                } else {\r\n                                    engine.render(timestamp, data);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    if (data.j2d.data.io && !data.j2d.data.pause) data.j2d.data.io.clear();\r\n                }\r\n            });\r\n        };\r\n\r\n        FrameManager.prototype.setDefaultFrameLimit = function (frameLimit) {\r\n            if (frameLimit <= 60 && frameLimit > 0) {\r\n                options.frameLimit = frameLimit\r\n            }\r\n        };\r\n\r\n        /**\r\n         * @singleton\r\n         * @returns {FrameManager}\r\n         */\r\n        FrameManager.Init = function () {\r\n            if (global.J2D !== undefined) {\r\n                return global.instanceFrameManager || (global.instanceFrameManager = new FrameManager());\r\n            } else {\r\n                return instance || (instance = new FrameManager());\r\n            }\r\n        };\r\n\r\n        if (global.J2D === undefined) global.FrameManager = FrameManager;\r\n\r\n        return FrameManager;\r\n    }\r\n));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/LayersManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var LayersManager = function (j2d) {\r\n        this.j2d = j2d;\r\n        this.list = {};\r\n    };\r\n\r\n    if (global.J2D !== undefined) global.LayersManager = LayersManager;\r\n    return LayersManager;\r\n}));","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n/*\r\n * TODO:: global layer collection\r\n * TODO:: render\r\n *\r\n * TODO:: GameStateManager to Scene\r\n * TODO:: ViewportManager\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/SceneManager', [\r\n            'jquery',\r\n            'core/WebGL2D',\r\n            'core/FrameManager',\r\n            'core/LayersManager'\r\n        ], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(\r\n            require('jquery'),\r\n            require('core/WebGL2D'),\r\n            require('core/FrameManager'),\r\n            require('core/LayersManager')\r\n        );\r\n    } else {\r\n        factory(\r\n            root.jQuery,\r\n            root.WebGL2D,\r\n            root.FrameManager,\r\n            root.LayersManager\r\n        );\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function ($, WebGL2D, FrameManager, LayersManager) {\r\n    \"use strict\";\r\n\r\n    var defaults = {\r\n        width: 0,\r\n        height: 0,\r\n\r\n        originalWidth: 0,\r\n        originalHeight: 0,\r\n        originalMargin: 0,\r\n\r\n        visible: true,\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        zIndex: 1000,\r\n        opacity: 1.0,\r\n        backgroundColor: false,\r\n\r\n        frameLimit: 60,\r\n\r\n        enableFullScreen: false,\r\n\r\n        viewport: {x: 0, y: 0},\r\n\r\n        // TODO::\r\n        gameState: function () {\r\n        }\r\n    };\r\n\r\n    var SceneManager = function (j2d) {\r\n        var sceneManager = this;\r\n        this.j2d = j2d;\r\n\r\n        this.canvas = null;\r\n        this.context = null;\r\n\r\n        /** @type {FrameManager} */\r\n        this.frameManager = FrameManager.Init();\r\n        this.layersManager = new LayersManager(this.j2d);\r\n\r\n        Object.defineProperty(this, 'backgroundColor', {\r\n            get: function () {\r\n                return sceneManager.data.backgroundColor;\r\n            },\r\n            set: function (value) {\r\n                sceneManager.data.backgroundColor = value;\r\n                sceneManager.context.fillStyle = value;\r\n                sceneManager.context.fillRect(0, 0, sceneManager.data.width, sceneManager.data.height);\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(this, 'opacity', {\r\n            get: function () {\r\n                return sceneManager.data.opacity;\r\n            },\r\n            set: function (value) {\r\n                sceneManager.data.opacity = value;\r\n                sceneManager.canvas.style.opacity = value;\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(this, 'visible', {\r\n            get: function () {\r\n                return sceneManager.data.visible;\r\n            },\r\n            set: function (value) {\r\n                sceneManager.data.visible = !!value;\r\n                sceneManager.canvas.style.display = (!!value) ? 'block' : 'none';\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(this, 'zIndex', {\r\n            get: function () {\r\n                return 1000 - sceneManager.data.zIndex;\r\n            },\r\n            set: function (value) {\r\n                sceneManager.data.zIndex = 1000 + value;\r\n                sceneManager.canvas.style.zIndex = 1000 + value;\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(this, 'viewport', {\r\n            get: function () {\r\n                return sceneManager.data.viewport;\r\n            },\r\n            set: function () {\r\n            }\r\n        });\r\n    };\r\n\r\n    SceneManager.prototype.init = function (options) {\r\n        this.data = $.extend(true, {}, defaults, options);\r\n\r\n        this.j2d.trigger('beforeInit');\r\n\r\n        this.data.originalWidth = this.data.width;\r\n        this.data.originalHeight = this.data.height;\r\n        this.data.originalMargin = this.j2d.element.css('margin');\r\n\r\n        this.j2d.element.width(this.data.width).height(this.data.height);\r\n\r\n        this.initCanvas();\r\n\r\n        this.j2d.trigger('afterInit');\r\n\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.initCanvas = function () {\r\n        this.canvas = document.createElement('canvas');\r\n\r\n        this.canvas.width = this.data.width;\r\n        this.canvas.height = this.data.height;\r\n        this.canvas.style.zIndex = this.data.zIndex;\r\n        this.canvas.style.position = this.data.position;\r\n\r\n        this.canvas.style.left = this.data.left;\r\n        this.canvas.style.top = this.data.top;\r\n\r\n        if (this.j2d.data.webGL) {\r\n            WebGL2D.enable(this.canvas);\r\n            this.context = this.canvas.getContext('WebGL-2d');\r\n        } else {\r\n            this.context = this.canvas.getContext('2d');\r\n        }\r\n\r\n        if (!this.j2d.data.smoothing) {\r\n            this.j2d.util.disableSmoothing(this.context);\r\n        }\r\n\r\n        this.context.shadowColor = 'rgba(0,0,0,0)';\r\n        if (this.data.backgroundColor) this.backgroundColor = this.data.backgroundColor;\r\n        if (this.data.opacity) this.opacity = this.data.opacity;\r\n        if (this.data.visible) this.visible = this.data.visible;\r\n        if (this.data.zIndex) this.zIndex = 1000 - this.data.zIndex;\r\n\r\n        this.j2d.element.append(this.canvas);\r\n    };\r\n\r\n    SceneManager.prototype.clear = function (pos, size) {\r\n        if (pos !== undefined && size !== undefined) {\r\n            this.context.clearRect(pos.x - this.viewport.x, pos.y - this.viewport.y, size.x, size.y);\r\n        } else {\r\n            this.context.clearRect(0, 0, this.data.width, this.data.height);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.resize = function (width, height) {\r\n        this.canvas.width = this.data.width = width;\r\n        this.canvas.height = this.data.height = height;\r\n\r\n        if (this.data.backgroundColor) {\r\n            this.context.save();\r\n\r\n            this.clear();\r\n            this.backgroundColor = this.data.backgroundColor;\r\n\r\n            this.context.restore();\r\n        }\r\n        if (!this.j2d.data.smoothing) {\r\n            this.j2d.util.disableSmoothing(this.context);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.setGameState = function (gameState) {\r\n        this.data.gameState = gameState || function () {\r\n                console.warn('Error in game state function!');\r\n            };\r\n\r\n        this.frameManager.stop(this.j2d.data.id);\r\n        this.frameManager.start(this.j2d.data.id, this.data.gameState, {\r\n            j2d: this.j2d,\r\n            frameLimit: this.data.frameLimit\r\n        });\r\n\r\n        this.j2d.trigger('changedGameState');\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.async = function (callback, data) {\r\n        setTimeout(callback.call(callback, data), 0);\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.start = function () {\r\n        if (this.j2d.data.io) {\r\n            this.j2d.data.io.init();\r\n        }\r\n        this.j2d.trigger('beforeStart');\r\n\r\n        this.frameManager.stop(this.j2d.data.id);\r\n        this.frameManager.start(this.j2d.data.id, this.data.gameState, {\r\n            j2d: this.j2d,\r\n            frameLimit: this.data.frameLimit\r\n        });\r\n\r\n        this.j2d.trigger('afterStart');\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.stop = function () {\r\n        this.frameManager.stop(this.j2d.data.id);\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.fullScreen = function (fullscreen) {\r\n        var element = document.getElementById(this.j2d.element.attr('id'));\r\n\r\n        if (undefined === element.requestFullscreen) {\r\n            //noinspection JSUnresolvedVariable\r\n            element.requestFullscreen = element.webkitRequestFullscreen\r\n                || element.webkitRequestFullScreen\r\n                || element.mozRequestFullScreen\r\n                || element.msRequestFullscreen;\r\n        }\r\n\r\n        if (undefined === document.exitFullscreen) {\r\n            //noinspection JSUnresolvedVariable\r\n            document.exitFullscreen = document.webkitExitFullscreen\r\n                || document.webkitCancelFullScreen\r\n                || document.mozCancelFullScreen\r\n                || document.msExitFullscreen;\r\n        }\r\n        if (fullscreen) {\r\n            element.requestFullscreen();\r\n        } else {\r\n            document.exitFullscreen();\r\n        }\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.resizeToFullPage = function (fullscreen) {\r\n        $('div.canvas[guid]:not(.active)').toggle(fullscreen);\r\n\r\n        var j2d = this.j2d;\r\n        var sceneManager = this;\r\n\r\n        if (fullscreen) {\r\n            sceneManager.data.originalWidth = sceneManager.data.width;\r\n            sceneManager.data.originalHeight = sceneManager.data.height;\r\n\r\n            sceneManager.resize(j2d.device.width, j2d.device.height);\r\n            sceneManager.data.enableFullscreen = true;\r\n\r\n            j2d.element\r\n                .width(j2d.device.width)\r\n                .height(j2d.device.height)\r\n                .css('margin', 0);\r\n        } else {\r\n            sceneManager.resize(sceneManager.data.originalWidth, sceneManager.data.originalHeight);\r\n            sceneManager.data.enableFullscreen = false;\r\n\r\n            j2d.element\r\n                .width(sceneManager.data.originalWidth)\r\n                .height(sceneManager.data.originalHeight)\r\n                .css('margin', sceneManager.data.originalMargin);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.toggleFullScreen = function (j2d, data) {\r\n        if (data === undefined) {\r\n            data = {fullscreen: null};\r\n        }\r\n        if (!j2d.scene.enableFullscreen || data.fullscreen) {\r\n            j2d.scene.fullScreen(true);\r\n        } else {\r\n            j2d.scene.fullScreen(false);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    //SceneManager.prototype.getLayer = function () {\r\n    //    return this.parent.layers.getLayer('sceneNode');\r\n    //};\r\n\r\n    //// Устанавливает позицию для камеры\r\n    //SceneManager.prototype.setViewPosition = function (position) {\r\n    //    this.parent.scene.viewport.x = position.x - Math.ceil(this.parent.scene.width / 2);\r\n    //    this.parent.scene.viewport.y = position.y - Math.ceil(this.parent.scene.height / 2);\r\n    //};\r\n    //\r\n    ////! Движение \"камеры\" вслед за объектом\r\n    //SceneManager.prototype.setViewFocus = function (id, offset) {\r\n    //    this.parent.scene.viewport.x = id.getPosition().x - Math.ceil(this.parent.scene.width / 2) + (offset ? offset.x : 0);\r\n    //    this.parent.scene.viewport.y = id.getPosition().y - Math.ceil(this.parent.scene.height / 2) + (offset ? offset.y : 0);\r\n    //};\r\n    //\r\n    ////! Движение \"камеры\"\r\n    //SceneManager.prototype.viewMove = function (position) {\r\n    //    this.parent.scene.viewport.x += position.x;\r\n    //    this.parent.scene.viewport.y += position.y;\r\n    //};\r\n\r\n    if (global.J2D !== undefined) global.SceneManager = SceneManager;\r\n    return SceneManager;\r\n}));","/**\r\n *  WebGL-2D.js - HTML5 Canvas2D API in a WebGL context\r\n *\r\n *  Created by Corban Brook <corbanbrook@gmail.com> on 2011-03-02.\r\n *  Amended to by Bobby Richter <secretrobotron@gmail.com> on 2011-03-03\r\n *  CubicVR.js by Charles Cliffe <cj@cubicproductions.com> on 2011-03-03\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/WebGL2D', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    // Vector & Matrix libraries from CubicVR.js\r\n    var M_PI = 3.1415926535897932384626433832795028841968;\r\n    var M_TWO_PI = 2.0 * M_PI;\r\n    var M_HALF_PI = M_PI / 2.0;\r\n\r\n    function isPOT(value) {\r\n        return value > 0 && ((value - 1) & value) === 0;\r\n    }\r\n\r\n    var vec3 = {\r\n        length: function (pt) {\r\n            return Math.sqrt(pt[0] * pt[0] + pt[1] * pt[1] + pt[2] * pt[2]);\r\n        },\r\n\r\n        normalize: function (pt) {\r\n            var d = Math.sqrt((pt[0] * pt[0]) + (pt[1] * pt[1]) + (pt[2] * pt[2]));\r\n            if (d === 0) {\r\n                return [0, 0, 0];\r\n            }\r\n            return [pt[0] / d, pt[1] / d, pt[2] / d];\r\n        },\r\n\r\n        dot: function (v1, v2) {\r\n            return v1[0] * v2[0] + v1[1] * v2[1] + v1[2] * v2[2];\r\n        },\r\n\r\n        angle: function (v1, v2) {\r\n            return Math.acos((v1[0] * v2[0] + v1[1] * v2[1] + v1[2] * v2[2]) / (Math.sqrt(v1[0] * v1[0] + v1[1] * v1[1] + v1[2] * v1[2]) * Math.sqrt(v2[0] * v2[0] + v2[1] * v2[1] + v2[2] * v2[2])));\r\n        },\r\n\r\n        cross: function (vectA, vectB) {\r\n            return [vectA[1] * vectB[2] - vectB[1] * vectA[2], vectA[2] * vectB[0] - vectB[2] * vectA[0], vectA[0] * vectB[1] - vectB[0] * vectA[1]];\r\n        },\r\n\r\n        multiply: function (vectA, constB) {\r\n            return [vectA[0] * constB, vectA[1] * constB, vectA[2] * constB];\r\n        },\r\n\r\n        add: function (vectA, vectB) {\r\n            return [vectA[0] + vectB[0], vectA[1] + vectB[1], vectA[2] + vectB[2]];\r\n        },\r\n\r\n        subtract: function (vectA, vectB) {\r\n            return [vectA[0] - vectB[0], vectA[1] - vectB[1], vectA[2] - vectB[2]];\r\n        },\r\n\r\n        equal: function (a, b) {\r\n            var epsilon = 0.0000001;\r\n            if ((a === undefined) && (b === undefined)) {\r\n                return true;\r\n            }\r\n            if ((a === undefined) || (b === undefined)) {\r\n                return false;\r\n            }\r\n            return (Math.abs(a[0] - b[0]) < epsilon && Math.abs(a[1] - b[1]) < epsilon && Math.abs(a[2] - b[2]) < epsilon);\r\n        }\r\n    };\r\n\r\n    var mat3 = {\r\n        identity: [1.0, 0.0, 0.0,\r\n            0.0, 1.0, 0.0,\r\n            0.0, 0.0, 1.0],\r\n\r\n        multiply: function (m1, m2) {\r\n            var m10 = m1[0], m11 = m1[1], m12 = m1[2], m13 = m1[3], m14 = m1[4], m15 = m1[5], m16 = m1[6], m17 = m1[7], m18 = m1[8],\r\n                m20 = m2[0], m21 = m2[1], m22 = m2[2], m23 = m2[3], m24 = m2[4], m25 = m2[5], m26 = m2[6], m27 = m2[7], m28 = m2[8];\r\n\r\n            m2[0] = m20 * m10 + m23 * m11 + m26 * m12;\r\n            m2[1] = m21 * m10 + m24 * m11 + m27 * m12;\r\n            m2[2] = m22 * m10 + m25 * m11 + m28 * m12;\r\n            m2[3] = m20 * m13 + m23 * m14 + m26 * m15;\r\n            m2[4] = m21 * m13 + m24 * m14 + m27 * m15;\r\n            m2[5] = m22 * m13 + m25 * m14 + m28 * m15;\r\n            m2[6] = m20 * m16 + m23 * m17 + m26 * m18;\r\n            m2[7] = m21 * m16 + m24 * m17 + m27 * m18;\r\n            m2[8] = m22 * m16 + m25 * m17 + m28 * m18;\r\n        },\r\n\r\n        vec2_multiply: function (m1, m2) {\r\n            var mOut = [];\r\n            mOut[0] = m2[0] * m1[0] + m2[3] * m1[1] + m2[6];\r\n            mOut[1] = m2[1] * m1[0] + m2[4] * m1[1] + m2[7];\r\n            return mOut;\r\n        },\r\n\r\n        transpose: function (m) {\r\n            return [m[0], m[3], m[6], m[1], m[4], m[7], m[2], m[5], m[8]];\r\n        }\r\n    }; //mat3\r\n\r\n    // Transform library from CubicVR.js\r\n    function Transform(mat) {\r\n        return this.clearStack(mat);\r\n    }\r\n\r\n    var STACK_DEPTH_LIMIT = 16;\r\n\r\n    Transform.prototype.clearStack = function (init_mat) {\r\n        this.m_stack = [];\r\n        this.m_cache = [];\r\n        this.c_stack = 0;\r\n        this.valid = 0;\r\n        this.result = null;\r\n\r\n        for (var i = 0; i < STACK_DEPTH_LIMIT; i++) {\r\n            this.m_stack[i] = this.getIdentity();\r\n        }\r\n\r\n        if (init_mat !== undefined) {\r\n            this.m_stack[0] = init_mat;\r\n        } else {\r\n            this.setIdentity();\r\n        }\r\n    }; //clearStack\r\n\r\n    Transform.prototype.setIdentity = function () {\r\n        this.m_stack[this.c_stack] = this.getIdentity();\r\n        if (this.valid === this.c_stack && this.c_stack) {\r\n            this.valid--;\r\n        }\r\n    };\r\n\r\n    Transform.prototype.getIdentity = function () {\r\n        return [1.0, 0.0, 0.0,\r\n            0.0, 1.0, 0.0,\r\n            0.0, 0.0, 1.0];\r\n    };\r\n\r\n    Transform.prototype.getResult = function () {\r\n        if (!this.c_stack) {\r\n            return this.m_stack[0];\r\n        }\r\n\r\n        var m = mat3.identity;\r\n\r\n        if (this.valid > this.c_stack - 1) {\r\n            this.valid = this.c_stack - 1;\r\n        }\r\n\r\n        for (var i = this.valid; i < this.c_stack + 1; i++) {\r\n            m = mat3.multiply(this.m_stack[i], m);\r\n            this.m_cache[i] = m;\r\n        }\r\n\r\n        this.valid = this.c_stack - 1;\r\n\r\n        this.result = this.m_cache[this.c_stack];\r\n\r\n        return this.result;\r\n    };\r\n\r\n    Transform.prototype.pushMatrix = function () {\r\n        this.c_stack++;\r\n        this.m_stack[this.c_stack] = this.getIdentity();\r\n    };\r\n\r\n    Transform.prototype.popMatrix = function () {\r\n        if (this.c_stack === 0) {\r\n            return;\r\n        }\r\n        this.c_stack--;\r\n    };\r\n\r\n    var translateMatrix = Transform.prototype.getIdentity();\r\n\r\n    Transform.prototype.translate = function (x, y) {\r\n        translateMatrix[6] = x;\r\n        translateMatrix[7] = y;\r\n\r\n        mat3.multiply(translateMatrix, this.m_stack[this.c_stack]);\r\n\r\n        /*\r\n         if (this.valid === this.c_stack && this.c_stack) {\r\n         this.valid--;\r\n         }\r\n         */\r\n    };\r\n\r\n    var trMatrix = Transform.prototype.getIdentity();\r\n\r\n    Transform.prototype.tr = function (a, b, c, d, e, f) {\r\n        trMatrix[0] = a;\r\n        trMatrix[1] = b;\r\n        trMatrix[3] = c;\r\n        trMatrix[4] = d;\r\n        trMatrix[6] = e;\r\n        trMatrix[7] = f;\r\n\r\n        mat3.multiply(trMatrix, this.m_stack[this.c_stack]);\r\n    };\r\n\r\n    var scaleMatrix = Transform.prototype.getIdentity();\r\n\r\n    Transform.prototype.scale = function (x, y) {\r\n        scaleMatrix[0] = x;\r\n        scaleMatrix[4] = y;\r\n\r\n        mat3.multiply(scaleMatrix, this.m_stack[this.c_stack]);\r\n\r\n        /*\r\n         if (this.valid === this.c_stack && this.c_stack) {\r\n         this.valid--;\r\n         }\r\n         */\r\n    };\r\n\r\n    var rotateMatrix = Transform.prototype.getIdentity();\r\n\r\n    Transform.prototype.rotate = function (ang) {\r\n        var sAng, cAng;\r\n\r\n        sAng = Math.sin(-ang);\r\n        cAng = Math.cos(-ang);\r\n\r\n        rotateMatrix[0] = cAng;\r\n        rotateMatrix[3] = sAng;\r\n        rotateMatrix[1] = -sAng;\r\n        rotateMatrix[4] = cAng;\r\n\r\n        mat3.multiply(rotateMatrix, this.m_stack[this.c_stack]);\r\n\r\n        /*\r\n         if (this.valid === this.c_stack && this.c_stack) {\r\n         this.valid--;\r\n         }\r\n         */\r\n    };\r\n\r\n    var WebGL2D = global.WebGL2D = function WebGL2D(canvas, options) {\r\n        this.canvas = canvas;\r\n        this.options = options || {};\r\n        this.gl = undefined;\r\n        this.fs = undefined;\r\n        this.vs = undefined;\r\n        this.shaderProgram = undefined;\r\n        this.transform = new Transform();\r\n        this.shaderPool = [];\r\n        this.maxTextureSize = undefined;\r\n\r\n        // Save a reference to the WebGL2D instance on the canvas object\r\n        canvas.gl2d = this;\r\n\r\n        // Store getContext function for later use\r\n        canvas.$getContext = canvas.getContext;\r\n\r\n        // Override getContext function with \"webgl-2d\" enabled version\r\n        canvas.getContext = (function (gl2d) {\r\n            return function (context) {\r\n                if ((gl2d.options.force || context === \"WebGL-2d\") && !(canvas.width === 0 || canvas.height === 0)) {\r\n                    if (gl2d.gl) {\r\n                        return gl2d.gl;\r\n                    }\r\n\r\n                    var gl = gl2d.gl = gl2d.canvas.$getContext(\"experimental-webgl\");\r\n\r\n                    // If we failed to get a WebGL context, return a normal 2D context instead.\r\n                    if ((typeof (gl) === \"undefined\") || (gl === null)) {\r\n                        return gl2d.canvas.$getContext(\"2d\");\r\n                    }\r\n\r\n                    gl2d.initShaders();\r\n                    gl2d.initBuffers();\r\n\r\n                    // Append Canvas2D API features to the WebGL context\r\n                    gl2d.initCanvas2DAPI();\r\n\r\n                    // Disables writing to dest-alpha\r\n                    // gl.colorMask(1,1,1,0)\r\n\r\n                    // Depth options\r\n                    //gl.enable(gl.DEPTH_TEST);\r\n                    //gl.depthFunc(gl.LEQUAL);\r\n\r\n                    // Blending options\r\n                    // See http://stackoverflow.com/questions/11521035/blending-with-html-background-in-webgl\r\n                    gl.enable(gl.BLEND);\r\n                    gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n\r\n                    gl2d.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\r\n\r\n                    return gl;\r\n                } else {\r\n                    return gl2d.canvas.$getContext(context);\r\n                }\r\n            };\r\n        }(this));\r\n\r\n        this.postInit();\r\n    };\r\n\r\n    // Enables WebGL2D on your canvas\r\n    WebGL2D.enable = function (canvas, options) {\r\n        return canvas.gl2d || new WebGL2D(canvas, options);\r\n    };\r\n\r\n\r\n    // Shader Pool BitMasks, i.e. sMask = (shaderMask.texture+shaderMask.stroke)\r\n    var shaderMask = {\r\n        texture: 1,\r\n        crop: 2,\r\n        path: 4\r\n    };\r\n\r\n\r\n    // Fragment shader source\r\n    WebGL2D.prototype.getFragmentShaderSource = function getFragmentShaderSource(sMask) {\r\n        var fsSource = [\r\n            \"#ifdef GL_ES\",\r\n            \"precision highp float;\",\r\n            \"#endif\",\r\n\r\n            \"#define hasTexture \" + ((sMask & shaderMask.texture) ? \"1\" : \"0\"),\r\n            \"#define hasCrop \" + ((sMask & shaderMask.crop) ? \"1\" : \"0\"),\r\n\r\n            \"varying vec4 vColor;\",\r\n\r\n            \"#if hasTexture\",\r\n            \"varying vec2 vTextureCoord;\",\r\n            \"uniform sampler2D uSampler;\",\r\n            \"#if hasCrop\",\r\n            \"uniform vec4 uCropSource;\",\r\n            \"#endif\",\r\n            \"#endif\",\r\n\r\n            \"void main(void) {\",\r\n            \"#if hasTexture\",\r\n            \"#if hasCrop\",\r\n            \"gl_FragColor = texture2D(uSampler, vec2(vTextureCoord.x * uCropSource.z, vTextureCoord.y * uCropSource.w) + uCropSource.xy);\",\r\n            \"#else\",\r\n            \"gl_FragColor = texture2D(uSampler, vTextureCoord);\",\r\n            \"#endif\",\r\n            \"#else\",\r\n            \"gl_FragColor = vColor;\",\r\n            \"#endif\",\r\n            \"}\"\r\n        ].join(\"\\n\");\r\n\r\n        return fsSource;\r\n    };\r\n\r\n    WebGL2D.prototype.getVertexShaderSource = function getVertexShaderSource(stackDepth, sMask) {\r\n        stackDepth = stackDepth || 1;\r\n\r\n        var vsSource = [\r\n            \"#define hasTexture \" + ((sMask & shaderMask.texture) ? \"1\" : \"0\"),\r\n            \"attribute vec4 aVertexPosition;\",\r\n\r\n            \"#if hasTexture\",\r\n            \"varying vec2 vTextureCoord;\",\r\n            \"#endif\",\r\n\r\n            \"uniform vec4 uColor;\",\r\n            \"uniform mat3 uTransforms[\" + stackDepth + \"];\",\r\n\r\n            \"varying vec4 vColor;\",\r\n\r\n            \"uniform mat4 pMatrix;\",\r\n\r\n            \"mat3 crunchStack(void) {\",\r\n            \"mat3 result = uTransforms[0];\",\r\n            \"for (int i = 1; i < \" + stackDepth + \"; ++i) {\",\r\n            \"result = uTransforms[i] * result;\",\r\n            \"}\",\r\n            \"return result;\",\r\n            \"}\",\r\n\r\n            \"void main(void) {\",\r\n            \"vec3 position = crunchStack() * vec3(aVertexPosition.x, aVertexPosition.y, 1.0);\",\r\n            \"gl_Position = pMatrix * vec4(position, 1.0);\",\r\n            \"vColor = uColor;\",\r\n            \"#if hasTexture\",\r\n            \"vTextureCoord = aVertexPosition.zw;\",\r\n            \"#endif\",\r\n            \"}\"\r\n        ].join(\"\\n\");\r\n        return vsSource;\r\n    };\r\n\r\n\r\n    // Initialize fragment and vertex shaders\r\n    WebGL2D.prototype.initShaders = function initShaders(transformStackDepth, sMask) {\r\n        var gl = this.gl;\r\n\r\n        transformStackDepth = transformStackDepth || 1;\r\n        sMask = sMask || 0;\r\n        var storedShader = this.shaderPool[transformStackDepth];\r\n\r\n        if (!storedShader) {\r\n            storedShader = this.shaderPool[transformStackDepth] = [];\r\n        }\r\n        storedShader = storedShader[sMask];\r\n\r\n        if (storedShader) {\r\n            gl.useProgram(storedShader);\r\n            this.shaderProgram = storedShader;\r\n        } else {\r\n            var fs = this.fs = gl.createShader(gl.FRAGMENT_SHADER);\r\n            gl.shaderSource(this.fs, this.getFragmentShaderSource(sMask));\r\n            gl.compileShader(this.fs);\r\n\r\n            if (!gl.getShaderParameter(this.fs, gl.COMPILE_STATUS)) {\r\n                throw \"fragment shader error: \" + gl.getShaderInfoLog(this.fs);\r\n            }\r\n\r\n            var vs = this.vs = gl.createShader(gl.VERTEX_SHADER);\r\n            gl.shaderSource(this.vs, this.getVertexShaderSource(transformStackDepth, sMask));\r\n            gl.compileShader(this.vs);\r\n\r\n            if (!gl.getShaderParameter(this.vs, gl.COMPILE_STATUS)) {\r\n                throw \"vertex shader error: \" + gl.getShaderInfoLog(this.vs);\r\n            }\r\n\r\n\r\n            var shaderProgram = this.shaderProgram = gl.createProgram();\r\n            shaderProgram.stackDepth = transformStackDepth;\r\n            gl.attachShader(shaderProgram, fs);\r\n            gl.attachShader(shaderProgram, vs);\r\n            gl.linkProgram(shaderProgram);\r\n\r\n            if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\r\n                throw \"Could not initialise shaders.\";\r\n            }\r\n\r\n            gl.useProgram(shaderProgram);\r\n\r\n            shaderProgram.vertexPositionAttribute = gl.getAttribLocation(shaderProgram, \"aVertexPosition\");\r\n            gl.enableVertexAttribArray(shaderProgram.vertexPositionAttribute);\r\n\r\n            shaderProgram.uColor = gl.getUniformLocation(shaderProgram, 'uColor');\r\n            shaderProgram.uSampler = gl.getUniformLocation(shaderProgram, 'uSampler');\r\n            shaderProgram.uCropSource = gl.getUniformLocation(shaderProgram, 'uCropSource');\r\n\r\n            shaderProgram.pMatrix = gl.getUniformLocation(shaderProgram, 'pMatrix');\r\n\r\n            shaderProgram.uTransforms = [];\r\n            for (var i = 0; i < transformStackDepth; ++i) {\r\n                shaderProgram.uTransforms[i] = gl.getUniformLocation(shaderProgram, 'uTransforms[' + i + ']');\r\n            } //for\r\n            this.shaderPool[transformStackDepth][sMask] = shaderProgram;\r\n        } //if\r\n\r\n        pMatrix[0] = 2 / this.canvas.width;\r\n        pMatrix[5] = -2 / this.canvas.height;\r\n\r\n        gl.uniformMatrix4fv(this.shaderProgram.pMatrix, false, pMatrix);\r\n\r\n        gl.viewport(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n        return this.shaderProgram;\r\n    };\r\n\r\n    // 2D Vertices and Texture UV coords\r\n    var rectVerts = new Float32Array([\r\n        0, 0, 0, 0,\r\n        0, 1, 0, 1,\r\n        1, 1, 1, 1,\r\n        1, 0, 1, 0\r\n    ]);\r\n\r\n    var pMatrix = new Float32Array(16);\r\n    pMatrix[10] = 1;\r\n    pMatrix[11] = 1;\r\n    pMatrix[12] = -1;\r\n    pMatrix[13] = 1;\r\n\r\n    WebGL2D.prototype.initBuffers = function initBuffers() {\r\n        var gl = this.gl;\r\n\r\n        gl.rectVertexPositionBuffer = gl.createBuffer();\r\n        gl.rectVertexColorBuffer = gl.createBuffer();\r\n\r\n        gl.pathVertexPositionBuffer = gl.createBuffer();\r\n        gl.pathVertexColorBuffer = gl.createBuffer();\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, gl.rectVertexPositionBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, rectVerts, gl.STATIC_DRAW);\r\n    };\r\n\r\n    // Maintains an array of all WebGL2D instances\r\n    WebGL2D.instances = [];\r\n\r\n    WebGL2D.prototype.postInit = function () {\r\n        WebGL2D.instances.push(this);\r\n    };\r\n\r\n    // Extends gl context with Canvas2D API\r\n    WebGL2D.prototype.initCanvas2DAPI = function initCanvas2DAPI() {\r\n        var gl2d = this,\r\n            gl = this.gl;\r\n\r\n\r\n        // Rendering Canvas for text fonts\r\n        var textCanvas = document.createElement(\"canvas\");\r\n        textCanvas.width = gl2d.canvas.width;\r\n        textCanvas.height = gl2d.canvas.height;\r\n        var textCtx = textCanvas.getContext(\"2d\");\r\n\r\n        var reRGBAColor = /^rgb(a)?\\(\\s*(-?[\\d]+)(%)?\\s*,\\s*(-?[\\d]+)(%)?\\s*,\\s*(-?[\\d]+)(%)?\\s*,?\\s*(-?[\\d\\.]+)?\\s*\\)$/;\r\n        var reHSLAColor = /^hsl(a)?\\(\\s*(-?[\\d\\.]+)\\s*,\\s*(-?[\\d\\.]+)%\\s*,\\s*(-?[\\d\\.]+)%\\s*,?\\s*(-?[\\d\\.]+)?\\s*\\)$/;\r\n        var reHex6Color = /^#([0-9A-Fa-f]{6})$/;\r\n        var reHex3Color = /^#([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])$/;\r\n\r\n        function hue2rgb(p, q, t) {\r\n            if (t < 0) t += 1;\r\n            if (t > 1) t -= 1;\r\n            if (t < 1 / 6) return p + (q - p) * 6 * t;\r\n            if (t < 1 / 2) return q;\r\n            if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\r\n            return p;\r\n        }\r\n\r\n        // http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n        function HSLAToRGBA(h, s, l, a) {\r\n            var r, g, b, p, q;\r\n\r\n            // Clamp and Normalize values\r\n            h = (((h % 360) + 360) % 360) / 360;\r\n            s = s > 100 ? 1 : s / 100;\r\n            s = s < 0 ? 0 : s;\r\n            l = l > 100 ? 1 : l / 100;\r\n            l = l < 0 ? 0 : l;\r\n\r\n            if (s == 0) {\r\n                r = g = b = l; // achromatic\r\n            } else {\r\n                q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n                p = 2 * l - q;\r\n\r\n                r = hue2rgb(p, q, h + 1 / 3);\r\n                g = hue2rgb(p, q, h);\r\n                b = hue2rgb(p, q, h - 1 / 3);\r\n            }\r\n\r\n            return [r, g, b, a];\r\n        }\r\n\r\n\r\n        // Converts rgb(a) color string to gl color vector\r\n        function colorStringToVec4(value) {\r\n            var result = [], match, channel, isPercent, hasAlpha, alphaChannel, sameType;\r\n\r\n            if ((match = reRGBAColor.exec(value))) {\r\n                hasAlpha = match[1], alphaChannel = parseFloat(match[8]);\r\n\r\n                if ((hasAlpha && isNaN(alphaChannel)) || (!hasAlpha && !isNaN(alphaChannel))) {\r\n                    return false;\r\n                }\r\n\r\n                sameType = match[3];\r\n\r\n                for (var i = 2; i < 8; i += 2) {\r\n                    channel = match[i], isPercent = match[i + 1];\r\n\r\n                    if (isPercent !== sameType) {\r\n                        return false;\r\n                    }\r\n\r\n                    // Clamp and normalize values\r\n                    if (isPercent) {\r\n                        channel = channel > 100 ? 1 : channel / 100;\r\n                        channel = channel < 0 ? 0 : channel;\r\n                    } else {\r\n                        channel = channel > 255 ? 1 : channel / 255;\r\n                        channel = channel < 0 ? 0 : channel;\r\n                    }\r\n\r\n                    result.push(channel);\r\n                }\r\n\r\n                result.push(hasAlpha ? alphaChannel : 1.0);\r\n            } else if ((match = reHSLAColor.exec(value))) {\r\n                hasAlpha = match[1], alphaChannel = parseFloat(match[5]);\r\n                result = HSLAToRGBA(match[2], match[3], match[4], parseFloat(hasAlpha && alphaChannel ? alphaChannel : 1.0));\r\n            } else if ((match = reHex6Color.exec(value))) {\r\n                var colorInt = parseInt(match[1], 16);\r\n                result = [((colorInt & 0xFF0000) >> 16) / 255, ((colorInt & 0x00FF00) >> 8) / 255, (colorInt & 0x0000FF) / 255, 1.0];\r\n            } else if ((match = reHex3Color.exec(value))) {\r\n                var hexString = \"#\" + [match[1], match[1], match[2], match[2], match[3], match[3]].join(\"\");\r\n                result = colorStringToVec4(hexString);\r\n            } else if (value.toLowerCase() in colorKeywords) {\r\n                result = colorStringToVec4(colorKeywords[value.toLowerCase()]);\r\n            } else if (value.toLowerCase() === \"transparent\") {\r\n                result = [0, 0, 0, 0];\r\n            } else {\r\n                // Color keywords not yet implemented, ie \"orange\", return hot pink\r\n                return false;\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        function colorVecToString(vec4) {\r\n            return \"rgba(\" + (vec4[0] * 255) + \", \" + (vec4[1] * 255) + \", \" + (vec4[2] * 255) + \", \" + parseFloat(vec4[3]) + \")\";\r\n        }\r\n\r\n        var colorKeywords = {\r\n            aliceblue: \"#f0f8ff\",\r\n            antiquewhite: \"#faebd7\",\r\n            aqua: \"#00ffff\",\r\n            aquamarine: \"#7fffd4\",\r\n            azure: \"#f0ffff\",\r\n            beige: \"#f5f5dc\",\r\n            bisque: \"#ffe4c4\",\r\n            black: \"#000000\",\r\n            blanchedalmond: \"#ffebcd\",\r\n            blue: \"#0000ff\",\r\n            blueviolet: \"#8a2be2\",\r\n            brown: \"#a52a2a\",\r\n            burlywood: \"#deb887\",\r\n            cadetblue: \"#5f9ea0\",\r\n            chartreuse: \"#7fff00\",\r\n            chocolate: \"#d2691e\",\r\n            coral: \"#ff7f50\",\r\n            cornflowerblue: \"#6495ed\",\r\n            cornsilk: \"#fff8dc\",\r\n            crimson: \"#dc143c\",\r\n            cyan: \"#00ffff\",\r\n            darkblue: \"#00008b\",\r\n            darkcyan: \"#008b8b\",\r\n            darkgoldenrod: \"#b8860b\",\r\n            darkgray: \"#a9a9a9\",\r\n            darkgreen: \"#006400\",\r\n            darkkhaki: \"#bdb76b\",\r\n            darkmagenta: \"#8b008b\",\r\n            darkolivegreen: \"#556b2f\",\r\n            darkorange: \"#ff8c00\",\r\n            darkorchid: \"#9932cc\",\r\n            darkred: \"#8b0000\",\r\n            darksalmon: \"#e9967a\",\r\n            darkseagreen: \"#8fbc8f\",\r\n            darkslateblue: \"#483d8b\",\r\n            darkslategray: \"#2f4f4f\",\r\n            darkturquoise: \"#00ced1\",\r\n            darkviolet: \"#9400d3\",\r\n            deeppink: \"#ff1493\",\r\n            deepskyblue: \"#00bfff\",\r\n            dimgray: \"#696969\",\r\n            dodgerblue: \"#1e90ff\",\r\n            firebrick: \"#b22222\",\r\n            floralwhite: \"#fffaf0\",\r\n            forestgreen: \"#228b22\",\r\n            fuchsia: \"#ff00ff\",\r\n            gainsboro: \"#dcdcdc\",\r\n            ghostwhite: \"#f8f8ff\",\r\n            gold: \"#ffd700\",\r\n            goldenrod: \"#daa520\",\r\n            gray: \"#808080\",\r\n            green: \"#008000\",\r\n            greenyellow: \"#adff2f\",\r\n            grey: \"#808080\",\r\n            honeydew: \"#f0fff0\",\r\n            hotpink: \"#ff69b4\",\r\n            indianred: \"#cd5c5c\",\r\n            indigo: \"#4b0082\",\r\n            ivory: \"#fffff0\",\r\n            khaki: \"#f0e68c\",\r\n            lavender: \"#e6e6fa\",\r\n            lavenderblush: \"#fff0f5\",\r\n            lawngreen: \"#7cfc00\",\r\n            lemonchiffon: \"#fffacd\",\r\n            lightblue: \"#add8e6\",\r\n            lightcoral: \"#f08080\",\r\n            lightcyan: \"#e0ffff\",\r\n            lightgoldenrodyellow: \"#fafad2\",\r\n            lightgrey: \"#d3d3d3\",\r\n            lightgreen: \"#90ee90\",\r\n            lightpink: \"#ffb6c1\",\r\n            lightsalmon: \"#ffa07a\",\r\n            lightseagreen: \"#20b2aa\",\r\n            lightskyblue: \"#87cefa\",\r\n            lightslategray: \"#778899\",\r\n            lightsteelblue: \"#b0c4de\",\r\n            lightyellow: \"#ffffe0\",\r\n            lime: \"#00ff00\",\r\n            limegreen: \"#32cd32\",\r\n            linen: \"#faf0e6\",\r\n            magenta: \"#ff00ff\",\r\n            maroon: \"#800000\",\r\n            mediumaquamarine: \"#66cdaa\",\r\n            mediumblue: \"#0000cd\",\r\n            mediumorchid: \"#ba55d3\",\r\n            mediumpurple: \"#9370d8\",\r\n            mediumseagreen: \"#3cb371\",\r\n            mediumslateblue: \"#7b68ee\",\r\n            mediumspringgreen: \"#00fa9a\",\r\n            mediumturquoise: \"#48d1cc\",\r\n            mediumvioletred: \"#c71585\",\r\n            midnightblue: \"#191970\",\r\n            mintcream: \"#f5fffa\",\r\n            mistyrose: \"#ffe4e1\",\r\n            moccasin: \"#ffe4b5\",\r\n            navajowhite: \"#ffdead\",\r\n            navy: \"#000080\",\r\n            oldlace: \"#fdf5e6\",\r\n            olive: \"#808000\",\r\n            olivedrab: \"#6b8e23\",\r\n            orange: \"#ffa500\",\r\n            orangered: \"#ff4500\",\r\n            orchid: \"#da70d6\",\r\n            palegoldenrod: \"#eee8aa\",\r\n            palegreen: \"#98fb98\",\r\n            paleturquoise: \"#afeeee\",\r\n            palevioletred: \"#d87093\",\r\n            papayawhip: \"#ffefd5\",\r\n            peachpuff: \"#ffdab9\",\r\n            peru: \"#cd853f\",\r\n            pink: \"#ffc0cb\",\r\n            plum: \"#dda0dd\",\r\n            powderblue: \"#b0e0e6\",\r\n            purple: \"#800080\",\r\n            red: \"#ff0000\",\r\n            rosybrown: \"#bc8f8f\",\r\n            royalblue: \"#4169e1\",\r\n            saddlebrown: \"#8b4513\",\r\n            salmon: \"#fa8072\",\r\n            sandybrown: \"#f4a460\",\r\n            seagreen: \"#2e8b57\",\r\n            seashell: \"#fff5ee\",\r\n            sienna: \"#a0522d\",\r\n            silver: \"#c0c0c0\",\r\n            skyblue: \"#87ceeb\",\r\n            slateblue: \"#6a5acd\",\r\n            slategray: \"#708090\",\r\n            snow: \"#fffafa\",\r\n            springgreen: \"#00ff7f\",\r\n            steelblue: \"#4682b4\",\r\n            tan: \"#d2b48c\",\r\n            teal: \"#008080\",\r\n            thistle: \"#d8bfd8\",\r\n            tomato: \"#ff6347\",\r\n            turquoise: \"#40e0d0\",\r\n            violet: \"#ee82ee\",\r\n            wheat: \"#f5deb3\",\r\n            white: \"#ffffff\",\r\n            whitesmoke: \"#f5f5f5\",\r\n            yellow: \"#ffff00\",\r\n            yellowgreen: \"#9acd32\"\r\n        };\r\n\r\n        // Maintain drawing state params during gl.save and gl.restore. see saveDrawState() and restoreDrawState()\r\n        var drawState = {}, drawStateStack = [];\r\n\r\n        // A fast simple shallow clone\r\n        function cloneObject(obj) {\r\n            var target = {};\r\n            for (var i in obj) {\r\n                if (obj.hasOwnProperty(i)) {\r\n                    target[i] = obj[i];\r\n                }\r\n            }\r\n            return target;\r\n        }\r\n\r\n        function saveDrawState() {\r\n            var bakedDrawState = {\r\n                fillStyle: [drawState.fillStyle[0], drawState.fillStyle[1], drawState.fillStyle[2], drawState.fillStyle[3]],\r\n                strokeStyle: [drawState.strokeStyle[0], drawState.strokeStyle[1], drawState.strokeStyle[2], drawState.strokeStyle[3]],\r\n                globalAlpha: drawState.globalAlpha,\r\n                globalCompositeOperation: drawState.globalCompositeOperation,\r\n                lineCap: drawState.lineCap,\r\n                lineJoin: drawState.lineJoin,\r\n                lineWidth: drawState.lineWidth,\r\n                miterLimit: drawState.miterLimit,\r\n                shadowColor: drawState.shadowColor,\r\n                shadowBlur: drawState.shadowBlur,\r\n                shadowOffsetX: drawState.shadowOffsetX,\r\n                shadowOffsetY: drawState.shadowOffsetY,\r\n                textAlign: drawState.textAlign,\r\n                font: drawState.font,\r\n                textBaseline: drawState.textBaseline,\r\n                imageSmoothingEnabled: drawState.imageSmoothingEnabled\r\n            };\r\n\r\n            drawStateStack.push(bakedDrawState);\r\n        }\r\n\r\n        function restoreDrawState() {\r\n            if (drawStateStack.length) {\r\n                drawState = drawStateStack.pop();\r\n            }\r\n        }\r\n\r\n        // WebGL requires colors as a vector while Canvas2D sets colors as an rgba string\r\n        // These getters and setters store the original rgba string as well as convert to a vector\r\n        drawState.fillStyle = [0, 0, 0, 1]; // default black\r\n\r\n        Object.defineProperty(gl, \"fillStyle\", {\r\n            get: function () {\r\n                return colorVecToString(drawState.fillStyle);\r\n            },\r\n            set: function (value) {\r\n                drawState.fillStyle = colorStringToVec4(value) || drawState.fillStyle;\r\n            }\r\n        });\r\n\r\n        drawState.strokeStyle = [0, 0, 0, 1]; // default black\r\n\r\n        Object.defineProperty(gl, \"strokeStyle\", {\r\n            get: function () {\r\n                return colorVecToString(drawState.strokeStyle);\r\n            },\r\n            set: function (value) {\r\n                drawState.strokeStyle = colorStringToVec4(value) || drawStyle.strokeStyle;\r\n            }\r\n        });\r\n\r\n        // WebGL already has a lineWidth() function but Canvas2D requires a lineWidth property\r\n        // Store the original lineWidth() function for later use\r\n        gl.$lineWidth = gl.lineWidth;\r\n        drawState.lineWidth = 1.0;\r\n\r\n        Object.defineProperty(gl, \"lineWidth\", {\r\n            get: function () {\r\n                return drawState.lineWidth;\r\n            },\r\n            set: function (value) {\r\n                if (value > 0) {\r\n                    gl.$lineWidth(value);\r\n                    drawState.lineWidth = value;\r\n                }\r\n            }\r\n        });\r\n\r\n        // Currently unsupported attributes and their default values\r\n        drawState.lineCap = \"butt\";\r\n\r\n        Object.defineProperty(gl, \"lineCap\", {\r\n            get: function () {\r\n                return drawState.lineCap;\r\n            },\r\n            set: function (value) {\r\n                drawState.lineCap = value;\r\n            }\r\n        });\r\n\r\n        drawState.lineJoin = \"miter\";\r\n\r\n        Object.defineProperty(gl, \"lineJoin\", {\r\n            get: function () {\r\n                return drawState.lineJoin;\r\n            },\r\n            set: function (value) {\r\n                drawState.lineJoin = value;\r\n            }\r\n        });\r\n\r\n        drawState.miterLimit = 10;\r\n\r\n        Object.defineProperty(gl, \"miterLimit\", {\r\n            get: function () {\r\n                return drawState.miterLimit;\r\n            },\r\n            set: function (value) {\r\n                drawState.miterLimit = value;\r\n            }\r\n        });\r\n\r\n        drawState.shadowOffsetX = 0;\r\n\r\n        Object.defineProperty(gl, \"shadowOffsetX\", {\r\n            get: function () {\r\n                return drawState.shadowOffsetX;\r\n            },\r\n            set: function (value) {\r\n                drawState.shadowOffsetX = value;\r\n            }\r\n        });\r\n\r\n        drawState.shadowOffsetY = 0;\r\n\r\n        Object.defineProperty(gl, \"shadowOffsetY\", {\r\n            get: function () {\r\n                return drawState.shadowOffsetY;\r\n            },\r\n            set: function (value) {\r\n                drawState.shadowOffsetY = value;\r\n            }\r\n        });\r\n\r\n        drawState.shadowBlur = 0;\r\n\r\n        Object.defineProperty(gl, \"shadowBlur\", {\r\n            get: function () {\r\n                return drawState.shadowBlur;\r\n            },\r\n            set: function (value) {\r\n                drawState.shadowBlur = value;\r\n            }\r\n        });\r\n\r\n        drawState.shadowColor = \"rgba(0, 0, 0, 0.0)\";\r\n\r\n        Object.defineProperty(gl, \"shadowColor\", {\r\n            get: function () {\r\n                return drawState.shadowColor;\r\n            },\r\n            set: function (value) {\r\n                drawState.shadowColor = value;\r\n            }\r\n        });\r\n\r\n        drawState.font = \"10px sans-serif\";\r\n\r\n        Object.defineProperty(gl, \"font\", {\r\n            get: function () {\r\n                return drawState.font;\r\n            },\r\n            set: function (value) {\r\n                textCtx.font = value;\r\n                drawState.font = value;\r\n            }\r\n        });\r\n\r\n        drawState.textAlign = \"start\";\r\n\r\n        Object.defineProperty(gl, \"textAlign\", {\r\n            get: function () {\r\n                return drawState.textAlign;\r\n            },\r\n            set: function (value) {\r\n                drawState.textAlign = value;\r\n            }\r\n        });\r\n\r\n        drawState.textBaseline = \"alphabetic\";\r\n\r\n        Object.defineProperty(gl, \"textBaseline\", {\r\n            get: function () {\r\n                return drawState.textBaseline;\r\n            },\r\n            set: function (value) {\r\n                drawState.textBaseline = value;\r\n            }\r\n        });\r\n\r\n        // This attribute will need to control global alpha of objects drawn.\r\n        drawState.globalAlpha = 1.0;\r\n\r\n        Object.defineProperty(gl, \"globalAlpha\", {\r\n            get: function () {\r\n                return drawState.globalAlpha;\r\n            },\r\n            set: function (value) {\r\n                drawState.globalAlpha = value;\r\n            }\r\n        });\r\n\r\n        // This attribute will need to control smoothing of objects drawn.\r\n        drawState.imageSmoothingEnabled = true;\r\n\r\n        Object.defineProperty(gl, \"imageSmoothingEnabled\", {\r\n            get: function () {\r\n                return drawState.imageSmoothingEnabled;\r\n            },\r\n            set: function (value) {\r\n                drawState.imageSmoothingEnabled = !!value;\r\n            }\r\n        });\r\n\r\n        // This attribute will need to set the gl.blendFunc mode\r\n        drawState.globalCompositeOperation = \"source-over\";\r\n\r\n        Object.defineProperty(gl, \"globalCompositeOperation\", {\r\n            get: function () {\r\n                return drawState.globalCompositeOperation;\r\n            },\r\n            set: function (value) {\r\n                drawState.globalCompositeOperation = value;\r\n            }\r\n        });\r\n\r\n        // Need a solution for drawing text that isnt stupid slow\r\n        gl.fillText = function fillText(text, x, y) {\r\n            // if it exist --key\r\n            textCtx.clearRect(0, 0, gl2d.canvas.width, gl2d.canvas.height);\r\n            textCtx.fillStyle = gl.fillStyle;\r\n            textCtx.fillText(text, x, y);\r\n\r\n            gl.drawImage(textCanvas, 0, 0);\r\n        };\r\n\r\n        gl.strokeText = function strokeText() {\r\n        };\r\n\r\n        gl.measureText = function measureText() {\r\n            return 1;\r\n        };\r\n\r\n        var tempCanvas = document.createElement('canvas');\r\n        var tempCtx = tempCanvas.getContext('2d');\r\n\r\n        gl.save = function save() {\r\n            gl2d.transform.pushMatrix();\r\n            saveDrawState();\r\n        };\r\n\r\n        gl.restore = function restore() {\r\n            gl2d.transform.popMatrix();\r\n            restoreDrawState();\r\n        };\r\n\r\n        gl.translate = function translate(x, y) {\r\n            gl2d.transform.translate(x, y);\r\n        };\r\n\r\n        gl.rotate = function rotate(a) {\r\n            gl2d.transform.rotate(a);\r\n        };\r\n\r\n        gl.scale = function scale(x, y) {\r\n            gl2d.transform.scale(x, y);\r\n        };\r\n\r\n        gl.createImageData = function createImageData(width, height) {\r\n            return tempCtx.createImageData(width, height);\r\n        };\r\n\r\n        gl.getImageData = function getImageData(x, y, width, height) {\r\n            var data = tempCtx.createImageData(width, height);\r\n            var buffer = new Uint8Array(width * height * 4);\r\n            gl.readPixels(x, y, width, height, gl.RGBA, gl.UNSIGNED_BYTE, buffer);\r\n            var w = width * 4, h = height;\r\n            for (var i = 0, maxI = h / 2; i < maxI; ++i) {\r\n                for (var j = 0, maxJ = w; j < maxJ; ++j) {\r\n                    var index1 = i * w + j;\r\n                    var index2 = (h - i - 1) * w + j;\r\n                    data.data[index1] = buffer[index2];\r\n                    data.data[index2] = buffer[index1];\r\n                } //for\r\n            } //for\r\n\r\n            return data;\r\n        };\r\n\r\n        gl.putImageData = function putImageData(imageData, x, y) {\r\n            gl.drawImage(imageData, x, y);\r\n        };\r\n\r\n        gl.transform = function transform(m11, m12, m21, m22, dx, dy) {\r\n            gl2d.transform.tr(m11, m12, m21, m22, dx, dy);\r\n        };\r\n\r\n        function sendTransformStack(sp) {\r\n            var stack = gl2d.transform.m_stack;\r\n            for (var i = 0, maxI = gl2d.transform.c_stack + 1; i < maxI; ++i) {\r\n                gl.uniformMatrix3fv(sp.uTransforms[i], false, stack[maxI - 1 - i]);\r\n            } //for\r\n        }\r\n\r\n        gl.setTransform = function setTransform(m11, m12, m21, m22, dx, dy) {\r\n            gl2d.transform.setIdentity();\r\n            gl.transform.apply(this, arguments);\r\n        };\r\n\r\n        gl.fillRect = function fillRect(x, y, width, height) {\r\n            var transform = gl2d.transform;\r\n            var shaderProgram = gl2d.initShaders(transform.c_stack + 2, 0);\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, gl.rectVertexPositionBuffer);\r\n            gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, 4, gl.FLOAT, false, 0, 0);\r\n\r\n            transform.pushMatrix();\r\n\r\n            transform.translate(x, y);\r\n            transform.scale(width, height);\r\n\r\n            sendTransformStack(shaderProgram);\r\n\r\n            gl.uniform4f(shaderProgram.uColor, drawState.fillStyle[0], drawState.fillStyle[1], drawState.fillStyle[2], drawState.fillStyle[3]);\r\n\r\n            gl.drawArrays(gl.TRIANGLE_FAN, 0, 4);\r\n\r\n            transform.popMatrix();\r\n        };\r\n\r\n        gl.strokeRect = function strokeRect(x, y, width, height) {\r\n            var transform = gl2d.transform;\r\n            var shaderProgram = gl2d.initShaders(transform.c_stack + 2, 0);\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, gl.rectVertexPositionBuffer);\r\n            gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, 4, gl.FLOAT, false, 0, 0);\r\n\r\n            transform.pushMatrix();\r\n\r\n            transform.translate(x, y);\r\n            transform.scale(width, height);\r\n\r\n            sendTransformStack(shaderProgram);\r\n\r\n            gl.uniform4f(shaderProgram.uColor, drawState.strokeStyle[0], drawState.strokeStyle[1], drawState.strokeStyle[2], drawState.strokeStyle[3]);\r\n\r\n            gl.drawArrays(gl.LINE_LOOP, 0, 4);\r\n\r\n            transform.popMatrix();\r\n        };\r\n\r\n        gl.clearRect = function clearRect(x, y, width, height) {\r\n        };\r\n\r\n        var subPaths = [];\r\n\r\n        function SubPath(x, y) {\r\n            this.closed = false;\r\n            this.verts = [x, y, 0, 0];\r\n        }\r\n\r\n        // Empty the list of subpaths so that the context once again has zero subpaths\r\n        gl.beginPath = function beginPath() {\r\n            subPaths.length = 0;\r\n        };\r\n\r\n        // Mark last subpath as closed and create a new subpath with the same starting point as the previous subpath\r\n        gl.closePath = function closePath() {\r\n            if (subPaths.length) {\r\n                // Mark last subpath closed.\r\n                var prevPath = subPaths[subPaths.length - 1], startX = prevPath.verts[0], startY = prevPath.verts[1];\r\n                prevPath.closed = true;\r\n\r\n                // Create new subpath using the starting position of previous subpath\r\n                var newPath = new SubPath(startX, startY);\r\n                subPaths.push(newPath);\r\n            }\r\n        };\r\n\r\n        // Create a new subpath with the specified point as its first (and only) point\r\n        gl.moveTo = function moveTo(x, y) {\r\n            subPaths.push(new SubPath(x, y));\r\n        };\r\n\r\n        gl.lineTo = function lineTo(x, y) {\r\n            if (subPaths.length) {\r\n                subPaths[subPaths.length - 1].verts.push(x, y, 0, 0);\r\n            } else {\r\n                // Create a new subpath if none currently exist\r\n                gl.moveTo(x, y);\r\n            }\r\n        };\r\n\r\n        gl.quadraticApproximateCount = 50;\r\n        gl.quadraticCurveTo = function quadraticCurveTo(hx, hy, x, y) {\r\n            if (subPaths.length) {\r\n                var verts = subPaths[subPaths.length - 1].verts,\r\n                    fromx = verts[verts.length - 4],\r\n                    fromy = verts[verts.length - 3],\r\n                    t, i, tx, ty;\r\n                for (var j = 0; j < gl.quadraticApproximateCount; j++) {\r\n                    t = j / gl.quadraticApproximateCount;\r\n                    i = 1 - t;\r\n                    tx = i * i * fromx + 2 * i * t * hx + t * t * x;\r\n                    ty = i * i * fromy + 2 * i * t * hy + t * t * y;\r\n                    verts.push(tx, ty, 0, 0);\r\n                }\r\n            } else {\r\n                gl.moveTo(x, y);\r\n            }\r\n        };\r\n\r\n        gl.bezierApproximateCount = 50;\r\n        gl.bezierCurveTo = function quadraticCurveTo(h1x, h1y, h2x, h2y, x, y) {\r\n            if (subPaths.length) {\r\n                var verts = subPaths[subPaths.length - 1].verts,\r\n                    fromx = verts[verts.length - 4],\r\n                    fromy = verts[verts.length - 3],\r\n                    t, i, tx, ty;\r\n                for (var j = 0; j < gl.bezierApproximateCount; j++) {\r\n                    t = j / gl.bezierApproximateCount;\r\n                    i = 1 - t;\r\n                    tx = i * i * i * fromx + 3 * i * i * t * h1x + 3 * i * t * t * h2x + t * t * t * x;\r\n                    ty = i * i * i * fromy + 3 * i * i * t * h1y + 3 * i * t * t * h2y + t * t * t * y;\r\n                    verts.push(tx, ty, 0, 0);\r\n                }\r\n            } else {\r\n                gl.moveTo(x, y);\r\n            }\r\n        };\r\n\r\n        gl.arcTo = function arcTo() {\r\n            if (subPaths.length) {\r\n                ;\r\n            } else {\r\n                gl.moveTo(x, y);\r\n            }\r\n        };\r\n\r\n        // Adds a closed rect subpath and creates a new subpath\r\n        gl.rect = function rect(x, y, w, h) {\r\n            gl.moveTo(x, y);\r\n            gl.lineTo(x + w, y);\r\n            gl.lineTo(x + w, y + h);\r\n            gl.lineTo(x, y + h);\r\n            gl.closePath();\r\n        };\r\n\r\n        gl.arcApproximateCount = 100;\r\n        gl.arc = function arc(cx, cy, radius, startAngle, endAngle, anticlockwise) {\r\n            if (subPaths.length) {\r\n                var verts = subPaths[subPaths.length - 1].verts;\r\n\r\n                // startAngle\r\n                var x = cx + radius * Math.cos(startAngle),\r\n                    y = cy + radius * Math.sin(startAngle);\r\n                verts.push(x, y, 0, 0);\r\n\r\n                while (startAngle > Math.PI * 2)\r\n                    startAngle -= Math.PI * 2;\r\n                while (endAngle > Math.PI * 2)\r\n                    endAngle -= Math.PI * 2;\r\n                while (startAngle < -Math.PI * 2)\r\n                    startAngle += Math.PI * 2;\r\n                while (endAngle < -Math.PI * 2)\r\n                    endAngle += Math.PI * 2;\r\n                if (startAngle == endAngle)\r\n                    return;\r\n\r\n                var count = 1 / gl.arcApproximateCount,\r\n                    fixed = gl.arcApproximateCount,\r\n                    t;\r\n                if (anticlockwise) {\r\n                    endAngle -= Math.PI * 2;\r\n                    count = -count;\r\n                }\r\n                for (var i = startAngle; (i > endAngle && anticlockwise) || (i < endAngle && !anticlockwise); i += count) {\r\n                    if (t == (t = (i * fixed | 0) / fixed))\r\n                        continue;\r\n                    x = cx + radius * Math.cos(t);\r\n                    y = cy + radius * Math.sin(t);\r\n                    verts.push(x, y, 0, 0);\r\n                }\r\n            } else {\r\n                gl.moveTo(x, y);\r\n            }\r\n        };\r\n\r\n        function fillSubPath(index) {\r\n            var transform = gl2d.transform;\r\n            var shaderProgram = gl2d.initShaders(transform.c_stack + 2, 0);\r\n\r\n            var subPath = subPaths[index];\r\n            var verts = subPath.verts;\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, gl.pathVertexPositionBuffer);\r\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(verts), gl.STATIC_DRAW);\r\n\r\n            gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, 4, gl.FLOAT, false, 0, 0);\r\n\r\n            transform.pushMatrix();\r\n\r\n            sendTransformStack(shaderProgram);\r\n\r\n            gl.uniform4f(shaderProgram.uColor, drawState.fillStyle[0], drawState.fillStyle[1], drawState.fillStyle[2], drawState.fillStyle[3]);\r\n\r\n            gl.drawArrays(gl.TRIANGLE_FAN, 0, verts.length / 4);\r\n\r\n            transform.popMatrix();\r\n        }\r\n\r\n        gl.fill = function fill() {\r\n            for (var i = 0; i < subPaths.length; i++) {\r\n                fillSubPath(i);\r\n            }\r\n        };\r\n\r\n        function strokeSubPath(index) {\r\n            var transform = gl2d.transform;\r\n            var shaderProgram = gl2d.initShaders(transform.c_stack + 2, 0);\r\n\r\n            var subPath = subPaths[index];\r\n            var verts = subPath.verts;\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, gl.pathVertexPositionBuffer);\r\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(verts), gl.STATIC_DRAW);\r\n\r\n            gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, 4, gl.FLOAT, false, 0, 0);\r\n\r\n            transform.pushMatrix();\r\n\r\n            sendTransformStack(shaderProgram);\r\n\r\n            gl.uniform4f(shaderProgram.uColor, drawState.strokeStyle[0], drawState.strokeStyle[1], drawState.strokeStyle[2], drawState.strokeStyle[3]);\r\n\r\n            if (subPath.closed) {\r\n                gl.drawArrays(gl.LINE_LOOP, 0, verts.length / 4);\r\n            } else {\r\n                gl.drawArrays(gl.LINE_STRIP, 0, verts.length / 4);\r\n            }\r\n\r\n            transform.popMatrix();\r\n        }\r\n\r\n        gl.stroke = function stroke() {\r\n            for (var i = 0; i < subPaths.length; i++) {\r\n                strokeSubPath(i);\r\n            }\r\n        };\r\n\r\n        gl.clip = function clip() {\r\n        };\r\n\r\n        gl.isPointInPath = function isPointInPath() {\r\n        };\r\n\r\n        gl.drawFocusRing = function drawFocusRing() {\r\n        };\r\n\r\n\r\n        var imageCache = [], textureCache = [];\r\n\r\n        function Texture(image) {\r\n            this.obj = gl.createTexture();\r\n            this.index = textureCache.push(this);\r\n\r\n            imageCache.push(image);\r\n\r\n            // we may wish to consider tiling large images like this instead of scaling and\r\n            // adjust appropriately (flip to next texture source and tile offset) when drawing\r\n            if (image.width > gl2d.maxTextureSize || image.height > gl2d.maxTextureSize) {\r\n                var canvas = document.createElement(\"canvas\");\r\n\r\n                canvas.width = (image.width > gl2d.maxTextureSize) ? gl2d.maxTextureSize : image.width;\r\n                canvas.height = (image.height > gl2d.maxTextureSize) ? gl2d.maxTextureSize : image.height;\r\n\r\n                var ctx = canvas.getContext(\"2d\");\r\n\r\n                ctx.drawImage(image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height);\r\n\r\n                image = canvas;\r\n            }\r\n\r\n            var GL_FUNCTION = gl.LINEAR;\r\n            var GL_MIPMAP_FUNCTION = gl.LINEAR_MIPMAP_LINEAR;\r\n\r\n            if (!drawState.imageSmoothingEnabled) {\r\n                GL_FUNCTION = gl.NEAREST;\r\n                GL_MIPMAP_FUNCTION = gl.LINEAR_MIPMAP_NEAREST;\r\n            }\r\n\r\n            gl.bindTexture(gl.TEXTURE_2D, this.obj);\r\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, GL_FUNCTION);\r\n\r\n            // Enable Mip mapping on power-of-2 textures\r\n            if (isPOT(image.width) && isPOT(image.height)) {\r\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, GL_MIPMAP_FUNCTION);\r\n                gl.generateMipmap(gl.TEXTURE_2D);\r\n            } else {\r\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, GL_FUNCTION);\r\n            }\r\n\r\n            // Unbind texture\r\n            gl.bindTexture(gl.TEXTURE_2D, null);\r\n        }\r\n\r\n        gl.drawImage = function drawImage(image, a, b, c, d, e, f, g, h) {\r\n            var transform = gl2d.transform;\r\n\r\n            transform.pushMatrix();\r\n\r\n            var sMask = shaderMask.texture;\r\n            var doCrop = false;\r\n\r\n            //drawImage(image, dx, dy)\r\n            if (arguments.length === 3) {\r\n                transform.translate(a, b);\r\n                transform.scale(image.width, image.height);\r\n            }\r\n\r\n            //drawImage(image, dx, dy, dw, dh)\r\n            else if (arguments.length === 5) {\r\n                transform.translate(a, b);\r\n                transform.scale(c, d);\r\n            }\r\n\r\n            //drawImage(image, sx, sy, sw, sh, dx, dy, dw, dh)\r\n            else if (arguments.length === 9) {\r\n                transform.translate(e, f);\r\n                transform.scale(g, h);\r\n                sMask = sMask | shaderMask.crop;\r\n                doCrop = true;\r\n            }\r\n\r\n            var shaderProgram = gl2d.initShaders(transform.c_stack + 1, sMask);\r\n\r\n            var texture, cacheIndex = imageCache.indexOf(image);\r\n\r\n            if (cacheIndex !== -1) {\r\n                texture = textureCache[cacheIndex];\r\n            } else {\r\n                texture = new Texture(image);\r\n            }\r\n\r\n            if (doCrop) {\r\n                gl.uniform4f(shaderProgram.uCropSource, a / image.width, b / image.height, c / image.width, d / image.height);\r\n            }\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, gl.rectVertexPositionBuffer);\r\n            gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, 4, gl.FLOAT, false, 0, 0);\r\n\r\n            gl.bindTexture(gl.TEXTURE_2D, texture.obj);\r\n            gl.activeTexture(gl.TEXTURE0);\r\n\r\n            gl.uniform1i(shaderProgram.uSampler, 0);\r\n\r\n            sendTransformStack(shaderProgram);\r\n            gl.drawArrays(gl.TRIANGLE_FAN, 0, 4);\r\n\r\n            transform.popMatrix();\r\n        };\r\n\r\n        // This enables the user to detect whether they got a webgl-2d context or a 2d context.\r\n        Object.defineProperty(gl, \"isWebGL\", {\r\n            configurable: false,\r\n            enumerable: true,\r\n            writable: false,\r\n            value: true\r\n        });\r\n    };\r\n\r\n    return WebGL2D;\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('io/InputManager', ['jquery', 'utils/ArrayMap'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('jquery'), require('utils/ArrayMap'));\r\n    } else {\r\n        factory(root.jQuery, root.ArrayMap);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function ($, ArrayMap) {\r\n    \"use strict\";\r\n\r\n    var InputManager = function (j2d) {\r\n        this.j2d = j2d;\r\n\r\n        this.id = j2d.id;\r\n        this.element = j2d.element;\r\n\r\n        this.data = {\r\n            mouse: {\r\n                startPosition: {\r\n                    x: 0,\r\n                    y: 0\r\n                },\r\n                currentPosition: {\r\n                    x: 0,\r\n                    y: 0\r\n                },\r\n                previousDistance: 0,\r\n                distance: 0\r\n            },\r\n            viewport: {\r\n                position: {\r\n                    x: 0,\r\n                    y: 0\r\n                }\r\n            },\r\n            enabled: false,\r\n            enableAdditionalData: false,\r\n            keysPressed: new ArrayMap(),\r\n            writeMode: false,\r\n            timePressed: 0,\r\n            preventAll: false,\r\n\r\n            cursor: {\r\n                enabled: false,\r\n                image: 'auto'\r\n            }\r\n        };\r\n        this.keyMap = {\r\n            //DEBUG_INFO: [[InputManager.key.KEY_CTRL, InputManager.key.KEY_F1], 'j2d.debug.toggleScreen', {}],\r\n            FULLSCREEN: [[InputManager.key.KEY_CTRL, InputManager.key.KEY_F11], 'j2d.scene.toggleFullScreen', {}]\r\n        };\r\n    };\r\n\r\n    var checkKeyMap = function (e, enableCallback) {\r\n        if (enableCallback === undefined) enableCallback = true;\r\n\r\n        var j2d = e.data.manager.j2d,\r\n            manager = e.data.manager,\r\n            keyCode = e.which,\r\n            keyMap = e.data.manager.keyMap;\r\n\r\n        for (var index in keyMap) {\r\n            if (keyMap.hasOwnProperty(index)) {\r\n                var value = keyMap[index];\r\n                if (!$.isArray(value[0]) && value[0] === keyCode && !!value[1]) {\r\n                    if (typeof value[1] === 'string') {\r\n                        value[1] = eval('(' + value[1] + ')');\r\n                    }\r\n                    if ((typeof value[1] === 'function') && enableCallback) {\r\n                        value[1](j2d, value[2]);\r\n                    }\r\n                    return true;\r\n                } else if ($.isArray(value[0])\r\n                    && manager.data.keysPressed.equals(value[0]) && !!value[1]\r\n                ) {\r\n                    if (typeof value[1] === 'string') {\r\n                        value[1] = eval('(' + value[1] + ')');\r\n                    }\r\n                    if (typeof value[1] === 'function' && enableCallback) {\r\n                        value[1](j2d, value[2]);\r\n                    }\r\n                    return true\r\n                }\r\n            }\r\n        }\r\n        return false\r\n    };\r\n\r\n    var events = {\r\n        onMouseClick: function (e) {\r\n            var manager = e.data.manager;\r\n            if (!manager.data.enabled || !manager.j2d.isPlay || !manager.j2d.element.hasClass('active')) return true;\r\n            var keysPressed = manager.data.keysPressed;\r\n            var keyCode = getKey(InputManager.key, e.which) || 'KEY_UNKNOWN_' + e.which;\r\n            var mouse = manager.data.mouse;\r\n\r\n            if (e.data.event !== 2) {\r\n                if (e.data.event === 0) {\r\n                    if (-1 === $.inArray(InputManager.key[keyCode], keysPressed)) {\r\n                        keysPressed.push(InputManager.key[keyCode]);\r\n\r\n                        if (manager.data.enableAdditionalData) {\r\n                            mouse.startPosition.x = e.pageX;\r\n                            mouse.startPosition.y = e.pageY;\r\n                            mouse.distance = 0;\r\n\r\n                            manager.data.timePressed = e.timeStamp;\r\n                        }\r\n                    }\r\n                    if (checkKeyMap(e, false) || manager.data.preventAll) {\r\n                        e.preventDefault();\r\n                    }\r\n                } else {\r\n                    if (checkKeyMap(e) || manager.data.preventAll) {\r\n                        e.preventDefault();\r\n                    }\r\n                    if (manager.data.enableAdditionalData) {\r\n                        mouse.previousDistance = mouse.distance;\r\n                        mouse.startPosition.x = 0;\r\n                        mouse.startPosition.y = 0;\r\n                    }\r\n\r\n                    keysPressed.splice(\r\n                        keysPressed.indexOf(InputManager.key[keyCode]), 1\r\n                    );\r\n                }\r\n                manager.element.trigger(e.data.event === 0 ?\r\n                    'mouseKeyDown' : 'mouseKeyUp', {keyCode: keyCode}\r\n                );\r\n            } else {\r\n                if (checkKeyMap(e, false)) {\r\n                    e.preventDefault();\r\n                }\r\n            }\r\n        },\r\n\r\n        onMouseWheel: function (e) {\r\n            var manager = e.data.manager;\r\n            if (!manager.data.enabled || !manager.j2d.isPlay || !manager.j2d.element.hasClass('active')) return true;\r\n            var keysPressed = manager.data.keysPressed;\r\n            var keyCode = (e.originalEvent.wheelDelta / 120 > 0) ?\r\n                getKey(InputManager.key, 4) : getKey(InputManager.key, 5);\r\n\r\n            e.which = (e.originalEvent.wheelDelta / 120 > 0) ? 4 : 5;\r\n\r\n            if (-1 === $.inArray(InputManager.key[keyCode], keysPressed)) {\r\n                keysPressed.push(InputManager.key[keyCode]);\r\n            }\r\n\r\n            if (checkKeyMap(e) || manager.data.preventAll) {\r\n                e.preventDefault();\r\n                manager.fixMouseWheel();\r\n            }\r\n\r\n            manager.element.trigger('mouseWheel', {keyCode: keyCode});\r\n        },\r\n\r\n        mouseWheelCancel: function (keysPressed, keyCode) {\r\n            keysPressed.splice(\r\n                keysPressed.indexOf(InputManager.key[keyCode]), 1\r\n            );\r\n        },\r\n\r\n        onMouseMove: function (e) {\r\n            var manager = e.data.manager;\r\n            var mouse = e.data.manager.data.mouse;\r\n\r\n            manager.data.mouse.currentPosition.x = e.pageX;\r\n            manager.data.mouse.currentPosition.y = e.pageY;\r\n\r\n            if (e.data.manager.data.enableAdditionalData) {\r\n                mouse.distance = Math.sqrt(\r\n                    Math.pow((mouse.currentPosition.x - mouse.startPosition.x), 2)\r\n                    + Math.pow((mouse.currentPosition.y - mouse.startPosition.y), 2)\r\n                ).toFixed(1);\r\n            }\r\n        },\r\n\r\n        onKeyboardPress: function (e) {\r\n            var manager = e.data.manager;\r\n            if (!manager.data.enabled || !manager.j2d.isPlay || !manager.element.hasClass('active')) return true;\r\n            var keysPressed = manager.data.keysPressed;\r\n            var keyCode = getKey(InputManager.key, e.which) || 'KEY_UNKNOWN_' + e.which;\r\n            if (e.data.event === 2 && true === manager.data.writeMode) {\r\n                var char = String.fromCharCode(e.which || e.keyCode);\r\n                e.preventDefault();\r\n                manager.element.focus().trigger('keyboardCharPress', {\r\n                    key: e.which || e.keyCode,\r\n                    keyCode: keyCode,\r\n                    char: char\r\n                });\r\n            }\r\n\r\n            if (e.data.event !== 2 && false === manager.data.writeMode) {\r\n                if (e.data.event === 0) {\r\n                    if (-1 === $.inArray(InputManager.key[keyCode], keysPressed)) {\r\n                        keysPressed.push(InputManager.key[keyCode]);\r\n                        if (manager.data.enableAdditionalData) {\r\n                            manager.data.timePressed = e.timeStamp;\r\n                        }\r\n                    }\r\n                    if (checkKeyMap(e, false) || manager.data.preventAll) {\r\n                        e.preventDefault();\r\n                    }\r\n                } else {\r\n                    if (checkKeyMap(e) || manager.data.preventAll) {\r\n                        e.preventDefault();\r\n                    }\r\n\r\n                    keysPressed.splice(\r\n                        keysPressed.indexOf(InputManager.key[keyCode]), 1\r\n                    );\r\n                }\r\n\r\n                manager.element.trigger(e.data.event === 0 ?\r\n                    'keyboardKeyDown' : 'keyboardKeyUp', {keyCode: keyCode, key: e.which || e.keyCode}\r\n                );\r\n            }\r\n\r\n            if (e.data.event !== 2 && true === manager.data.writeMode) {\r\n                manager.element.trigger(e.data.event === 0 ?\r\n                    'keyboardKeyDown' : 'keyboardKeyUp', {keyCode: keyCode, key: e.which || e.keyCode}\r\n                );\r\n            }\r\n        },\r\n\r\n        onTouchTap: function (e) {\r\n            var manager = e.data.manager;\r\n            if (!manager.data.enabled || !manager.j2d.isPlay || !manager.j2d.element.hasClass('active')) return true;\r\n            var keysPressed = manager.data.keysPressed;\r\n            var keyCode = getKey(InputManager.key, e.which + 1) || 'KEY_UNKNOWN_' + e.which;\r\n            var touch = e.originalEvent.touches[0] || e.originalEvent.changedTouches[0];\r\n            var mouse = manager.data.mouse;\r\n\r\n            if (e.data.event === 0) {\r\n                if (-1 === $.inArray(InputManager.key[keyCode], keysPressed)) {\r\n                    keysPressed.push(InputManager.key[keyCode]);\r\n                    if (manager.data.enableAdditionalData) {\r\n                        mouse.startPosition.x = touch.pageX;\r\n                        mouse.startPosition.y = touch.pageY;\r\n                        mouse.distance = 0;\r\n\r\n                        manager.data.timePressed = e.timeStamp;\r\n                    }\r\n                }\r\n                if (checkKeyMap(e, false) || manager.data.preventAll) {\r\n                    e.preventDefault();\r\n                }\r\n            } else {\r\n                if (checkKeyMap(e) || manager.data.preventAll) {\r\n                    e.preventDefault();\r\n                }\r\n\r\n                if (manager.data.enableAdditionalData) {\r\n                    mouse.previousDistance = mouse.distance;\r\n                    mouse.startPosition.x = 0;\r\n                    mouse.startPosition.y = 0;\r\n                }\r\n\r\n                keysPressed.splice(\r\n                    keysPressed.indexOf(InputManager.key[keyCode]), 1\r\n                );\r\n            }\r\n\r\n            manager.element.trigger(e.data.event === 0 ?\r\n                'mouseKeyDown' : 'mouseKeyUp', {keyCode: keyCode}\r\n            );\r\n        },\r\n\r\n        onTouchMove: function (e) {\r\n            var touch = e.originalEvent.touches[0] || e.originalEvent.changedTouches[0];\r\n            var mouse = e.data.manager.data.mouse;\r\n\r\n            mouse.currentPosition.x = touch.pageX.toFixed(0);\r\n            mouse.currentPosition.y = touch.pageY.toFixed(0);\r\n\r\n            if (e.data.manager.data.enableAdditionalData) {\r\n                mouse.distance = Math.sqrt(\r\n                    Math.pow((mouse.currentPosition.x - mouse.startPosition.x), 2)\r\n                    + Math.pow((mouse.currentPosition.y - mouse.startPosition.y), 2)\r\n                ).toFixed(1);\r\n            }\r\n        }\r\n    };\r\n\r\n    var bindEvents = function (manager) {\r\n        var selector = '[guid=' + manager.id + ']';\r\n\r\n        $(document).on('contextmenu', selector, {manager: manager, event: 2}, events.onMouseClick);\r\n        $(document).on('mousedown', selector, {manager: manager, event: 0}, events.onMouseClick);\r\n        $(document).on('mouseup', selector, {manager: manager, event: 1}, events.onMouseClick);\r\n        $(document).on('mousewheel', selector, {manager: manager}, events.onMouseWheel);\r\n        $(document).on('mousemove', selector, {manager: manager}, events.onMouseMove);\r\n\r\n        $(document).on('keydown', null, {manager: manager, event: 0}, events.onKeyboardPress);\r\n        $(document).on('keyup', null, {manager: manager, event: 1}, events.onKeyboardPress);\r\n        $(document).on('keypress', null, {manager: manager, event: 2}, events.onKeyboardPress);\r\n\r\n        $(document).on('touchstart', selector, {manager: manager, event: 0}, events.onTouchTap);\r\n        $(document).on('touchend', selector, {manager: manager, event: 1}, events.onTouchTap);\r\n        $(document).on('touchmove ', selector, {manager: manager}, events.onTouchMove);\r\n    };\r\n\r\n    var unbindEvents = function (manager) {\r\n        var selector = '[guid=' + manager.id + ']';\r\n\r\n        $(document).off('contextmenu', selector, {manager: manager, event: 1}, events.onMouseClick);\r\n        $(document).off('mousedown', selector, {manager: manager, event: 0}, events.onMouseClick);\r\n        $(document).off('mouseup', selector, {manager: manager, event: 1}, events.onMouseClick);\r\n        $(document).off('mousewheel', selector, {manager: manager}, events.onMouseWheel);\r\n        $(document).off('mousemove', selector, {manager: manager}, events.onMouseMove);\r\n\r\n        $(document).off('keydown', null, {manager: manager, event: 0}, events.onKeyboardPress);\r\n        $(document).off('keyup', null, {manager: manager, event: 1}, events.onKeyboardPress);\r\n        $(document).off('keypress', null, {manager: manager, event: 2}, events.onKeyboardPress);\r\n\r\n        $(document).off('touchstart', selector, {manager: manager, event: 0}, events.onTouchTap);\r\n        $(document).off('touchend', selector, {manager: manager, event: 1}, events.onTouchTap);\r\n        $(document).off('touchmove ', selector, {manager: manager}, events.onTouchMove);\r\n    };\r\n\r\n    InputManager.prototype.init = function () {\r\n        if (!this.data.enabled && global.j2dPlugin.pluginInit) {\r\n            bindEvents(this);\r\n\r\n            this.data.enabled = true;\r\n        }\r\n    };\r\n\r\n    InputManager.prototype.update = function () {\r\n        if (!this.data.enabled) return false;\r\n\r\n        var dX = this.j2d.scene.canvas.offsetWidth / this.j2d.scene.width,\r\n            dY = this.j2d.scene.canvas.offsetHeight / this.j2d.scene.height,\r\n            x = this.data.mouse.currentPosition.x / dX,\r\n            y = this.data.mouse.currentPosition.y / dY;\r\n\r\n        var offset = this.element.offset();\r\n        this.data.viewport.x = this.j2d.scene.viewport.x + x - offset.left;\r\n        this.data.viewport.y = this.j2d.scene.viewport.y + y - offset.top;\r\n    };\r\n\r\n    InputManager.prototype.flush = function () {\r\n        this.data.keysPressed.length = 0;\r\n    };\r\n\r\n    InputManager.prototype.clear = function () {\r\n    };\r\n\r\n    InputManager.prototype.fixMouseWheel = function () {\r\n        var keyPressed = this.data.keysPressed;\r\n        if (-1 !== $.inArray(InputManager.key.SCROLL_MOUSE_UP, keyPressed)) {\r\n            events.mouseWheelCancel(keyPressed, InputManager.key.SCROLL_MOUSE_UP);\r\n        } else if (-1 !== $.inArray(InputManager.key.SCROLL_MOUSE_DOWN, keyPressed)) {\r\n            events.mouseWheelCancel(keyPressed, InputManager.key.SCROLL_MOUSE_DOWN);\r\n        }\r\n    };\r\n\r\n    InputManager.prototype.enable = function () {\r\n        if (!this.data.enabled) {\r\n            //bindEvents(this);\r\n            this.data.enabled = false;\r\n        }\r\n    };\r\n\r\n    InputManager.prototype.disable = function () {\r\n        if (this.data.enabled) {\r\n            //unbindEvents(this);\r\n            this.data.enabled = false;\r\n        }\r\n    };\r\n\r\n    InputManager.prototype.load = function (newKeyMap) {\r\n        var oldKeyMap = JSON.stringify(this.keyMap);\r\n        this.keyMap = JSON.parse(newKeyMap);\r\n        return oldKeyMap;\r\n    };\r\n\r\n    InputManager.prototype.save = function () {\r\n        return JSON.stringify(this.keyMap);\r\n    };\r\n\r\n    /** +KeyMap Manager **/\r\n    InputManager.prototype.setKeys = function (mapObject) {\r\n        this.keyMap = $.extend(true, {}, this.keyMap, mapObject);\r\n    };\r\n    /** -KeyMap Manager **/\r\n\r\n    var getPressData = function (manager, keyList) {\r\n        if (!manager.data.enableAdditionalData) return true;\r\n        return {\r\n            keyList: keyList,\r\n            time: Date.now() - manager.data.timePressed\r\n        };\r\n    };\r\n\r\n    InputManager.prototype.getMouseMoveDistance = function () {\r\n        if (!this.data.enableAdditionalData) return 0;\r\n        return {current: this.data.mouse.distance, previous: this.data.mouse.previousDistance};\r\n    };\r\n\r\n    /** +Input Checkers **/\r\n    InputManager.prototype.checkPressedKeyList = function (keyList) {\r\n        if ($.isArray(keyList)) {\r\n            if (keyList.length !== this.data.keysPressed.length) {\r\n                return false;\r\n            } else if (this.data.keysPressed.equals(keyList)) {\r\n                this.fixMouseWheel();\r\n                return getPressData(this, keyList);\r\n            }\r\n            this.fixMouseWheel();\r\n            return false;\r\n        }\r\n        //if (!this.data.keysPressed.equals([])) console.log(this.data.keysPressed);\r\n        if (isNaN(keyList)) return false;\r\n        if (-1 !== this.data.keysPressed.indexOf(keyList)) {\r\n            this.fixMouseWheel();\r\n            return getPressData(this, keyList);\r\n        }\r\n        this.fixMouseWheel();\r\n        return false;\r\n    };\r\n\r\n    InputManager.prototype.checkPressedKeyMap = function (key) {\r\n        if (this.keyMap[key] === undefined) return false;\r\n        var keyList = this.keyMap[key][0];\r\n\r\n        return this.checkPressedKeyList(keyList);\r\n    };\r\n\r\n    InputManager.prototype.getPosition = function () {\r\n        return this.j2d.vector.v2f(this.data.viewport.x + 0.5, this.data.viewport.y + 0.5);\r\n    };\r\n\r\n    //InputManager.prototype.onNode = function (id) {\r\n    //    if (!id.layer.visible) return false;\r\n    //    return (this.data.viewport.x > id.options.position.x && this.data.viewport.x < id.options.position.x + id.options.size.x) &&\r\n    //        (this.data.viewport.y > id.options.position.y && this.data.viewport.y < id.options.position.y + id.options.size.y);\r\n    //};\r\n    /** -Input Checkers **/\r\n\r\n    /** +Input Write Mode **/\r\n    InputManager.prototype.setWriteMode = function (mode) {\r\n        this.data.writeMode = mode;\r\n    };\r\n\r\n    InputManager.prototype.isWriteMode = function () {\r\n        return !!this.data.writeMode;\r\n    };\r\n    /** -Input Write Mode **/\r\n\r\n    /** +Cursor **/\r\n    InputManager.prototype.setCursorImage = function (image) {\r\n        this.data.cursor.image = 'url(\"' + image + '\"), auto';\r\n        $(this.element).css('cursor', this.data.cursor.image);\r\n    };\r\n\r\n    InputManager.prototype.toggleCursor = function (enable) {\r\n        if (enable !== undefined) {\r\n            this.data.cursor.enable = enable;\r\n        } else {\r\n            this.data.cursor.enable = !this.data.cursor.enable;\r\n        }\r\n\r\n        if (!this.data.cursor.enable) {\r\n            this.data.cursor.image = $(this.j2d.element).css('cursor');\r\n            $(this.element).css('cursor', 'none');\r\n        } else {\r\n            $(this.element).css('cursor', this.data.cursor.image);\r\n        }\r\n    };\r\n\r\n    InputManager.prototype.isCursorVisible = function () {\r\n        return this.data.cursor.enable;\r\n    };\r\n    /** -Cursor **/\r\n\r\n    /** static keys arrayList **/\r\n    InputManager.key = {\r\n        KEY_MOUSE_LEFT: 1,\r\n        KEY_MOUSE_MIDDLE: 2,\r\n        KEY_MOUSE_RIGHT: 3,\r\n\r\n        SCROLL_MOUSE_UP: 4,\r\n        SCROLL_MOUSE_DOWN: 5,\r\n\r\n        KEY_BACKSPACE: 8,\r\n        KEY_TAB: 9,\r\n        KEY_ENTER: 13,\r\n        KEY_SHIFT: 16,\r\n        KEY_CTRL: 17,\r\n        KEY_ALT: 18,\r\n        KEY_PAUSE: 19,\r\n        KEY_BREAK: 19,\r\n        KEY_CAPS_LOCK: 20,\r\n        KEY_ESCAPE: 27,\r\n        KEY_SPACE_BAR: 32,\r\n        KEY_PAGE_UP: 33,\r\n        KEY_PAGE_DOWN: 34,\r\n        KEY_END: 35,\r\n        KEY_HOME: 36,\r\n        KEY_LEFT_ARROW: 37,\r\n        KEY_UP_ARROW: 38,\r\n        KEY_RIGHT_ARROW: 39,\r\n        KEY_DOWN_ARROW: 40,\r\n        KEY_INSERT: 45,\r\n        KEY_DELETE: 46,\r\n        KEY_0: 48,\r\n        KEY_1: 49,\r\n        KEY_2: 50,\r\n        KEY_3: 51,\r\n        KEY_4: 52,\r\n        KEY_5: 53,\r\n        KEY_6: 54,\r\n        KEY_7: 55,\r\n        KEY_8: 56,\r\n        KEY_9: 57,\r\n        KEY_A: 65,\r\n        KEY_B: 66,\r\n        KEY_C: 67,\r\n        KEY_D: 68,\r\n        KEY_E: 69,\r\n        KEY_F: 70,\r\n        KEY_G: 71,\r\n        KEY_H: 72,\r\n        KEY_I: 73,\r\n        KEY_J: 74,\r\n        KEY_K: 75,\r\n        KEY_L: 76,\r\n        KEY_M: 77,\r\n        KEY_N: 78,\r\n        KEY_O: 79,\r\n        KEY_P: 80,\r\n        KEY_Q: 81,\r\n        KEY_R: 82,\r\n        KEY_S: 83,\r\n        KEY_T: 84,\r\n        KEY_U: 85,\r\n        KEY_V: 86,\r\n        KEY_W: 87,\r\n        KEY_X: 88,\r\n        KEY_Y: 89,\r\n        KEY_Z: 90,\r\n        KEY_LEFT_WINDOW_KEY: 91,\r\n        KEY_RIGHT_WINDOW_KEY: 92,\r\n        KEY_SELECT_KEY: 93,\r\n        KEY_NUMPAD_0: 96,\r\n        KEY_NUMPAD_1: 97,\r\n        KEY_NUMPAD_2: 98,\r\n        KEY_NUMPAD_3: 99,\r\n        KEY_NUMPAD_4: 100,\r\n        KEY_NUMPAD_5: 101,\r\n        KEY_NUMPAD_6: 102,\r\n        KEY_NUMPAD_7: 103,\r\n        KEY_NUMPAD_8: 104,\r\n        KEY_NUMPAD_9: 105,\r\n        KEY_MULTIPLY: 106,\r\n        KEY_ADD: 107,\r\n        KEY_SUBTRACT: 109,\r\n        KEY_DECIMAL_POINT: 110,\r\n        KEY_DIVIDE: 111,\r\n        KEY_F1: 112,\r\n        KEY_F2: 113,\r\n        KEY_F3: 114,\r\n        KEY_F4: 115,\r\n        KEY_F5: 116,\r\n        KEY_F6: 117,\r\n        KEY_F7: 118,\r\n        KEY_F8: 119,\r\n        KEY_F9: 120,\r\n        KEY_F10: 121,\r\n        KEY_F11: 122,\r\n        KEY_F12: 123,\r\n        KEY_NUM_LOCK: 144,\r\n        KEY_SCROLL_LOCK: 145,\r\n        KEY_SEMI_COLON: 186,\r\n        KEY_EQUAL_SIGN: 187,\r\n        KEY_COMMA: 188,\r\n        KEY_DASH: 189,\r\n        KEY_PERIOD: 190,\r\n        KEY_FORWARD_SLASH: 191,\r\n        KEY_GRAVE_ACCENT: 192,\r\n        KEY_OPEN_BRACKET: 219,\r\n        KEY_BACK_SLASH: 220,\r\n        KEY_CLOSE_BRACKET: 221,\r\n        KEY_SINGLE_QUOTE: 222,\r\n        KEY_LEFT_COMMAND: 224,\r\n        KEY_RIGHT_COMMAND: 224\r\n    };\r\n\r\n    function getKey(object, value) {\r\n        return Object.keys(object).filter(function (key) {\r\n            return object[key] === value\r\n        })[0];\r\n    }\r\n\r\n    if (global.J2D !== undefined) global.InputManager = InputManager;\r\n    return InputManager;\r\n}));","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('utils/ArrayMap', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var ArrayMap = function (args) {\r\n        Array.call(this, args);\r\n    };\r\n\r\n    ArrayMap.prototype = Object.create(Array.prototype);\r\n    ArrayMap.prototype.constructor = ArrayMap;\r\n\r\n    ArrayMap.prototype.last = function () {\r\n        return this[this.length - 1];\r\n    };\r\n\r\n    /**\r\n     * @param {ArrayMap} array\r\n     * @returns {boolean}\r\n     */\r\n    ArrayMap.prototype.equals = function (array) {\r\n        if (!array)\r\n            return false;\r\n\r\n        if (this.length != array.length)\r\n            return false;\r\n\r\n        for (var i = 0, l = this.length; i < l; i++) {\r\n            if (this[i] instanceof Array && array[i] instanceof Array) {\r\n                if (!this[i].equals(array[i]))\r\n                    return false;\r\n            }\r\n            else if (this[i] != array[i]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    Object.defineProperty(ArrayMap.prototype, 'equals', {enumerable: false});\r\n\r\n    /**\r\n     * @param {string|Object} object\r\n     * @returns {boolean}\r\n     */\r\n    ArrayMap.prototype.contains = function (object) {\r\n        var i = this.length;\r\n        while (i--) {\r\n            if (this[i] === object) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    Object.defineProperty(ArrayMap.prototype, 'contains', {enumerable: false});\r\n\r\n    /**\r\n     * @param {Function} callback\r\n     * @returns {boolean}\r\n     */\r\n    ArrayMap.prototype.each = function (callback) {\r\n        if (!callback) return false;\r\n        var result = false;\r\n        for (var i = 0; i < this.length; i++) {\r\n            if ((result = callback(this[i], i)) == false) {\r\n                return result;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    Object.defineProperty(ArrayMap.prototype, 'each', {enumerable: false});\r\n\r\n    /**\r\n     * @param {string|Object} key\r\n     * @param {*} value\r\n     * @returns {ArrayMap}\r\n     */\r\n    ArrayMap.prototype.add = function (key, value) {\r\n        if (this.contains(key))\r\n            this[key] = value;\r\n        else {\r\n            this.push(key);\r\n            this[key] = value;\r\n        }\r\n        return this;\r\n    };\r\n    Object.defineProperty(ArrayMap.prototype, 'add', {enumerable: false});\r\n\r\n    /**\r\n     * @param {string|Object} key\r\n     * @returns {ArrayMap}\r\n     */\r\n    ArrayMap.prototype.remove = function (key) {\r\n        for (var i = 0; i < this.length; ++i) {\r\n            if (this[i] == key) {\r\n                this.splice(i, 1);\r\n                delete this[key];\r\n                return this;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    Object.defineProperty(ArrayMap.prototype, 'remove', {enumerable: false});\r\n\r\n    if (typeof define !== 'function' || !define.amd) global.ArrayMap = ArrayMap;\r\n\r\n    return ArrayMap;\r\n}));","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('utils/DeviceUtil', ['jquery', 'utils/Vector2dInteger'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('jquery'), require('utils/Vector2dInteger'));\r\n    } else {\r\n        factory(root.jQuery, root.Vector2dInteger);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function ($, Vector2dInteger) {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * Class utility for get system browser window size\r\n     */\r\n    var DeviceUtil = function () {\r\n        this.width = parseInt($(document).width()) < parseInt(screen.width) ? parseInt($(document).width()) : parseInt(screen.width);\r\n        this.height = parseInt($(document).height()) < parseInt(screen.height) ? parseInt($(document).height()) : parseInt(screen.height);\r\n    };\r\n\r\n    /**\r\n     * @returns {DeviceUtil}\r\n     */\r\n    DeviceUtil.prototype.onResize = function () {\r\n        this.width = window.innerWidth;\r\n        this.height = window.innerHeight;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @returns {number}\r\n     */\r\n    DeviceUtil.prototype.getWidth = function () {\r\n        return this.width;\r\n    };\r\n\r\n    /**\r\n     * @returns {number}\r\n     */\r\n    DeviceUtil.prototype.getHeight = function () {\r\n        return this.height;\r\n    };\r\n\r\n    /**\r\n     * @returns {Vector2d}\r\n     */\r\n    DeviceUtil.prototype.getSize = function () {\r\n        return new Vector2dInteger(this.width, this.height);\r\n    };\r\n\r\n    if (global.J2D === undefined) global.DeviceUtil = DeviceUtil;\r\n\r\n    return DeviceUtil;\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('utils/Exceptions', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * Default Exception\r\n     * Create custom exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var Exception = function (message) {\r\n        Error.call(this);\r\n        this.message = message;\r\n\r\n        /**\r\n         * Convert exception to String\r\n         * @returns {string|}\r\n         */\r\n        this.toString = function () {\r\n            return this.message;\r\n        }\r\n    };\r\n\r\n    Exception.prototype = Object.create(Error.prototype);\r\n    Exception.prototype.constructor = Exception;\r\n\r\n    /**\r\n     * RuntimeException\r\n     * Create RuntimeException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var RuntimeException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    RuntimeException.prototype = Object.create(Exception.prototype);\r\n    RuntimeException.prototype.constructor = RuntimeException;\r\n\r\n    /**\r\n     * InvalidArgumentException\r\n     * Create InvalidArgumentException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var InvalidArgumentException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    InvalidArgumentException.prototype = Object.create(Exception.prototype);\r\n    InvalidArgumentException.prototype.constructor = InvalidArgumentException;\r\n\r\n    /**\r\n     * BadFunctionCallException\r\n     * Create BadFunctionCallException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var BadFunctionCallException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    BadFunctionCallException.prototype = Object.create(Exception.prototype);\r\n    BadFunctionCallException.prototype.constructor = BadFunctionCallException;\r\n\r\n    /**\r\n     * BadMethodCallException\r\n     * Create BadMethodCallException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var BadMethodCallException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    BadMethodCallException.prototype = Object.create(Exception.prototype);\r\n    BadMethodCallException.prototype.constructor = BadMethodCallException;\r\n\r\n    /**\r\n     * LengthException\r\n     * Create LengthException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var LengthException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    LengthException.prototype = Object.create(Exception.prototype);\r\n    LengthException.prototype.constructor = LengthException;\r\n\r\n    /**\r\n     * LogicException\r\n     * Create LogicException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var LogicException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    LogicException.prototype = Object.create(Exception.prototype);\r\n    LogicException.prototype.constructor = LogicException;\r\n\r\n    /**\r\n     * OutOfBoundsException\r\n     * Create OutOfBoundsException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var OutOfBoundsException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    OutOfBoundsException.prototype = Object.create(Exception.prototype);\r\n    OutOfBoundsException.prototype.constructor = OutOfBoundsException;\r\n\r\n    /**\r\n     * OutOfRangeException\r\n     * Create OutOfRangeException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var OutOfRangeException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    OutOfRangeException.prototype = Object.create(Exception.prototype);\r\n    OutOfRangeException.prototype.constructor = OutOfRangeException;\r\n\r\n    /**\r\n     * RangeException\r\n     * Create RangeException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var RangeException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    RangeException.prototype = Object.create(Exception.prototype);\r\n    RangeException.prototype.constructor = RangeException;\r\n\r\n    /**\r\n     * UnexpectedValueException\r\n     *\r\n     * Create UnexpectedValueException exception with message\r\n     * @param {string} message\r\n     */\r\n    var UnexpectedValueException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    UnexpectedValueException.prototype = Object.create(Exception.prototype);\r\n    UnexpectedValueException.prototype.constructor = UnexpectedValueException;\r\n\r\n    if (typeof define !== 'function' || !define.amd) {\r\n        global.Exception = Exception;\r\n        global.RuntimeException = RuntimeException;\r\n        global.InvalidArgumentException = InvalidArgumentException;\r\n        global.BadFunctionCallException = BadFunctionCallException;\r\n        global.BadMethodCallException = BadMethodCallException;\r\n        global.LengthException = LengthException;\r\n        global.LogicException = LogicException;\r\n        global.OutOfBoundsException = OutOfBoundsException;\r\n        global.OutOfRangeException = OutOfRangeException;\r\n        global.RangeException = RangeException;\r\n        global.UnexpectedValueException = UnexpectedValueException;\r\n    }\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('utils/MathUtil', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    /**\r\n     *\r\n     */\r\n    var MathUtil = function () {\r\n    };\r\n\r\n    /**\r\n     * @param {number} number\r\n     * @returns {number}\r\n     */\r\n    MathUtil.number2Integer = function (number) {\r\n        return number >> 0;\r\n    };\r\n\r\n    /**\r\n     * @param {number} number\r\n     * @returns {boolean}\r\n     */\r\n    MathUtil.isInteger = function (number) {\r\n        return typeof number === \"number\" && isFinite(number)\r\n            && number > -9007199254740992 && number < 9007199254740992\r\n            && Math.floor(number) === number;\r\n    };\r\n\r\n    /**\r\n     * @param {number} min\r\n     * @param {number} max\r\n     * @param {number} opacity\r\n     * @returns {string}\r\n     */\r\n    MathUtil.randomColor = function (min, max, opacity) {\r\n        return 'rgba('\r\n            + MathUtil.random(min, max) + ', '\r\n            + MathUtil.random(min, max) + ', '\r\n            + MathUtil.random(min, max) + ', '\r\n            + opacity + ')';\r\n    };\r\n\r\n    /**\r\n     * @param {number} min\r\n     * @param {number} max\r\n     * @param {boolean} omitZero\r\n     * @returns {number}\r\n     */\r\n    MathUtil.random = function (min, max, omitZero) {\r\n        var random = (Math.floor(Math.random() * (max - min + 1) + min));\r\n        return (omitZero && random == 0)\r\n            ? MathUtil.random(min, max, omitZero)\r\n            : random;\r\n    };\r\n\r\n    /**\r\n     * @param {number} degree\r\n     * @returns {number}\r\n     */\r\n    MathUtil.degree2Radian = function (degree) {\r\n        return degree * (Math.PI / 180);\r\n    };\r\n\r\n    /**\r\n     * @param {number} radian\r\n     * @returns {number}\r\n     */\r\n    MathUtil.radian2Degree = function (radian) {\r\n        return radian * (180 / Math.PI);\r\n    };\r\n\r\n    if (global.J2D === undefined) global.MathUtil = MathUtil;\r\n\r\n    return MathUtil\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('utils/Vector2d', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * @param {number} x\r\n     * @param {number} y\r\n     */\r\n    var Vector2d = function (x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    };\r\n\r\n    /**\r\n     * @returns {number}\r\n     */\r\n    Vector2d.prototype.getX = function () {\r\n        return this.x;\r\n    };\r\n\r\n    /**\r\n     * @returns {number}\r\n     */\r\n    Vector2d.prototype.getY = function () {\r\n        return this.y;\r\n    };\r\n\r\n    /**\r\n     * @returns {Vector2d}\r\n     */\r\n    Vector2d.prototype.getCoordinates = function () {\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @returns {Array<number>}\r\n     */\r\n    Vector2d.prototype.toArray = function () {\r\n        return [this.x, this.y];\r\n    };\r\n\r\n    /**\r\n     * @param {Array<number>} array\r\n     * @returns {Vector2d}\r\n     */\r\n    Vector2d.prototype.fromArray = function (array) {\r\n        this.x = array[0];\r\n        this.y = array[1];\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @returns {string}\r\n     */\r\n    Vector2d.prototype.toString = function () {\r\n        return \"(\" + this.x + \",\" + this.y + \")\";\r\n    };\r\n\r\n    if (global.J2D === undefined) global.Vector2d = Vector2d;\r\n\r\n    return Vector2d\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('utils/Vector2dInteger', ['utils/Vector2d'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('utils/Vector2d'));\r\n    } else {\r\n        factory(root.Vector2d);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (Vector2d) {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * @param {number} x\r\n     * @param {number} y\r\n     */\r\n    var Vector2dInteger = function (x, y) {\r\n        Vector2d.call(this, x >> 0, y >> 0);\r\n    };\r\n\r\n    Vector2dInteger.prototype = Object.create(Vector2d.prototype);\r\n    Vector2dInteger.prototype.constructor = Vector2dInteger;\r\n\r\n    /**\r\n     * @param {Array<number>} array\r\n     * @returns {Vector2d|Vector2dInteger}\r\n     */\r\n    Vector2dInteger.prototype.fromArray = function (array) {\r\n        this.x = array[0] >> 0;\r\n        this.y = array[1] >> 0;\r\n\r\n        return this;\r\n    };\r\n\r\n    if (global.J2D === undefined) global.Vector2dInteger = Vector2dInteger;\r\n\r\n    return Vector2dInteger;\r\n}));\r\n"],"sourceRoot":"/source/"}