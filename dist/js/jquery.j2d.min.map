{"version":3,"sources":["jquery.j2d.js","io/InputManager.js","nodes/BaseNode.js","nodes/CameraNode.js","nodes/CollectionNode.js","utils/ArrayMap.js","utils/DeviceUtil.js","utils/Exceptions.js","utils/MathUtil.js","utils/Vector2d.js","utils/Vector2dInteger.js","core/FrameManager.js","core/LayersManager.js","core/SceneManager.js","core/ViewportManager.js","core/WebGL2D.js"],"names":["root","factory","define","amd","module","exports","require","jQuery","SceneManager","DeviceUtil","window","global","$","J2D","element","data","j2d","this","device","scene","Object","defineProperty","get","webGL","set","value","addClass","removeClass","smoothing","io","pause","defaults","id","deltaTime","ready","frameLimit","prototype","start","trigger","stop","flush","resume","focus","getSceneManager","getLayersManager","layersManager","getFrameManager","frameManager","on","once","off","util","disableSmoothing","context","chrome","navigator","userAgent","match","version","parseInt","initPlugin","undefined","j2dPlugin","pluginInit","fn","options","filter","each","extend","guid","replace","c","r","Math","random","v","toString","attr","tabIndex","click","$array","push","length","isFullScreen","document","webkitFullscreenElement","webkitCurrentFullScreenElement","mozFullScreenElement","msFullscreenElement","fullScreen","resizeToFullPage","toggle","current","onResize","ArrayMap","getKey","object","keys","key","InputManager","mouse","startPosition","x","y","currentPosition","previousDistance","distance","viewport","position","enabled","enableAdditionalData","keysPressed","writeMode","timePressed","preventAll","cursor","image","keyMap","FULLSCREEN","KEY_CTRL","KEY_F11","checkKeyMap","e","enableCallback","manager","keyCode","which","index","hasOwnProperty","isArray","eval","equals","events","onMouseClick","isPlay","hasClass","event","inArray","pageX","pageY","timeStamp","preventDefault","splice","indexOf","onMouseWheel","originalEvent","wheelDelta","fixMouseWheel","mouseWheelCancel","onMouseMove","sqrt","pow","toFixed","onKeyboardPress","char","String","fromCharCode","onTouchTap","touch","touches","changedTouches","onTouchMove","bindEvents","selector","unbindEvents","init","update","dX","canvas","offsetWidth","width","dY","offsetHeight","height","offset","left","top","clear","keyPressed","SCROLL_MOUSE_UP","SCROLL_MOUSE_DOWN","enable","disable","load","newKeyMap","oldKeyMap","JSON","stringify","parse","save","setKeys","mapObject","getPressData","keyList","time","Date","now","getMouseMoveDistance","previous","checkPressedKeyList","isNaN","checkPressedKeyMap","setWriteMode","mode","isWriteMode","setCursorImage","css","toggleCursor","isCursorVisible","KEY_MOUSE_LEFT","KEY_MOUSE_MIDDLE","KEY_MOUSE_RIGHT","KEY_BACKSPACE","KEY_TAB","KEY_ENTER","KEY_SHIFT","KEY_ALT","KEY_PAUSE","KEY_BREAK","KEY_CAPS_LOCK","KEY_ESCAPE","KEY_SPACE_BAR","KEY_PAGE_UP","KEY_PAGE_DOWN","KEY_END","KEY_HOME","KEY_LEFT_ARROW","KEY_UP_ARROW","KEY_RIGHT_ARROW","KEY_DOWN_ARROW","KEY_INSERT","KEY_DELETE","KEY_0","KEY_1","KEY_2","KEY_3","KEY_4","KEY_5","KEY_6","KEY_7","KEY_8","KEY_9","KEY_A","KEY_B","KEY_C","KEY_D","KEY_E","KEY_F","KEY_G","KEY_H","KEY_I","KEY_J","KEY_K","KEY_L","KEY_M","KEY_N","KEY_O","KEY_P","KEY_Q","KEY_R","KEY_S","KEY_T","KEY_U","KEY_V","KEY_W","KEY_X","KEY_Y","KEY_Z","KEY_LEFT_WINDOW_KEY","KEY_RIGHT_WINDOW_KEY","KEY_SELECT_KEY","KEY_NUMPAD_0","KEY_NUMPAD_1","KEY_NUMPAD_2","KEY_NUMPAD_3","KEY_NUMPAD_4","KEY_NUMPAD_5","KEY_NUMPAD_6","KEY_NUMPAD_7","KEY_NUMPAD_8","KEY_NUMPAD_9","KEY_MULTIPLY","KEY_ADD","KEY_SUBTRACT","KEY_DECIMAL_POINT","KEY_DIVIDE","KEY_F1","KEY_F2","KEY_F3","KEY_F4","KEY_F5","KEY_F6","KEY_F7","KEY_F8","KEY_F9","KEY_F10","KEY_F12","KEY_NUM_LOCK","KEY_SCROLL_LOCK","KEY_SEMI_COLON","KEY_EQUAL_SIGN","KEY_COMMA","KEY_DASH","KEY_PERIOD","KEY_FORWARD_SLASH","KEY_GRAVE_ACCENT","KEY_OPEN_BRACKET","KEY_BACK_SLASH","KEY_CLOSE_BRACKET","KEY_SINGLE_QUOTE","KEY_LEFT_COMMAND","KEY_RIGHT_COMMAND","Vector2d","BaseNode","baseNode","opacity","visible","angle","enabledCache","type","size","cache","getPosition","setPosition","getVector","getSize","setSize","getOffset","setOffset","render","collection","CameraNode","call","create","constructor","getCameraViewport","screen","calculate","scale","CollectionNode","add","node","remove","args","Array","last","array","i","l","enumerable","contains","callback","result","Vector2dInteger","innerWidth","innerHeight","getWidth","getHeight","Exception","message","Error","RuntimeException","InvalidArgumentException","BadFunctionCallException","BadMethodCallException","LengthException","LogicException","OutOfBoundsException","OutOfRangeException","RangeException","UnexpectedValueException","MathUtil","number2Integer","number","isInteger","isFinite","floor","randomColor","min","max","omitZero","degree2Radian","degree","PI","radian2Degree","radian","getX","getY","toArray","fromArray","instance","engineStack","dataStack","timestamp","frameRun","breakAnimationFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","Number","MAX_SAFE_INTEGER","setTimeout","bind","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","FrameManager","name","engine","params","lastTime","sceneStartTime","sceneSkipTime","asyncUpdate","asyncRender","interval","pulse","runMainLoop","setDefaultFrameLimit","Init","instanceFrameManager","LayersManager","layers","WebGL2D","originalWidth","originalHeight","originalMargin","zIndex","backgroundColor","enableFullScreen","gameState","sceneManager","fillStyle","fillRect","style","display","initCanvas","createElement","getContext","shadowColor","append","pos","clearRect","resize","restore","setGameState","console","warn","async","fullscreen","getElementById","requestFullscreen","webkitRequestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","exitFullscreen","webkitExitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","enableFullscreen","toggleFullScreen","calculateScale","ViewportManager","cameras","camera","setScreen","addCamera","removeCamera","updateViewport","setViewport","getViewport","isPOT","Transform","mat","clearStack","mat3","identity","multiply","m1","m2","m10","m11","m12","m13","m14","m15","m16","m17","m18","m20","m21","m22","m23","m24","m25","m26","m27","m28","vec2_multiply","mOut","transpose","m","STACK_DEPTH_LIMIT","init_mat","m_stack","m_cache","c_stack","valid","getIdentity","setIdentity","getResult","pushMatrix","popMatrix","translateMatrix","translate","trMatrix","tr","a","b","d","f","scaleMatrix","rotateMatrix","rotate","ang","sAng","cAng","sin","cos","gl","fs","vs","shaderProgram","transform","shaderPool","maxTextureSize","gl2d","$getContext","force","initShaders","initBuffers","initCanvas2DAPI","BLEND","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","getParameter","MAX_TEXTURE_SIZE","postInit","shaderMask","texture","crop","path","getFragmentShaderSource","sMask","fsSource","join","getVertexShaderSource","stackDepth","vsSource","transformStackDepth","storedShader","useProgram","createShader","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","VERTEX_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","vertexPositionAttribute","getAttribLocation","enableVertexAttribArray","uColor","getUniformLocation","uSampler","uCropSource","pMatrix","uTransforms","uniformMatrix4fv","rectVerts","Float32Array","rectVertexPositionBuffer","createBuffer","rectVertexColorBuffer","pathVertexPositionBuffer","pathVertexColorBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","instances","hue2rgb","p","q","t","HSLAToRGBA","h","s","g","colorStringToVec4","channel","isPercent","hasAlpha","alphaChannel","sameType","reRGBAColor","exec","parseFloat","reHSLAColor","reHex6Color","colorInt","reHex3Color","hexString","toLowerCase","colorKeywords","colorVecToString","vec4","saveDrawState","bakedDrawState","drawState","strokeStyle","globalAlpha","globalCompositeOperation","lineCap","lineJoin","lineWidth","miterLimit","shadowBlur","shadowOffsetX","shadowOffsetY","textAlign","font","textBaseline","imageSmoothingEnabled","drawStateStack","restoreDrawState","pop","sendTransformStack","sp","stack","maxI","uniformMatrix3fv","SubPath","closed","verts","fillSubPath","subPath","subPaths","vertexAttribPointer","FLOAT","uniform4f","drawArrays","TRIANGLE_FAN","strokeSubPath","LINE_LOOP","LINE_STRIP","Texture","obj","createTexture","textureCache","imageCache","ctx","drawImage","GL_FUNCTION","LINEAR","GL_MIPMAP_FUNCTION","LINEAR_MIPMAP_LINEAR","NEAREST","LINEAR_MIPMAP_NEAREST","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","generateMipmap","textCanvas","textCtx","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","drawStyle","$lineWidth","fillText","text","strokeText","measureText","tempCanvas","tempCtx","createImageData","getImageData","buffer","Uint8Array","readPixels","w","j","maxJ","index1","index2","putImageData","imageData","dx","dy","setTransform","apply","arguments","strokeRect","beginPath","closePath","prevPath","startX","startY","newPath","moveTo","lineTo","quadraticApproximateCount","quadraticCurveTo","hx","hy","tx","ty","fromx","fromy","bezierApproximateCount","bezierCurveTo","h1x","h1y","h2x","h2y","arcTo","rect","arcApproximateCount","arc","cx","cy","radius","startAngle","endAngle","anticlockwise","count","fixed","fill","stroke","clip","isPointInPath","drawFocusRing","doCrop","cacheIndex","activeTexture","TEXTURE0","uniform1i","configurable","writable"],"mappings":"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","file":"jquery.j2d.js","sourcesContent":["/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n/*\r\n * TODO:: Events System\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('jquery.j2d', [\r\n            'jquery',\r\n            'core/SceneManager',\r\n            'utils/DeviceUtil'\r\n        ], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(\r\n            require('jquery'),\r\n            require('core/SceneManager'),\r\n            require('utils/DeviceUtil')\r\n        );\r\n    } else {\r\n        factory(\r\n            root.jQuery,\r\n            root.SceneManager,\r\n            root.DeviceUtil\r\n        );\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function ($, SceneManager, DeviceUtil) {\r\n    \"use strict\";\r\n\r\n    var J2D = function J2D(element, data) {\r\n        var j2d = this;\r\n        this.element = element;\r\n        this.data = data;\r\n\r\n        this.device = new DeviceUtil();\r\n        this.scene = new SceneManager(this);\r\n\r\n        Object.defineProperty(this, 'WebGL', {\r\n            get: function () {\r\n                return j2d.data.webGL;\r\n            },\r\n            set: function (value) {\r\n                j2d.data.webGL = !!value;\r\n                if (!!value && !j2d.data.webGL) {\r\n                    j2d.element.addClass('WebGL');\r\n                } else if (!value && j2d.data.webGL) {\r\n                    j2d.element.removeClass('WebGL');\r\n                }\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(this, 'smoothing', {\r\n            get: function () {\r\n                return j2d.data.smoothing;\r\n            },\r\n            set: function (value) {\r\n                j2d.data.smoothing = !!value;\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(this, 'io', {\r\n            get: function () {\r\n                return j2d.data.io;\r\n            },\r\n            set: function (value) {\r\n                return j2d.data.io = value\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(this, 'isPlay', {\r\n            get: function () {\r\n                return !j2d.data.pause;\r\n            },\r\n            set: function () {\r\n            }\r\n        });\r\n    };\r\n\r\n    J2D.defaults = {\r\n        id: null,\r\n        io: null,\r\n        deltaTime: 0,\r\n        pause: false,\r\n        ready: false,\r\n\r\n        frameLimit: 60,\r\n        smoothing: true,\r\n\r\n        webGL: false\r\n    };\r\n\r\n    /** +GameEngine **/\r\n    J2D.prototype.start = function () {\r\n        this.scene.start();\r\n        this.trigger('start');\r\n    };\r\n\r\n    J2D.prototype.stop = function () {\r\n        this.scene.stop();\r\n        this.trigger('stop');\r\n    };\r\n\r\n    J2D.prototype.pause = function () {\r\n        if (this.data.io) this.data.io.flush();\r\n        this.data.pause = true;\r\n        this.element.addClass('pause');\r\n        this.trigger('pause');\r\n    };\r\n\r\n    J2D.prototype.resume = function () {\r\n        this.element.removeClass('pause').focus();\r\n        this.data.pause = false;\r\n        if (this.data.io) this.data.io.flush();\r\n        this.trigger('resume');\r\n    };\r\n    /** -GameEngine **/\r\n\r\n    /** +Scene **/\r\n    J2D.prototype.getSceneManager = function () {\r\n        return this.scene;\r\n    };\r\n    /** -Scene **/\r\n\r\n    /** +Layers **/\r\n    J2D.prototype.getLayersManager = function () {\r\n        return this.scene.layersManager;\r\n    };\r\n    /** -Layers **/\r\n\r\n    J2D.prototype.getFrameManager = function () {\r\n        return this.scene.frameManager;\r\n    };\r\n\r\n    J2D.prototype.on = function () {\r\n    };\r\n    J2D.prototype.once = function () {\r\n    };\r\n    J2D.prototype.off = function () {\r\n    };\r\n    J2D.prototype.trigger = function () {\r\n    };\r\n\r\n    /** Utils **/\r\n    J2D.util = {\r\n        disableSmoothing: function (context) {\r\n            var chrome = global.navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);\r\n            var version = chrome ? parseInt(chrome[2], 10) : false;\r\n\r\n            context['imageSmoothingEnabled'] = false;\r\n            context['mozImageSmoothingEnabled'] = false;\r\n            context['oImageSmoothingEnabled'] = false;\r\n            if (version && version <= 29) {\r\n                context['webkitImageSmoothingEnabled'] = false;\r\n            }\r\n            context['msImageSmoothingEnabled'] = false;\r\n        }\r\n    };\r\n    J2D.prototype.util = J2D.util;\r\n\r\n    /* ------------------------------ Plugin ------------------------------ */\r\n\r\n    (J2D.initPlugin = function () {\r\n        if (window.j2dPlugin !== undefined) return null;\r\n        window.j2dPlugin = {pluginInit: true};\r\n\r\n        $.fn.j2d = function (options) {\r\n            this.filter('div.canvas:not([guid])').each(function () {\r\n                var options = $.extend(true, {}, J2D.defaults, options);\r\n\r\n                var guid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n                    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n                    return v.toString(16);\r\n                });\r\n                options.id = guid;\r\n\r\n                $(this).attr('guid', guid);\r\n                var id = $(this).attr('id');\r\n                if (typeof id === 'undefined' || id === false) {\r\n                    $(this).attr('id', guid);\r\n                }\r\n                var tabIndex = $(this).attr('tabindex');\r\n                if (typeof tabIndex === 'undefined' || tabIndex === false) {\r\n                    $(this).attr('tabindex', '-1');\r\n                }\r\n                $(this).data('j2d', new J2D($(this), options)).addClass('j2d');\r\n                $(this).click().focus();\r\n            });\r\n\r\n            var $array = [];\r\n            this.filter('div.canvas[guid]').each(function () {\r\n                $array.push($(this).data('j2d'));\r\n            });\r\n\r\n            return (1 === $array.length) ? $(this).data('j2d') : $array;\r\n        };\r\n\r\n        var isFullScreen = function () {\r\n            //noinspection JSUnresolvedVariable\r\n            return !!(document.webkitFullscreenElement\r\n                || document.webkitCurrentFullScreenElement\r\n                || document.mozFullScreenElement\r\n                || document.msFullscreenElement\r\n            );\r\n        };\r\n\r\n        $(document).on('fullscreenchange webkitfullscreenchange mozfullscreenchange MSFullscreenChange', function () {\r\n            var fullScreen = isFullScreen();\r\n            if (!fullScreen) {\r\n                $('div.canvas[guid].active').data('j2d').scene.resizeToFullPage(fullScreen);\r\n                $('div.canvas[guid]:not(.active)').toggle(!fullScreen);\r\n            }\r\n        });\r\n\r\n        $(document).on('click', 'div.canvas[guid].pause', function () {\r\n            $(this).data('j2d').resume();\r\n\r\n            var current = this;\r\n            $('div.canvas[guid]:not(.pause-disable):not(:focus)').each(function () {\r\n                if (current !== this) $(this).removeClass('active').data('j2d').pause();\r\n            });\r\n            $('div.canvas[guid].active.pause-disable:not(:focus)').each(function () {\r\n                if (current !== this) $(this).removeClass('active');\r\n            });\r\n        });\r\n\r\n        $(document).on('click touch mouseenter', 'div.canvas[guid]:not(.resume-by-click):not(:focus)', function () {\r\n            $(this).addClass('active').focus().data('j2d').resume();\r\n\r\n            var current = this;\r\n            $('div.canvas[guid]:not(.pause-disable):not(:focus)').each(function () {\r\n                if (current !== this) $(this).removeClass('active').data('j2d').pause();\r\n            });\r\n            $('div.canvas[guid].active.pause-disable:not(:focus)').each(function () {\r\n                if (current !== this) $(this).removeClass('active');\r\n            });\r\n        });\r\n\r\n        $(window).on('focus', function () {\r\n            $('div.canvas[guid].active').each(function () {\r\n                $(this).data('j2d').resume();\r\n            });\r\n        }).on('blur', function () {\r\n            $('div.canvas[guid]').each(function () {\r\n                $(this).data('j2d').pause();\r\n            });\r\n        });\r\n\r\n        $(window).on('resize', function () {\r\n            $('div.canvas[guid]').each(function () {\r\n                $(this).data('j2d').device.onResize();\r\n            });\r\n            var fullScreen = isFullScreen();\r\n            if (fullScreen) {\r\n                $('div.canvas[guid].active').data('j2d').scene.resizeToFullPage(fullScreen);\r\n            }\r\n        });\r\n    })();\r\n\r\n    if (global.J2D === undefined) global.J2D = J2D;\r\n\r\n    return J2D;\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('io/InputManager', ['jquery', 'utils/ArrayMap'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('jquery'), require('utils/ArrayMap'));\r\n    } else {\r\n        factory(root.jQuery, root.ArrayMap);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function ($, ArrayMap) {\r\n    \"use strict\";\r\n\r\n    var InputManager = function (j2d) {\r\n        this.j2d = j2d;\r\n\r\n        this.id = j2d.id;\r\n        this.element = j2d.element;\r\n\r\n        this.data = {\r\n            mouse: {\r\n                startPosition: {\r\n                    x: 0,\r\n                    y: 0\r\n                },\r\n                currentPosition: {\r\n                    x: 0,\r\n                    y: 0\r\n                },\r\n                previousDistance: 0,\r\n                distance: 0\r\n            },\r\n            viewport: {\r\n                position: {\r\n                    x: 0,\r\n                    y: 0\r\n                }\r\n            },\r\n            enabled: false,\r\n            enableAdditionalData: false,\r\n            keysPressed: new ArrayMap(),\r\n            writeMode: false,\r\n            timePressed: 0,\r\n            preventAll: false,\r\n\r\n            cursor: {\r\n                enabled: false,\r\n                image: 'auto'\r\n            }\r\n        };\r\n        this.keyMap = {\r\n            //DEBUG_INFO: [[InputManager.key.KEY_CTRL, InputManager.key.KEY_F1], 'j2d.debug.toggleScreen', {}],\r\n            FULLSCREEN: [[InputManager.key.KEY_CTRL, InputManager.key.KEY_F11], 'j2d.scene.toggleFullScreen', {}]\r\n        };\r\n    };\r\n\r\n    var checkKeyMap = function (e, enableCallback) {\r\n        if (enableCallback === undefined) enableCallback = true;\r\n\r\n        var j2d = e.data.manager.j2d,\r\n            manager = e.data.manager,\r\n            keyCode = e.which,\r\n            keyMap = e.data.manager.keyMap;\r\n\r\n        for (var index in keyMap) {\r\n            if (keyMap.hasOwnProperty(index)) {\r\n                var value = keyMap[index];\r\n                if (!$.isArray(value[0]) && value[0] === keyCode && !!value[1]) {\r\n                    if (typeof value[1] === 'string') {\r\n                        value[1] = eval('(' + value[1] + ')');\r\n                    }\r\n                    if ((typeof value[1] === 'function') && enableCallback) {\r\n                        value[1](j2d, value[2]);\r\n                    }\r\n                    return true;\r\n                } else if ($.isArray(value[0])\r\n                    && manager.data.keysPressed.equals(value[0]) && !!value[1]\r\n                ) {\r\n                    if (typeof value[1] === 'string') {\r\n                        value[1] = eval('(' + value[1] + ')');\r\n                    }\r\n                    if (typeof value[1] === 'function' && enableCallback) {\r\n                        value[1](j2d, value[2]);\r\n                    }\r\n                    return true\r\n                }\r\n            }\r\n        }\r\n        return false\r\n    };\r\n\r\n    var events = {\r\n        onMouseClick: function (e) {\r\n            var manager = e.data.manager;\r\n            if (!manager.data.enabled || !manager.j2d.isPlay || !manager.j2d.element.hasClass('active')) return true;\r\n            var keysPressed = manager.data.keysPressed;\r\n            var keyCode = getKey(InputManager.key, e.which) || 'KEY_UNKNOWN_' + e.which;\r\n            var mouse = manager.data.mouse;\r\n\r\n            if (e.data.event !== 2) {\r\n                if (e.data.event === 0) {\r\n                    if (-1 === $.inArray(InputManager.key[keyCode], keysPressed)) {\r\n                        keysPressed.push(InputManager.key[keyCode]);\r\n\r\n                        if (manager.data.enableAdditionalData) {\r\n                            mouse.startPosition.x = e.pageX;\r\n                            mouse.startPosition.y = e.pageY;\r\n                            mouse.distance = 0;\r\n\r\n                            manager.data.timePressed = e.timeStamp;\r\n                        }\r\n                    }\r\n                    if (checkKeyMap(e, false) || manager.data.preventAll) {\r\n                        e.preventDefault();\r\n                    }\r\n                } else {\r\n                    if (checkKeyMap(e) || manager.data.preventAll) {\r\n                        e.preventDefault();\r\n                    }\r\n                    if (manager.data.enableAdditionalData) {\r\n                        mouse.previousDistance = mouse.distance;\r\n                        mouse.startPosition.x = 0;\r\n                        mouse.startPosition.y = 0;\r\n                    }\r\n\r\n                    keysPressed.splice(\r\n                        keysPressed.indexOf(InputManager.key[keyCode]), 1\r\n                    );\r\n                }\r\n                manager.element.trigger(e.data.event === 0 ?\r\n                    'mouseKeyDown' : 'mouseKeyUp', {keyCode: keyCode}\r\n                );\r\n            } else {\r\n                if (checkKeyMap(e, false)) {\r\n                    e.preventDefault();\r\n                }\r\n            }\r\n        },\r\n\r\n        onMouseWheel: function (e) {\r\n            var manager = e.data.manager;\r\n            if (!manager.data.enabled || !manager.j2d.isPlay || !manager.j2d.element.hasClass('active')) return true;\r\n            var keysPressed = manager.data.keysPressed;\r\n            var keyCode = (e.originalEvent.wheelDelta / 120 > 0) ?\r\n                getKey(InputManager.key, 4) : getKey(InputManager.key, 5);\r\n\r\n            e.which = (e.originalEvent.wheelDelta / 120 > 0) ? 4 : 5;\r\n\r\n            if (-1 === $.inArray(InputManager.key[keyCode], keysPressed)) {\r\n                keysPressed.push(InputManager.key[keyCode]);\r\n            }\r\n\r\n            if (checkKeyMap(e) || manager.data.preventAll) {\r\n                e.preventDefault();\r\n                manager.fixMouseWheel();\r\n            }\r\n\r\n            manager.element.trigger('mouseWheel', {keyCode: keyCode});\r\n        },\r\n\r\n        mouseWheelCancel: function (keysPressed, keyCode) {\r\n            keysPressed.splice(\r\n                keysPressed.indexOf(InputManager.key[keyCode]), 1\r\n            );\r\n        },\r\n\r\n        onMouseMove: function (e) {\r\n            var manager = e.data.manager;\r\n            var mouse = e.data.manager.data.mouse;\r\n\r\n            manager.data.mouse.currentPosition.x = e.pageX;\r\n            manager.data.mouse.currentPosition.y = e.pageY;\r\n\r\n            if (e.data.manager.data.enableAdditionalData) {\r\n                mouse.distance = Math.sqrt(\r\n                    Math.pow((mouse.currentPosition.x - mouse.startPosition.x), 2)\r\n                    + Math.pow((mouse.currentPosition.y - mouse.startPosition.y), 2)\r\n                ).toFixed(1);\r\n            }\r\n        },\r\n\r\n        onKeyboardPress: function (e) {\r\n            var manager = e.data.manager;\r\n            if (!manager.data.enabled || !manager.j2d.isPlay || !manager.element.hasClass('active')) return true;\r\n            var keysPressed = manager.data.keysPressed;\r\n            var keyCode = getKey(InputManager.key, e.which) || 'KEY_UNKNOWN_' + e.which;\r\n            if (e.data.event === 2 && true === manager.data.writeMode) {\r\n                var char = String.fromCharCode(e.which || e.keyCode);\r\n                e.preventDefault();\r\n                manager.element.focus().trigger('keyboardCharPress', {\r\n                    key: e.which || e.keyCode,\r\n                    keyCode: keyCode,\r\n                    char: char\r\n                });\r\n            }\r\n\r\n            if (e.data.event !== 2 && false === manager.data.writeMode) {\r\n                if (e.data.event === 0) {\r\n                    if (-1 === $.inArray(InputManager.key[keyCode], keysPressed)) {\r\n                        keysPressed.push(InputManager.key[keyCode]);\r\n                        if (manager.data.enableAdditionalData) {\r\n                            manager.data.timePressed = e.timeStamp;\r\n                        }\r\n                    }\r\n                    if (checkKeyMap(e, false) || manager.data.preventAll) {\r\n                        e.preventDefault();\r\n                    }\r\n                } else {\r\n                    if (checkKeyMap(e) || manager.data.preventAll) {\r\n                        e.preventDefault();\r\n                    }\r\n\r\n                    keysPressed.splice(\r\n                        keysPressed.indexOf(InputManager.key[keyCode]), 1\r\n                    );\r\n                }\r\n\r\n                manager.element.trigger(e.data.event === 0 ?\r\n                    'keyboardKeyDown' : 'keyboardKeyUp', {keyCode: keyCode, key: e.which || e.keyCode}\r\n                );\r\n            }\r\n\r\n            if (e.data.event !== 2 && true === manager.data.writeMode) {\r\n                manager.element.trigger(e.data.event === 0 ?\r\n                    'keyboardKeyDown' : 'keyboardKeyUp', {keyCode: keyCode, key: e.which || e.keyCode}\r\n                );\r\n            }\r\n        },\r\n\r\n        onTouchTap: function (e) {\r\n            var manager = e.data.manager;\r\n            if (!manager.data.enabled || !manager.j2d.isPlay || !manager.j2d.element.hasClass('active')) return true;\r\n            var keysPressed = manager.data.keysPressed;\r\n            var keyCode = getKey(InputManager.key, e.which + 1) || 'KEY_UNKNOWN_' + e.which;\r\n            var touch = e.originalEvent.touches[0] || e.originalEvent.changedTouches[0];\r\n            var mouse = manager.data.mouse;\r\n\r\n            if (e.data.event === 0) {\r\n                if (-1 === $.inArray(InputManager.key[keyCode], keysPressed)) {\r\n                    keysPressed.push(InputManager.key[keyCode]);\r\n                    if (manager.data.enableAdditionalData) {\r\n                        mouse.startPosition.x = touch.pageX;\r\n                        mouse.startPosition.y = touch.pageY;\r\n                        mouse.distance = 0;\r\n\r\n                        manager.data.timePressed = e.timeStamp;\r\n                    }\r\n                }\r\n                if (checkKeyMap(e, false) || manager.data.preventAll) {\r\n                    e.preventDefault();\r\n                }\r\n            } else {\r\n                if (checkKeyMap(e) || manager.data.preventAll) {\r\n                    e.preventDefault();\r\n                }\r\n\r\n                if (manager.data.enableAdditionalData) {\r\n                    mouse.previousDistance = mouse.distance;\r\n                    mouse.startPosition.x = 0;\r\n                    mouse.startPosition.y = 0;\r\n                }\r\n\r\n                keysPressed.splice(\r\n                    keysPressed.indexOf(InputManager.key[keyCode]), 1\r\n                );\r\n            }\r\n\r\n            manager.element.trigger(e.data.event === 0 ?\r\n                'mouseKeyDown' : 'mouseKeyUp', {keyCode: keyCode}\r\n            );\r\n        },\r\n\r\n        onTouchMove: function (e) {\r\n            var touch = e.originalEvent.touches[0] || e.originalEvent.changedTouches[0];\r\n            var mouse = e.data.manager.data.mouse;\r\n\r\n            mouse.currentPosition.x = touch.pageX.toFixed(0);\r\n            mouse.currentPosition.y = touch.pageY.toFixed(0);\r\n\r\n            if (e.data.manager.data.enableAdditionalData) {\r\n                mouse.distance = Math.sqrt(\r\n                    Math.pow((mouse.currentPosition.x - mouse.startPosition.x), 2)\r\n                    + Math.pow((mouse.currentPosition.y - mouse.startPosition.y), 2)\r\n                ).toFixed(1);\r\n            }\r\n        }\r\n    };\r\n\r\n    var bindEvents = function (manager) {\r\n        var selector = '[guid=' + manager.id + ']';\r\n\r\n        $(document).on('contextmenu', selector, {manager: manager, event: 2}, events.onMouseClick);\r\n        $(document).on('mousedown', selector, {manager: manager, event: 0}, events.onMouseClick);\r\n        $(document).on('mouseup', selector, {manager: manager, event: 1}, events.onMouseClick);\r\n        $(document).on('mousewheel', selector, {manager: manager}, events.onMouseWheel);\r\n        $(document).on('mousemove', selector, {manager: manager}, events.onMouseMove);\r\n\r\n        $(document).on('keydown', null, {manager: manager, event: 0}, events.onKeyboardPress);\r\n        $(document).on('keyup', null, {manager: manager, event: 1}, events.onKeyboardPress);\r\n        $(document).on('keypress', null, {manager: manager, event: 2}, events.onKeyboardPress);\r\n\r\n        $(document).on('touchstart', selector, {manager: manager, event: 0}, events.onTouchTap);\r\n        $(document).on('touchend', selector, {manager: manager, event: 1}, events.onTouchTap);\r\n        $(document).on('touchmove ', selector, {manager: manager}, events.onTouchMove);\r\n    };\r\n\r\n    var unbindEvents = function (manager) {\r\n        var selector = '[guid=' + manager.id + ']';\r\n\r\n        $(document).off('contextmenu', selector, {manager: manager, event: 1}, events.onMouseClick);\r\n        $(document).off('mousedown', selector, {manager: manager, event: 0}, events.onMouseClick);\r\n        $(document).off('mouseup', selector, {manager: manager, event: 1}, events.onMouseClick);\r\n        $(document).off('mousewheel', selector, {manager: manager}, events.onMouseWheel);\r\n        $(document).off('mousemove', selector, {manager: manager}, events.onMouseMove);\r\n\r\n        $(document).off('keydown', null, {manager: manager, event: 0}, events.onKeyboardPress);\r\n        $(document).off('keyup', null, {manager: manager, event: 1}, events.onKeyboardPress);\r\n        $(document).off('keypress', null, {manager: manager, event: 2}, events.onKeyboardPress);\r\n\r\n        $(document).off('touchstart', selector, {manager: manager, event: 0}, events.onTouchTap);\r\n        $(document).off('touchend', selector, {manager: manager, event: 1}, events.onTouchTap);\r\n        $(document).off('touchmove ', selector, {manager: manager}, events.onTouchMove);\r\n    };\r\n\r\n    InputManager.prototype.init = function () {\r\n        if (!this.data.enabled && global.j2dPlugin.pluginInit) {\r\n            bindEvents(this);\r\n\r\n            this.data.enabled = true;\r\n        }\r\n    };\r\n\r\n    InputManager.prototype.update = function () {\r\n        if (!this.data.enabled) return false;\r\n\r\n        var dX = this.j2d.scene.canvas.offsetWidth / this.j2d.scene.width,\r\n            dY = this.j2d.scene.canvas.offsetHeight / this.j2d.scene.height,\r\n            x = this.data.mouse.currentPosition.x / dX,\r\n            y = this.data.mouse.currentPosition.y / dY;\r\n\r\n        var offset = this.element.offset();\r\n        this.data.viewport.x = this.j2d.scene.viewport.x + x - offset.left;\r\n        this.data.viewport.y = this.j2d.scene.viewport.y + y - offset.top;\r\n    };\r\n\r\n    InputManager.prototype.flush = function () {\r\n        this.data.keysPressed.length = 0;\r\n    };\r\n\r\n    InputManager.prototype.clear = function () {\r\n    };\r\n\r\n    InputManager.prototype.fixMouseWheel = function () {\r\n        var keyPressed = this.data.keysPressed;\r\n        if (-1 !== $.inArray(InputManager.key.SCROLL_MOUSE_UP, keyPressed)) {\r\n            events.mouseWheelCancel(keyPressed, InputManager.key.SCROLL_MOUSE_UP);\r\n        } else if (-1 !== $.inArray(InputManager.key.SCROLL_MOUSE_DOWN, keyPressed)) {\r\n            events.mouseWheelCancel(keyPressed, InputManager.key.SCROLL_MOUSE_DOWN);\r\n        }\r\n    };\r\n\r\n    InputManager.prototype.enable = function () {\r\n        if (!this.data.enabled) {\r\n            //bindEvents(this);\r\n            this.data.enabled = false;\r\n        }\r\n    };\r\n\r\n    InputManager.prototype.disable = function () {\r\n        if (this.data.enabled) {\r\n            //unbindEvents(this);\r\n            this.data.enabled = false;\r\n        }\r\n    };\r\n\r\n    InputManager.prototype.load = function (newKeyMap) {\r\n        var oldKeyMap = JSON.stringify(this.keyMap);\r\n        this.keyMap = JSON.parse(newKeyMap);\r\n        return oldKeyMap;\r\n    };\r\n\r\n    InputManager.prototype.save = function () {\r\n        return JSON.stringify(this.keyMap);\r\n    };\r\n\r\n    /** +KeyMap Manager **/\r\n    InputManager.prototype.setKeys = function (mapObject) {\r\n        this.keyMap = $.extend(true, {}, this.keyMap, mapObject);\r\n    };\r\n    /** -KeyMap Manager **/\r\n\r\n    var getPressData = function (manager, keyList) {\r\n        if (!manager.data.enableAdditionalData) return true;\r\n        return {\r\n            keyList: keyList,\r\n            time: Date.now() - manager.data.timePressed\r\n        };\r\n    };\r\n\r\n    InputManager.prototype.getMouseMoveDistance = function () {\r\n        if (!this.data.enableAdditionalData) return 0;\r\n        return {current: this.data.mouse.distance, previous: this.data.mouse.previousDistance};\r\n    };\r\n\r\n    /** +Input Checkers **/\r\n    InputManager.prototype.checkPressedKeyList = function (keyList) {\r\n        if ($.isArray(keyList)) {\r\n            if (keyList.length !== this.data.keysPressed.length) {\r\n                return false;\r\n            } else if (this.data.keysPressed.equals(keyList)) {\r\n                this.fixMouseWheel();\r\n                return getPressData(this, keyList);\r\n            }\r\n            this.fixMouseWheel();\r\n            return false;\r\n        }\r\n        //if (!this.data.keysPressed.equals([])) console.log(this.data.keysPressed);\r\n        if (isNaN(keyList)) return false;\r\n        if (-1 !== this.data.keysPressed.indexOf(keyList)) {\r\n            this.fixMouseWheel();\r\n            return getPressData(this, keyList);\r\n        }\r\n        this.fixMouseWheel();\r\n        return false;\r\n    };\r\n\r\n    InputManager.prototype.checkPressedKeyMap = function (key) {\r\n        if (this.keyMap[key] === undefined) return false;\r\n        var keyList = this.keyMap[key][0];\r\n\r\n        return this.checkPressedKeyList(keyList);\r\n    };\r\n\r\n    //InputManager.prototype.getPosition = function () {\r\n    //    return this.j2d.vector.v2f(this.data.viewport.x + 0.5, this.data.viewport.y + 0.5);\r\n    //};\r\n\r\n    //InputManager.prototype.onNode = function (id) {\r\n    //    if (!id.layer.visible) return false;\r\n    //    return (this.data.viewport.x > id.options.position.x && this.data.viewport.x < id.options.position.x + id.options.size.x) &&\r\n    //        (this.data.viewport.y > id.options.position.y && this.data.viewport.y < id.options.position.y + id.options.size.y);\r\n    //};\r\n    /** -Input Checkers **/\r\n\r\n    /** +Input Write Mode **/\r\n    InputManager.prototype.setWriteMode = function (mode) {\r\n        this.data.writeMode = !!mode;\r\n    };\r\n\r\n    InputManager.prototype.isWriteMode = function () {\r\n        return !!this.data.writeMode;\r\n    };\r\n    /** -Input Write Mode **/\r\n\r\n    /** +Cursor **/\r\n    InputManager.prototype.setCursorImage = function (image) {\r\n        this.data.cursor.image = 'url(\"' + image + '\"), auto';\r\n        $(this.element).css('cursor', this.data.cursor.image);\r\n    };\r\n\r\n    InputManager.prototype.toggleCursor = function (enable) {\r\n        if (enable !== undefined) {\r\n            this.data.cursor.enable = !!enable;\r\n        } else {\r\n            this.data.cursor.enable = !this.data.cursor.enable;\r\n        }\r\n\r\n        if (!this.data.cursor.enable) {\r\n            this.data.cursor.image = $(this.j2d.element).css('cursor');\r\n            $(this.element).css('cursor', 'none');\r\n        } else {\r\n            $(this.element).css('cursor', this.data.cursor.image);\r\n        }\r\n    };\r\n\r\n    InputManager.prototype.isCursorVisible = function () {\r\n        return !!this.data.cursor.enable;\r\n    };\r\n    /** -Cursor **/\r\n\r\n    /** static keys arrayList **/\r\n    InputManager.key = {\r\n        KEY_MOUSE_LEFT: 1,\r\n        KEY_MOUSE_MIDDLE: 2,\r\n        KEY_MOUSE_RIGHT: 3,\r\n\r\n        SCROLL_MOUSE_UP: 4,\r\n        SCROLL_MOUSE_DOWN: 5,\r\n\r\n        KEY_BACKSPACE: 8,\r\n        KEY_TAB: 9,\r\n        KEY_ENTER: 13,\r\n        KEY_SHIFT: 16,\r\n        KEY_CTRL: 17,\r\n        KEY_ALT: 18,\r\n        KEY_PAUSE: 19,\r\n        KEY_BREAK: 19,\r\n        KEY_CAPS_LOCK: 20,\r\n        KEY_ESCAPE: 27,\r\n        KEY_SPACE_BAR: 32,\r\n        KEY_PAGE_UP: 33,\r\n        KEY_PAGE_DOWN: 34,\r\n        KEY_END: 35,\r\n        KEY_HOME: 36,\r\n        KEY_LEFT_ARROW: 37,\r\n        KEY_UP_ARROW: 38,\r\n        KEY_RIGHT_ARROW: 39,\r\n        KEY_DOWN_ARROW: 40,\r\n        KEY_INSERT: 45,\r\n        KEY_DELETE: 46,\r\n        KEY_0: 48,\r\n        KEY_1: 49,\r\n        KEY_2: 50,\r\n        KEY_3: 51,\r\n        KEY_4: 52,\r\n        KEY_5: 53,\r\n        KEY_6: 54,\r\n        KEY_7: 55,\r\n        KEY_8: 56,\r\n        KEY_9: 57,\r\n        KEY_A: 65,\r\n        KEY_B: 66,\r\n        KEY_C: 67,\r\n        KEY_D: 68,\r\n        KEY_E: 69,\r\n        KEY_F: 70,\r\n        KEY_G: 71,\r\n        KEY_H: 72,\r\n        KEY_I: 73,\r\n        KEY_J: 74,\r\n        KEY_K: 75,\r\n        KEY_L: 76,\r\n        KEY_M: 77,\r\n        KEY_N: 78,\r\n        KEY_O: 79,\r\n        KEY_P: 80,\r\n        KEY_Q: 81,\r\n        KEY_R: 82,\r\n        KEY_S: 83,\r\n        KEY_T: 84,\r\n        KEY_U: 85,\r\n        KEY_V: 86,\r\n        KEY_W: 87,\r\n        KEY_X: 88,\r\n        KEY_Y: 89,\r\n        KEY_Z: 90,\r\n        KEY_LEFT_WINDOW_KEY: 91,\r\n        KEY_RIGHT_WINDOW_KEY: 92,\r\n        KEY_SELECT_KEY: 93,\r\n        KEY_NUMPAD_0: 96,\r\n        KEY_NUMPAD_1: 97,\r\n        KEY_NUMPAD_2: 98,\r\n        KEY_NUMPAD_3: 99,\r\n        KEY_NUMPAD_4: 100,\r\n        KEY_NUMPAD_5: 101,\r\n        KEY_NUMPAD_6: 102,\r\n        KEY_NUMPAD_7: 103,\r\n        KEY_NUMPAD_8: 104,\r\n        KEY_NUMPAD_9: 105,\r\n        KEY_MULTIPLY: 106,\r\n        KEY_ADD: 107,\r\n        KEY_SUBTRACT: 109,\r\n        KEY_DECIMAL_POINT: 110,\r\n        KEY_DIVIDE: 111,\r\n        KEY_F1: 112,\r\n        KEY_F2: 113,\r\n        KEY_F3: 114,\r\n        KEY_F4: 115,\r\n        KEY_F5: 116,\r\n        KEY_F6: 117,\r\n        KEY_F7: 118,\r\n        KEY_F8: 119,\r\n        KEY_F9: 120,\r\n        KEY_F10: 121,\r\n        KEY_F11: 122,\r\n        KEY_F12: 123,\r\n        KEY_NUM_LOCK: 144,\r\n        KEY_SCROLL_LOCK: 145,\r\n        KEY_SEMI_COLON: 186,\r\n        KEY_EQUAL_SIGN: 187,\r\n        KEY_COMMA: 188,\r\n        KEY_DASH: 189,\r\n        KEY_PERIOD: 190,\r\n        KEY_FORWARD_SLASH: 191,\r\n        KEY_GRAVE_ACCENT: 192,\r\n        KEY_OPEN_BRACKET: 219,\r\n        KEY_BACK_SLASH: 220,\r\n        KEY_CLOSE_BRACKET: 221,\r\n        KEY_SINGLE_QUOTE: 222,\r\n        KEY_LEFT_COMMAND: 224,\r\n        KEY_RIGHT_COMMAND: 224\r\n    };\r\n\r\n    function getKey(object, value) {\r\n        return Object.keys(object).filter(function (key) {\r\n            return object[key] === value\r\n        })[0];\r\n    }\r\n\r\n    if (global.J2D !== undefined) global.InputManager = InputManager;\r\n    return InputManager;\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/BaseNode', ['jquery', 'utils/Vector2d'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('jquery'), require('utils/Vector2d'));\r\n    } else {\r\n        factory(root.jQuery, root.Vector2d);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function ($, Vector2d) {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * @param {BaseNode.defaults} data\r\n     * @constructor\r\n     * @property {BaseNode.defaults} data\r\n     */\r\n    var BaseNode = function (data) {\r\n        var baseNode = this;\r\n        this.data = $.extend(true, {}, defaults, data);\r\n\r\n        if (this.data.id === null) {\r\n            this.data.id = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n                var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n                return v.toString(16);\r\n            });\r\n        }\r\n\r\n        Object.defineProperty(this, 'opacity', {\r\n            get: function () {\r\n                return baseNode.data.opacity;\r\n            },\r\n            set: function (value) {\r\n                baseNode.data.opacity = value;\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(this, 'visible', {\r\n            get: function () {\r\n                return baseNode.data.visible;\r\n            },\r\n            set: function (value) {\r\n                baseNode.data.visible = !!value;\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(this, 'angle', {\r\n            get: function () {\r\n                return baseNode.data.angle;\r\n            },\r\n            set: function (value) {\r\n                baseNode.data.angle = value % 360;\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(this, 'cache', {\r\n            get: function () {\r\n                return baseNode.data.enabledCache;\r\n            },\r\n            set: function (value) {\r\n                baseNode.data.enabledCache = !!value;\r\n            }\r\n        });\r\n    };\r\n\r\n    BaseNode.defaults = {\r\n        id: null,\r\n        type: 'BaseNode',\r\n\r\n        position: {\r\n            x: 0.0,\r\n            y: 0.0\r\n        },\r\n        size: {\r\n            x: 0.0,\r\n            y: 0.0\r\n        },\r\n        offset: {\r\n            x: 0.0,\r\n            y: 0.0\r\n        },\r\n\r\n        visible: true,\r\n        angle: 0,\r\n        opacity: 1,\r\n\r\n        cache: null,\r\n        enabledCache: false // TODO:: Collections & AnimatedPrimitiveNode\r\n    };\r\n\r\n    /**\r\n     * @returns {Vector2d}\r\n     */\r\n    BaseNode.prototype.getPosition = function () {\r\n        return new Vector2d(this.data.position.x, this.data.position.y);\r\n    };\r\n\r\n    /**\r\n     * @param {Vector2d} position\r\n     * @returns {BaseNode}\r\n     */\r\n    BaseNode.prototype.setPosition = function (position) {\r\n        if (position !== undefined && position instanceof Vector2d) {\r\n            this.data.position = position.getVector();\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @returns {Vector2d}\r\n     */\r\n    BaseNode.prototype.getSize = function () {\r\n        return new Vector2d(this.data.size.x, this.data.size.y);\r\n    };\r\n\r\n    /**\r\n     * @param {Vector2d} size\r\n     * @returns {BaseNode}\r\n     */\r\n    BaseNode.prototype.setSize = function (size) {\r\n        if (size !== undefined && size instanceof Vector2d) {\r\n            this.data.size = size.getVector();\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @returns {Vector2d}\r\n     */\r\n    BaseNode.prototype.getOffset = function () {\r\n        return new Vector2d(this.data.offset.x, this.data.offset.y);\r\n    };\r\n\r\n    /**\r\n     * @param {Vector2d} offset\r\n     * @returns {BaseNode}\r\n     */\r\n    BaseNode.prototype.setOffset = function (offset) {\r\n        if (offset !== undefined && offset instanceof Vector2d) {\r\n            this.data.offset = offset.getVector();\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /* ------------------------------ Render ------------------------------ */\r\n\r\n    /**\r\n     * Must be override this in child!\r\n     *\r\n     * @deprecated\r\n     * @overridable\r\n     *\r\n     * @param {object} context\r\n     * @param {{offset: {x: number, y: number}, size: {x: number, y: number}, scale: number, angle: number}} viewport\r\n     * @param {CollectionNode} collection\r\n     * @param {object} data\r\n     * @returns {BaseNode}\r\n     */\r\n    BaseNode.prototype.render = function (context, viewport, collection, data) {\r\n        // throw new Exception('Trying to render base node.'); // TODO:: exceptions\r\n        return this;\r\n    };\r\n\r\n    if (global.J2D !== undefined) global.BaseNode = BaseNode;\r\n    return BaseNode;\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/CameraNode', ['jquery', 'nodes/BaseNode'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('jquery'), require('nodes/BaseNode'));\r\n    } else {\r\n        factory(root.jQuery, root.BaseNode);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function ($, BaseNode) {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * @param {BaseNode.defaults|CameraNode.defaults} data data\r\n     * @constructor\r\n     * @property {BaseNode.defaults|CameraNode.defaults} data\r\n     */\r\n    var CameraNode = function (data) {\r\n        BaseNode.call(this, $.extend(true, {}, defaults, data));\r\n    };\r\n\r\n    CameraNode.prototype = Object.create(BaseNode.prototype);\r\n    CameraNode.prototype.constructor = CameraNode;\r\n\r\n    CameraNode.defaults = {\r\n        type: 'CameraNode'\r\n    };\r\n\r\n    /**\r\n     * @param {{x: number, y: number}} screen\r\n     * @param {Function|callback} calculate\r\n     * @returns {{offset: {x: number, y: number}, size: {x: number, y: number}, scale: number, angle: number}}\r\n     */\r\n    CameraNode.prototype.getCameraViewport = function (screen, calculate) {\r\n        return calculate(screen, {\r\n            offset: this.data.position,\r\n            size: this.data.size,\r\n            scale: 1.0\r\n        });\r\n    };\r\n\r\n    /* ------------------------------ Render ------------------------------ */\r\n\r\n    /**\r\n     * @override\r\n     *\r\n     * @param {object} context\r\n     * @param {{offset: {x: number, y: number}, size: {x: number, y: number}, scale: number, angle: number}} viewport\r\n     * @param {CollectionNode} collection\r\n     * @param {object} data\r\n     * @returns {CameraNode}\r\n     */\r\n    CameraNode.prototype.render = function (context, viewport, collection, data) {\r\n        return this;\r\n    };\r\n\r\n    if (global.J2D !== undefined) global.CameraNode = CameraNode;\r\n    return CameraNode;\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/CollectionNode', ['jquery', 'nodes/BaseNode', 'utils/ArrayMap'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('jquery'), require('nodes/BaseNode'), require('utils/ArrayMap'));\r\n    } else {\r\n        factory(root.jQuery, root.BaseNode, root.ArrayMap);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function ($, BaseNode, ArrayMap) {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * @param {BaseNode.defaults|CollectionNode.defaults} data\r\n     * @constructor\r\n     * @property {BaseNode.defaults|CollectionNode.defaults} data\r\n     */\r\n    var CollectionNode = function (data) {\r\n        BaseNode.call(this, $.extend(true, {}, defaults, data));\r\n\r\n        if (this.data.collection === null) {\r\n            this.data.collection = new ArrayMap();\r\n        }\r\n    };\r\n\r\n    CollectionNode.prototype = Object.create(BaseNode.prototype);\r\n    CollectionNode.prototype.constructor = CollectionNode;\r\n\r\n    CollectionNode.defaults = {\r\n        type: 'CollectionNode',\r\n        collection: null\r\n    };\r\n\r\n    /**\r\n     * @param {BaseNode|CollectionNode} node\r\n     * @param {string} key\r\n     * @returns {CollectionNode}\r\n     */\r\n    CollectionNode.prototype.add = function (node, key) {\r\n        if (typeof key === 'string' && node instanceof BaseNode) {\r\n            this.data.collection.add(key, node);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @param {BaseNode|CollectionNode|null} node\r\n     * @param {string} key\r\n     * @returns {CollectionNode}\r\n     */\r\n    CollectionNode.prototype.remove = function (node, key) {\r\n        if (node instanceof BaseNode) {\r\n            this.data.collection.remove(this.data.collection[node.id]);\r\n        }\r\n        if (typeof key === 'string' && node === null) {\r\n            this.data.collection.remove(key);\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @returns {CollectionNode}\r\n     */\r\n    CollectionNode.prototype.flush = function () {\r\n        this.data.collection.length = 0;\r\n        return this;\r\n    };\r\n\r\n    /* ------------------------------ Render ------------------------------ */\r\n\r\n    /**\r\n     * @override\r\n     *\r\n     * @param {object} context\r\n     * @param {{offset: {x: number, y: number}, size: {x: number, y: number}, scale: number, angle: number}} viewport\r\n     * @param {CollectionNode} collection\r\n     * @param {object} data\r\n     * @returns {CollectionNode}\r\n     */\r\n    CollectionNode.prototype.render = function (context, viewport, collection, data) {\r\n        //TODO:: make this\r\n        return this;\r\n    };\r\n\r\n    if (global.J2D !== undefined) global.CollectionNode = CollectionNode;\r\n    return CollectionNode;\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('utils/ArrayMap', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var ArrayMap = function (args) {\r\n        Array.call(this, args);\r\n    };\r\n\r\n    ArrayMap.prototype = Object.create(Array.prototype);\r\n    ArrayMap.prototype.constructor = ArrayMap;\r\n\r\n    ArrayMap.prototype.last = function () {\r\n        return this[this.length - 1];\r\n    };\r\n\r\n    /**\r\n     * @param {ArrayMap} array\r\n     * @returns {boolean}\r\n     */\r\n    ArrayMap.prototype.equals = function (array) {\r\n        if (!array)\r\n            return false;\r\n\r\n        if (this.length != array.length)\r\n            return false;\r\n\r\n        for (var i = 0, l = this.length; i < l; i++) {\r\n            if (this[i] instanceof Array && array[i] instanceof Array) {\r\n                if (!this[i].equals(array[i]))\r\n                    return false;\r\n            }\r\n            else if (this[i] != array[i]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    Object.defineProperty(ArrayMap.prototype, 'equals', {enumerable: false});\r\n\r\n    /**\r\n     * @param {string|Object} object\r\n     * @returns {boolean}\r\n     */\r\n    ArrayMap.prototype.contains = function (object) {\r\n        var i = this.length;\r\n        while (i--) {\r\n            if (this[i] === object) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    Object.defineProperty(ArrayMap.prototype, 'contains', {enumerable: false});\r\n\r\n    /**\r\n     * @param {Function} callback\r\n     * @returns {boolean}\r\n     */\r\n    ArrayMap.prototype.each = function (callback) {\r\n        if (!callback) return false;\r\n        var result = false;\r\n        for (var i = 0; i < this.length; i++) {\r\n            if ((result = callback(this[i], i)) == false) {\r\n                return result;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    Object.defineProperty(ArrayMap.prototype, 'each', {enumerable: false});\r\n\r\n    /**\r\n     * @param {string|Object} key\r\n     * @param {*} value\r\n     * @returns {ArrayMap}\r\n     */\r\n    ArrayMap.prototype.add = function (key, value) {\r\n        if (this.contains(key))\r\n            this[key] = value;\r\n        else {\r\n            this.push(key);\r\n            this[key] = value;\r\n        }\r\n        return this;\r\n    };\r\n    Object.defineProperty(ArrayMap.prototype, 'add', {enumerable: false});\r\n\r\n    /**\r\n     * @param {string|Object} key\r\n     * @returns {ArrayMap}\r\n     */\r\n    ArrayMap.prototype.remove = function (key) {\r\n        for (var i = 0; i < this.length; ++i) {\r\n            if (this[i] == key) {\r\n                this.splice(i, 1);\r\n                delete this[key];\r\n                return this;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    Object.defineProperty(ArrayMap.prototype, 'remove', {enumerable: false});\r\n\r\n    if (typeof define !== 'function' || !define.amd) global.ArrayMap = ArrayMap;\r\n\r\n    return ArrayMap;\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('utils/DeviceUtil', ['jquery', 'utils/Vector2dInteger'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('jquery'), require('utils/Vector2dInteger'));\r\n    } else {\r\n        factory(root.jQuery, root.Vector2dInteger);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function ($, Vector2dInteger) {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * Class utility for get system browser window size\r\n     */\r\n    var DeviceUtil = function () {\r\n        this.width = parseInt($(document).width()) < parseInt(screen.width) ? parseInt($(document).width()) : parseInt(screen.width);\r\n        this.height = parseInt($(document).height()) < parseInt(screen.height) ? parseInt($(document).height()) : parseInt(screen.height);\r\n    };\r\n\r\n    /**\r\n     * @returns {DeviceUtil}\r\n     */\r\n    DeviceUtil.prototype.onResize = function () {\r\n        this.width = window.innerWidth;\r\n        this.height = window.innerHeight;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @returns {number}\r\n     */\r\n    DeviceUtil.prototype.getWidth = function () {\r\n        return this.width;\r\n    };\r\n\r\n    /**\r\n     * @returns {number}\r\n     */\r\n    DeviceUtil.prototype.getHeight = function () {\r\n        return this.height;\r\n    };\r\n\r\n    /**\r\n     * @returns {Vector2d}\r\n     */\r\n    DeviceUtil.prototype.getSize = function () {\r\n        return new Vector2dInteger(this.width, this.height);\r\n    };\r\n\r\n    if (global.J2D === undefined) global.DeviceUtil = DeviceUtil;\r\n    return DeviceUtil;\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('utils/Exceptions', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * Default Exception\r\n     * Create custom exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var Exception = function (message) {\r\n        Error.call(this);\r\n        this.message = message;\r\n\r\n        /**\r\n         * Convert exception to String\r\n         * @returns {string|}\r\n         */\r\n        this.toString = function () {\r\n            return this.message;\r\n        }\r\n    };\r\n\r\n    Exception.prototype = Object.create(Error.prototype);\r\n    Exception.prototype.constructor = Exception;\r\n\r\n    /**\r\n     * RuntimeException\r\n     * Create RuntimeException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var RuntimeException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    RuntimeException.prototype = Object.create(Exception.prototype);\r\n    RuntimeException.prototype.constructor = RuntimeException;\r\n\r\n    /**\r\n     * InvalidArgumentException\r\n     * Create InvalidArgumentException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var InvalidArgumentException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    InvalidArgumentException.prototype = Object.create(Exception.prototype);\r\n    InvalidArgumentException.prototype.constructor = InvalidArgumentException;\r\n\r\n    /**\r\n     * BadFunctionCallException\r\n     * Create BadFunctionCallException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var BadFunctionCallException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    BadFunctionCallException.prototype = Object.create(Exception.prototype);\r\n    BadFunctionCallException.prototype.constructor = BadFunctionCallException;\r\n\r\n    /**\r\n     * BadMethodCallException\r\n     * Create BadMethodCallException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var BadMethodCallException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    BadMethodCallException.prototype = Object.create(Exception.prototype);\r\n    BadMethodCallException.prototype.constructor = BadMethodCallException;\r\n\r\n    /**\r\n     * LengthException\r\n     * Create LengthException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var LengthException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    LengthException.prototype = Object.create(Exception.prototype);\r\n    LengthException.prototype.constructor = LengthException;\r\n\r\n    /**\r\n     * LogicException\r\n     * Create LogicException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var LogicException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    LogicException.prototype = Object.create(Exception.prototype);\r\n    LogicException.prototype.constructor = LogicException;\r\n\r\n    /**\r\n     * OutOfBoundsException\r\n     * Create OutOfBoundsException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var OutOfBoundsException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    OutOfBoundsException.prototype = Object.create(Exception.prototype);\r\n    OutOfBoundsException.prototype.constructor = OutOfBoundsException;\r\n\r\n    /**\r\n     * OutOfRangeException\r\n     * Create OutOfRangeException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var OutOfRangeException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    OutOfRangeException.prototype = Object.create(Exception.prototype);\r\n    OutOfRangeException.prototype.constructor = OutOfRangeException;\r\n\r\n    /**\r\n     * RangeException\r\n     * Create RangeException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var RangeException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    RangeException.prototype = Object.create(Exception.prototype);\r\n    RangeException.prototype.constructor = RangeException;\r\n\r\n    /**\r\n     * UnexpectedValueException\r\n     *\r\n     * Create UnexpectedValueException exception with message\r\n     * @param {string} message\r\n     */\r\n    var UnexpectedValueException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    UnexpectedValueException.prototype = Object.create(Exception.prototype);\r\n    UnexpectedValueException.prototype.constructor = UnexpectedValueException;\r\n\r\n    if (typeof define !== 'function' || !define.amd) {\r\n        global.Exception = Exception;\r\n        global.RuntimeException = RuntimeException;\r\n        global.InvalidArgumentException = InvalidArgumentException;\r\n        global.BadFunctionCallException = BadFunctionCallException;\r\n        global.BadMethodCallException = BadMethodCallException;\r\n        global.LengthException = LengthException;\r\n        global.LogicException = LogicException;\r\n        global.OutOfBoundsException = OutOfBoundsException;\r\n        global.OutOfRangeException = OutOfRangeException;\r\n        global.RangeException = RangeException;\r\n        global.UnexpectedValueException = UnexpectedValueException;\r\n    }\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('utils/MathUtil', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    /**\r\n     *\r\n     */\r\n    var MathUtil = function () {\r\n    };\r\n\r\n    /**\r\n     * @param {number} number\r\n     * @returns {number}\r\n     */\r\n    MathUtil.number2Integer = function (number) {\r\n        return number >> 0;\r\n    };\r\n\r\n    /**\r\n     * @param {number} number\r\n     * @returns {boolean}\r\n     */\r\n    MathUtil.isInteger = function (number) {\r\n        return typeof number === \"number\" && isFinite(number)\r\n            && number > -9007199254740992 && number < 9007199254740992\r\n            && Math.floor(number) === number;\r\n    };\r\n\r\n    /**\r\n     * @param {number} min\r\n     * @param {number} max\r\n     * @param {number} opacity\r\n     * @returns {string}\r\n     */\r\n    MathUtil.randomColor = function (min, max, opacity) {\r\n        return 'rgba('\r\n            + MathUtil.random(min, max) + ', '\r\n            + MathUtil.random(min, max) + ', '\r\n            + MathUtil.random(min, max) + ', '\r\n            + opacity + ')';\r\n    };\r\n\r\n    /**\r\n     * @param {number} min\r\n     * @param {number} max\r\n     * @param {boolean} omitZero\r\n     * @returns {number}\r\n     */\r\n    MathUtil.random = function (min, max, omitZero) {\r\n        var random = (Math.floor(Math.random() * (max - min + 1) + min));\r\n        return (omitZero && random == 0)\r\n            ? MathUtil.random(min, max, omitZero)\r\n            : random;\r\n    };\r\n\r\n    /**\r\n     * @param {number} degree\r\n     * @returns {number}\r\n     */\r\n    MathUtil.degree2Radian = function (degree) {\r\n        return degree * (Math.PI / 180);\r\n    };\r\n\r\n    /**\r\n     * @param {number} radian\r\n     * @returns {number}\r\n     */\r\n    MathUtil.radian2Degree = function (radian) {\r\n        return radian * (180 / Math.PI);\r\n    };\r\n\r\n    if (global.J2D === undefined) global.MathUtil = MathUtil;\r\n    return MathUtil\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('utils/Vector2d', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * @param {number} x\r\n     * @param {number} y\r\n     */\r\n    var Vector2d = function (x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    };\r\n\r\n    /**\r\n     * @returns {number}\r\n     */\r\n    Vector2d.prototype.getX = function () {\r\n        return this.x;\r\n    };\r\n\r\n    /**\r\n     * @returns {number}\r\n     */\r\n    Vector2d.prototype.getY = function () {\r\n        return this.y;\r\n    };\r\n\r\n    /**\r\n     * @returns {{x: number, y: number}}\r\n     */\r\n    Vector2d.prototype.getVector = function () {\r\n        return {x: this.x, y: this.y};\r\n    };\r\n\r\n    /**\r\n     * @returns {Array<number>}\r\n     */\r\n    Vector2d.prototype.toArray = function () {\r\n        return [this.x, this.y];\r\n    };\r\n\r\n    /**\r\n     * @param {Array<number>} array\r\n     * @returns {Vector2d}\r\n     */\r\n    Vector2d.prototype.fromArray = function (array) {\r\n        this.x = array[0];\r\n        this.y = array[1];\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @returns {string}\r\n     */\r\n    Vector2d.prototype.toString = function () {\r\n        return \"(\" + this.x + \",\" + this.y + \")\";\r\n    };\r\n\r\n    if (global.J2D === undefined) global.Vector2d = Vector2d;\r\n\r\n    return Vector2d\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('utils/Vector2dInteger', ['utils/Vector2d'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('utils/Vector2d'));\r\n    } else {\r\n        factory(root.Vector2d);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (Vector2d) {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * @param {number} x\r\n     * @param {number} y\r\n     */\r\n    var Vector2dInteger = function (x, y) {\r\n        Vector2d.call(this, x >> 0, y >> 0);\r\n    };\r\n\r\n    Vector2dInteger.prototype = Object.create(Vector2d.prototype);\r\n    Vector2dInteger.prototype.constructor = Vector2dInteger;\r\n\r\n    /**\r\n     * @param {Array<number>} array\r\n     * @returns {Vector2d|Vector2dInteger}\r\n     */\r\n    Vector2dInteger.prototype.fromArray = function (array) {\r\n        this.x = array[0] >> 0;\r\n        this.y = array[1] >> 0;\r\n\r\n        return this;\r\n    };\r\n\r\n    if (global.J2D === undefined) global.Vector2dInteger = Vector2dInteger;\r\n\r\n    return Vector2dInteger;\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/FrameManager', ['utils/ArrayMap'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('utils/ArrayMap'));\r\n    } else {\r\n        factory(root.ArrayMap);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global,\r\n    /**\r\n     * @param {Function} ArrayMap\r\n     * @returns {FrameManager}\r\n     */\r\n    function (ArrayMap) {\r\n        \"use strict\";\r\n\r\n        var instance;\r\n        var engineStack = new ArrayMap(), dataStack = new ArrayMap();\r\n        var timestamp = 0;\r\n\r\n        var options = {\r\n            frameLimit: 60,\r\n            frameRun: false,\r\n            breakAnimationFrame: false\r\n        };\r\n\r\n        var requestAnimationFrame = (function () {\r\n            return global.requestAnimationFrame ||\r\n                global.webkitRequestAnimationFrame ||\r\n                global.mozRequestAnimationFrame ||\r\n                global.oRequestAnimationFrame ||\r\n                global.msRequestAnimationFrame ||\r\n                (function (callback) {\r\n                    if (!options.breakAnimationFrame) {\r\n                        if (timestamp >= Number.MAX_SAFE_INTEGER - 1) timestamp = 0;\r\n                        if (timestamp === 0) timestamp = Date.now();\r\n\r\n                        global.setTimeout(callback.bind(this, Date.now() - timestamp), 1000.0 / options.frameLimit);\r\n                    } else {\r\n                        options.breakAnimationFrame = false\r\n                    }\r\n                });\r\n        })();\r\n\r\n        var cancelAnimationFrame = (function () {\r\n            timestamp = 0;\r\n            return global.cancelAnimationFrame ||\r\n                global.webkitCancelAnimationFrame ||\r\n                global.mozCancelAnimationFrame ||\r\n                global.oCancelAnimationFrame ||\r\n                global.msCancelAnimationFrame;\r\n        })();\r\n\r\n\r\n        var FrameManager = function () {\r\n        };\r\n\r\n        FrameManager.prototype.start = function (name, engine, params) {\r\n            var data = {\r\n                j2d: null,\r\n                frameLimit: options.frameLimit,\r\n                now: 0,\r\n                deltaTime: 0,\r\n                lastTime: 0,\r\n                sceneStartTime: 0,\r\n                sceneSkipTime: 0,\r\n\r\n                asyncUpdate: true,\r\n                asyncRender: true\r\n            };\r\n\r\n            if (params.frameLimit !== undefined && params.frameLimit <= options.frameLimit) data.frameLimit = params.frameLimit;\r\n\r\n            if (params.j2d !== undefined) {\r\n                data.j2d = params.j2d;\r\n            } else {\r\n                throw 'j2d not transported to FrameManager.start(id, engine, {... j2d: j2d ...});';\r\n            }\r\n\r\n            data.interval = 1000.0 / data.frameLimit;\r\n            data.lastTime = Date.now();\r\n\r\n            engineStack.add(name, engine);\r\n            dataStack.add(name, data);\r\n            if (!options.frameRun) this.pulse();\r\n        };\r\n\r\n        FrameManager.prototype.stop = function (name) {\r\n            engineStack.remove(name);\r\n            dataStack.remove(name);\r\n        };\r\n\r\n        FrameManager.prototype.pulse = function () {\r\n            this.runMainLoop(Date.now());\r\n        };\r\n\r\n        FrameManager.prototype.runMainLoop = function (timestamp, frameManager) {\r\n            if (frameManager === undefined) frameManager = this;\r\n\r\n            if (engineStack.length <= 0 && options.frameRun) {\r\n                options.breakAnimationFrame = true;\r\n                options.frameRun = false;\r\n                return cancelAnimationFrame(this.runMainLoop);\r\n            }\r\n            options.frameRun = true;\r\n\r\n            requestAnimationFrame(function (timestamp) {\r\n                frameManager.runMainLoop(timestamp, frameManager);\r\n            });\r\n\r\n            engineStack.each(function (index) {\r\n                if (engineStack.hasOwnProperty(index) && 'object' === typeof engineStack[index]) {\r\n                    var engine = engineStack[index];\r\n                    var data = dataStack[index];\r\n\r\n                    data.now = Date.now();\r\n                    data.deltaTime = (data.now - data.lastTime) / 100.0;\r\n\r\n                    if (data.j2d.data.io && !data.j2d.data.pause) data.j2d.data.io.update();\r\n\r\n                    if (!data.j2d.data.pause) {\r\n                        if (engine.update !== undefined && 'function' === typeof engine.update) {\r\n                            if (data.asyncUpdate) {\r\n                                setTimeout(engine.update.bind(this, timestamp, data), 0);\r\n                            } else {\r\n                                engine.update(timestamp, data);\r\n                            }\r\n                        }\r\n\r\n                        if ((data.deltaTime * 100.0) > data.interval) {\r\n                            data.lastTime = data.now - ((data.deltaTime * 100.0) % data.interval);\r\n\r\n                            if (engine.render !== undefined && 'function' === typeof engine.render) {\r\n                                if (data.asyncRender) {\r\n                                    setTimeout(engine.render.bind(this, timestamp, data), 0);\r\n                                } else {\r\n                                    engine.render(timestamp, data);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    if (data.j2d.data.io && !data.j2d.data.pause) data.j2d.data.io.clear();\r\n                }\r\n            });\r\n        };\r\n\r\n        FrameManager.prototype.setDefaultFrameLimit = function (frameLimit) {\r\n            if (frameLimit <= 60 && frameLimit > 0) {\r\n                options.frameLimit = frameLimit\r\n            }\r\n        };\r\n\r\n        /**\r\n         * @singleton\r\n         * @returns {FrameManager}\r\n         */\r\n        FrameManager.Init = function () {\r\n            if (global.J2D !== undefined) {\r\n                return global.instanceFrameManager || (global.instanceFrameManager = new FrameManager());\r\n            } else {\r\n                return instance || (instance = new FrameManager());\r\n            }\r\n        };\r\n\r\n        if (global.J2D === undefined) global.FrameManager = FrameManager;\r\n\r\n        return FrameManager;\r\n    }\r\n));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/LayersManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var LayersManager = function (j2d) {\r\n        this.j2d = j2d;\r\n        this.layers = {};\r\n    };\r\n\r\n    if (global.J2D !== undefined) global.LayersManager = LayersManager;\r\n    return LayersManager;\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n/*\r\n * TODO:: global layer collection\r\n * TODO:: render\r\n *\r\n * TODO:: GameStateManager to Scene\r\n * TODO:: ViewportManager\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/SceneManager', [\r\n            'jquery',\r\n            'core/WebGL2D',\r\n            'core/FrameManager',\r\n            'core/LayersManager'\r\n        ], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(\r\n            require('jquery'),\r\n            require('core/WebGL2D'),\r\n            require('core/FrameManager'),\r\n            require('core/LayersManager')\r\n        );\r\n    } else {\r\n        factory(\r\n            root.jQuery,\r\n            root.WebGL2D,\r\n            root.FrameManager,\r\n            root.LayersManager\r\n        );\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function ($, WebGL2D, FrameManager, LayersManager) {\r\n    \"use strict\";\r\n\r\n    var defaults = {\r\n        width: 0,\r\n        height: 0,\r\n\r\n        originalWidth: 0,\r\n        originalHeight: 0,\r\n        originalMargin: 0,\r\n\r\n        visible: true,\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        zIndex: 1000,\r\n        opacity: 1.0,\r\n        backgroundColor: false,\r\n\r\n        frameLimit: 60,\r\n\r\n        enableFullScreen: false,\r\n\r\n        viewport: {x: 0, y: 0},\r\n\r\n        // TODO::\r\n        gameState: function () {\r\n        }\r\n    };\r\n\r\n    var SceneManager = function (j2d) {\r\n        var sceneManager = this;\r\n        this.j2d = j2d;\r\n\r\n        this.canvas = null;\r\n        this.context = null;\r\n\r\n        /** @type {FrameManager} */\r\n        this.frameManager = FrameManager.Init();\r\n        this.layersManager = new LayersManager(this.j2d);\r\n\r\n        Object.defineProperty(this, 'backgroundColor', {\r\n            get: function () {\r\n                return sceneManager.data.backgroundColor;\r\n            },\r\n            set: function (value) {\r\n                sceneManager.data.backgroundColor = value;\r\n                sceneManager.context.fillStyle = value;\r\n                sceneManager.context.fillRect(0, 0, sceneManager.data.width, sceneManager.data.height);\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(this, 'opacity', {\r\n            get: function () {\r\n                return sceneManager.data.opacity;\r\n            },\r\n            set: function (value) {\r\n                sceneManager.data.opacity = value;\r\n                sceneManager.canvas.style.opacity = value;\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(this, 'visible', {\r\n            get: function () {\r\n                return sceneManager.data.visible;\r\n            },\r\n            set: function (value) {\r\n                sceneManager.data.visible = !!value;\r\n                sceneManager.canvas.style.display = (!!value) ? 'block' : 'none';\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(this, 'zIndex', {\r\n            get: function () {\r\n                return 1000 - sceneManager.data.zIndex;\r\n            },\r\n            set: function (value) {\r\n                sceneManager.data.zIndex = 1000 + value;\r\n                sceneManager.canvas.style.zIndex = 1000 + value;\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(this, 'viewport', {\r\n            get: function () {\r\n                return sceneManager.data.viewport;\r\n            },\r\n            set: function () {\r\n            }\r\n        });\r\n    };\r\n\r\n    SceneManager.prototype.init = function (options) {\r\n        this.data = $.extend(true, {}, defaults, options);\r\n\r\n        this.j2d.trigger('beforeInit');\r\n\r\n        this.data.originalWidth = this.data.width;\r\n        this.data.originalHeight = this.data.height;\r\n        this.data.originalMargin = this.j2d.element.css('margin');\r\n\r\n        this.j2d.element.width(this.data.width).height(this.data.height);\r\n\r\n        // TODO:: check if exist\r\n        this.initCanvas();\r\n\r\n        this.j2d.trigger('afterInit');\r\n\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.initCanvas = function () {\r\n        this.canvas = document.createElement('canvas');\r\n\r\n        this.canvas.width = this.data.width;\r\n        this.canvas.height = this.data.height;\r\n        this.canvas.style.zIndex = this.data.zIndex;\r\n        this.canvas.style.position = this.data.position;\r\n\r\n        this.canvas.style.left = this.data.left;\r\n        this.canvas.style.top = this.data.top;\r\n\r\n        if (this.j2d.data.webGL) {\r\n            WebGL2D.enable(this.canvas);\r\n            this.context = this.canvas.getContext('WebGL-2d');\r\n        } else {\r\n            this.context = this.canvas.getContext('2d');\r\n        }\r\n\r\n        if (!this.j2d.data.smoothing) {\r\n            this.j2d.util.disableSmoothing(this.context);\r\n        }\r\n\r\n        this.context.shadowColor = 'rgba(0,0,0,0)';\r\n        if (this.data.backgroundColor) this.backgroundColor = this.data.backgroundColor;\r\n        if (this.data.opacity) this.opacity = this.data.opacity;\r\n        if (this.data.visible) this.visible = this.data.visible;\r\n        if (this.data.zIndex) this.zIndex = 1000 - this.data.zIndex;\r\n\r\n        this.j2d.element.append(this.canvas);\r\n    };\r\n\r\n    SceneManager.prototype.clear = function (pos, size) {\r\n        if (pos !== undefined && size !== undefined) {\r\n            this.context.clearRect(pos.x - this.viewport.x, pos.y - this.viewport.y, size.x, size.y);\r\n        } else {\r\n            this.context.clearRect(0, 0, this.data.width, this.data.height);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.resize = function (width, height) {\r\n        this.canvas.width = this.data.width = width;\r\n        this.canvas.height = this.data.height = height;\r\n\r\n        if (this.data.backgroundColor) {\r\n            this.context.save();\r\n\r\n            this.clear();\r\n            this.backgroundColor = this.data.backgroundColor;\r\n\r\n            this.context.restore();\r\n        }\r\n        if (!this.j2d.data.smoothing) {\r\n            this.j2d.util.disableSmoothing(this.context);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.setGameState = function (gameState) {\r\n        this.data.gameState = gameState || function () {\r\n                console.warn('Error in game state function!');\r\n            };\r\n\r\n        this.frameManager.stop(this.j2d.data.id);\r\n        this.frameManager.start(this.j2d.data.id, this.data.gameState, {\r\n            j2d: this.j2d,\r\n            frameLimit: this.data.frameLimit\r\n        });\r\n\r\n        this.j2d.trigger('changedGameState');\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.async = function (callback, data) {\r\n        setTimeout(callback.call(callback, data), 0);\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.start = function () {\r\n        if (this.j2d.data.io) {\r\n            this.j2d.data.io.init();\r\n        }\r\n        this.j2d.trigger('beforeStart');\r\n\r\n        this.frameManager.stop(this.j2d.data.id);\r\n        this.frameManager.start(this.j2d.data.id, this.data.gameState, {\r\n            j2d: this.j2d,\r\n            frameLimit: this.data.frameLimit\r\n        });\r\n\r\n        this.j2d.trigger('afterStart');\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.stop = function () {\r\n        this.frameManager.stop(this.j2d.data.id);\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.fullScreen = function (fullscreen) {\r\n        var element = document.getElementById(this.j2d.element.attr('id'));\r\n\r\n        if (undefined === element.requestFullscreen) {\r\n            //noinspection JSUnresolvedVariable\r\n            element.requestFullscreen = element.webkitRequestFullscreen\r\n                || element.webkitRequestFullScreen\r\n                || element.mozRequestFullScreen\r\n                || element.msRequestFullscreen;\r\n        }\r\n\r\n        if (undefined === document.exitFullscreen) {\r\n            //noinspection JSUnresolvedVariable\r\n            document.exitFullscreen = document.webkitExitFullscreen\r\n                || document.webkitCancelFullScreen\r\n                || document.mozCancelFullScreen\r\n                || document.msExitFullscreen;\r\n        }\r\n        if (fullscreen) {\r\n            element.requestFullscreen();\r\n        } else {\r\n            document.exitFullscreen();\r\n        }\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.resizeToFullPage = function (fullscreen) {\r\n        $('div.canvas[guid]:not(.active)').toggle(fullscreen);\r\n\r\n        var j2d = this.j2d;\r\n        var sceneManager = this;\r\n\r\n        if (fullscreen) {\r\n            sceneManager.data.originalWidth = sceneManager.data.width;\r\n            sceneManager.data.originalHeight = sceneManager.data.height;\r\n\r\n            sceneManager.resize(j2d.device.width, j2d.device.height);\r\n            sceneManager.data.enableFullscreen = true;\r\n\r\n            j2d.element\r\n                .width(j2d.device.width)\r\n                .height(j2d.device.height)\r\n                .css('margin', 0);\r\n        } else {\r\n            sceneManager.resize(sceneManager.data.originalWidth, sceneManager.data.originalHeight);\r\n            sceneManager.data.enableFullscreen = false;\r\n\r\n            j2d.element\r\n                .width(sceneManager.data.originalWidth)\r\n                .height(sceneManager.data.originalHeight)\r\n                .css('margin', sceneManager.data.originalMargin);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.toggleFullScreen = function (j2d, data) {\r\n        if (data === undefined) {\r\n            data = {fullscreen: null};\r\n        }\r\n        if (!j2d.scene.enableFullscreen || data.fullscreen) {\r\n            j2d.scene.fullScreen(true);\r\n        } else {\r\n            j2d.scene.fullScreen(false);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    //SceneManager.prototype.getLayer = function () {\r\n    //    return this.parent.layers.getLayer('sceneNode');\r\n    //};\r\n\r\n    //// Устанавливает позицию для камеры\r\n    //SceneManager.prototype.setViewPosition = function (position) {\r\n    //    this.parent.scene.viewport.x = position.x - Math.ceil(this.parent.scene.width / 2);\r\n    //    this.parent.scene.viewport.y = position.y - Math.ceil(this.parent.scene.height / 2);\r\n    //};\r\n    //\r\n    ////! Движение \"камеры\" вслед за объектом\r\n    //SceneManager.prototype.setViewFocus = function (id, offset) {\r\n    //    this.parent.scene.viewport.x = id.getPosition().x - Math.ceil(this.parent.scene.width / 2) + (offset ? offset.x : 0);\r\n    //    this.parent.scene.viewport.y = id.getPosition().y - Math.ceil(this.parent.scene.height / 2) + (offset ? offset.y : 0);\r\n    //};\r\n    //\r\n    ////! Движение \"камеры\"\r\n    //SceneManager.prototype.viewMove = function (position) {\r\n    //    this.parent.scene.viewport.x += position.x;\r\n    //    this.parent.scene.viewport.y += position.y;\r\n    //};\r\n\r\n    if (global.J2D !== undefined) global.SceneManager = SceneManager;\r\n    return SceneManager;\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/ViewportManager', ['utils/ArrayMap', 'nodes/CameraNode', 'utils/Vector2d'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('utils/ArrayMap'), require('nodes/CameraNode'), require('utils/Vector2d'));\r\n    } else {\r\n        factory(root.ArrayMap, root.CameraNode, root.Vector2d);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (ArrayMap, CameraNode, Vector2d) {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * @param {{x: number, y: number}} screen\r\n     * @param {{offset: {x: number, y: number}, size: {x: number, y: number}, scale: number, angle: number}} viewport\r\n     * @returns {{offset: {x: number, y: number}, size: {x: number, y: number}, scale: number, angle: number}}\r\n     */\r\n    var calculateScale = function (screen, viewport) {\r\n        var data = {\r\n            offset: {x: viewport.offset.x, y: viewport.offset.y},\r\n            size: {x: 0, y: 0},\r\n            scale: 1.0,\r\n            angle: viewport.angle\r\n        };\r\n\r\n        data.size.x = (screen.x < viewport.size.x) ? screen.x : viewport.size.x;\r\n        data.size.y = (screen.y < viewport.size.y) ? screen.y : viewport.size.y;\r\n\r\n        // TODO:: check with test & fix this in future\r\n        data.scale = ((screen.x / viewport.size.x) + (screen.y / viewport.size.y)) / 2;\r\n        return data;\r\n    };\r\n\r\n    /**\r\n     * @constructor\r\n     */\r\n    var ViewportManager = function () {\r\n        this.cameras = new ArrayMap();\r\n\r\n        this.camera = 'No active cameras';\r\n\r\n        this.screen = {x: 0, y: 0};\r\n\r\n        this.data = {\r\n            offset: {x: 0.0, y: 0.0},\r\n            size: {x: 0.0, y: 0.0},\r\n            scale: 1.0,\r\n            angle: 0.0\r\n        };\r\n    };\r\n\r\n    /**\r\n     * @param {{x: number|undefined, y: number|undefined}|Array<number>} data\r\n     * @returns {ViewportManager}\r\n     */\r\n    ViewportManager.prototype.setScreen = function (data) {\r\n        if (typeof data == 'object') {\r\n            if (data instanceof Array && data.length == 2) {\r\n                this.screen = {x: data[0], y: data[1]};\r\n                return this;\r\n            }\r\n            if (data.x !== undefined && data.y !== undefined) {\r\n                this.screen = {x: data.x, y: data.y};\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @param {string} key\r\n     * @param {CameraNode} node\r\n     * @returns {ViewportManager}\r\n     */\r\n    ViewportManager.prototype.addCamera = function (key, node) {\r\n        if (node instanceof CameraNode) {\r\n            this.cameras.add(key, node);\r\n            return this;\r\n        }\r\n        // throw new InvalidArgumentException('Unknown camera node type');\r\n    };\r\n\r\n    /**\r\n     * @param {string} key\r\n     * @returns {ViewportManager}\r\n     */\r\n    ViewportManager.prototype.removeCamera = function (key) {\r\n        this.cameras.remove(key);\r\n        if (this.camera == key) {\r\n            this.camera = 'No active cameras';\r\n            this.data = {\r\n                offset: {x: 0.0, y: 0.0},\r\n                size: {x: 0.0, y: 0.0},\r\n                scale: 1.0,\r\n                angle: 0.0\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @param {string} key\r\n     * @returns {ViewportManager}\r\n     */\r\n    ViewportManager.prototype.updateViewport = function (key) {\r\n        if (this.cameras[key] !== undefined && this.cameras[key] instanceof CameraNode) {\r\n            this.data = this.cameras[key].getCameraViewport(this.screen, calculateScale);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @deprecated Please use CameraNode\r\n     *\r\n     * @param {Vector2d} offset\r\n     * @param {Vector2d} size\r\n     * @returns {ViewportManager}\r\n     */\r\n    ViewportManager.prototype.setViewport = function (offset, size) {\r\n        if (offset !== undefined && typeof offset == 'object') {\r\n            if (offset instanceof Vector2d) {\r\n                this.data.offset = offset.getVector();\r\n            }\r\n        }\r\n\r\n        if (size !== undefined && typeof size == 'object') {\r\n            if (size instanceof Vector2d) {\r\n                this.data.offset = size.getVector();\r\n            }\r\n        }\r\n\r\n        this.data.scale = calculateScale(this.screen, this.data);\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @returns {{offset: {x: number, y: number}, size: {x: number, y: number}, scale: number, angle: number}}\r\n     */\r\n    ViewportManager.prototype.getViewport = function () {\r\n        return this.data;\r\n    };\r\n\r\n    if (global.J2D !== undefined) global.ViewportManager = ViewportManager;\r\n    return ViewportManager;\r\n}));\r\n","/**\r\n *  WebGL-2D.js - HTML5 Canvas2D API in a WebGL context\r\n *\r\n *  Created by Corban Brook <corbanbrook@gmail.com> on 2011-03-02.\r\n *  Amended to by Bobby Richter <secretrobotron@gmail.com> on 2011-03-03\r\n *  CubicVR.js by Charles Cliffe <cj@cubicproductions.com> on 2011-03-03\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/WebGL2D', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    // Vector & Matrix libraries from CubicVR.js\r\n    var M_PI = 3.1415926535897932384626433832795028841968;\r\n    var M_TWO_PI = 2.0 * M_PI;\r\n    var M_HALF_PI = M_PI / 2.0;\r\n\r\n    function isPOT(value) {\r\n        return value > 0 && ((value - 1) & value) === 0;\r\n    }\r\n\r\n    var vec3 = {\r\n        length: function (pt) {\r\n            return Math.sqrt(pt[0] * pt[0] + pt[1] * pt[1] + pt[2] * pt[2]);\r\n        },\r\n\r\n        normalize: function (pt) {\r\n            var d = Math.sqrt((pt[0] * pt[0]) + (pt[1] * pt[1]) + (pt[2] * pt[2]));\r\n            if (d === 0) {\r\n                return [0, 0, 0];\r\n            }\r\n            return [pt[0] / d, pt[1] / d, pt[2] / d];\r\n        },\r\n\r\n        dot: function (v1, v2) {\r\n            return v1[0] * v2[0] + v1[1] * v2[1] + v1[2] * v2[2];\r\n        },\r\n\r\n        angle: function (v1, v2) {\r\n            return Math.acos((v1[0] * v2[0] + v1[1] * v2[1] + v1[2] * v2[2]) / (Math.sqrt(v1[0] * v1[0] + v1[1] * v1[1] + v1[2] * v1[2]) * Math.sqrt(v2[0] * v2[0] + v2[1] * v2[1] + v2[2] * v2[2])));\r\n        },\r\n\r\n        cross: function (vectA, vectB) {\r\n            return [vectA[1] * vectB[2] - vectB[1] * vectA[2], vectA[2] * vectB[0] - vectB[2] * vectA[0], vectA[0] * vectB[1] - vectB[0] * vectA[1]];\r\n        },\r\n\r\n        multiply: function (vectA, constB) {\r\n            return [vectA[0] * constB, vectA[1] * constB, vectA[2] * constB];\r\n        },\r\n\r\n        add: function (vectA, vectB) {\r\n            return [vectA[0] + vectB[0], vectA[1] + vectB[1], vectA[2] + vectB[2]];\r\n        },\r\n\r\n        subtract: function (vectA, vectB) {\r\n            return [vectA[0] - vectB[0], vectA[1] - vectB[1], vectA[2] - vectB[2]];\r\n        },\r\n\r\n        equal: function (a, b) {\r\n            var epsilon = 0.0000001;\r\n            if ((a === undefined) && (b === undefined)) {\r\n                return true;\r\n            }\r\n            if ((a === undefined) || (b === undefined)) {\r\n                return false;\r\n            }\r\n            return (Math.abs(a[0] - b[0]) < epsilon && Math.abs(a[1] - b[1]) < epsilon && Math.abs(a[2] - b[2]) < epsilon);\r\n        }\r\n    };\r\n\r\n    var mat3 = {\r\n        identity: [1.0, 0.0, 0.0,\r\n            0.0, 1.0, 0.0,\r\n            0.0, 0.0, 1.0],\r\n\r\n        multiply: function (m1, m2) {\r\n            var m10 = m1[0], m11 = m1[1], m12 = m1[2], m13 = m1[3], m14 = m1[4], m15 = m1[5], m16 = m1[6], m17 = m1[7], m18 = m1[8],\r\n                m20 = m2[0], m21 = m2[1], m22 = m2[2], m23 = m2[3], m24 = m2[4], m25 = m2[5], m26 = m2[6], m27 = m2[7], m28 = m2[8];\r\n\r\n            m2[0] = m20 * m10 + m23 * m11 + m26 * m12;\r\n            m2[1] = m21 * m10 + m24 * m11 + m27 * m12;\r\n            m2[2] = m22 * m10 + m25 * m11 + m28 * m12;\r\n            m2[3] = m20 * m13 + m23 * m14 + m26 * m15;\r\n            m2[4] = m21 * m13 + m24 * m14 + m27 * m15;\r\n            m2[5] = m22 * m13 + m25 * m14 + m28 * m15;\r\n            m2[6] = m20 * m16 + m23 * m17 + m26 * m18;\r\n            m2[7] = m21 * m16 + m24 * m17 + m27 * m18;\r\n            m2[8] = m22 * m16 + m25 * m17 + m28 * m18;\r\n        },\r\n\r\n        vec2_multiply: function (m1, m2) {\r\n            var mOut = [];\r\n            mOut[0] = m2[0] * m1[0] + m2[3] * m1[1] + m2[6];\r\n            mOut[1] = m2[1] * m1[0] + m2[4] * m1[1] + m2[7];\r\n            return mOut;\r\n        },\r\n\r\n        transpose: function (m) {\r\n            return [m[0], m[3], m[6], m[1], m[4], m[7], m[2], m[5], m[8]];\r\n        }\r\n    }; //mat3\r\n\r\n    // Transform library from CubicVR.js\r\n    function Transform(mat) {\r\n        return this.clearStack(mat);\r\n    }\r\n\r\n    var STACK_DEPTH_LIMIT = 16;\r\n\r\n    Transform.prototype.clearStack = function (init_mat) {\r\n        this.m_stack = [];\r\n        this.m_cache = [];\r\n        this.c_stack = 0;\r\n        this.valid = 0;\r\n        this.result = null;\r\n\r\n        for (var i = 0; i < STACK_DEPTH_LIMIT; i++) {\r\n            this.m_stack[i] = this.getIdentity();\r\n        }\r\n\r\n        if (init_mat !== undefined) {\r\n            this.m_stack[0] = init_mat;\r\n        } else {\r\n            this.setIdentity();\r\n        }\r\n    }; //clearStack\r\n\r\n    Transform.prototype.setIdentity = function () {\r\n        this.m_stack[this.c_stack] = this.getIdentity();\r\n        if (this.valid === this.c_stack && this.c_stack) {\r\n            this.valid--;\r\n        }\r\n    };\r\n\r\n    Transform.prototype.getIdentity = function () {\r\n        return [1.0, 0.0, 0.0,\r\n            0.0, 1.0, 0.0,\r\n            0.0, 0.0, 1.0];\r\n    };\r\n\r\n    Transform.prototype.getResult = function () {\r\n        if (!this.c_stack) {\r\n            return this.m_stack[0];\r\n        }\r\n\r\n        var m = mat3.identity;\r\n\r\n        if (this.valid > this.c_stack - 1) {\r\n            this.valid = this.c_stack - 1;\r\n        }\r\n\r\n        for (var i = this.valid; i < this.c_stack + 1; i++) {\r\n            m = mat3.multiply(this.m_stack[i], m);\r\n            this.m_cache[i] = m;\r\n        }\r\n\r\n        this.valid = this.c_stack - 1;\r\n\r\n        this.result = this.m_cache[this.c_stack];\r\n\r\n        return this.result;\r\n    };\r\n\r\n    Transform.prototype.pushMatrix = function () {\r\n        this.c_stack++;\r\n        this.m_stack[this.c_stack] = this.getIdentity();\r\n    };\r\n\r\n    Transform.prototype.popMatrix = function () {\r\n        if (this.c_stack === 0) {\r\n            return;\r\n        }\r\n        this.c_stack--;\r\n    };\r\n\r\n    var translateMatrix = Transform.prototype.getIdentity();\r\n\r\n    Transform.prototype.translate = function (x, y) {\r\n        translateMatrix[6] = x;\r\n        translateMatrix[7] = y;\r\n\r\n        mat3.multiply(translateMatrix, this.m_stack[this.c_stack]);\r\n\r\n        /*\r\n         if (this.valid === this.c_stack && this.c_stack) {\r\n         this.valid--;\r\n         }\r\n         */\r\n    };\r\n\r\n    var trMatrix = Transform.prototype.getIdentity();\r\n\r\n    Transform.prototype.tr = function (a, b, c, d, e, f) {\r\n        trMatrix[0] = a;\r\n        trMatrix[1] = b;\r\n        trMatrix[3] = c;\r\n        trMatrix[4] = d;\r\n        trMatrix[6] = e;\r\n        trMatrix[7] = f;\r\n\r\n        mat3.multiply(trMatrix, this.m_stack[this.c_stack]);\r\n    };\r\n\r\n    var scaleMatrix = Transform.prototype.getIdentity();\r\n\r\n    Transform.prototype.scale = function (x, y) {\r\n        scaleMatrix[0] = x;\r\n        scaleMatrix[4] = y;\r\n\r\n        mat3.multiply(scaleMatrix, this.m_stack[this.c_stack]);\r\n\r\n        /*\r\n         if (this.valid === this.c_stack && this.c_stack) {\r\n         this.valid--;\r\n         }\r\n         */\r\n    };\r\n\r\n    var rotateMatrix = Transform.prototype.getIdentity();\r\n\r\n    Transform.prototype.rotate = function (ang) {\r\n        var sAng, cAng;\r\n\r\n        sAng = Math.sin(-ang);\r\n        cAng = Math.cos(-ang);\r\n\r\n        rotateMatrix[0] = cAng;\r\n        rotateMatrix[3] = sAng;\r\n        rotateMatrix[1] = -sAng;\r\n        rotateMatrix[4] = cAng;\r\n\r\n        mat3.multiply(rotateMatrix, this.m_stack[this.c_stack]);\r\n\r\n        /*\r\n         if (this.valid === this.c_stack && this.c_stack) {\r\n         this.valid--;\r\n         }\r\n         */\r\n    };\r\n\r\n    var WebGL2D = global.WebGL2D = function WebGL2D(canvas, options) {\r\n        this.canvas = canvas;\r\n        this.options = options || {};\r\n        this.gl = undefined;\r\n        this.fs = undefined;\r\n        this.vs = undefined;\r\n        this.shaderProgram = undefined;\r\n        this.transform = new Transform();\r\n        this.shaderPool = [];\r\n        this.maxTextureSize = undefined;\r\n\r\n        // Save a reference to the WebGL2D instance on the canvas object\r\n        canvas.gl2d = this;\r\n\r\n        // Store getContext function for later use\r\n        canvas.$getContext = canvas.getContext;\r\n\r\n        // Override getContext function with \"webgl-2d\" enabled version\r\n        canvas.getContext = (function (gl2d) {\r\n            return function (context) {\r\n                if ((gl2d.options.force || context === \"WebGL-2d\") && !(canvas.width === 0 || canvas.height === 0)) {\r\n                    if (gl2d.gl) {\r\n                        return gl2d.gl;\r\n                    }\r\n\r\n                    var gl = gl2d.gl = gl2d.canvas.$getContext(\"experimental-webgl\");\r\n\r\n                    // If we failed to get a WebGL context, return a normal 2D context instead.\r\n                    if ((typeof (gl) === \"undefined\") || (gl === null)) {\r\n                        return gl2d.canvas.$getContext(\"2d\");\r\n                    }\r\n\r\n                    gl2d.initShaders();\r\n                    gl2d.initBuffers();\r\n\r\n                    // Append Canvas2D API features to the WebGL context\r\n                    gl2d.initCanvas2DAPI();\r\n\r\n                    // Disables writing to dest-alpha\r\n                    // gl.colorMask(1,1,1,0)\r\n\r\n                    // Depth options\r\n                    //gl.enable(gl.DEPTH_TEST);\r\n                    //gl.depthFunc(gl.LEQUAL);\r\n\r\n                    // Blending options\r\n                    // See http://stackoverflow.com/questions/11521035/blending-with-html-background-in-webgl\r\n                    gl.enable(gl.BLEND);\r\n                    gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n\r\n                    gl2d.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\r\n\r\n                    return gl;\r\n                } else {\r\n                    return gl2d.canvas.$getContext(context);\r\n                }\r\n            };\r\n        }(this));\r\n\r\n        this.postInit();\r\n    };\r\n\r\n    // Enables WebGL2D on your canvas\r\n    WebGL2D.enable = function (canvas, options) {\r\n        return canvas.gl2d || new WebGL2D(canvas, options);\r\n    };\r\n\r\n\r\n    // Shader Pool BitMasks, i.e. sMask = (shaderMask.texture+shaderMask.stroke)\r\n    var shaderMask = {\r\n        texture: 1,\r\n        crop: 2,\r\n        path: 4\r\n    };\r\n\r\n\r\n    // Fragment shader source\r\n    WebGL2D.prototype.getFragmentShaderSource = function getFragmentShaderSource(sMask) {\r\n        var fsSource = [\r\n            \"#ifdef GL_ES\",\r\n            \"precision highp float;\",\r\n            \"#endif\",\r\n\r\n            \"#define hasTexture \" + ((sMask & shaderMask.texture) ? \"1\" : \"0\"),\r\n            \"#define hasCrop \" + ((sMask & shaderMask.crop) ? \"1\" : \"0\"),\r\n\r\n            \"varying vec4 vColor;\",\r\n\r\n            \"#if hasTexture\",\r\n            \"varying vec2 vTextureCoord;\",\r\n            \"uniform sampler2D uSampler;\",\r\n            \"#if hasCrop\",\r\n            \"uniform vec4 uCropSource;\",\r\n            \"#endif\",\r\n            \"#endif\",\r\n\r\n            \"void main(void) {\",\r\n            \"#if hasTexture\",\r\n            \"#if hasCrop\",\r\n            \"gl_FragColor = texture2D(uSampler, vec2(vTextureCoord.x * uCropSource.z, vTextureCoord.y * uCropSource.w) + uCropSource.xy);\",\r\n            \"#else\",\r\n            \"gl_FragColor = texture2D(uSampler, vTextureCoord);\",\r\n            \"#endif\",\r\n            \"#else\",\r\n            \"gl_FragColor = vColor;\",\r\n            \"#endif\",\r\n            \"}\"\r\n        ].join(\"\\n\");\r\n\r\n        return fsSource;\r\n    };\r\n\r\n    WebGL2D.prototype.getVertexShaderSource = function getVertexShaderSource(stackDepth, sMask) {\r\n        stackDepth = stackDepth || 1;\r\n\r\n        var vsSource = [\r\n            \"#define hasTexture \" + ((sMask & shaderMask.texture) ? \"1\" : \"0\"),\r\n            \"attribute vec4 aVertexPosition;\",\r\n\r\n            \"#if hasTexture\",\r\n            \"varying vec2 vTextureCoord;\",\r\n            \"#endif\",\r\n\r\n            \"uniform vec4 uColor;\",\r\n            \"uniform mat3 uTransforms[\" + stackDepth + \"];\",\r\n\r\n            \"varying vec4 vColor;\",\r\n\r\n            \"uniform mat4 pMatrix;\",\r\n\r\n            \"mat3 crunchStack(void) {\",\r\n            \"mat3 result = uTransforms[0];\",\r\n            \"for (int i = 1; i < \" + stackDepth + \"; ++i) {\",\r\n            \"result = uTransforms[i] * result;\",\r\n            \"}\",\r\n            \"return result;\",\r\n            \"}\",\r\n\r\n            \"void main(void) {\",\r\n            \"vec3 position = crunchStack() * vec3(aVertexPosition.x, aVertexPosition.y, 1.0);\",\r\n            \"gl_Position = pMatrix * vec4(position, 1.0);\",\r\n            \"vColor = uColor;\",\r\n            \"#if hasTexture\",\r\n            \"vTextureCoord = aVertexPosition.zw;\",\r\n            \"#endif\",\r\n            \"}\"\r\n        ].join(\"\\n\");\r\n        return vsSource;\r\n    };\r\n\r\n\r\n    // Initialize fragment and vertex shaders\r\n    WebGL2D.prototype.initShaders = function initShaders(transformStackDepth, sMask) {\r\n        var gl = this.gl;\r\n\r\n        transformStackDepth = transformStackDepth || 1;\r\n        sMask = sMask || 0;\r\n        var storedShader = this.shaderPool[transformStackDepth];\r\n\r\n        if (!storedShader) {\r\n            storedShader = this.shaderPool[transformStackDepth] = [];\r\n        }\r\n        storedShader = storedShader[sMask];\r\n\r\n        if (storedShader) {\r\n            gl.useProgram(storedShader);\r\n            this.shaderProgram = storedShader;\r\n        } else {\r\n            var fs = this.fs = gl.createShader(gl.FRAGMENT_SHADER);\r\n            gl.shaderSource(this.fs, this.getFragmentShaderSource(sMask));\r\n            gl.compileShader(this.fs);\r\n\r\n            if (!gl.getShaderParameter(this.fs, gl.COMPILE_STATUS)) {\r\n                throw \"fragment shader error: \" + gl.getShaderInfoLog(this.fs);\r\n            }\r\n\r\n            var vs = this.vs = gl.createShader(gl.VERTEX_SHADER);\r\n            gl.shaderSource(this.vs, this.getVertexShaderSource(transformStackDepth, sMask));\r\n            gl.compileShader(this.vs);\r\n\r\n            if (!gl.getShaderParameter(this.vs, gl.COMPILE_STATUS)) {\r\n                throw \"vertex shader error: \" + gl.getShaderInfoLog(this.vs);\r\n            }\r\n\r\n\r\n            var shaderProgram = this.shaderProgram = gl.createProgram();\r\n            shaderProgram.stackDepth = transformStackDepth;\r\n            gl.attachShader(shaderProgram, fs);\r\n            gl.attachShader(shaderProgram, vs);\r\n            gl.linkProgram(shaderProgram);\r\n\r\n            if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\r\n                throw \"Could not initialise shaders.\";\r\n            }\r\n\r\n            gl.useProgram(shaderProgram);\r\n\r\n            shaderProgram.vertexPositionAttribute = gl.getAttribLocation(shaderProgram, \"aVertexPosition\");\r\n            gl.enableVertexAttribArray(shaderProgram.vertexPositionAttribute);\r\n\r\n            shaderProgram.uColor = gl.getUniformLocation(shaderProgram, 'uColor');\r\n            shaderProgram.uSampler = gl.getUniformLocation(shaderProgram, 'uSampler');\r\n            shaderProgram.uCropSource = gl.getUniformLocation(shaderProgram, 'uCropSource');\r\n\r\n            shaderProgram.pMatrix = gl.getUniformLocation(shaderProgram, 'pMatrix');\r\n\r\n            shaderProgram.uTransforms = [];\r\n            for (var i = 0; i < transformStackDepth; ++i) {\r\n                shaderProgram.uTransforms[i] = gl.getUniformLocation(shaderProgram, 'uTransforms[' + i + ']');\r\n            } //for\r\n            this.shaderPool[transformStackDepth][sMask] = shaderProgram;\r\n        } //if\r\n\r\n        pMatrix[0] = 2 / this.canvas.width;\r\n        pMatrix[5] = -2 / this.canvas.height;\r\n\r\n        gl.uniformMatrix4fv(this.shaderProgram.pMatrix, false, pMatrix);\r\n\r\n        gl.viewport(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n        return this.shaderProgram;\r\n    };\r\n\r\n    // 2D Vertices and Texture UV coords\r\n    var rectVerts = new Float32Array([\r\n        0, 0, 0, 0,\r\n        0, 1, 0, 1,\r\n        1, 1, 1, 1,\r\n        1, 0, 1, 0\r\n    ]);\r\n\r\n    var pMatrix = new Float32Array(16);\r\n    pMatrix[10] = 1;\r\n    pMatrix[11] = 1;\r\n    pMatrix[12] = -1;\r\n    pMatrix[13] = 1;\r\n\r\n    WebGL2D.prototype.initBuffers = function initBuffers() {\r\n        var gl = this.gl;\r\n\r\n        gl.rectVertexPositionBuffer = gl.createBuffer();\r\n        gl.rectVertexColorBuffer = gl.createBuffer();\r\n\r\n        gl.pathVertexPositionBuffer = gl.createBuffer();\r\n        gl.pathVertexColorBuffer = gl.createBuffer();\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, gl.rectVertexPositionBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, rectVerts, gl.STATIC_DRAW);\r\n    };\r\n\r\n    // Maintains an array of all WebGL2D instances\r\n    WebGL2D.instances = [];\r\n\r\n    WebGL2D.prototype.postInit = function () {\r\n        WebGL2D.instances.push(this);\r\n    };\r\n\r\n    // Extends gl context with Canvas2D API\r\n    WebGL2D.prototype.initCanvas2DAPI = function initCanvas2DAPI() {\r\n        var gl2d = this,\r\n            gl = this.gl;\r\n\r\n\r\n        // Rendering Canvas for text fonts\r\n        var textCanvas = document.createElement(\"canvas\");\r\n        textCanvas.width = gl2d.canvas.width;\r\n        textCanvas.height = gl2d.canvas.height;\r\n        var textCtx = textCanvas.getContext(\"2d\");\r\n\r\n        var reRGBAColor = /^rgb(a)?\\(\\s*(-?[\\d]+)(%)?\\s*,\\s*(-?[\\d]+)(%)?\\s*,\\s*(-?[\\d]+)(%)?\\s*,?\\s*(-?[\\d\\.]+)?\\s*\\)$/;\r\n        var reHSLAColor = /^hsl(a)?\\(\\s*(-?[\\d\\.]+)\\s*,\\s*(-?[\\d\\.]+)%\\s*,\\s*(-?[\\d\\.]+)%\\s*,?\\s*(-?[\\d\\.]+)?\\s*\\)$/;\r\n        var reHex6Color = /^#([0-9A-Fa-f]{6})$/;\r\n        var reHex3Color = /^#([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])$/;\r\n\r\n        function hue2rgb(p, q, t) {\r\n            if (t < 0) t += 1;\r\n            if (t > 1) t -= 1;\r\n            if (t < 1 / 6) return p + (q - p) * 6 * t;\r\n            if (t < 1 / 2) return q;\r\n            if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\r\n            return p;\r\n        }\r\n\r\n        // http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n        function HSLAToRGBA(h, s, l, a) {\r\n            var r, g, b, p, q;\r\n\r\n            // Clamp and Normalize values\r\n            h = (((h % 360) + 360) % 360) / 360;\r\n            s = s > 100 ? 1 : s / 100;\r\n            s = s < 0 ? 0 : s;\r\n            l = l > 100 ? 1 : l / 100;\r\n            l = l < 0 ? 0 : l;\r\n\r\n            if (s == 0) {\r\n                r = g = b = l; // achromatic\r\n            } else {\r\n                q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n                p = 2 * l - q;\r\n\r\n                r = hue2rgb(p, q, h + 1 / 3);\r\n                g = hue2rgb(p, q, h);\r\n                b = hue2rgb(p, q, h - 1 / 3);\r\n            }\r\n\r\n            return [r, g, b, a];\r\n        }\r\n\r\n\r\n        // Converts rgb(a) color string to gl color vector\r\n        function colorStringToVec4(value) {\r\n            var result = [], match, channel, isPercent, hasAlpha, alphaChannel, sameType;\r\n\r\n            if ((match = reRGBAColor.exec(value))) {\r\n                hasAlpha = match[1], alphaChannel = parseFloat(match[8]);\r\n\r\n                if ((hasAlpha && isNaN(alphaChannel)) || (!hasAlpha && !isNaN(alphaChannel))) {\r\n                    return false;\r\n                }\r\n\r\n                sameType = match[3];\r\n\r\n                for (var i = 2; i < 8; i += 2) {\r\n                    channel = match[i], isPercent = match[i + 1];\r\n\r\n                    if (isPercent !== sameType) {\r\n                        return false;\r\n                    }\r\n\r\n                    // Clamp and normalize values\r\n                    if (isPercent) {\r\n                        channel = channel > 100 ? 1 : channel / 100;\r\n                        channel = channel < 0 ? 0 : channel;\r\n                    } else {\r\n                        channel = channel > 255 ? 1 : channel / 255;\r\n                        channel = channel < 0 ? 0 : channel;\r\n                    }\r\n\r\n                    result.push(channel);\r\n                }\r\n\r\n                result.push(hasAlpha ? alphaChannel : 1.0);\r\n            } else if ((match = reHSLAColor.exec(value))) {\r\n                hasAlpha = match[1], alphaChannel = parseFloat(match[5]);\r\n                result = HSLAToRGBA(match[2], match[3], match[4], parseFloat(hasAlpha && alphaChannel ? alphaChannel : 1.0));\r\n            } else if ((match = reHex6Color.exec(value))) {\r\n                var colorInt = parseInt(match[1], 16);\r\n                result = [((colorInt & 0xFF0000) >> 16) / 255, ((colorInt & 0x00FF00) >> 8) / 255, (colorInt & 0x0000FF) / 255, 1.0];\r\n            } else if ((match = reHex3Color.exec(value))) {\r\n                var hexString = \"#\" + [match[1], match[1], match[2], match[2], match[3], match[3]].join(\"\");\r\n                result = colorStringToVec4(hexString);\r\n            } else if (value.toLowerCase() in colorKeywords) {\r\n                result = colorStringToVec4(colorKeywords[value.toLowerCase()]);\r\n            } else if (value.toLowerCase() === \"transparent\") {\r\n                result = [0, 0, 0, 0];\r\n            } else {\r\n                // Color keywords not yet implemented, ie \"orange\", return hot pink\r\n                return false;\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        function colorVecToString(vec4) {\r\n            return \"rgba(\" + (vec4[0] * 255) + \", \" + (vec4[1] * 255) + \", \" + (vec4[2] * 255) + \", \" + parseFloat(vec4[3]) + \")\";\r\n        }\r\n\r\n        var colorKeywords = {\r\n            aliceblue: \"#f0f8ff\",\r\n            antiquewhite: \"#faebd7\",\r\n            aqua: \"#00ffff\",\r\n            aquamarine: \"#7fffd4\",\r\n            azure: \"#f0ffff\",\r\n            beige: \"#f5f5dc\",\r\n            bisque: \"#ffe4c4\",\r\n            black: \"#000000\",\r\n            blanchedalmond: \"#ffebcd\",\r\n            blue: \"#0000ff\",\r\n            blueviolet: \"#8a2be2\",\r\n            brown: \"#a52a2a\",\r\n            burlywood: \"#deb887\",\r\n            cadetblue: \"#5f9ea0\",\r\n            chartreuse: \"#7fff00\",\r\n            chocolate: \"#d2691e\",\r\n            coral: \"#ff7f50\",\r\n            cornflowerblue: \"#6495ed\",\r\n            cornsilk: \"#fff8dc\",\r\n            crimson: \"#dc143c\",\r\n            cyan: \"#00ffff\",\r\n            darkblue: \"#00008b\",\r\n            darkcyan: \"#008b8b\",\r\n            darkgoldenrod: \"#b8860b\",\r\n            darkgray: \"#a9a9a9\",\r\n            darkgreen: \"#006400\",\r\n            darkkhaki: \"#bdb76b\",\r\n            darkmagenta: \"#8b008b\",\r\n            darkolivegreen: \"#556b2f\",\r\n            darkorange: \"#ff8c00\",\r\n            darkorchid: \"#9932cc\",\r\n            darkred: \"#8b0000\",\r\n            darksalmon: \"#e9967a\",\r\n            darkseagreen: \"#8fbc8f\",\r\n            darkslateblue: \"#483d8b\",\r\n            darkslategray: \"#2f4f4f\",\r\n            darkturquoise: \"#00ced1\",\r\n            darkviolet: \"#9400d3\",\r\n            deeppink: \"#ff1493\",\r\n            deepskyblue: \"#00bfff\",\r\n            dimgray: \"#696969\",\r\n            dodgerblue: \"#1e90ff\",\r\n            firebrick: \"#b22222\",\r\n            floralwhite: \"#fffaf0\",\r\n            forestgreen: \"#228b22\",\r\n            fuchsia: \"#ff00ff\",\r\n            gainsboro: \"#dcdcdc\",\r\n            ghostwhite: \"#f8f8ff\",\r\n            gold: \"#ffd700\",\r\n            goldenrod: \"#daa520\",\r\n            gray: \"#808080\",\r\n            green: \"#008000\",\r\n            greenyellow: \"#adff2f\",\r\n            grey: \"#808080\",\r\n            honeydew: \"#f0fff0\",\r\n            hotpink: \"#ff69b4\",\r\n            indianred: \"#cd5c5c\",\r\n            indigo: \"#4b0082\",\r\n            ivory: \"#fffff0\",\r\n            khaki: \"#f0e68c\",\r\n            lavender: \"#e6e6fa\",\r\n            lavenderblush: \"#fff0f5\",\r\n            lawngreen: \"#7cfc00\",\r\n            lemonchiffon: \"#fffacd\",\r\n            lightblue: \"#add8e6\",\r\n            lightcoral: \"#f08080\",\r\n            lightcyan: \"#e0ffff\",\r\n            lightgoldenrodyellow: \"#fafad2\",\r\n            lightgrey: \"#d3d3d3\",\r\n            lightgreen: \"#90ee90\",\r\n            lightpink: \"#ffb6c1\",\r\n            lightsalmon: \"#ffa07a\",\r\n            lightseagreen: \"#20b2aa\",\r\n            lightskyblue: \"#87cefa\",\r\n            lightslategray: \"#778899\",\r\n            lightsteelblue: \"#b0c4de\",\r\n            lightyellow: \"#ffffe0\",\r\n            lime: \"#00ff00\",\r\n            limegreen: \"#32cd32\",\r\n            linen: \"#faf0e6\",\r\n            magenta: \"#ff00ff\",\r\n            maroon: \"#800000\",\r\n            mediumaquamarine: \"#66cdaa\",\r\n            mediumblue: \"#0000cd\",\r\n            mediumorchid: \"#ba55d3\",\r\n            mediumpurple: \"#9370d8\",\r\n            mediumseagreen: \"#3cb371\",\r\n            mediumslateblue: \"#7b68ee\",\r\n            mediumspringgreen: \"#00fa9a\",\r\n            mediumturquoise: \"#48d1cc\",\r\n            mediumvioletred: \"#c71585\",\r\n            midnightblue: \"#191970\",\r\n            mintcream: \"#f5fffa\",\r\n            mistyrose: \"#ffe4e1\",\r\n            moccasin: \"#ffe4b5\",\r\n            navajowhite: \"#ffdead\",\r\n            navy: \"#000080\",\r\n            oldlace: \"#fdf5e6\",\r\n            olive: \"#808000\",\r\n            olivedrab: \"#6b8e23\",\r\n            orange: \"#ffa500\",\r\n            orangered: \"#ff4500\",\r\n            orchid: \"#da70d6\",\r\n            palegoldenrod: \"#eee8aa\",\r\n            palegreen: \"#98fb98\",\r\n            paleturquoise: \"#afeeee\",\r\n            palevioletred: \"#d87093\",\r\n            papayawhip: \"#ffefd5\",\r\n            peachpuff: \"#ffdab9\",\r\n            peru: \"#cd853f\",\r\n            pink: \"#ffc0cb\",\r\n            plum: \"#dda0dd\",\r\n            powderblue: \"#b0e0e6\",\r\n            purple: \"#800080\",\r\n            red: \"#ff0000\",\r\n            rosybrown: \"#bc8f8f\",\r\n            royalblue: \"#4169e1\",\r\n            saddlebrown: \"#8b4513\",\r\n            salmon: \"#fa8072\",\r\n            sandybrown: \"#f4a460\",\r\n            seagreen: \"#2e8b57\",\r\n            seashell: \"#fff5ee\",\r\n            sienna: \"#a0522d\",\r\n            silver: \"#c0c0c0\",\r\n            skyblue: \"#87ceeb\",\r\n            slateblue: \"#6a5acd\",\r\n            slategray: \"#708090\",\r\n            snow: \"#fffafa\",\r\n            springgreen: \"#00ff7f\",\r\n            steelblue: \"#4682b4\",\r\n            tan: \"#d2b48c\",\r\n            teal: \"#008080\",\r\n            thistle: \"#d8bfd8\",\r\n            tomato: \"#ff6347\",\r\n            turquoise: \"#40e0d0\",\r\n            violet: \"#ee82ee\",\r\n            wheat: \"#f5deb3\",\r\n            white: \"#ffffff\",\r\n            whitesmoke: \"#f5f5f5\",\r\n            yellow: \"#ffff00\",\r\n            yellowgreen: \"#9acd32\"\r\n        };\r\n\r\n        // Maintain drawing state params during gl.save and gl.restore. see saveDrawState() and restoreDrawState()\r\n        var drawState = {}, drawStateStack = [];\r\n\r\n        // A fast simple shallow clone\r\n        function cloneObject(obj) {\r\n            var target = {};\r\n            for (var i in obj) {\r\n                if (obj.hasOwnProperty(i)) {\r\n                    target[i] = obj[i];\r\n                }\r\n            }\r\n            return target;\r\n        }\r\n\r\n        function saveDrawState() {\r\n            var bakedDrawState = {\r\n                fillStyle: [drawState.fillStyle[0], drawState.fillStyle[1], drawState.fillStyle[2], drawState.fillStyle[3]],\r\n                strokeStyle: [drawState.strokeStyle[0], drawState.strokeStyle[1], drawState.strokeStyle[2], drawState.strokeStyle[3]],\r\n                globalAlpha: drawState.globalAlpha,\r\n                globalCompositeOperation: drawState.globalCompositeOperation,\r\n                lineCap: drawState.lineCap,\r\n                lineJoin: drawState.lineJoin,\r\n                lineWidth: drawState.lineWidth,\r\n                miterLimit: drawState.miterLimit,\r\n                shadowColor: drawState.shadowColor,\r\n                shadowBlur: drawState.shadowBlur,\r\n                shadowOffsetX: drawState.shadowOffsetX,\r\n                shadowOffsetY: drawState.shadowOffsetY,\r\n                textAlign: drawState.textAlign,\r\n                font: drawState.font,\r\n                textBaseline: drawState.textBaseline,\r\n                imageSmoothingEnabled: drawState.imageSmoothingEnabled\r\n            };\r\n\r\n            drawStateStack.push(bakedDrawState);\r\n        }\r\n\r\n        function restoreDrawState() {\r\n            if (drawStateStack.length) {\r\n                drawState = drawStateStack.pop();\r\n            }\r\n        }\r\n\r\n        // WebGL requires colors as a vector while Canvas2D sets colors as an rgba string\r\n        // These getters and setters store the original rgba string as well as convert to a vector\r\n        drawState.fillStyle = [0, 0, 0, 1]; // default black\r\n\r\n        Object.defineProperty(gl, \"fillStyle\", {\r\n            get: function () {\r\n                return colorVecToString(drawState.fillStyle);\r\n            },\r\n            set: function (value) {\r\n                drawState.fillStyle = colorStringToVec4(value) || drawState.fillStyle;\r\n            }\r\n        });\r\n\r\n        drawState.strokeStyle = [0, 0, 0, 1]; // default black\r\n\r\n        Object.defineProperty(gl, \"strokeStyle\", {\r\n            get: function () {\r\n                return colorVecToString(drawState.strokeStyle);\r\n            },\r\n            set: function (value) {\r\n                drawState.strokeStyle = colorStringToVec4(value) || drawStyle.strokeStyle;\r\n            }\r\n        });\r\n\r\n        // WebGL already has a lineWidth() function but Canvas2D requires a lineWidth property\r\n        // Store the original lineWidth() function for later use\r\n        gl.$lineWidth = gl.lineWidth;\r\n        drawState.lineWidth = 1.0;\r\n\r\n        Object.defineProperty(gl, \"lineWidth\", {\r\n            get: function () {\r\n                return drawState.lineWidth;\r\n            },\r\n            set: function (value) {\r\n                if (value > 0) {\r\n                    gl.$lineWidth(value);\r\n                    drawState.lineWidth = value;\r\n                }\r\n            }\r\n        });\r\n\r\n        // Currently unsupported attributes and their default values\r\n        drawState.lineCap = \"butt\";\r\n\r\n        Object.defineProperty(gl, \"lineCap\", {\r\n            get: function () {\r\n                return drawState.lineCap;\r\n            },\r\n            set: function (value) {\r\n                drawState.lineCap = value;\r\n            }\r\n        });\r\n\r\n        drawState.lineJoin = \"miter\";\r\n\r\n        Object.defineProperty(gl, \"lineJoin\", {\r\n            get: function () {\r\n                return drawState.lineJoin;\r\n            },\r\n            set: function (value) {\r\n                drawState.lineJoin = value;\r\n            }\r\n        });\r\n\r\n        drawState.miterLimit = 10;\r\n\r\n        Object.defineProperty(gl, \"miterLimit\", {\r\n            get: function () {\r\n                return drawState.miterLimit;\r\n            },\r\n            set: function (value) {\r\n                drawState.miterLimit = value;\r\n            }\r\n        });\r\n\r\n        drawState.shadowOffsetX = 0;\r\n\r\n        Object.defineProperty(gl, \"shadowOffsetX\", {\r\n            get: function () {\r\n                return drawState.shadowOffsetX;\r\n            },\r\n            set: function (value) {\r\n                drawState.shadowOffsetX = value;\r\n            }\r\n        });\r\n\r\n        drawState.shadowOffsetY = 0;\r\n\r\n        Object.defineProperty(gl, \"shadowOffsetY\", {\r\n            get: function () {\r\n                return drawState.shadowOffsetY;\r\n            },\r\n            set: function (value) {\r\n                drawState.shadowOffsetY = value;\r\n            }\r\n        });\r\n\r\n        drawState.shadowBlur = 0;\r\n\r\n        Object.defineProperty(gl, \"shadowBlur\", {\r\n            get: function () {\r\n                return drawState.shadowBlur;\r\n            },\r\n            set: function (value) {\r\n                drawState.shadowBlur = value;\r\n            }\r\n        });\r\n\r\n        drawState.shadowColor = \"rgba(0, 0, 0, 0.0)\";\r\n\r\n        Object.defineProperty(gl, \"shadowColor\", {\r\n            get: function () {\r\n                return drawState.shadowColor;\r\n            },\r\n            set: function (value) {\r\n                drawState.shadowColor = value;\r\n            }\r\n        });\r\n\r\n        drawState.font = \"10px sans-serif\";\r\n\r\n        Object.defineProperty(gl, \"font\", {\r\n            get: function () {\r\n                return drawState.font;\r\n            },\r\n            set: function (value) {\r\n                textCtx.font = value;\r\n                drawState.font = value;\r\n            }\r\n        });\r\n\r\n        drawState.textAlign = \"start\";\r\n\r\n        Object.defineProperty(gl, \"textAlign\", {\r\n            get: function () {\r\n                return drawState.textAlign;\r\n            },\r\n            set: function (value) {\r\n                drawState.textAlign = value;\r\n            }\r\n        });\r\n\r\n        drawState.textBaseline = \"alphabetic\";\r\n\r\n        Object.defineProperty(gl, \"textBaseline\", {\r\n            get: function () {\r\n                return drawState.textBaseline;\r\n            },\r\n            set: function (value) {\r\n                drawState.textBaseline = value;\r\n            }\r\n        });\r\n\r\n        // This attribute will need to control global alpha of objects drawn.\r\n        drawState.globalAlpha = 1.0;\r\n\r\n        Object.defineProperty(gl, \"globalAlpha\", {\r\n            get: function () {\r\n                return drawState.globalAlpha;\r\n            },\r\n            set: function (value) {\r\n                drawState.globalAlpha = value;\r\n            }\r\n        });\r\n\r\n        // This attribute will need to control smoothing of objects drawn.\r\n        drawState.imageSmoothingEnabled = true;\r\n\r\n        Object.defineProperty(gl, \"imageSmoothingEnabled\", {\r\n            get: function () {\r\n                return drawState.imageSmoothingEnabled;\r\n            },\r\n            set: function (value) {\r\n                drawState.imageSmoothingEnabled = !!value;\r\n            }\r\n        });\r\n\r\n        // This attribute will need to set the gl.blendFunc mode\r\n        drawState.globalCompositeOperation = \"source-over\";\r\n\r\n        Object.defineProperty(gl, \"globalCompositeOperation\", {\r\n            get: function () {\r\n                return drawState.globalCompositeOperation;\r\n            },\r\n            set: function (value) {\r\n                drawState.globalCompositeOperation = value;\r\n            }\r\n        });\r\n\r\n        // Need a solution for drawing text that isnt stupid slow\r\n        gl.fillText = function fillText(text, x, y) {\r\n            // if it exist --key\r\n            textCtx.clearRect(0, 0, gl2d.canvas.width, gl2d.canvas.height);\r\n            textCtx.fillStyle = gl.fillStyle;\r\n            textCtx.fillText(text, x, y);\r\n\r\n            gl.drawImage(textCanvas, 0, 0);\r\n        };\r\n\r\n        gl.strokeText = function strokeText() {\r\n        };\r\n\r\n        gl.measureText = function measureText() {\r\n            return 1;\r\n        };\r\n\r\n        var tempCanvas = document.createElement('canvas');\r\n        var tempCtx = tempCanvas.getContext('2d');\r\n\r\n        gl.save = function save() {\r\n            gl2d.transform.pushMatrix();\r\n            saveDrawState();\r\n        };\r\n\r\n        gl.restore = function restore() {\r\n            gl2d.transform.popMatrix();\r\n            restoreDrawState();\r\n        };\r\n\r\n        gl.translate = function translate(x, y) {\r\n            gl2d.transform.translate(x, y);\r\n        };\r\n\r\n        gl.rotate = function rotate(a) {\r\n            gl2d.transform.rotate(a);\r\n        };\r\n\r\n        gl.scale = function scale(x, y) {\r\n            gl2d.transform.scale(x, y);\r\n        };\r\n\r\n        gl.createImageData = function createImageData(width, height) {\r\n            return tempCtx.createImageData(width, height);\r\n        };\r\n\r\n        gl.getImageData = function getImageData(x, y, width, height) {\r\n            var data = tempCtx.createImageData(width, height);\r\n            var buffer = new Uint8Array(width * height * 4);\r\n            gl.readPixels(x, y, width, height, gl.RGBA, gl.UNSIGNED_BYTE, buffer);\r\n            var w = width * 4, h = height;\r\n            for (var i = 0, maxI = h / 2; i < maxI; ++i) {\r\n                for (var j = 0, maxJ = w; j < maxJ; ++j) {\r\n                    var index1 = i * w + j;\r\n                    var index2 = (h - i - 1) * w + j;\r\n                    data.data[index1] = buffer[index2];\r\n                    data.data[index2] = buffer[index1];\r\n                } //for\r\n            } //for\r\n\r\n            return data;\r\n        };\r\n\r\n        gl.putImageData = function putImageData(imageData, x, y) {\r\n            gl.drawImage(imageData, x, y);\r\n        };\r\n\r\n        gl.transform = function transform(m11, m12, m21, m22, dx, dy) {\r\n            gl2d.transform.tr(m11, m12, m21, m22, dx, dy);\r\n        };\r\n\r\n        function sendTransformStack(sp) {\r\n            var stack = gl2d.transform.m_stack;\r\n            for (var i = 0, maxI = gl2d.transform.c_stack + 1; i < maxI; ++i) {\r\n                gl.uniformMatrix3fv(sp.uTransforms[i], false, stack[maxI - 1 - i]);\r\n            } //for\r\n        }\r\n\r\n        gl.setTransform = function setTransform(m11, m12, m21, m22, dx, dy) {\r\n            gl2d.transform.setIdentity();\r\n            gl.transform.apply(this, arguments);\r\n        };\r\n\r\n        gl.fillRect = function fillRect(x, y, width, height) {\r\n            var transform = gl2d.transform;\r\n            var shaderProgram = gl2d.initShaders(transform.c_stack + 2, 0);\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, gl.rectVertexPositionBuffer);\r\n            gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, 4, gl.FLOAT, false, 0, 0);\r\n\r\n            transform.pushMatrix();\r\n\r\n            transform.translate(x, y);\r\n            transform.scale(width, height);\r\n\r\n            sendTransformStack(shaderProgram);\r\n\r\n            gl.uniform4f(shaderProgram.uColor, drawState.fillStyle[0], drawState.fillStyle[1], drawState.fillStyle[2], drawState.fillStyle[3]);\r\n\r\n            gl.drawArrays(gl.TRIANGLE_FAN, 0, 4);\r\n\r\n            transform.popMatrix();\r\n        };\r\n\r\n        gl.strokeRect = function strokeRect(x, y, width, height) {\r\n            var transform = gl2d.transform;\r\n            var shaderProgram = gl2d.initShaders(transform.c_stack + 2, 0);\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, gl.rectVertexPositionBuffer);\r\n            gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, 4, gl.FLOAT, false, 0, 0);\r\n\r\n            transform.pushMatrix();\r\n\r\n            transform.translate(x, y);\r\n            transform.scale(width, height);\r\n\r\n            sendTransformStack(shaderProgram);\r\n\r\n            gl.uniform4f(shaderProgram.uColor, drawState.strokeStyle[0], drawState.strokeStyle[1], drawState.strokeStyle[2], drawState.strokeStyle[3]);\r\n\r\n            gl.drawArrays(gl.LINE_LOOP, 0, 4);\r\n\r\n            transform.popMatrix();\r\n        };\r\n\r\n        gl.clearRect = function clearRect(x, y, width, height) {\r\n        };\r\n\r\n        var subPaths = [];\r\n\r\n        function SubPath(x, y) {\r\n            this.closed = false;\r\n            this.verts = [x, y, 0, 0];\r\n        }\r\n\r\n        // Empty the list of subpaths so that the context once again has zero subpaths\r\n        gl.beginPath = function beginPath() {\r\n            subPaths.length = 0;\r\n        };\r\n\r\n        // Mark last subpath as closed and create a new subpath with the same starting point as the previous subpath\r\n        gl.closePath = function closePath() {\r\n            if (subPaths.length) {\r\n                // Mark last subpath closed.\r\n                var prevPath = subPaths[subPaths.length - 1], startX = prevPath.verts[0], startY = prevPath.verts[1];\r\n                prevPath.closed = true;\r\n\r\n                // Create new subpath using the starting position of previous subpath\r\n                var newPath = new SubPath(startX, startY);\r\n                subPaths.push(newPath);\r\n            }\r\n        };\r\n\r\n        // Create a new subpath with the specified point as its first (and only) point\r\n        gl.moveTo = function moveTo(x, y) {\r\n            subPaths.push(new SubPath(x, y));\r\n        };\r\n\r\n        gl.lineTo = function lineTo(x, y) {\r\n            if (subPaths.length) {\r\n                subPaths[subPaths.length - 1].verts.push(x, y, 0, 0);\r\n            } else {\r\n                // Create a new subpath if none currently exist\r\n                gl.moveTo(x, y);\r\n            }\r\n        };\r\n\r\n        gl.quadraticApproximateCount = 50;\r\n        gl.quadraticCurveTo = function quadraticCurveTo(hx, hy, x, y) {\r\n            if (subPaths.length) {\r\n                var verts = subPaths[subPaths.length - 1].verts,\r\n                    fromx = verts[verts.length - 4],\r\n                    fromy = verts[verts.length - 3],\r\n                    t, i, tx, ty;\r\n                for (var j = 0; j < gl.quadraticApproximateCount; j++) {\r\n                    t = j / gl.quadraticApproximateCount;\r\n                    i = 1 - t;\r\n                    tx = i * i * fromx + 2 * i * t * hx + t * t * x;\r\n                    ty = i * i * fromy + 2 * i * t * hy + t * t * y;\r\n                    verts.push(tx, ty, 0, 0);\r\n                }\r\n            } else {\r\n                gl.moveTo(x, y);\r\n            }\r\n        };\r\n\r\n        gl.bezierApproximateCount = 50;\r\n        gl.bezierCurveTo = function quadraticCurveTo(h1x, h1y, h2x, h2y, x, y) {\r\n            if (subPaths.length) {\r\n                var verts = subPaths[subPaths.length - 1].verts,\r\n                    fromx = verts[verts.length - 4],\r\n                    fromy = verts[verts.length - 3],\r\n                    t, i, tx, ty;\r\n                for (var j = 0; j < gl.bezierApproximateCount; j++) {\r\n                    t = j / gl.bezierApproximateCount;\r\n                    i = 1 - t;\r\n                    tx = i * i * i * fromx + 3 * i * i * t * h1x + 3 * i * t * t * h2x + t * t * t * x;\r\n                    ty = i * i * i * fromy + 3 * i * i * t * h1y + 3 * i * t * t * h2y + t * t * t * y;\r\n                    verts.push(tx, ty, 0, 0);\r\n                }\r\n            } else {\r\n                gl.moveTo(x, y);\r\n            }\r\n        };\r\n\r\n        gl.arcTo = function arcTo() {\r\n            if (subPaths.length) {\r\n                ;\r\n            } else {\r\n                gl.moveTo(x, y);\r\n            }\r\n        };\r\n\r\n        // Adds a closed rect subpath and creates a new subpath\r\n        gl.rect = function rect(x, y, w, h) {\r\n            gl.moveTo(x, y);\r\n            gl.lineTo(x + w, y);\r\n            gl.lineTo(x + w, y + h);\r\n            gl.lineTo(x, y + h);\r\n            gl.closePath();\r\n        };\r\n\r\n        gl.arcApproximateCount = 100;\r\n        gl.arc = function arc(cx, cy, radius, startAngle, endAngle, anticlockwise) {\r\n            if (subPaths.length) {\r\n                var verts = subPaths[subPaths.length - 1].verts;\r\n\r\n                // startAngle\r\n                var x = cx + radius * Math.cos(startAngle),\r\n                    y = cy + radius * Math.sin(startAngle);\r\n                verts.push(x, y, 0, 0);\r\n\r\n                while (startAngle > Math.PI * 2)\r\n                    startAngle -= Math.PI * 2;\r\n                while (endAngle > Math.PI * 2)\r\n                    endAngle -= Math.PI * 2;\r\n                while (startAngle < -Math.PI * 2)\r\n                    startAngle += Math.PI * 2;\r\n                while (endAngle < -Math.PI * 2)\r\n                    endAngle += Math.PI * 2;\r\n                if (startAngle == endAngle)\r\n                    return;\r\n\r\n                var count = 1 / gl.arcApproximateCount,\r\n                    fixed = gl.arcApproximateCount,\r\n                    t;\r\n                if (anticlockwise) {\r\n                    endAngle -= Math.PI * 2;\r\n                    count = -count;\r\n                }\r\n                for (var i = startAngle; (i > endAngle && anticlockwise) || (i < endAngle && !anticlockwise); i += count) {\r\n                    if (t == (t = (i * fixed | 0) / fixed))\r\n                        continue;\r\n                    x = cx + radius * Math.cos(t);\r\n                    y = cy + radius * Math.sin(t);\r\n                    verts.push(x, y, 0, 0);\r\n                }\r\n            } else {\r\n                gl.moveTo(x, y);\r\n            }\r\n        };\r\n\r\n        function fillSubPath(index) {\r\n            var transform = gl2d.transform;\r\n            var shaderProgram = gl2d.initShaders(transform.c_stack + 2, 0);\r\n\r\n            var subPath = subPaths[index];\r\n            var verts = subPath.verts;\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, gl.pathVertexPositionBuffer);\r\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(verts), gl.STATIC_DRAW);\r\n\r\n            gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, 4, gl.FLOAT, false, 0, 0);\r\n\r\n            transform.pushMatrix();\r\n\r\n            sendTransformStack(shaderProgram);\r\n\r\n            gl.uniform4f(shaderProgram.uColor, drawState.fillStyle[0], drawState.fillStyle[1], drawState.fillStyle[2], drawState.fillStyle[3]);\r\n\r\n            gl.drawArrays(gl.TRIANGLE_FAN, 0, verts.length / 4);\r\n\r\n            transform.popMatrix();\r\n        }\r\n\r\n        gl.fill = function fill() {\r\n            for (var i = 0; i < subPaths.length; i++) {\r\n                fillSubPath(i);\r\n            }\r\n        };\r\n\r\n        function strokeSubPath(index) {\r\n            var transform = gl2d.transform;\r\n            var shaderProgram = gl2d.initShaders(transform.c_stack + 2, 0);\r\n\r\n            var subPath = subPaths[index];\r\n            var verts = subPath.verts;\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, gl.pathVertexPositionBuffer);\r\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(verts), gl.STATIC_DRAW);\r\n\r\n            gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, 4, gl.FLOAT, false, 0, 0);\r\n\r\n            transform.pushMatrix();\r\n\r\n            sendTransformStack(shaderProgram);\r\n\r\n            gl.uniform4f(shaderProgram.uColor, drawState.strokeStyle[0], drawState.strokeStyle[1], drawState.strokeStyle[2], drawState.strokeStyle[3]);\r\n\r\n            if (subPath.closed) {\r\n                gl.drawArrays(gl.LINE_LOOP, 0, verts.length / 4);\r\n            } else {\r\n                gl.drawArrays(gl.LINE_STRIP, 0, verts.length / 4);\r\n            }\r\n\r\n            transform.popMatrix();\r\n        }\r\n\r\n        gl.stroke = function stroke() {\r\n            for (var i = 0; i < subPaths.length; i++) {\r\n                strokeSubPath(i);\r\n            }\r\n        };\r\n\r\n        gl.clip = function clip() {\r\n        };\r\n\r\n        gl.isPointInPath = function isPointInPath() {\r\n        };\r\n\r\n        gl.drawFocusRing = function drawFocusRing() {\r\n        };\r\n\r\n\r\n        var imageCache = [], textureCache = [];\r\n\r\n        function Texture(image) {\r\n            this.obj = gl.createTexture();\r\n            this.index = textureCache.push(this);\r\n\r\n            imageCache.push(image);\r\n\r\n            // we may wish to consider tiling large images like this instead of scaling and\r\n            // adjust appropriately (flip to next texture source and tile offset) when drawing\r\n            if (image.width > gl2d.maxTextureSize || image.height > gl2d.maxTextureSize) {\r\n                var canvas = document.createElement(\"canvas\");\r\n\r\n                canvas.width = (image.width > gl2d.maxTextureSize) ? gl2d.maxTextureSize : image.width;\r\n                canvas.height = (image.height > gl2d.maxTextureSize) ? gl2d.maxTextureSize : image.height;\r\n\r\n                var ctx = canvas.getContext(\"2d\");\r\n\r\n                ctx.drawImage(image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height);\r\n\r\n                image = canvas;\r\n            }\r\n\r\n            var GL_FUNCTION = gl.LINEAR;\r\n            var GL_MIPMAP_FUNCTION = gl.LINEAR_MIPMAP_LINEAR;\r\n\r\n            if (!drawState.imageSmoothingEnabled) {\r\n                GL_FUNCTION = gl.NEAREST;\r\n                GL_MIPMAP_FUNCTION = gl.LINEAR_MIPMAP_NEAREST;\r\n            }\r\n\r\n            gl.bindTexture(gl.TEXTURE_2D, this.obj);\r\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, GL_FUNCTION);\r\n\r\n            // Enable Mip mapping on power-of-2 textures\r\n            if (isPOT(image.width) && isPOT(image.height)) {\r\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, GL_MIPMAP_FUNCTION);\r\n                gl.generateMipmap(gl.TEXTURE_2D);\r\n            } else {\r\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, GL_FUNCTION);\r\n            }\r\n\r\n            // Unbind texture\r\n            gl.bindTexture(gl.TEXTURE_2D, null);\r\n        }\r\n\r\n        gl.drawImage = function drawImage(image, a, b, c, d, e, f, g, h) {\r\n            var transform = gl2d.transform;\r\n\r\n            transform.pushMatrix();\r\n\r\n            var sMask = shaderMask.texture;\r\n            var doCrop = false;\r\n\r\n            //drawImage(image, dx, dy)\r\n            if (arguments.length === 3) {\r\n                transform.translate(a, b);\r\n                transform.scale(image.width, image.height);\r\n            }\r\n\r\n            //drawImage(image, dx, dy, dw, dh)\r\n            else if (arguments.length === 5) {\r\n                transform.translate(a, b);\r\n                transform.scale(c, d);\r\n            }\r\n\r\n            //drawImage(image, sx, sy, sw, sh, dx, dy, dw, dh)\r\n            else if (arguments.length === 9) {\r\n                transform.translate(e, f);\r\n                transform.scale(g, h);\r\n                sMask = sMask | shaderMask.crop;\r\n                doCrop = true;\r\n            }\r\n\r\n            var shaderProgram = gl2d.initShaders(transform.c_stack + 1, sMask);\r\n\r\n            var texture, cacheIndex = imageCache.indexOf(image);\r\n\r\n            if (cacheIndex !== -1) {\r\n                texture = textureCache[cacheIndex];\r\n            } else {\r\n                texture = new Texture(image);\r\n            }\r\n\r\n            if (doCrop) {\r\n                gl.uniform4f(shaderProgram.uCropSource, a / image.width, b / image.height, c / image.width, d / image.height);\r\n            }\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, gl.rectVertexPositionBuffer);\r\n            gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, 4, gl.FLOAT, false, 0, 0);\r\n\r\n            gl.bindTexture(gl.TEXTURE_2D, texture.obj);\r\n            gl.activeTexture(gl.TEXTURE0);\r\n\r\n            gl.uniform1i(shaderProgram.uSampler, 0);\r\n\r\n            sendTransformStack(shaderProgram);\r\n            gl.drawArrays(gl.TRIANGLE_FAN, 0, 4);\r\n\r\n            transform.popMatrix();\r\n        };\r\n\r\n        // This enables the user to detect whether they got a webgl-2d context or a 2d context.\r\n        Object.defineProperty(gl, \"isWebGL\", {\r\n            configurable: false,\r\n            enumerable: true,\r\n            writable: false,\r\n            value: true\r\n        });\r\n    };\r\n\r\n    return WebGL2D;\r\n}));\r\n"],"sourceRoot":"/source/"}