{"version":3,"sources":["jquery.j2d.js","utils/ArrayMap.js","utils/DeviceUtil.js","utils/Exceptions.js","utils/MathUtil.js","utils/Vector2d.js","utils/Vector2dInteger.js","core/FrameManager.js","core/LayersManager.js","core/SceneManager.js","core/WebGL2D.js"],"names":["root","factory","define","amd","module","exports","require","jQuery","FrameManager","SceneManager","DeviceUtil","window","global","$","defaults","id","undefined","io","deltaTime","pause","ready","frameLimit","smoothing","webGL","J2D","element","data","j2d","this","device","scene","Object","defineProperty","get","set","value","addClass","removeClass","prototype","getIOHandler","IOHandler","handler","start","trigger","stop","flush","resume","focus","getSceneManager","getLayersManager","layersManager","getFrameManager","frameManager","on","once","off","util","disableSmoothing","context","chrome","navigator","userAgent","match","version","parseInt","initPlugin","j2dPlugin","pluginInit","fn","options","filter","each","extend","guid","replace","c","r","Math","random","v","toString","attr","tabIndex","click","$array","push","length","isFullScreen","document","webkitFullscreenElement","webkitCurrentFullScreenElement","mozFullScreenElement","msFullscreenElement","fullScreen","resizeToFullPage","toggle","current","onResize","Init","pulse","ArrayMap","args","Array","call","create","constructor","equals","array","i","l","enumerable","contains","object","callback","result","add","key","remove","splice","Vector2dInteger","width","screen","height","innerWidth","innerHeight","getWidth","getHeight","getSize","Exception","message","Error","RuntimeException","InvalidArgumentException","BadFunctionCallException","BadMethodCallException","LengthException","LogicException","OutOfBoundsException","OutOfRangeException","RangeException","UnexpectedValueException","MathUtil","number2Integer","number","isInteger","isFinite","floor","randomColor","min","max","opacity","omitZero","degree2Radian","degree","PI","radian2Degree","radian","Vector2d","x","y","getX","getY","getCoordinates","toArray","fromArray","instance","engineStack","dataStack","frameRun","breakAnimationFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","Date","now","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","name","engine","params","lastTime","sceneStartTime","sceneSkipTime","interval","runMainLoop","timestamp","index","hasOwnProperty","update","clear","setDefaultFrameLimit","instanceFrameManager","LayersManager","list","WebGL2D","originalWidth","originalHeight","originalMargin","visible","position","top","left","zIndex","backgroundColor","enableFullScreen","viewport","gameState","sceneManager","canvas","fillStyle","fillRect","style","display","init","css","initCanvas","createElement","enable","getContext","shadowColor","append","pos","size","clearRect","resize","save","restore","setGameState","console","warn","async","fullscreen","getElementById","requestFullscreen","webkitRequestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","exitFullscreen","webkitExitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","enableFullscreen","toggleFullScreen","isPOT","Transform","mat","clearStack","mat3","identity","multiply","m1","m2","m10","m11","m12","m13","m14","m15","m16","m17","m18","m20","m21","m22","m23","m24","m25","m26","m27","m28","vec2_multiply","mOut","transpose","m","STACK_DEPTH_LIMIT","init_mat","m_stack","m_cache","c_stack","valid","getIdentity","setIdentity","getResult","pushMatrix","popMatrix","translateMatrix","translate","trMatrix","tr","a","b","d","e","f","scaleMatrix","scale","rotateMatrix","rotate","ang","sAng","cAng","sin","cos","gl","fs","vs","shaderProgram","transform","shaderPool","maxTextureSize","gl2d","$getContext","force","initShaders","initBuffers","initCanvas2DAPI","BLEND","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","getParameter","MAX_TEXTURE_SIZE","postInit","shaderMask","texture","crop","path","getFragmentShaderSource","sMask","fsSource","join","getVertexShaderSource","stackDepth","vsSource","transformStackDepth","storedShader","useProgram","createShader","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","VERTEX_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","vertexPositionAttribute","getAttribLocation","enableVertexAttribArray","uColor","getUniformLocation","uSampler","uCropSource","pMatrix","uTransforms","uniformMatrix4fv","rectVerts","Float32Array","rectVertexPositionBuffer","createBuffer","rectVertexColorBuffer","pathVertexPositionBuffer","pathVertexColorBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","instances","hue2rgb","p","q","t","HSLAToRGBA","h","s","g","colorStringToVec4","channel","isPercent","hasAlpha","alphaChannel","sameType","reRGBAColor","exec","parseFloat","isNaN","reHSLAColor","reHex6Color","colorInt","reHex3Color","hexString","toLowerCase","colorKeywords","colorVecToString","vec4","saveDrawState","bakedDrawState","drawState","strokeStyle","globalAlpha","globalCompositeOperation","lineCap","lineJoin","lineWidth","miterLimit","shadowBlur","shadowOffsetX","shadowOffsetY","textAlign","font","textBaseline","imageSmoothingEnabled","drawStateStack","restoreDrawState","pop","sendTransformStack","sp","stack","maxI","uniformMatrix3fv","SubPath","closed","verts","fillSubPath","subPath","subPaths","vertexAttribPointer","FLOAT","uniform4f","drawArrays","TRIANGLE_FAN","strokeSubPath","LINE_LOOP","LINE_STRIP","Texture","image","obj","createTexture","textureCache","imageCache","ctx","drawImage","GL_FUNCTION","LINEAR","GL_MIPMAP_FUNCTION","LINEAR_MIPMAP_LINEAR","NEAREST","LINEAR_MIPMAP_NEAREST","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","generateMipmap","textCanvas","textCtx","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","drawStyle","$lineWidth","fillText","text","strokeText","measureText","tempCanvas","tempCtx","createImageData","getImageData","buffer","Uint8Array","readPixels","w","j","maxJ","index1","index2","putImageData","imageData","dx","dy","setTransform","apply","arguments","strokeRect","beginPath","closePath","prevPath","startX","startY","newPath","moveTo","lineTo","quadraticApproximateCount","quadraticCurveTo","hx","hy","tx","ty","fromx","fromy","bezierApproximateCount","bezierCurveTo","h1x","h1y","h2x","h2y","arcTo","rect","arcApproximateCount","arc","cx","cy","radius","startAngle","endAngle","anticlockwise","count","fixed","fill","stroke","clip","isPointInPath","drawFocusRing","doCrop","cacheIndex","indexOf","activeTexture","TEXTURE0","uniform1i","configurable","writable"],"mappings":"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","file":"jquery.j2d.js","sourcesContent":["/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n/*\r\n * TODO:: Events System\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('jquery.j2d', [\r\n            'jquery',\r\n            'core/FrameManager',\r\n            'core/SceneManager',\r\n            'utils/DeviceUtil'\r\n        ], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(\r\n            require('jquery'),\r\n            require('core/FrameManager'),\r\n            require('core/SceneManager'),\r\n            require('utils/DeviceUtil')\r\n        );\r\n    } else {\r\n        factory(\r\n            root.jQuery,\r\n            root.FrameManager,\r\n            root.SceneManager,\r\n            root.DeviceUtil\r\n        );\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function ($, FrameManager, SceneManager, DeviceUtil) {\r\n    \"use strict\";\r\n\r\n    var defaults = {\r\n        id: undefined,\r\n        io: undefined,\r\n        deltaTime: 0,\r\n        pause: false,\r\n        ready: false,\r\n\r\n        frameLimit: 60,\r\n        smoothing: true,\r\n\r\n        webGL: false\r\n    };\r\n\r\n    var J2D = function J2D(element, data) {\r\n        var j2d = this;\r\n        this.element = element;\r\n        this.data = data;\r\n\r\n        this.device = new DeviceUtil();\r\n        this.scene = new SceneManager(this);\r\n\r\n        Object.defineProperty(this, 'WebGL', {\r\n            get: function () {\r\n                return j2d.data.webGL;\r\n            },\r\n            set: function (value) {\r\n                j2d.data.webGL = !!value;\r\n                if (!!value && !j2d.data.webGL) {\r\n                    j2d.element.addClass('WebGL');\r\n                } else if (!value && j2d.data.webGL) {\r\n                    j2d.element.removeClass('WebGL');\r\n                }\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(this, 'smoothing', {\r\n            get: function () {\r\n                return j2d.data.smoothing;\r\n            },\r\n            set: function (value) {\r\n                j2d.data.smoothing = !!value;\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(this, 'isPlay', {\r\n            get: function () {\r\n                return !j2d.data.pause;\r\n            },\r\n            set: function () {\r\n            }\r\n        });\r\n    };\r\n\r\n    J2D.prototype.getIOHandler = function () {\r\n        return this.data.io;\r\n    };\r\n\r\n    J2D.prototype.IOHandler = function (handler) {\r\n        return this.data.io = handler;\r\n    };\r\n\r\n    /** +GameEngine **/\r\n    J2D.prototype.start = function () {\r\n        this.scene.start();\r\n        this.trigger('start');\r\n    };\r\n\r\n    J2D.prototype.stop = function () {\r\n        this.scene.stop();\r\n        this.trigger('stop');\r\n    };\r\n\r\n    J2D.prototype.pause = function () {\r\n        if (this.data.io) this.data.io.flush();\r\n        this.data.pause = true;\r\n        this.element.addClass('pause');\r\n        this.trigger('pause');\r\n    };\r\n\r\n    J2D.prototype.resume = function () {\r\n        this.element.removeClass('pause').focus();\r\n        this.data.pause = false;\r\n        if (this.data.io) this.data.io.flush();\r\n        this.trigger('resume');\r\n    };\r\n    /** -GameEngine **/\r\n\r\n    /** +Scene **/\r\n    J2D.prototype.getSceneManager = function () {\r\n        return this.scene;\r\n    };\r\n    /** -Scene **/\r\n\r\n    /** +Layers **/\r\n    J2D.prototype.getLayersManager = function () {\r\n        return this.scene.layersManager;\r\n    };\r\n    /** -Layers **/\r\n\r\n    J2D.prototype.getFrameManager = function () {\r\n        return this.scene.frameManager;\r\n    };\r\n\r\n    J2D.prototype.on = function () {\r\n    };\r\n    J2D.prototype.once = function () {\r\n    };\r\n    J2D.prototype.off = function () {\r\n    };\r\n    J2D.prototype.trigger = function () {\r\n    };\r\n\r\n    /** Utils **/\r\n    J2D.util = {\r\n        disableSmoothing: function (context) {\r\n            var chrome = global.navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);\r\n            var version = chrome ? parseInt(chrome[2], 10) : false;\r\n\r\n            context['imageSmoothingEnabled'] = false;\r\n            context['mozImageSmoothingEnabled'] = false;\r\n            context['oImageSmoothingEnabled'] = false;\r\n            if (version && version <= 29) {\r\n                context['webkitImageSmoothingEnabled'] = false;\r\n            }\r\n            context['msImageSmoothingEnabled'] = false;\r\n        }\r\n    };\r\n    J2D.prototype.util = J2D.util;\r\n\r\n    /* ------------------------------ Plugin ------------------------------ */\r\n\r\n    J2D.initPlugin = function () {\r\n        if (window.j2dPlugin !== undefined) return null;\r\n        window.j2dPlugin = {pluginInit: true};\r\n\r\n        $.fn.j2d = function (options) {\r\n            this.filter('div.canvas:not([guid])').each(function () {\r\n                var options = $.extend(true, {}, defaults, options);\r\n\r\n                var guid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n                    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n                    return v.toString(16);\r\n                });\r\n                options.id = guid;\r\n\r\n                $(this).attr('guid', guid);\r\n                var id = $(this).attr('id');\r\n                if (typeof id === typeof undefined || id === false) {\r\n                    $(this).attr('id', guid);\r\n                }\r\n                var tabIndex = $(this).attr('tabindex');\r\n                if (typeof tabIndex === typeof undefined || tabIndex === false) {\r\n                    $(this).attr('tabindex', '-1');\r\n                }\r\n                $(this).data('j2d', new J2D($(this), options)).addClass('j2d');\r\n                $(this).click().focus();\r\n            });\r\n\r\n            var $array = [];\r\n            this.filter('div.canvas[guid]').each(function () {\r\n                $array.push($(this).data('j2d'));\r\n            });\r\n\r\n            return (1 === $array.length) ? $(this).data('j2d') : $array;\r\n        };\r\n\r\n        var isFullScreen = function () {\r\n            //noinspection JSUnresolvedVariable\r\n            return !!(document.webkitFullscreenElement\r\n                || document.webkitCurrentFullScreenElement\r\n                || document.mozFullScreenElement\r\n                || document.msFullscreenElement\r\n            );\r\n        };\r\n\r\n        $(document).on('fullscreenchange webkitfullscreenchange mozfullscreenchange MSFullscreenChange', function () {\r\n            var fullScreen = isFullScreen();\r\n            if (!fullScreen) {\r\n                $('div.canvas[guid].active').data('j2d').scene.resizeToFullPage(fullScreen);\r\n                $('div.canvas[guid]:not(.active)').toggle(!fullScreen);\r\n            }\r\n        });\r\n\r\n        $(document).on('click', 'div.canvas[guid].pause', function () {\r\n            $(this).data('j2d').resume();\r\n\r\n            var current = this;\r\n            $('div.canvas[guid]:not(.pause-disable):not(:focus)').each(function () {\r\n                if (current !== this) $(this).removeClass('active').data('j2d').pause();\r\n            });\r\n            $('div.canvas[guid].active.pause-disable:not(:focus)').each(function () {\r\n                if (current !== this) $(this).removeClass('active');\r\n            });\r\n        });\r\n\r\n        $(document).on('click touch mouseenter', 'div.canvas[guid]:not(.resume-by-click):not(:focus)', function () {\r\n            $(this).addClass('active').focus().data('j2d').resume();\r\n\r\n            var current = this;\r\n            $('div.canvas[guid]:not(.pause-disable):not(:focus)').each(function () {\r\n                if (current !== this) $(this).removeClass('active').data('j2d').pause();\r\n            });\r\n            $('div.canvas[guid].active.pause-disable:not(:focus)').each(function () {\r\n                if (current !== this) $(this).removeClass('active');\r\n            });\r\n        });\r\n\r\n        $(window).on('focus', function () {\r\n            $('div.canvas[guid].active').each(function () {\r\n                $(this).data('j2d').resume();\r\n            });\r\n        }).on('blur', function () {\r\n            $('div.canvas[guid]').each(function () {\r\n                $(this).data('j2d').pause();\r\n            });\r\n        });\r\n\r\n        $(window).on('resize', function () {\r\n            $('div.canvas[guid]').each(function () {\r\n                $(this).data('j2d').device.onResize();\r\n            });\r\n            var fullScreen = isFullScreen();\r\n            if (fullScreen) {\r\n                $('div.canvas[guid].active').data('j2d').scene.resizeToFullPage(fullScreen);\r\n            }\r\n        });\r\n\r\n        FrameManager.Init().pulse();\r\n    };\r\n\r\n    global.J2D = (global.J2D === undefined) ? J2D : undefined;\r\n\r\n    return J2D;\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('utils/ArrayMap', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var ArrayMap = function (args) {\r\n        Array.call(this, args);\r\n    };\r\n\r\n    ArrayMap.prototype = Object.create(Array.prototype);\r\n    ArrayMap.prototype.constructor = ArrayMap;\r\n\r\n    /**\r\n     * @param {ArrayMap} array\r\n     * @returns {boolean}\r\n     */\r\n    ArrayMap.prototype.equals = function (array) {\r\n        if (!array)\r\n            return false;\r\n\r\n        if (this.length != array.length)\r\n            return false;\r\n\r\n        for (var i = 0, l = this.length; i < l; i++) {\r\n            if (this[i] instanceof Array && array[i] instanceof Array) {\r\n                if (!this[i].equals(array[i]))\r\n                    return false;\r\n            }\r\n            else if (this[i] != array[i]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    Object.defineProperty(ArrayMap.prototype, 'equals', {enumerable: false});\r\n\r\n    /**\r\n     * @param {string|Object} object\r\n     * @returns {boolean}\r\n     */\r\n    ArrayMap.prototype.contains = function (object) {\r\n        var i = this.length;\r\n        while (i--) {\r\n            if (this[i] === object) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    Object.defineProperty(ArrayMap.prototype, 'contains', {enumerable: false});\r\n\r\n    /**\r\n     * @param {Function} callback\r\n     * @returns {boolean}\r\n     */\r\n    ArrayMap.prototype.each = function (callback) {\r\n        if (!callback) return false;\r\n        var result = false;\r\n        for (var i = 0; i < this.length; i++) {\r\n            if ((result = callback(this[i], i)) == false) {\r\n                return result;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    Object.defineProperty(ArrayMap.prototype, 'each', {enumerable: false});\r\n\r\n    /**\r\n     * @param {string|Object} key\r\n     * @param {*} value\r\n     * @returns {ArrayMap}\r\n     */\r\n    ArrayMap.prototype.add = function (key, value) {\r\n        if (this.contains(key))\r\n            this[key] = value;\r\n        else {\r\n            this.push(key);\r\n            this[key] = value;\r\n        }\r\n        return this;\r\n    };\r\n    Object.defineProperty(ArrayMap.prototype, 'add', {enumerable: false});\r\n\r\n    /**\r\n     * @param {string|Object} key\r\n     * @returns {ArrayMap}\r\n     */\r\n    ArrayMap.prototype.remove = function (key) {\r\n        for (var i = 0; i < this.length; ++i) {\r\n            if (this[i] == key) {\r\n                this.splice(i, 1);\r\n                delete this[key];\r\n                return this;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    Object.defineProperty(ArrayMap.prototype, 'remove', {enumerable: false});\r\n\r\n    if (typeof define !== 'function' || !define.amd) global.ArrayMap = ArrayMap;\r\n\r\n    return ArrayMap;\r\n}));","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('utils/DeviceUtil', ['jquery', 'utils/Vector2dInteger'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('jquery'), require('utils/Vector2dInteger'));\r\n    } else {\r\n        factory(root.jQuery, root.Vector2dInteger);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function ($, Vector2dInteger) {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * Class utility for get system browser window size\r\n     */\r\n    var DeviceUtil = function () {\r\n        this.width = parseInt($(document).width()) < parseInt(screen.width) ? parseInt($(document).width()) : parseInt(screen.width);\r\n        this.height = parseInt($(document).height()) < parseInt(screen.height) ? parseInt($(document).height()) : parseInt(screen.height);\r\n    };\r\n\r\n    /**\r\n     * @returns {DeviceUtil}\r\n     */\r\n    DeviceUtil.prototype.onResize = function () {\r\n        this.width = window.innerWidth;\r\n        this.height = window.innerHeight;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @returns {number}\r\n     */\r\n    DeviceUtil.prototype.getWidth = function () {\r\n        return this.width;\r\n    };\r\n\r\n    /**\r\n     * @returns {number}\r\n     */\r\n    DeviceUtil.prototype.getHeight = function () {\r\n        return this.height;\r\n    };\r\n\r\n    /**\r\n     * @returns {Vector2d}\r\n     */\r\n    DeviceUtil.prototype.getSize = function () {\r\n        return new Vector2dInteger(this.width, this.height);\r\n    };\r\n\r\n    if (global.J2D === undefined) global.DeviceUtil = DeviceUtil;\r\n\r\n    return DeviceUtil;\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('utils/Exceptions', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * Default Exception\r\n     * Create custom exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var Exception = function (message) {\r\n        Error.call(this);\r\n        this.message = message;\r\n\r\n        /**\r\n         * Convert exception to String\r\n         * @returns {string|}\r\n         */\r\n        this.toString = function () {\r\n            return this.message;\r\n        }\r\n    };\r\n\r\n    Exception.prototype = Object.create(Error.prototype);\r\n    Exception.prototype.constructor = Exception;\r\n\r\n    /**\r\n     * RuntimeException\r\n     * Create RuntimeException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var RuntimeException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    RuntimeException.prototype = Object.create(Exception.prototype);\r\n    RuntimeException.prototype.constructor = RuntimeException;\r\n\r\n    /**\r\n     * InvalidArgumentException\r\n     * Create InvalidArgumentException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var InvalidArgumentException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    InvalidArgumentException.prototype = Object.create(Exception.prototype);\r\n    InvalidArgumentException.prototype.constructor = InvalidArgumentException;\r\n\r\n    /**\r\n     * BadFunctionCallException\r\n     * Create BadFunctionCallException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var BadFunctionCallException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    BadFunctionCallException.prototype = Object.create(Exception.prototype);\r\n    BadFunctionCallException.prototype.constructor = BadFunctionCallException;\r\n\r\n    /**\r\n     * BadMethodCallException\r\n     * Create BadMethodCallException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var BadMethodCallException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    BadMethodCallException.prototype = Object.create(Exception.prototype);\r\n    BadMethodCallException.prototype.constructor = BadMethodCallException;\r\n\r\n    /**\r\n     * LengthException\r\n     * Create LengthException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var LengthException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    LengthException.prototype = Object.create(Exception.prototype);\r\n    LengthException.prototype.constructor = LengthException;\r\n\r\n    /**\r\n     * LogicException\r\n     * Create LogicException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var LogicException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    LogicException.prototype = Object.create(Exception.prototype);\r\n    LogicException.prototype.constructor = LogicException;\r\n\r\n    /**\r\n     * OutOfBoundsException\r\n     * Create OutOfBoundsException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var OutOfBoundsException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    OutOfBoundsException.prototype = Object.create(Exception.prototype);\r\n    OutOfBoundsException.prototype.constructor = OutOfBoundsException;\r\n\r\n    /**\r\n     * OutOfRangeException\r\n     * Create OutOfRangeException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var OutOfRangeException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    OutOfRangeException.prototype = Object.create(Exception.prototype);\r\n    OutOfRangeException.prototype.constructor = OutOfRangeException;\r\n\r\n    /**\r\n     * RangeException\r\n     * Create RangeException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var RangeException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    RangeException.prototype = Object.create(Exception.prototype);\r\n    RangeException.prototype.constructor = RangeException;\r\n\r\n    /**\r\n     * UnexpectedValueException\r\n     *\r\n     * Create UnexpectedValueException exception with message\r\n     * @param {string} message\r\n     */\r\n    var UnexpectedValueException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    UnexpectedValueException.prototype = Object.create(Exception.prototype);\r\n    UnexpectedValueException.prototype.constructor = UnexpectedValueException;\r\n\r\n    if (typeof define !== 'function' || !define.amd) {\r\n        global.Exception = Exception;\r\n        global.RuntimeException = RuntimeException;\r\n        global.InvalidArgumentException = InvalidArgumentException;\r\n        global.BadFunctionCallException = BadFunctionCallException;\r\n        global.BadMethodCallException = BadMethodCallException;\r\n        global.LengthException = LengthException;\r\n        global.LogicException = LogicException;\r\n        global.OutOfBoundsException = OutOfBoundsException;\r\n        global.OutOfRangeException = OutOfRangeException;\r\n        global.RangeException = RangeException;\r\n        global.UnexpectedValueException = UnexpectedValueException;\r\n    }\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('utils/MathUtil', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    /**\r\n     *\r\n     */\r\n    var MathUtil = function () {\r\n    };\r\n\r\n    /**\r\n     * @param {number} number\r\n     * @returns {number}\r\n     */\r\n    MathUtil.number2Integer = function (number) {\r\n        return number >> 0;\r\n    };\r\n\r\n    /**\r\n     * @param {number} number\r\n     * @returns {boolean}\r\n     */\r\n    MathUtil.isInteger = function (number) {\r\n        return typeof number === \"number\" && isFinite(number)\r\n            && number > -9007199254740992 && number < 9007199254740992\r\n            && Math.floor(number) === number;\r\n    };\r\n\r\n    /**\r\n     * @param {number} min\r\n     * @param {number} max\r\n     * @param {number} opacity\r\n     * @returns {string}\r\n     */\r\n    MathUtil.randomColor = function (min, max, opacity) {\r\n        return 'rgba('\r\n            + MathUtil.random(min, max) + ', '\r\n            + MathUtil.random(min, max) + ', '\r\n            + MathUtil.random(min, max) + ', '\r\n            + opacity + ')';\r\n    };\r\n\r\n    /**\r\n     * @param {number} min\r\n     * @param {number} max\r\n     * @param {boolean} omitZero\r\n     * @returns {number}\r\n     */\r\n    MathUtil.random = function (min, max, omitZero) {\r\n        var random = (Math.floor(Math.random() * (max - min + 1) + min));\r\n        return (omitZero && random == 0)\r\n            ? MathUtil.random(min, max, omitZero)\r\n            : random;\r\n    };\r\n\r\n    /**\r\n     * @param {number} degree\r\n     * @returns {number}\r\n     */\r\n    MathUtil.degree2Radian = function (degree) {\r\n        return degree * (Math.PI / 180);\r\n    };\r\n\r\n    /**\r\n     * @param {number} radian\r\n     * @returns {number}\r\n     */\r\n    MathUtil.radian2Degree = function (radian) {\r\n        return radian * (180 / Math.PI);\r\n    };\r\n\r\n    if (global.J2D === undefined) global.MathUtil = MathUtil;\r\n\r\n    return MathUtil\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('utils/Vector2d', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * @param {number} x\r\n     * @param {number} y\r\n     */\r\n    var Vector2d = function (x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    };\r\n\r\n    /**\r\n     * @returns {number}\r\n     */\r\n    Vector2d.prototype.getX = function () {\r\n        return this.x;\r\n    };\r\n\r\n    /**\r\n     * @returns {number}\r\n     */\r\n    Vector2d.prototype.getY = function () {\r\n        return this.y;\r\n    };\r\n\r\n    /**\r\n     * @returns {Vector2d}\r\n     */\r\n    Vector2d.prototype.getCoordinates = function () {\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @returns {Array<number>}\r\n     */\r\n    Vector2d.prototype.toArray = function () {\r\n        return [this.x, this.y];\r\n    };\r\n\r\n    /**\r\n     * @param {Array<number>} array\r\n     * @returns {Vector2d}\r\n     */\r\n    Vector2d.prototype.fromArray = function (array) {\r\n        this.x = array[0];\r\n        this.y = array[1];\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @returns {string}\r\n     */\r\n    Vector2d.prototype.toString = function () {\r\n        return \"(\" + this.x + \",\" + this.y + \")\";\r\n    };\r\n\r\n    if (global.J2D === undefined) global.Vector2d = Vector2d;\r\n\r\n    return Vector2d\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('utils/Vector2dInteger', ['utils/Vector2d'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('utils/Vector2d'));\r\n    } else {\r\n        factory(root.Vector2d);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (Vector2d) {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * @param {number} x\r\n     * @param {number} y\r\n     */\r\n    var Vector2dInteger = function (x, y) {\r\n        Vector2d.call(this, x >> 0, y >> 0);\r\n    };\r\n\r\n    Vector2dInteger.prototype = Object.create(Vector2d.prototype);\r\n    Vector2dInteger.prototype.constructor = Vector2dInteger;\r\n\r\n    /**\r\n     * @param {Array<number>} array\r\n     * @returns {Vector2d|Vector2dInteger}\r\n     */\r\n    Vector2dInteger.prototype.fromArray = function (array) {\r\n        this.x = array[0] >> 0;\r\n        this.y = array[1] >> 0;\r\n\r\n        return this;\r\n    };\r\n\r\n    if (global.J2D === undefined) global.Vector2dInteger = Vector2dInteger;\r\n\r\n    return Vector2dInteger;\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/FrameManager', ['utils/ArrayMap'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('utils/ArrayMap'));\r\n    } else {\r\n        factory(root.ArrayMap);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global,\r\n    /**\r\n     * @param {Function} ArrayMap\r\n     * @returns {FrameManager}\r\n     */\r\n    function (ArrayMap) {\r\n        \"use strict\";\r\n\r\n        var instance;\r\n        var engineStack = new ArrayMap(), dataStack = new ArrayMap();\r\n\r\n        var options = {\r\n            frameLimit: 60,\r\n            frameRun: false,\r\n            breakAnimationFrame: false\r\n        };\r\n\r\n        var requestAnimationFrame = (function () {\r\n            return window.requestAnimationFrame ||\r\n                window.webkitRequestAnimationFrame ||\r\n                window.mozRequestAnimationFrame ||\r\n                window.oRequestAnimationFrame ||\r\n                window.msRequestAnimationFrame ||\r\n                function (callback) {\r\n                    if (!options.breakAnimationFrame) {\r\n                        window.setTimeout(callback.call(callback, [\r\n                            Date.now() //TODO:: fix this\r\n                        ]), 1000.0 / options.frameLimit);\r\n                    } else {\r\n                        options.breakAnimationFrame = false\r\n                    }\r\n                };\r\n        })();\r\n\r\n        var cancelAnimationFrame = (function () {\r\n            options.breakAnimationFrame = true;\r\n\r\n            return window.cancelAnimationFrame ||\r\n                window.webkitCancelAnimationFrame ||\r\n                window.mozCancelAnimationFrame ||\r\n                window.oCancelAnimationFrame ||\r\n                window.msCancelAnimationFrame;\r\n        })();\r\n\r\n\r\n        var FrameManager = function () {\r\n        };\r\n\r\n        FrameManager.prototype.start = function (name, engine, params) {\r\n            var data = {\r\n                j2d: undefined,\r\n                frameLimit: options.frameLimit,\r\n                now: 0,\r\n                deltaTime: 0,\r\n                lastTime: 0,\r\n                sceneStartTime: 0,\r\n                sceneSkipTime: 0\r\n            };\r\n\r\n            if (params.frameLimit !== undefined && params.frameLimit <= options.frameLimit) data.frameLimit = params.frameLimit;\r\n\r\n            if (params.j2d !== undefined) {\r\n                data.j2d = params.j2d;\r\n            } else {\r\n                throw 'j2d not transported to FrameManager.start(id, engine, {... j2d: j2d ...});';\r\n            }\r\n\r\n            data.interval = 1000.0 / data.frameLimit;\r\n            data.lastTime = Date.now();\r\n\r\n            engineStack.add(name, engine);\r\n            dataStack.add(name, data);\r\n            if (!options.frameRun) this.pulse();\r\n        };\r\n\r\n        FrameManager.prototype.stop = function (name) {\r\n            engineStack.remove(name);\r\n            dataStack.remove(name);\r\n        };\r\n\r\n        FrameManager.prototype.pulse = function () {\r\n            this.runMainLoop(Date.now());\r\n        };\r\n\r\n        FrameManager.prototype.runMainLoop = function (timestamp, frameManager) {\r\n            if (frameManager === undefined) frameManager = this;\r\n\r\n            if (engineStack.length <= 0 && options.frameRun) {\r\n                options.frameRun = false;\r\n                return cancelAnimationFrame(this.runMainLoop);\r\n            }\r\n            options.frameRun = true;\r\n\r\n            for (var index in engineStack) {\r\n                if (engineStack.hasOwnProperty(index) && 'function' === typeof engineStack[index]) {\r\n                    var engine = engineStack[index];\r\n                    var data = dataStack[index];\r\n\r\n                    data.now = Date.now();\r\n                    data.j2d.data.deltaTime = data.deltaTime = (data.now - data.lastTime) / 100.0;\r\n\r\n                    if (data.j2d.data.io && !data.j2d.data.pause) data.j2d.data.io.update();\r\n                    if ((data.deltaTime * 100.0) > data.interval) {\r\n                        data.lastTime = data.now - ((data.deltaTime * 100.0) % data.interval);\r\n\r\n                        if (!data.j2d.data.pause) {\r\n                            data.j2d.data.deltaTime = data.deltaTime;\r\n\r\n                            engine(timestamp, data);\r\n\r\n                        }\r\n                    }\r\n                    if (data.j2d.data.io && !data.j2d.data.pause) data.j2d.data.io.clear();\r\n                }\r\n            }\r\n\r\n            requestAnimationFrame(function (timestamp) {\r\n                frameManager.runMainLoop(timestamp, frameManager);\r\n            });\r\n        };\r\n\r\n        FrameManager.prototype.setDefaultFrameLimit = function (frameLimit) {\r\n            if (frameLimit <= 60 && frameLimit > 0) {\r\n                options.frameLimit = frameLimit\r\n            }\r\n        };\r\n\r\n        /**\r\n         * @singleton\r\n         * @returns {FrameManager}\r\n         */\r\n        FrameManager.Init = function () {\r\n            if (global.J2D !== undefined) {\r\n                return global.instanceFrameManager || (global.instanceFrameManager = new FrameManager());\r\n            } else {\r\n                return instance || (instance = new FrameManager());\r\n            }\r\n        };\r\n\r\n        if (global.J2D === undefined) global.FrameManager = FrameManager;\r\n\r\n        return FrameManager;\r\n    }\r\n));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/LayersManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var LayersManager = function (j2d) {\r\n        this.j2d = j2d;\r\n        this.list = {};\r\n    };\r\n\r\n    if (global.J2D !== undefined) global.LayersManager = LayersManager;\r\n    return LayersManager;\r\n}));","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n/*\r\n * TODO:: global layer collection\r\n * TODO:: render\r\n *\r\n * TODO:: GameStateManager to Scene\r\n * TODO:: ViewportManager\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/SceneManager', [\r\n            'jquery',\r\n            'core/WebGL2D',\r\n            'core/FrameManager',\r\n            'core/LayersManager'\r\n        ], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(\r\n            require('jquery'),\r\n            require('core/WebGL2D'),\r\n            require('core/FrameManager'),\r\n            require('core/LayersManager')\r\n        );\r\n    } else {\r\n        factory(\r\n            root.jQuery,\r\n            root.WebGL2D,\r\n            root.FrameManager,\r\n            root.LayersManager\r\n        );\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function ($, WebGL2D, FrameManager, LayersManager) {\r\n    \"use strict\";\r\n\r\n    var defaults = {\r\n        width: 0,\r\n        height: 0,\r\n\r\n        originalWidth: 0,\r\n        originalHeight: 0,\r\n        originalMargin: 0,\r\n\r\n        visible: true,\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        zIndex: 1000,\r\n        opacity: 1.0,\r\n        backgroundColor: false,\r\n\r\n        frameLimit: 60,\r\n\r\n        enableFullScreen: false,\r\n\r\n        viewport: {x: 0, y: 0},\r\n\r\n        // TODO::\r\n        gameState: function () {\r\n        }\r\n    };\r\n\r\n    var SceneManager = function (j2d) {\r\n        var sceneManager = this;\r\n        this.j2d = j2d;\r\n\r\n        this.canvas = null;\r\n        this.context = null;\r\n\r\n        /** @type {FrameManager} */\r\n        this.frameManager = FrameManager.Init();\r\n        this.layersManager = new LayersManager(this.j2d);\r\n\r\n        Object.defineProperty(this, 'backgroundColor', {\r\n            get: function () {\r\n                return sceneManager.data.backgroundColor;\r\n            },\r\n            set: function (value) {\r\n                sceneManager.data.backgroundColor = value;\r\n                sceneManager.context.fillStyle = value;\r\n                sceneManager.context.fillRect(0, 0, sceneManager.data.width, sceneManager.data.height);\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(this, 'opacity', {\r\n            get: function () {\r\n                return sceneManager.data.opacity;\r\n            },\r\n            set: function (value) {\r\n                sceneManager.data.opacity = value;\r\n                sceneManager.canvas.style.opacity = value;\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(this, 'visible', {\r\n            get: function () {\r\n                return sceneManager.data.visible;\r\n            },\r\n            set: function (value) {\r\n                sceneManager.data.visible = !!value;\r\n                sceneManager.canvas.style.display = (!!value) ? 'block' : 'none';\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(this, 'zIndex', {\r\n            get: function () {\r\n                return 1000 - sceneManager.data.zIndex;\r\n            },\r\n            set: function (value) {\r\n                sceneManager.data.zIndex = 1000 + value;\r\n                sceneManager.canvas.style.zIndex = 1000 + value;\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(this, 'viewport', {\r\n            get: function () {\r\n                return sceneManager.data.viewport;\r\n            },\r\n            set: function () {\r\n            }\r\n        });\r\n    };\r\n\r\n    SceneManager.prototype.init = function (options) {\r\n        this.data = $.extend(true, {}, defaults, options);\r\n\r\n        this.j2d.trigger('beforeInit');\r\n\r\n        this.data.originalWidth = this.data.width;\r\n        this.data.originalHeight = this.data.height;\r\n        this.data.originalMargin = this.j2d.element.css('margin');\r\n\r\n        this.j2d.element.width(this.data.width).height(this.data.height);\r\n\r\n        this.initCanvas();\r\n\r\n        this.j2d.trigger('afterInit');\r\n\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.initCanvas = function () {\r\n        this.canvas = document.createElement('canvas');\r\n\r\n        this.canvas.width = this.data.width;\r\n        this.canvas.height = this.data.height;\r\n        this.canvas.style.zIndex = this.data.zIndex;\r\n        this.canvas.style.position = this.data.position;\r\n\r\n        this.canvas.style.left = this.data.left;\r\n        this.canvas.style.top = this.data.top;\r\n\r\n        if (this.j2d.data.webGL) {\r\n            WebGL2D.enable(this.canvas);\r\n            this.context = this.canvas.getContext('WebGL-2d');\r\n        } else {\r\n            this.context = this.canvas.getContext('2d');\r\n        }\r\n\r\n        if (!this.j2d.data.smoothing) {\r\n            this.j2d.util.disableSmoothing(this.context);\r\n        }\r\n\r\n        this.context.shadowColor = 'rgba(0,0,0,0)';\r\n        if (this.data.backgroundColor) this.backgroundColor = this.data.backgroundColor;\r\n        if (this.data.opacity) this.opacity = this.data.opacity;\r\n        if (this.data.visible) this.visible = this.data.visible;\r\n        if (this.data.zIndex) this.zIndex = this.data.zIndex;\r\n\r\n        this.j2d.element.append(this.canvas);\r\n    };\r\n\r\n    SceneManager.prototype.clear = function (pos, size) {\r\n        if (pos !== undefined && size !== undefined) {\r\n            this.context.clearRect(pos.x - this.viewport.x, pos.y - this.viewport.y, size.x, size.y);\r\n        } else {\r\n            this.context.clearRect(0, 0, this.data.width, this.data.height);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.resize = function (width, height) {\r\n        this.canvas.width = this.data.width = width;\r\n        this.canvas.height = this.data.height = height;\r\n\r\n        if (this.data.backgroundColor) {\r\n            this.context.save();\r\n\r\n            this.clear();\r\n            this.backgroundColor = this.data.backgroundColor;\r\n\r\n            this.context.restore();\r\n        }\r\n        if (!this.j2d.data.smoothing) {\r\n            this.j2d.util.disableSmoothing(this.context);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.setGameState = function (gameState) {\r\n        this.data.gameState = gameState || function () {\r\n                console.warn('Error in game state function!');\r\n            };\r\n\r\n        this.frameManager.stop(this.j2d.data.id);\r\n        this.frameManager.start(this.j2d.data.id, this.data.gameState, {\r\n            j2d: this.j2d,\r\n            frameLimit: this.data.frameLimit\r\n        });\r\n\r\n        this.j2d.trigger('changedGameState');\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.async = function (callback, data) {\r\n        setTimeout(callback.call(callback, data), 0);\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.start = function () {\r\n        if (this.j2d.data.io) {\r\n            this.j2d.data.io.init();\r\n        }\r\n        this.j2d.trigger('beforeStart');\r\n\r\n        this.frameManager.stop(this.j2d.data.id);\r\n        this.frameManager.start(this.j2d.data.id, this.data.gameState, {\r\n            j2d: this.j2d,\r\n            frameLimit: this.data.frameLimit\r\n        });\r\n\r\n        this.j2d.trigger('afterStart');\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.stop = function () {\r\n        this.frameManager.stop(this.j2d.data.id);\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.fullScreen = function (fullscreen) {\r\n        var element = document.getElementById(this.j2d.element.attr('id'));\r\n\r\n        if (undefined === element.requestFullscreen) {\r\n            //noinspection JSUnresolvedVariable\r\n            element.requestFullscreen = element.webkitRequestFullscreen\r\n                || element.webkitRequestFullScreen\r\n                || element.mozRequestFullScreen\r\n                || element.msRequestFullscreen;\r\n        }\r\n\r\n        if (undefined === document.exitFullscreen) {\r\n            //noinspection JSUnresolvedVariable\r\n            document.exitFullscreen = document.webkitExitFullscreen\r\n                || document.webkitCancelFullScreen\r\n                || document.mozCancelFullScreen\r\n                || document.msExitFullscreen;\r\n        }\r\n        if (fullscreen) {\r\n            element.requestFullscreen();\r\n        } else {\r\n            document.exitFullscreen();\r\n        }\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.resizeToFullPage = function (fullscreen) {\r\n        $('div.canvas[guid]:not(.active)').toggle(fullscreen);\r\n\r\n        var j2d = this.j2d;\r\n        var sceneManager = this;\r\n\r\n        if (fullscreen) {\r\n            sceneManager.data.originalWidth = sceneManager.data.width;\r\n            sceneManager.data.originalHeight = sceneManager.data.height;\r\n\r\n            sceneManager.resize(j2d.device.width, j2d.device.height);\r\n            sceneManager.data.enableFullscreen = true;\r\n\r\n            j2d.element\r\n                .width(j2d.device.width)\r\n                .height(j2d.device.height)\r\n                .css('margin', 0);\r\n        } else {\r\n            sceneManager.resize(sceneManager.data.originalWidth, sceneManager.data.originalHeight);\r\n            sceneManager.data.enableFullscreen = false;\r\n\r\n            j2d.element\r\n                .width(sceneManager.data.originalWidth)\r\n                .height(sceneManager.data.originalHeight)\r\n                .css('margin', sceneManager.data.originalMargin);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.toggleFullScreen = function (j2d, data) {\r\n        if (data === undefined) {\r\n            data = {fullscreen: undefined};\r\n        }\r\n        if (!j2d.scene.enableFullscreen || data.fullscreen) {\r\n            j2d.scene.fullScreen(true);\r\n        } else {\r\n            j2d.scene.fullScreen(false);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    //SceneManager.prototype.getLayer = function () {\r\n    //    return this.parent.layers.getLayer('sceneNode');\r\n    //};\r\n\r\n    //// Устанавливает позицию для камеры\r\n    //SceneManager.prototype.setViewPosition = function (position) {\r\n    //    this.parent.scene.viewport.x = position.x - Math.ceil(this.parent.scene.width / 2);\r\n    //    this.parent.scene.viewport.y = position.y - Math.ceil(this.parent.scene.height / 2);\r\n    //};\r\n    //\r\n    ////! Движение \"камеры\" вслед за объектом\r\n    //SceneManager.prototype.setViewFocus = function (id, offset) {\r\n    //    this.parent.scene.viewport.x = id.getPosition().x - Math.ceil(this.parent.scene.width / 2) + (offset ? offset.x : 0);\r\n    //    this.parent.scene.viewport.y = id.getPosition().y - Math.ceil(this.parent.scene.height / 2) + (offset ? offset.y : 0);\r\n    //};\r\n    //\r\n    ////! Движение \"камеры\"\r\n    //SceneManager.prototype.viewMove = function (position) {\r\n    //    this.parent.scene.viewport.x += position.x;\r\n    //    this.parent.scene.viewport.y += position.y;\r\n    //};\r\n\r\n    if (global.J2D !== undefined) global.SceneManager = SceneManager;\r\n    return SceneManager;\r\n}));","/**\r\n *  WebGL-2D.js - HTML5 Canvas2D API in a WebGL context\r\n *\r\n *  Created by Corban Brook <corbanbrook@gmail.com> on 2011-03-02.\r\n *  Amended to by Bobby Richter <secretrobotron@gmail.com> on 2011-03-03\r\n *  CubicVR.js by Charles Cliffe <cj@cubicproductions.com> on 2011-03-03\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/WebGL2D', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    // Vector & Matrix libraries from CubicVR.js\r\n    var M_PI = 3.1415926535897932384626433832795028841968;\r\n    var M_TWO_PI = 2.0 * M_PI;\r\n    var M_HALF_PI = M_PI / 2.0;\r\n\r\n    function isPOT(value) {\r\n        return value > 0 && ((value - 1) & value) === 0;\r\n    }\r\n\r\n    var vec3 = {\r\n        length: function (pt) {\r\n            return Math.sqrt(pt[0] * pt[0] + pt[1] * pt[1] + pt[2] * pt[2]);\r\n        },\r\n\r\n        normalize: function (pt) {\r\n            var d = Math.sqrt((pt[0] * pt[0]) + (pt[1] * pt[1]) + (pt[2] * pt[2]));\r\n            if (d === 0) {\r\n                return [0, 0, 0];\r\n            }\r\n            return [pt[0] / d, pt[1] / d, pt[2] / d];\r\n        },\r\n\r\n        dot: function (v1, v2) {\r\n            return v1[0] * v2[0] + v1[1] * v2[1] + v1[2] * v2[2];\r\n        },\r\n\r\n        angle: function (v1, v2) {\r\n            return Math.acos((v1[0] * v2[0] + v1[1] * v2[1] + v1[2] * v2[2]) / (Math.sqrt(v1[0] * v1[0] + v1[1] * v1[1] + v1[2] * v1[2]) * Math.sqrt(v2[0] * v2[0] + v2[1] * v2[1] + v2[2] * v2[2])));\r\n        },\r\n\r\n        cross: function (vectA, vectB) {\r\n            return [vectA[1] * vectB[2] - vectB[1] * vectA[2], vectA[2] * vectB[0] - vectB[2] * vectA[0], vectA[0] * vectB[1] - vectB[0] * vectA[1]];\r\n        },\r\n\r\n        multiply: function (vectA, constB) {\r\n            return [vectA[0] * constB, vectA[1] * constB, vectA[2] * constB];\r\n        },\r\n\r\n        add: function (vectA, vectB) {\r\n            return [vectA[0] + vectB[0], vectA[1] + vectB[1], vectA[2] + vectB[2]];\r\n        },\r\n\r\n        subtract: function (vectA, vectB) {\r\n            return [vectA[0] - vectB[0], vectA[1] - vectB[1], vectA[2] - vectB[2]];\r\n        },\r\n\r\n        equal: function (a, b) {\r\n            var epsilon = 0.0000001;\r\n            if ((a === undefined) && (b === undefined)) {\r\n                return true;\r\n            }\r\n            if ((a === undefined) || (b === undefined)) {\r\n                return false;\r\n            }\r\n            return (Math.abs(a[0] - b[0]) < epsilon && Math.abs(a[1] - b[1]) < epsilon && Math.abs(a[2] - b[2]) < epsilon);\r\n        }\r\n    };\r\n\r\n    var mat3 = {\r\n        identity: [1.0, 0.0, 0.0,\r\n            0.0, 1.0, 0.0,\r\n            0.0, 0.0, 1.0],\r\n\r\n        multiply: function (m1, m2) {\r\n            var m10 = m1[0], m11 = m1[1], m12 = m1[2], m13 = m1[3], m14 = m1[4], m15 = m1[5], m16 = m1[6], m17 = m1[7], m18 = m1[8],\r\n                m20 = m2[0], m21 = m2[1], m22 = m2[2], m23 = m2[3], m24 = m2[4], m25 = m2[5], m26 = m2[6], m27 = m2[7], m28 = m2[8];\r\n\r\n            m2[0] = m20 * m10 + m23 * m11 + m26 * m12;\r\n            m2[1] = m21 * m10 + m24 * m11 + m27 * m12;\r\n            m2[2] = m22 * m10 + m25 * m11 + m28 * m12;\r\n            m2[3] = m20 * m13 + m23 * m14 + m26 * m15;\r\n            m2[4] = m21 * m13 + m24 * m14 + m27 * m15;\r\n            m2[5] = m22 * m13 + m25 * m14 + m28 * m15;\r\n            m2[6] = m20 * m16 + m23 * m17 + m26 * m18;\r\n            m2[7] = m21 * m16 + m24 * m17 + m27 * m18;\r\n            m2[8] = m22 * m16 + m25 * m17 + m28 * m18;\r\n        },\r\n\r\n        vec2_multiply: function (m1, m2) {\r\n            var mOut = [];\r\n            mOut[0] = m2[0] * m1[0] + m2[3] * m1[1] + m2[6];\r\n            mOut[1] = m2[1] * m1[0] + m2[4] * m1[1] + m2[7];\r\n            return mOut;\r\n        },\r\n\r\n        transpose: function (m) {\r\n            return [m[0], m[3], m[6], m[1], m[4], m[7], m[2], m[5], m[8]];\r\n        }\r\n    }; //mat3\r\n\r\n    // Transform library from CubicVR.js\r\n    function Transform(mat) {\r\n        return this.clearStack(mat);\r\n    }\r\n\r\n    var STACK_DEPTH_LIMIT = 16;\r\n\r\n    Transform.prototype.clearStack = function (init_mat) {\r\n        this.m_stack = [];\r\n        this.m_cache = [];\r\n        this.c_stack = 0;\r\n        this.valid = 0;\r\n        this.result = null;\r\n\r\n        for (var i = 0; i < STACK_DEPTH_LIMIT; i++) {\r\n            this.m_stack[i] = this.getIdentity();\r\n        }\r\n\r\n        if (init_mat !== undefined) {\r\n            this.m_stack[0] = init_mat;\r\n        } else {\r\n            this.setIdentity();\r\n        }\r\n    }; //clearStack\r\n\r\n    Transform.prototype.setIdentity = function () {\r\n        this.m_stack[this.c_stack] = this.getIdentity();\r\n        if (this.valid === this.c_stack && this.c_stack) {\r\n            this.valid--;\r\n        }\r\n    };\r\n\r\n    Transform.prototype.getIdentity = function () {\r\n        return [1.0, 0.0, 0.0,\r\n            0.0, 1.0, 0.0,\r\n            0.0, 0.0, 1.0];\r\n    };\r\n\r\n    Transform.prototype.getResult = function () {\r\n        if (!this.c_stack) {\r\n            return this.m_stack[0];\r\n        }\r\n\r\n        var m = mat3.identity;\r\n\r\n        if (this.valid > this.c_stack - 1) {\r\n            this.valid = this.c_stack - 1;\r\n        }\r\n\r\n        for (var i = this.valid; i < this.c_stack + 1; i++) {\r\n            m = mat3.multiply(this.m_stack[i], m);\r\n            this.m_cache[i] = m;\r\n        }\r\n\r\n        this.valid = this.c_stack - 1;\r\n\r\n        this.result = this.m_cache[this.c_stack];\r\n\r\n        return this.result;\r\n    };\r\n\r\n    Transform.prototype.pushMatrix = function () {\r\n        this.c_stack++;\r\n        this.m_stack[this.c_stack] = this.getIdentity();\r\n    };\r\n\r\n    Transform.prototype.popMatrix = function () {\r\n        if (this.c_stack === 0) {\r\n            return;\r\n        }\r\n        this.c_stack--;\r\n    };\r\n\r\n    var translateMatrix = Transform.prototype.getIdentity();\r\n\r\n    Transform.prototype.translate = function (x, y) {\r\n        translateMatrix[6] = x;\r\n        translateMatrix[7] = y;\r\n\r\n        mat3.multiply(translateMatrix, this.m_stack[this.c_stack]);\r\n\r\n        /*\r\n         if (this.valid === this.c_stack && this.c_stack) {\r\n         this.valid--;\r\n         }\r\n         */\r\n    };\r\n\r\n    var trMatrix = Transform.prototype.getIdentity();\r\n\r\n    Transform.prototype.tr = function (a, b, c, d, e, f) {\r\n        trMatrix[0] = a;\r\n        trMatrix[1] = b;\r\n        trMatrix[3] = c;\r\n        trMatrix[4] = d;\r\n        trMatrix[6] = e;\r\n        trMatrix[7] = f;\r\n\r\n        mat3.multiply(trMatrix, this.m_stack[this.c_stack]);\r\n    };\r\n\r\n    var scaleMatrix = Transform.prototype.getIdentity();\r\n\r\n    Transform.prototype.scale = function (x, y) {\r\n        scaleMatrix[0] = x;\r\n        scaleMatrix[4] = y;\r\n\r\n        mat3.multiply(scaleMatrix, this.m_stack[this.c_stack]);\r\n\r\n        /*\r\n         if (this.valid === this.c_stack && this.c_stack) {\r\n         this.valid--;\r\n         }\r\n         */\r\n    };\r\n\r\n    var rotateMatrix = Transform.prototype.getIdentity();\r\n\r\n    Transform.prototype.rotate = function (ang) {\r\n        var sAng, cAng;\r\n\r\n        sAng = Math.sin(-ang);\r\n        cAng = Math.cos(-ang);\r\n\r\n        rotateMatrix[0] = cAng;\r\n        rotateMatrix[3] = sAng;\r\n        rotateMatrix[1] = -sAng;\r\n        rotateMatrix[4] = cAng;\r\n\r\n        mat3.multiply(rotateMatrix, this.m_stack[this.c_stack]);\r\n\r\n        /*\r\n         if (this.valid === this.c_stack && this.c_stack) {\r\n         this.valid--;\r\n         }\r\n         */\r\n    };\r\n\r\n    var WebGL2D = global.WebGL2D = function WebGL2D(canvas, options) {\r\n        this.canvas = canvas;\r\n        this.options = options || {};\r\n        this.gl = undefined;\r\n        this.fs = undefined;\r\n        this.vs = undefined;\r\n        this.shaderProgram = undefined;\r\n        this.transform = new Transform();\r\n        this.shaderPool = [];\r\n        this.maxTextureSize = undefined;\r\n\r\n        // Save a reference to the WebGL2D instance on the canvas object\r\n        canvas.gl2d = this;\r\n\r\n        // Store getContext function for later use\r\n        canvas.$getContext = canvas.getContext;\r\n\r\n        // Override getContext function with \"webgl-2d\" enabled version\r\n        canvas.getContext = (function (gl2d) {\r\n            return function (context) {\r\n                if ((gl2d.options.force || context === \"WebGL-2d\") && !(canvas.width === 0 || canvas.height === 0)) {\r\n                    if (gl2d.gl) {\r\n                        return gl2d.gl;\r\n                    }\r\n\r\n                    var gl = gl2d.gl = gl2d.canvas.$getContext(\"experimental-webgl\");\r\n\r\n                    // If we failed to get a WebGL context, return a normal 2D context instead.\r\n                    if ((typeof (gl) === \"undefined\") || (gl === null)) {\r\n                        return gl2d.canvas.$getContext(\"2d\");\r\n                    }\r\n\r\n                    gl2d.initShaders();\r\n                    gl2d.initBuffers();\r\n\r\n                    // Append Canvas2D API features to the WebGL context\r\n                    gl2d.initCanvas2DAPI();\r\n\r\n                    // Disables writing to dest-alpha\r\n                    // gl.colorMask(1,1,1,0)\r\n\r\n                    // Depth options\r\n                    //gl.enable(gl.DEPTH_TEST);\r\n                    //gl.depthFunc(gl.LEQUAL);\r\n\r\n                    // Blending options\r\n                    // See http://stackoverflow.com/questions/11521035/blending-with-html-background-in-webgl\r\n                    gl.enable(gl.BLEND);\r\n                    gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n\r\n                    gl2d.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\r\n\r\n                    return gl;\r\n                } else {\r\n                    return gl2d.canvas.$getContext(context);\r\n                }\r\n            };\r\n        }(this));\r\n\r\n        this.postInit();\r\n    };\r\n\r\n    // Enables WebGL2D on your canvas\r\n    WebGL2D.enable = function (canvas, options) {\r\n        return canvas.gl2d || new WebGL2D(canvas, options);\r\n    };\r\n\r\n\r\n    // Shader Pool BitMasks, i.e. sMask = (shaderMask.texture+shaderMask.stroke)\r\n    var shaderMask = {\r\n        texture: 1,\r\n        crop: 2,\r\n        path: 4\r\n    };\r\n\r\n\r\n    // Fragment shader source\r\n    WebGL2D.prototype.getFragmentShaderSource = function getFragmentShaderSource(sMask) {\r\n        var fsSource = [\r\n            \"#ifdef GL_ES\",\r\n            \"precision highp float;\",\r\n            \"#endif\",\r\n\r\n            \"#define hasTexture \" + ((sMask & shaderMask.texture) ? \"1\" : \"0\"),\r\n            \"#define hasCrop \" + ((sMask & shaderMask.crop) ? \"1\" : \"0\"),\r\n\r\n            \"varying vec4 vColor;\",\r\n\r\n            \"#if hasTexture\",\r\n            \"varying vec2 vTextureCoord;\",\r\n            \"uniform sampler2D uSampler;\",\r\n            \"#if hasCrop\",\r\n            \"uniform vec4 uCropSource;\",\r\n            \"#endif\",\r\n            \"#endif\",\r\n\r\n            \"void main(void) {\",\r\n            \"#if hasTexture\",\r\n            \"#if hasCrop\",\r\n            \"gl_FragColor = texture2D(uSampler, vec2(vTextureCoord.x * uCropSource.z, vTextureCoord.y * uCropSource.w) + uCropSource.xy);\",\r\n            \"#else\",\r\n            \"gl_FragColor = texture2D(uSampler, vTextureCoord);\",\r\n            \"#endif\",\r\n            \"#else\",\r\n            \"gl_FragColor = vColor;\",\r\n            \"#endif\",\r\n            \"}\"\r\n        ].join(\"\\n\");\r\n\r\n        return fsSource;\r\n    };\r\n\r\n    WebGL2D.prototype.getVertexShaderSource = function getVertexShaderSource(stackDepth, sMask) {\r\n        stackDepth = stackDepth || 1;\r\n\r\n        var vsSource = [\r\n            \"#define hasTexture \" + ((sMask & shaderMask.texture) ? \"1\" : \"0\"),\r\n            \"attribute vec4 aVertexPosition;\",\r\n\r\n            \"#if hasTexture\",\r\n            \"varying vec2 vTextureCoord;\",\r\n            \"#endif\",\r\n\r\n            \"uniform vec4 uColor;\",\r\n            \"uniform mat3 uTransforms[\" + stackDepth + \"];\",\r\n\r\n            \"varying vec4 vColor;\",\r\n\r\n            \"uniform mat4 pMatrix;\",\r\n\r\n            \"mat3 crunchStack(void) {\",\r\n            \"mat3 result = uTransforms[0];\",\r\n            \"for (int i = 1; i < \" + stackDepth + \"; ++i) {\",\r\n            \"result = uTransforms[i] * result;\",\r\n            \"}\",\r\n            \"return result;\",\r\n            \"}\",\r\n\r\n            \"void main(void) {\",\r\n            \"vec3 position = crunchStack() * vec3(aVertexPosition.x, aVertexPosition.y, 1.0);\",\r\n            \"gl_Position = pMatrix * vec4(position, 1.0);\",\r\n            \"vColor = uColor;\",\r\n            \"#if hasTexture\",\r\n            \"vTextureCoord = aVertexPosition.zw;\",\r\n            \"#endif\",\r\n            \"}\"\r\n        ].join(\"\\n\");\r\n        return vsSource;\r\n    };\r\n\r\n\r\n    // Initialize fragment and vertex shaders\r\n    WebGL2D.prototype.initShaders = function initShaders(transformStackDepth, sMask) {\r\n        var gl = this.gl;\r\n\r\n        transformStackDepth = transformStackDepth || 1;\r\n        sMask = sMask || 0;\r\n        var storedShader = this.shaderPool[transformStackDepth];\r\n\r\n        if (!storedShader) {\r\n            storedShader = this.shaderPool[transformStackDepth] = [];\r\n        }\r\n        storedShader = storedShader[sMask];\r\n\r\n        if (storedShader) {\r\n            gl.useProgram(storedShader);\r\n            this.shaderProgram = storedShader;\r\n        } else {\r\n            var fs = this.fs = gl.createShader(gl.FRAGMENT_SHADER);\r\n            gl.shaderSource(this.fs, this.getFragmentShaderSource(sMask));\r\n            gl.compileShader(this.fs);\r\n\r\n            if (!gl.getShaderParameter(this.fs, gl.COMPILE_STATUS)) {\r\n                throw \"fragment shader error: \" + gl.getShaderInfoLog(this.fs);\r\n            }\r\n\r\n            var vs = this.vs = gl.createShader(gl.VERTEX_SHADER);\r\n            gl.shaderSource(this.vs, this.getVertexShaderSource(transformStackDepth, sMask));\r\n            gl.compileShader(this.vs);\r\n\r\n            if (!gl.getShaderParameter(this.vs, gl.COMPILE_STATUS)) {\r\n                throw \"vertex shader error: \" + gl.getShaderInfoLog(this.vs);\r\n            }\r\n\r\n\r\n            var shaderProgram = this.shaderProgram = gl.createProgram();\r\n            shaderProgram.stackDepth = transformStackDepth;\r\n            gl.attachShader(shaderProgram, fs);\r\n            gl.attachShader(shaderProgram, vs);\r\n            gl.linkProgram(shaderProgram);\r\n\r\n            if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\r\n                throw \"Could not initialise shaders.\";\r\n            }\r\n\r\n            gl.useProgram(shaderProgram);\r\n\r\n            shaderProgram.vertexPositionAttribute = gl.getAttribLocation(shaderProgram, \"aVertexPosition\");\r\n            gl.enableVertexAttribArray(shaderProgram.vertexPositionAttribute);\r\n\r\n            shaderProgram.uColor = gl.getUniformLocation(shaderProgram, 'uColor');\r\n            shaderProgram.uSampler = gl.getUniformLocation(shaderProgram, 'uSampler');\r\n            shaderProgram.uCropSource = gl.getUniformLocation(shaderProgram, 'uCropSource');\r\n\r\n            shaderProgram.pMatrix = gl.getUniformLocation(shaderProgram, 'pMatrix');\r\n\r\n            shaderProgram.uTransforms = [];\r\n            for (var i = 0; i < transformStackDepth; ++i) {\r\n                shaderProgram.uTransforms[i] = gl.getUniformLocation(shaderProgram, 'uTransforms[' + i + ']');\r\n            } //for\r\n            this.shaderPool[transformStackDepth][sMask] = shaderProgram;\r\n        } //if\r\n\r\n        pMatrix[0] = 2 / this.canvas.width;\r\n        pMatrix[5] = -2 / this.canvas.height;\r\n\r\n        gl.uniformMatrix4fv(this.shaderProgram.pMatrix, false, pMatrix);\r\n\r\n        gl.viewport(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n        return this.shaderProgram;\r\n    };\r\n\r\n    // 2D Vertices and Texture UV coords\r\n    var rectVerts = new Float32Array([\r\n        0, 0, 0, 0,\r\n        0, 1, 0, 1,\r\n        1, 1, 1, 1,\r\n        1, 0, 1, 0\r\n    ]);\r\n\r\n    var pMatrix = new Float32Array(16);\r\n    pMatrix[10] = 1;\r\n    pMatrix[11] = 1;\r\n    pMatrix[12] = -1;\r\n    pMatrix[13] = 1;\r\n\r\n    WebGL2D.prototype.initBuffers = function initBuffers() {\r\n        var gl = this.gl;\r\n\r\n        gl.rectVertexPositionBuffer = gl.createBuffer();\r\n        gl.rectVertexColorBuffer = gl.createBuffer();\r\n\r\n        gl.pathVertexPositionBuffer = gl.createBuffer();\r\n        gl.pathVertexColorBuffer = gl.createBuffer();\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, gl.rectVertexPositionBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, rectVerts, gl.STATIC_DRAW);\r\n    };\r\n\r\n    // Maintains an array of all WebGL2D instances\r\n    WebGL2D.instances = [];\r\n\r\n    WebGL2D.prototype.postInit = function () {\r\n        WebGL2D.instances.push(this);\r\n    };\r\n\r\n    // Extends gl context with Canvas2D API\r\n    WebGL2D.prototype.initCanvas2DAPI = function initCanvas2DAPI() {\r\n        var gl2d = this,\r\n            gl = this.gl;\r\n\r\n\r\n        // Rendering Canvas for text fonts\r\n        var textCanvas = document.createElement(\"canvas\");\r\n        textCanvas.width = gl2d.canvas.width;\r\n        textCanvas.height = gl2d.canvas.height;\r\n        var textCtx = textCanvas.getContext(\"2d\");\r\n\r\n        var reRGBAColor = /^rgb(a)?\\(\\s*(-?[\\d]+)(%)?\\s*,\\s*(-?[\\d]+)(%)?\\s*,\\s*(-?[\\d]+)(%)?\\s*,?\\s*(-?[\\d\\.]+)?\\s*\\)$/;\r\n        var reHSLAColor = /^hsl(a)?\\(\\s*(-?[\\d\\.]+)\\s*,\\s*(-?[\\d\\.]+)%\\s*,\\s*(-?[\\d\\.]+)%\\s*,?\\s*(-?[\\d\\.]+)?\\s*\\)$/;\r\n        var reHex6Color = /^#([0-9A-Fa-f]{6})$/;\r\n        var reHex3Color = /^#([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])$/;\r\n\r\n        function hue2rgb(p, q, t) {\r\n            if (t < 0) t += 1;\r\n            if (t > 1) t -= 1;\r\n            if (t < 1 / 6) return p + (q - p) * 6 * t;\r\n            if (t < 1 / 2) return q;\r\n            if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\r\n            return p;\r\n        }\r\n\r\n        // http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n        function HSLAToRGBA(h, s, l, a) {\r\n            var r, g, b, p, q;\r\n\r\n            // Clamp and Normalize values\r\n            h = (((h % 360) + 360) % 360) / 360;\r\n            s = s > 100 ? 1 : s / 100;\r\n            s = s < 0 ? 0 : s;\r\n            l = l > 100 ? 1 : l / 100;\r\n            l = l < 0 ? 0 : l;\r\n\r\n            if (s == 0) {\r\n                r = g = b = l; // achromatic\r\n            } else {\r\n                q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n                p = 2 * l - q;\r\n\r\n                r = hue2rgb(p, q, h + 1 / 3);\r\n                g = hue2rgb(p, q, h);\r\n                b = hue2rgb(p, q, h - 1 / 3);\r\n            }\r\n\r\n            return [r, g, b, a];\r\n        }\r\n\r\n\r\n        // Converts rgb(a) color string to gl color vector\r\n        function colorStringToVec4(value) {\r\n            var result = [], match, channel, isPercent, hasAlpha, alphaChannel, sameType;\r\n\r\n            if ((match = reRGBAColor.exec(value))) {\r\n                hasAlpha = match[1], alphaChannel = parseFloat(match[8]);\r\n\r\n                if ((hasAlpha && isNaN(alphaChannel)) || (!hasAlpha && !isNaN(alphaChannel))) {\r\n                    return false;\r\n                }\r\n\r\n                sameType = match[3];\r\n\r\n                for (var i = 2; i < 8; i += 2) {\r\n                    channel = match[i], isPercent = match[i + 1];\r\n\r\n                    if (isPercent !== sameType) {\r\n                        return false;\r\n                    }\r\n\r\n                    // Clamp and normalize values\r\n                    if (isPercent) {\r\n                        channel = channel > 100 ? 1 : channel / 100;\r\n                        channel = channel < 0 ? 0 : channel;\r\n                    } else {\r\n                        channel = channel > 255 ? 1 : channel / 255;\r\n                        channel = channel < 0 ? 0 : channel;\r\n                    }\r\n\r\n                    result.push(channel);\r\n                }\r\n\r\n                result.push(hasAlpha ? alphaChannel : 1.0);\r\n            } else if ((match = reHSLAColor.exec(value))) {\r\n                hasAlpha = match[1], alphaChannel = parseFloat(match[5]);\r\n                result = HSLAToRGBA(match[2], match[3], match[4], parseFloat(hasAlpha && alphaChannel ? alphaChannel : 1.0));\r\n            } else if ((match = reHex6Color.exec(value))) {\r\n                var colorInt = parseInt(match[1], 16);\r\n                result = [((colorInt & 0xFF0000) >> 16) / 255, ((colorInt & 0x00FF00) >> 8) / 255, (colorInt & 0x0000FF) / 255, 1.0];\r\n            } else if ((match = reHex3Color.exec(value))) {\r\n                var hexString = \"#\" + [match[1], match[1], match[2], match[2], match[3], match[3]].join(\"\");\r\n                result = colorStringToVec4(hexString);\r\n            } else if (value.toLowerCase() in colorKeywords) {\r\n                result = colorStringToVec4(colorKeywords[value.toLowerCase()]);\r\n            } else if (value.toLowerCase() === \"transparent\") {\r\n                result = [0, 0, 0, 0];\r\n            } else {\r\n                // Color keywords not yet implemented, ie \"orange\", return hot pink\r\n                return false;\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        function colorVecToString(vec4) {\r\n            return \"rgba(\" + (vec4[0] * 255) + \", \" + (vec4[1] * 255) + \", \" + (vec4[2] * 255) + \", \" + parseFloat(vec4[3]) + \")\";\r\n        }\r\n\r\n        var colorKeywords = {\r\n            aliceblue: \"#f0f8ff\",\r\n            antiquewhite: \"#faebd7\",\r\n            aqua: \"#00ffff\",\r\n            aquamarine: \"#7fffd4\",\r\n            azure: \"#f0ffff\",\r\n            beige: \"#f5f5dc\",\r\n            bisque: \"#ffe4c4\",\r\n            black: \"#000000\",\r\n            blanchedalmond: \"#ffebcd\",\r\n            blue: \"#0000ff\",\r\n            blueviolet: \"#8a2be2\",\r\n            brown: \"#a52a2a\",\r\n            burlywood: \"#deb887\",\r\n            cadetblue: \"#5f9ea0\",\r\n            chartreuse: \"#7fff00\",\r\n            chocolate: \"#d2691e\",\r\n            coral: \"#ff7f50\",\r\n            cornflowerblue: \"#6495ed\",\r\n            cornsilk: \"#fff8dc\",\r\n            crimson: \"#dc143c\",\r\n            cyan: \"#00ffff\",\r\n            darkblue: \"#00008b\",\r\n            darkcyan: \"#008b8b\",\r\n            darkgoldenrod: \"#b8860b\",\r\n            darkgray: \"#a9a9a9\",\r\n            darkgreen: \"#006400\",\r\n            darkkhaki: \"#bdb76b\",\r\n            darkmagenta: \"#8b008b\",\r\n            darkolivegreen: \"#556b2f\",\r\n            darkorange: \"#ff8c00\",\r\n            darkorchid: \"#9932cc\",\r\n            darkred: \"#8b0000\",\r\n            darksalmon: \"#e9967a\",\r\n            darkseagreen: \"#8fbc8f\",\r\n            darkslateblue: \"#483d8b\",\r\n            darkslategray: \"#2f4f4f\",\r\n            darkturquoise: \"#00ced1\",\r\n            darkviolet: \"#9400d3\",\r\n            deeppink: \"#ff1493\",\r\n            deepskyblue: \"#00bfff\",\r\n            dimgray: \"#696969\",\r\n            dodgerblue: \"#1e90ff\",\r\n            firebrick: \"#b22222\",\r\n            floralwhite: \"#fffaf0\",\r\n            forestgreen: \"#228b22\",\r\n            fuchsia: \"#ff00ff\",\r\n            gainsboro: \"#dcdcdc\",\r\n            ghostwhite: \"#f8f8ff\",\r\n            gold: \"#ffd700\",\r\n            goldenrod: \"#daa520\",\r\n            gray: \"#808080\",\r\n            green: \"#008000\",\r\n            greenyellow: \"#adff2f\",\r\n            grey: \"#808080\",\r\n            honeydew: \"#f0fff0\",\r\n            hotpink: \"#ff69b4\",\r\n            indianred: \"#cd5c5c\",\r\n            indigo: \"#4b0082\",\r\n            ivory: \"#fffff0\",\r\n            khaki: \"#f0e68c\",\r\n            lavender: \"#e6e6fa\",\r\n            lavenderblush: \"#fff0f5\",\r\n            lawngreen: \"#7cfc00\",\r\n            lemonchiffon: \"#fffacd\",\r\n            lightblue: \"#add8e6\",\r\n            lightcoral: \"#f08080\",\r\n            lightcyan: \"#e0ffff\",\r\n            lightgoldenrodyellow: \"#fafad2\",\r\n            lightgrey: \"#d3d3d3\",\r\n            lightgreen: \"#90ee90\",\r\n            lightpink: \"#ffb6c1\",\r\n            lightsalmon: \"#ffa07a\",\r\n            lightseagreen: \"#20b2aa\",\r\n            lightskyblue: \"#87cefa\",\r\n            lightslategray: \"#778899\",\r\n            lightsteelblue: \"#b0c4de\",\r\n            lightyellow: \"#ffffe0\",\r\n            lime: \"#00ff00\",\r\n            limegreen: \"#32cd32\",\r\n            linen: \"#faf0e6\",\r\n            magenta: \"#ff00ff\",\r\n            maroon: \"#800000\",\r\n            mediumaquamarine: \"#66cdaa\",\r\n            mediumblue: \"#0000cd\",\r\n            mediumorchid: \"#ba55d3\",\r\n            mediumpurple: \"#9370d8\",\r\n            mediumseagreen: \"#3cb371\",\r\n            mediumslateblue: \"#7b68ee\",\r\n            mediumspringgreen: \"#00fa9a\",\r\n            mediumturquoise: \"#48d1cc\",\r\n            mediumvioletred: \"#c71585\",\r\n            midnightblue: \"#191970\",\r\n            mintcream: \"#f5fffa\",\r\n            mistyrose: \"#ffe4e1\",\r\n            moccasin: \"#ffe4b5\",\r\n            navajowhite: \"#ffdead\",\r\n            navy: \"#000080\",\r\n            oldlace: \"#fdf5e6\",\r\n            olive: \"#808000\",\r\n            olivedrab: \"#6b8e23\",\r\n            orange: \"#ffa500\",\r\n            orangered: \"#ff4500\",\r\n            orchid: \"#da70d6\",\r\n            palegoldenrod: \"#eee8aa\",\r\n            palegreen: \"#98fb98\",\r\n            paleturquoise: \"#afeeee\",\r\n            palevioletred: \"#d87093\",\r\n            papayawhip: \"#ffefd5\",\r\n            peachpuff: \"#ffdab9\",\r\n            peru: \"#cd853f\",\r\n            pink: \"#ffc0cb\",\r\n            plum: \"#dda0dd\",\r\n            powderblue: \"#b0e0e6\",\r\n            purple: \"#800080\",\r\n            red: \"#ff0000\",\r\n            rosybrown: \"#bc8f8f\",\r\n            royalblue: \"#4169e1\",\r\n            saddlebrown: \"#8b4513\",\r\n            salmon: \"#fa8072\",\r\n            sandybrown: \"#f4a460\",\r\n            seagreen: \"#2e8b57\",\r\n            seashell: \"#fff5ee\",\r\n            sienna: \"#a0522d\",\r\n            silver: \"#c0c0c0\",\r\n            skyblue: \"#87ceeb\",\r\n            slateblue: \"#6a5acd\",\r\n            slategray: \"#708090\",\r\n            snow: \"#fffafa\",\r\n            springgreen: \"#00ff7f\",\r\n            steelblue: \"#4682b4\",\r\n            tan: \"#d2b48c\",\r\n            teal: \"#008080\",\r\n            thistle: \"#d8bfd8\",\r\n            tomato: \"#ff6347\",\r\n            turquoise: \"#40e0d0\",\r\n            violet: \"#ee82ee\",\r\n            wheat: \"#f5deb3\",\r\n            white: \"#ffffff\",\r\n            whitesmoke: \"#f5f5f5\",\r\n            yellow: \"#ffff00\",\r\n            yellowgreen: \"#9acd32\"\r\n        };\r\n\r\n        // Maintain drawing state params during gl.save and gl.restore. see saveDrawState() and restoreDrawState()\r\n        var drawState = {}, drawStateStack = [];\r\n\r\n        // A fast simple shallow clone\r\n        function cloneObject(obj) {\r\n            var target = {};\r\n            for (var i in obj) {\r\n                if (obj.hasOwnProperty(i)) {\r\n                    target[i] = obj[i];\r\n                }\r\n            }\r\n            return target;\r\n        }\r\n\r\n        function saveDrawState() {\r\n            var bakedDrawState = {\r\n                fillStyle: [drawState.fillStyle[0], drawState.fillStyle[1], drawState.fillStyle[2], drawState.fillStyle[3]],\r\n                strokeStyle: [drawState.strokeStyle[0], drawState.strokeStyle[1], drawState.strokeStyle[2], drawState.strokeStyle[3]],\r\n                globalAlpha: drawState.globalAlpha,\r\n                globalCompositeOperation: drawState.globalCompositeOperation,\r\n                lineCap: drawState.lineCap,\r\n                lineJoin: drawState.lineJoin,\r\n                lineWidth: drawState.lineWidth,\r\n                miterLimit: drawState.miterLimit,\r\n                shadowColor: drawState.shadowColor,\r\n                shadowBlur: drawState.shadowBlur,\r\n                shadowOffsetX: drawState.shadowOffsetX,\r\n                shadowOffsetY: drawState.shadowOffsetY,\r\n                textAlign: drawState.textAlign,\r\n                font: drawState.font,\r\n                textBaseline: drawState.textBaseline,\r\n                imageSmoothingEnabled: drawState.imageSmoothingEnabled\r\n            };\r\n\r\n            drawStateStack.push(bakedDrawState);\r\n        }\r\n\r\n        function restoreDrawState() {\r\n            if (drawStateStack.length) {\r\n                drawState = drawStateStack.pop();\r\n            }\r\n        }\r\n\r\n        // WebGL requires colors as a vector while Canvas2D sets colors as an rgba string\r\n        // These getters and setters store the original rgba string as well as convert to a vector\r\n        drawState.fillStyle = [0, 0, 0, 1]; // default black\r\n\r\n        Object.defineProperty(gl, \"fillStyle\", {\r\n            get: function () {\r\n                return colorVecToString(drawState.fillStyle);\r\n            },\r\n            set: function (value) {\r\n                drawState.fillStyle = colorStringToVec4(value) || drawState.fillStyle;\r\n            }\r\n        });\r\n\r\n        drawState.strokeStyle = [0, 0, 0, 1]; // default black\r\n\r\n        Object.defineProperty(gl, \"strokeStyle\", {\r\n            get: function () {\r\n                return colorVecToString(drawState.strokeStyle);\r\n            },\r\n            set: function (value) {\r\n                drawState.strokeStyle = colorStringToVec4(value) || drawStyle.strokeStyle;\r\n            }\r\n        });\r\n\r\n        // WebGL already has a lineWidth() function but Canvas2D requires a lineWidth property\r\n        // Store the original lineWidth() function for later use\r\n        gl.$lineWidth = gl.lineWidth;\r\n        drawState.lineWidth = 1.0;\r\n\r\n        Object.defineProperty(gl, \"lineWidth\", {\r\n            get: function () {\r\n                return drawState.lineWidth;\r\n            },\r\n            set: function (value) {\r\n                if (value > 0) {\r\n                    gl.$lineWidth(value);\r\n                    drawState.lineWidth = value;\r\n                }\r\n            }\r\n        });\r\n\r\n        // Currently unsupported attributes and their default values\r\n        drawState.lineCap = \"butt\";\r\n\r\n        Object.defineProperty(gl, \"lineCap\", {\r\n            get: function () {\r\n                return drawState.lineCap;\r\n            },\r\n            set: function (value) {\r\n                drawState.lineCap = value;\r\n            }\r\n        });\r\n\r\n        drawState.lineJoin = \"miter\";\r\n\r\n        Object.defineProperty(gl, \"lineJoin\", {\r\n            get: function () {\r\n                return drawState.lineJoin;\r\n            },\r\n            set: function (value) {\r\n                drawState.lineJoin = value;\r\n            }\r\n        });\r\n\r\n        drawState.miterLimit = 10;\r\n\r\n        Object.defineProperty(gl, \"miterLimit\", {\r\n            get: function () {\r\n                return drawState.miterLimit;\r\n            },\r\n            set: function (value) {\r\n                drawState.miterLimit = value;\r\n            }\r\n        });\r\n\r\n        drawState.shadowOffsetX = 0;\r\n\r\n        Object.defineProperty(gl, \"shadowOffsetX\", {\r\n            get: function () {\r\n                return drawState.shadowOffsetX;\r\n            },\r\n            set: function (value) {\r\n                drawState.shadowOffsetX = value;\r\n            }\r\n        });\r\n\r\n        drawState.shadowOffsetY = 0;\r\n\r\n        Object.defineProperty(gl, \"shadowOffsetY\", {\r\n            get: function () {\r\n                return drawState.shadowOffsetY;\r\n            },\r\n            set: function (value) {\r\n                drawState.shadowOffsetY = value;\r\n            }\r\n        });\r\n\r\n        drawState.shadowBlur = 0;\r\n\r\n        Object.defineProperty(gl, \"shadowBlur\", {\r\n            get: function () {\r\n                return drawState.shadowBlur;\r\n            },\r\n            set: function (value) {\r\n                drawState.shadowBlur = value;\r\n            }\r\n        });\r\n\r\n        drawState.shadowColor = \"rgba(0, 0, 0, 0.0)\";\r\n\r\n        Object.defineProperty(gl, \"shadowColor\", {\r\n            get: function () {\r\n                return drawState.shadowColor;\r\n            },\r\n            set: function (value) {\r\n                drawState.shadowColor = value;\r\n            }\r\n        });\r\n\r\n        drawState.font = \"10px sans-serif\";\r\n\r\n        Object.defineProperty(gl, \"font\", {\r\n            get: function () {\r\n                return drawState.font;\r\n            },\r\n            set: function (value) {\r\n                textCtx.font = value;\r\n                drawState.font = value;\r\n            }\r\n        });\r\n\r\n        drawState.textAlign = \"start\";\r\n\r\n        Object.defineProperty(gl, \"textAlign\", {\r\n            get: function () {\r\n                return drawState.textAlign;\r\n            },\r\n            set: function (value) {\r\n                drawState.textAlign = value;\r\n            }\r\n        });\r\n\r\n        drawState.textBaseline = \"alphabetic\";\r\n\r\n        Object.defineProperty(gl, \"textBaseline\", {\r\n            get: function () {\r\n                return drawState.textBaseline;\r\n            },\r\n            set: function (value) {\r\n                drawState.textBaseline = value;\r\n            }\r\n        });\r\n\r\n        // This attribute will need to control global alpha of objects drawn.\r\n        drawState.globalAlpha = 1.0;\r\n\r\n        Object.defineProperty(gl, \"globalAlpha\", {\r\n            get: function () {\r\n                return drawState.globalAlpha;\r\n            },\r\n            set: function (value) {\r\n                drawState.globalAlpha = value;\r\n            }\r\n        });\r\n\r\n        // This attribute will need to control smoothing of objects drawn.\r\n        drawState.imageSmoothingEnabled = true;\r\n\r\n        Object.defineProperty(gl, \"imageSmoothingEnabled\", {\r\n            get: function () {\r\n                return drawState.imageSmoothingEnabled;\r\n            },\r\n            set: function (value) {\r\n                drawState.imageSmoothingEnabled = !!value;\r\n            }\r\n        });\r\n\r\n        // This attribute will need to set the gl.blendFunc mode\r\n        drawState.globalCompositeOperation = \"source-over\";\r\n\r\n        Object.defineProperty(gl, \"globalCompositeOperation\", {\r\n            get: function () {\r\n                return drawState.globalCompositeOperation;\r\n            },\r\n            set: function (value) {\r\n                drawState.globalCompositeOperation = value;\r\n            }\r\n        });\r\n\r\n        // Need a solution for drawing text that isnt stupid slow\r\n        gl.fillText = function fillText(text, x, y) {\r\n            // if it exist --key\r\n            textCtx.clearRect(0, 0, gl2d.canvas.width, gl2d.canvas.height);\r\n            textCtx.fillStyle = gl.fillStyle;\r\n            textCtx.fillText(text, x, y);\r\n\r\n            gl.drawImage(textCanvas, 0, 0);\r\n        };\r\n\r\n        gl.strokeText = function strokeText() {\r\n        };\r\n\r\n        gl.measureText = function measureText() {\r\n            return 1;\r\n        };\r\n\r\n        var tempCanvas = document.createElement('canvas');\r\n        var tempCtx = tempCanvas.getContext('2d');\r\n\r\n        gl.save = function save() {\r\n            gl2d.transform.pushMatrix();\r\n            saveDrawState();\r\n        };\r\n\r\n        gl.restore = function restore() {\r\n            gl2d.transform.popMatrix();\r\n            restoreDrawState();\r\n        };\r\n\r\n        gl.translate = function translate(x, y) {\r\n            gl2d.transform.translate(x, y);\r\n        };\r\n\r\n        gl.rotate = function rotate(a) {\r\n            gl2d.transform.rotate(a);\r\n        };\r\n\r\n        gl.scale = function scale(x, y) {\r\n            gl2d.transform.scale(x, y);\r\n        };\r\n\r\n        gl.createImageData = function createImageData(width, height) {\r\n            return tempCtx.createImageData(width, height);\r\n        };\r\n\r\n        gl.getImageData = function getImageData(x, y, width, height) {\r\n            var data = tempCtx.createImageData(width, height);\r\n            var buffer = new Uint8Array(width * height * 4);\r\n            gl.readPixels(x, y, width, height, gl.RGBA, gl.UNSIGNED_BYTE, buffer);\r\n            var w = width * 4, h = height;\r\n            for (var i = 0, maxI = h / 2; i < maxI; ++i) {\r\n                for (var j = 0, maxJ = w; j < maxJ; ++j) {\r\n                    var index1 = i * w + j;\r\n                    var index2 = (h - i - 1) * w + j;\r\n                    data.data[index1] = buffer[index2];\r\n                    data.data[index2] = buffer[index1];\r\n                } //for\r\n            } //for\r\n\r\n            return data;\r\n        };\r\n\r\n        gl.putImageData = function putImageData(imageData, x, y) {\r\n            gl.drawImage(imageData, x, y);\r\n        };\r\n\r\n        gl.transform = function transform(m11, m12, m21, m22, dx, dy) {\r\n            gl2d.transform.tr(m11, m12, m21, m22, dx, dy);\r\n        };\r\n\r\n        function sendTransformStack(sp) {\r\n            var stack = gl2d.transform.m_stack;\r\n            for (var i = 0, maxI = gl2d.transform.c_stack + 1; i < maxI; ++i) {\r\n                gl.uniformMatrix3fv(sp.uTransforms[i], false, stack[maxI - 1 - i]);\r\n            } //for\r\n        }\r\n\r\n        gl.setTransform = function setTransform(m11, m12, m21, m22, dx, dy) {\r\n            gl2d.transform.setIdentity();\r\n            gl.transform.apply(this, arguments);\r\n        };\r\n\r\n        gl.fillRect = function fillRect(x, y, width, height) {\r\n            var transform = gl2d.transform;\r\n            var shaderProgram = gl2d.initShaders(transform.c_stack + 2, 0);\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, gl.rectVertexPositionBuffer);\r\n            gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, 4, gl.FLOAT, false, 0, 0);\r\n\r\n            transform.pushMatrix();\r\n\r\n            transform.translate(x, y);\r\n            transform.scale(width, height);\r\n\r\n            sendTransformStack(shaderProgram);\r\n\r\n            gl.uniform4f(shaderProgram.uColor, drawState.fillStyle[0], drawState.fillStyle[1], drawState.fillStyle[2], drawState.fillStyle[3]);\r\n\r\n            gl.drawArrays(gl.TRIANGLE_FAN, 0, 4);\r\n\r\n            transform.popMatrix();\r\n        };\r\n\r\n        gl.strokeRect = function strokeRect(x, y, width, height) {\r\n            var transform = gl2d.transform;\r\n            var shaderProgram = gl2d.initShaders(transform.c_stack + 2, 0);\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, gl.rectVertexPositionBuffer);\r\n            gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, 4, gl.FLOAT, false, 0, 0);\r\n\r\n            transform.pushMatrix();\r\n\r\n            transform.translate(x, y);\r\n            transform.scale(width, height);\r\n\r\n            sendTransformStack(shaderProgram);\r\n\r\n            gl.uniform4f(shaderProgram.uColor, drawState.strokeStyle[0], drawState.strokeStyle[1], drawState.strokeStyle[2], drawState.strokeStyle[3]);\r\n\r\n            gl.drawArrays(gl.LINE_LOOP, 0, 4);\r\n\r\n            transform.popMatrix();\r\n        };\r\n\r\n        gl.clearRect = function clearRect(x, y, width, height) {\r\n        };\r\n\r\n        var subPaths = [];\r\n\r\n        function SubPath(x, y) {\r\n            this.closed = false;\r\n            this.verts = [x, y, 0, 0];\r\n        }\r\n\r\n        // Empty the list of subpaths so that the context once again has zero subpaths\r\n        gl.beginPath = function beginPath() {\r\n            subPaths.length = 0;\r\n        };\r\n\r\n        // Mark last subpath as closed and create a new subpath with the same starting point as the previous subpath\r\n        gl.closePath = function closePath() {\r\n            if (subPaths.length) {\r\n                // Mark last subpath closed.\r\n                var prevPath = subPaths[subPaths.length - 1], startX = prevPath.verts[0], startY = prevPath.verts[1];\r\n                prevPath.closed = true;\r\n\r\n                // Create new subpath using the starting position of previous subpath\r\n                var newPath = new SubPath(startX, startY);\r\n                subPaths.push(newPath);\r\n            }\r\n        };\r\n\r\n        // Create a new subpath with the specified point as its first (and only) point\r\n        gl.moveTo = function moveTo(x, y) {\r\n            subPaths.push(new SubPath(x, y));\r\n        };\r\n\r\n        gl.lineTo = function lineTo(x, y) {\r\n            if (subPaths.length) {\r\n                subPaths[subPaths.length - 1].verts.push(x, y, 0, 0);\r\n            } else {\r\n                // Create a new subpath if none currently exist\r\n                gl.moveTo(x, y);\r\n            }\r\n        };\r\n\r\n        gl.quadraticApproximateCount = 50;\r\n        gl.quadraticCurveTo = function quadraticCurveTo(hx, hy, x, y) {\r\n            if (subPaths.length) {\r\n                var verts = subPaths[subPaths.length - 1].verts,\r\n                    fromx = verts[verts.length - 4],\r\n                    fromy = verts[verts.length - 3],\r\n                    t, i, tx, ty;\r\n                for (var j = 0; j < gl.quadraticApproximateCount; j++) {\r\n                    t = j / gl.quadraticApproximateCount;\r\n                    i = 1 - t;\r\n                    tx = i * i * fromx + 2 * i * t * hx + t * t * x;\r\n                    ty = i * i * fromy + 2 * i * t * hy + t * t * y;\r\n                    verts.push(tx, ty, 0, 0);\r\n                }\r\n            } else {\r\n                gl.moveTo(x, y);\r\n            }\r\n        };\r\n\r\n        gl.bezierApproximateCount = 50;\r\n        gl.bezierCurveTo = function quadraticCurveTo(h1x, h1y, h2x, h2y, x, y) {\r\n            if (subPaths.length) {\r\n                var verts = subPaths[subPaths.length - 1].verts,\r\n                    fromx = verts[verts.length - 4],\r\n                    fromy = verts[verts.length - 3],\r\n                    t, i, tx, ty;\r\n                for (var j = 0; j < gl.bezierApproximateCount; j++) {\r\n                    t = j / gl.bezierApproximateCount;\r\n                    i = 1 - t;\r\n                    tx = i * i * i * fromx + 3 * i * i * t * h1x + 3 * i * t * t * h2x + t * t * t * x;\r\n                    ty = i * i * i * fromy + 3 * i * i * t * h1y + 3 * i * t * t * h2y + t * t * t * y;\r\n                    verts.push(tx, ty, 0, 0);\r\n                }\r\n            } else {\r\n                gl.moveTo(x, y);\r\n            }\r\n        };\r\n\r\n        gl.arcTo = function arcTo() {\r\n            if (subPaths.length) {\r\n                ;\r\n            } else {\r\n                gl.moveTo(x, y);\r\n            }\r\n        };\r\n\r\n        // Adds a closed rect subpath and creates a new subpath\r\n        gl.rect = function rect(x, y, w, h) {\r\n            gl.moveTo(x, y);\r\n            gl.lineTo(x + w, y);\r\n            gl.lineTo(x + w, y + h);\r\n            gl.lineTo(x, y + h);\r\n            gl.closePath();\r\n        };\r\n\r\n        gl.arcApproximateCount = 100;\r\n        gl.arc = function arc(cx, cy, radius, startAngle, endAngle, anticlockwise) {\r\n            if (subPaths.length) {\r\n                var verts = subPaths[subPaths.length - 1].verts;\r\n\r\n                // startAngle\r\n                var x = cx + radius * Math.cos(startAngle),\r\n                    y = cy + radius * Math.sin(startAngle);\r\n                verts.push(x, y, 0, 0);\r\n\r\n                while (startAngle > Math.PI * 2)\r\n                    startAngle -= Math.PI * 2;\r\n                while (endAngle > Math.PI * 2)\r\n                    endAngle -= Math.PI * 2;\r\n                while (startAngle < -Math.PI * 2)\r\n                    startAngle += Math.PI * 2;\r\n                while (endAngle < -Math.PI * 2)\r\n                    endAngle += Math.PI * 2;\r\n                if (startAngle == endAngle)\r\n                    return;\r\n\r\n                var count = 1 / gl.arcApproximateCount,\r\n                    fixed = gl.arcApproximateCount,\r\n                    t;\r\n                if (anticlockwise) {\r\n                    endAngle -= Math.PI * 2;\r\n                    count = -count;\r\n                }\r\n                for (var i = startAngle; (i > endAngle && anticlockwise) || (i < endAngle && !anticlockwise); i += count) {\r\n                    if (t == (t = (i * fixed | 0) / fixed))\r\n                        continue;\r\n                    x = cx + radius * Math.cos(t);\r\n                    y = cy + radius * Math.sin(t);\r\n                    verts.push(x, y, 0, 0);\r\n                }\r\n            } else {\r\n                gl.moveTo(x, y);\r\n            }\r\n        };\r\n\r\n        function fillSubPath(index) {\r\n            var transform = gl2d.transform;\r\n            var shaderProgram = gl2d.initShaders(transform.c_stack + 2, 0);\r\n\r\n            var subPath = subPaths[index];\r\n            var verts = subPath.verts;\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, gl.pathVertexPositionBuffer);\r\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(verts), gl.STATIC_DRAW);\r\n\r\n            gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, 4, gl.FLOAT, false, 0, 0);\r\n\r\n            transform.pushMatrix();\r\n\r\n            sendTransformStack(shaderProgram);\r\n\r\n            gl.uniform4f(shaderProgram.uColor, drawState.fillStyle[0], drawState.fillStyle[1], drawState.fillStyle[2], drawState.fillStyle[3]);\r\n\r\n            gl.drawArrays(gl.TRIANGLE_FAN, 0, verts.length / 4);\r\n\r\n            transform.popMatrix();\r\n        }\r\n\r\n        gl.fill = function fill() {\r\n            for (var i = 0; i < subPaths.length; i++) {\r\n                fillSubPath(i);\r\n            }\r\n        };\r\n\r\n        function strokeSubPath(index) {\r\n            var transform = gl2d.transform;\r\n            var shaderProgram = gl2d.initShaders(transform.c_stack + 2, 0);\r\n\r\n            var subPath = subPaths[index];\r\n            var verts = subPath.verts;\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, gl.pathVertexPositionBuffer);\r\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(verts), gl.STATIC_DRAW);\r\n\r\n            gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, 4, gl.FLOAT, false, 0, 0);\r\n\r\n            transform.pushMatrix();\r\n\r\n            sendTransformStack(shaderProgram);\r\n\r\n            gl.uniform4f(shaderProgram.uColor, drawState.strokeStyle[0], drawState.strokeStyle[1], drawState.strokeStyle[2], drawState.strokeStyle[3]);\r\n\r\n            if (subPath.closed) {\r\n                gl.drawArrays(gl.LINE_LOOP, 0, verts.length / 4);\r\n            } else {\r\n                gl.drawArrays(gl.LINE_STRIP, 0, verts.length / 4);\r\n            }\r\n\r\n            transform.popMatrix();\r\n        }\r\n\r\n        gl.stroke = function stroke() {\r\n            for (var i = 0; i < subPaths.length; i++) {\r\n                strokeSubPath(i);\r\n            }\r\n        };\r\n\r\n        gl.clip = function clip() {\r\n        };\r\n\r\n        gl.isPointInPath = function isPointInPath() {\r\n        };\r\n\r\n        gl.drawFocusRing = function drawFocusRing() {\r\n        };\r\n\r\n\r\n        var imageCache = [], textureCache = [];\r\n\r\n        function Texture(image) {\r\n            this.obj = gl.createTexture();\r\n            this.index = textureCache.push(this);\r\n\r\n            imageCache.push(image);\r\n\r\n            // we may wish to consider tiling large images like this instead of scaling and\r\n            // adjust appropriately (flip to next texture source and tile offset) when drawing\r\n            if (image.width > gl2d.maxTextureSize || image.height > gl2d.maxTextureSize) {\r\n                var canvas = document.createElement(\"canvas\");\r\n\r\n                canvas.width = (image.width > gl2d.maxTextureSize) ? gl2d.maxTextureSize : image.width;\r\n                canvas.height = (image.height > gl2d.maxTextureSize) ? gl2d.maxTextureSize : image.height;\r\n\r\n                var ctx = canvas.getContext(\"2d\");\r\n\r\n                ctx.drawImage(image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height);\r\n\r\n                image = canvas;\r\n            }\r\n\r\n            var GL_FUNCTION = gl.LINEAR;\r\n            var GL_MIPMAP_FUNCTION = gl.LINEAR_MIPMAP_LINEAR;\r\n\r\n            if (!drawState.imageSmoothingEnabled) {\r\n                GL_FUNCTION = gl.NEAREST;\r\n                GL_MIPMAP_FUNCTION = gl.LINEAR_MIPMAP_NEAREST;\r\n            }\r\n\r\n            gl.bindTexture(gl.TEXTURE_2D, this.obj);\r\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, GL_FUNCTION);\r\n\r\n            // Enable Mip mapping on power-of-2 textures\r\n            if (isPOT(image.width) && isPOT(image.height)) {\r\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, GL_MIPMAP_FUNCTION);\r\n                gl.generateMipmap(gl.TEXTURE_2D);\r\n            } else {\r\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, GL_FUNCTION);\r\n            }\r\n\r\n            // Unbind texture\r\n            gl.bindTexture(gl.TEXTURE_2D, null);\r\n        }\r\n\r\n        gl.drawImage = function drawImage(image, a, b, c, d, e, f, g, h) {\r\n            var transform = gl2d.transform;\r\n\r\n            transform.pushMatrix();\r\n\r\n            var sMask = shaderMask.texture;\r\n            var doCrop = false;\r\n\r\n            //drawImage(image, dx, dy)\r\n            if (arguments.length === 3) {\r\n                transform.translate(a, b);\r\n                transform.scale(image.width, image.height);\r\n            }\r\n\r\n            //drawImage(image, dx, dy, dw, dh)\r\n            else if (arguments.length === 5) {\r\n                transform.translate(a, b);\r\n                transform.scale(c, d);\r\n            }\r\n\r\n            //drawImage(image, sx, sy, sw, sh, dx, dy, dw, dh)\r\n            else if (arguments.length === 9) {\r\n                transform.translate(e, f);\r\n                transform.scale(g, h);\r\n                sMask = sMask | shaderMask.crop;\r\n                doCrop = true;\r\n            }\r\n\r\n            var shaderProgram = gl2d.initShaders(transform.c_stack + 1, sMask);\r\n\r\n            var texture, cacheIndex = imageCache.indexOf(image);\r\n\r\n            if (cacheIndex !== -1) {\r\n                texture = textureCache[cacheIndex];\r\n            } else {\r\n                texture = new Texture(image);\r\n            }\r\n\r\n            if (doCrop) {\r\n                gl.uniform4f(shaderProgram.uCropSource, a / image.width, b / image.height, c / image.width, d / image.height);\r\n            }\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, gl.rectVertexPositionBuffer);\r\n            gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, 4, gl.FLOAT, false, 0, 0);\r\n\r\n            gl.bindTexture(gl.TEXTURE_2D, texture.obj);\r\n            gl.activeTexture(gl.TEXTURE0);\r\n\r\n            gl.uniform1i(shaderProgram.uSampler, 0);\r\n\r\n            sendTransformStack(shaderProgram);\r\n            gl.drawArrays(gl.TRIANGLE_FAN, 0, 4);\r\n\r\n            transform.popMatrix();\r\n        };\r\n\r\n        // This enables the user to detect whether they got a webgl-2d context or a 2d context.\r\n        Object.defineProperty(gl, \"isWebGL\", {\r\n            configurable: false,\r\n            enumerable: true,\r\n            writable: false,\r\n            value: true\r\n        });\r\n    };\r\n\r\n    return WebGL2D;\r\n}));\r\n"],"sourceRoot":"/source/"}