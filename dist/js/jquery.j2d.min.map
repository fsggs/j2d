{"version":3,"sources":["jquery.j2d.js","core/FrameManager.js","core/LayersManager.js","core/SceneManager.js","core/ViewportManager.js","core/WebGL2D.js","io/InputManager.js","nodes/BaseNode.js","nodes/CameraNode.js","nodes/CollectionNode.js","nodes/RectNode.js","utils/ArrayMap.js","utils/DeviceUtil.js","utils/Exceptions.js","utils/MathUtil.js","utils/Vector2d.js","utils/Vector2dInteger.js"],"names":["root","factory","define","amd","module","exports","require","jQuery","SceneManager","DeviceUtil","window","global","$","J2D","element","data","j2d","this","device","scene","Object","defineProperty","get","webGL","set","value","addClass","removeClass","smoothing","io","pause","defaults","id","deltaTime","ready","frameLimit","prototype","start","trigger","stop","flush","resume","focus","getSceneManager","getLayersManager","layersManager","getFrameManager","frameManager","on","once","off","util","disableSmoothing","context","chrome","navigator","userAgent","match","version","parseInt","initPlugin","undefined","j2dPlugin","pluginInit","fn","options","filter","each","extend","guid","replace","c","r","Math","random","v","toString","attr","tabIndex","click","$array","push","length","isFullScreen","document","webkitFullscreenElement","webkitCurrentFullScreenElement","mozFullScreenElement","msFullscreenElement","fullScreen","resizeToFullPage","toggle","current","onResize","ArrayMap","instance","engineStack","dataStack","timestamp","frameRun","breakAnimationFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","Number","MAX_SAFE_INTEGER","Date","now","setTimeout","bind","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","FrameManager","name","engine","params","lastTime","sceneStartTime","sceneSkipTime","asyncUpdate","asyncRender","interval","add","pulse","remove","runMainLoop","index","hasOwnProperty","update","render","clear","setDefaultFrameLimit","Init","instanceFrameManager","BaseNode","CollectionNode","LayersManager","globalCollection","layers","addLayer","zIndex","node","removeLayer","getLayer","setZIndex","WebGL2D","sceneManager","canvas","initLayers","backgroundColor","fillStyle","fillRect","width","height","opacity","style","visible","display","viewport","originalWidth","originalHeight","originalMargin","position","top","left","enableFullScreen","x","y","gameState","fixGameStateRender","fillBackground","init","css","initCanvas","selector","createElement","enable","getContext","shadowColor","append","pos","size","clearRect","resize","save","restore","setGameState","console","warn","async","call","fullscreen","getElementById","requestFullscreen","webkitRequestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","exitFullscreen","webkitExitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","enableFullscreen","toggleFullScreen","getSceneLayer","forEach","key","CameraNode","Vector2d","calculateScale","screen","offset","scale","angle","ViewportManager","cameras","camera","setScreen","Array","addCamera","removeCamera","updateViewport","getCameraViewport","setViewport","getVector","getViewport","isPOT","Transform","mat","clearStack","mat3","identity","multiply","m1","m2","m10","m11","m12","m13","m14","m15","m16","m17","m18","m20","m21","m22","m23","m24","m25","m26","m27","m28","vec2_multiply","mOut","transpose","m","STACK_DEPTH_LIMIT","init_mat","m_stack","m_cache","c_stack","valid","result","i","getIdentity","setIdentity","getResult","pushMatrix","popMatrix","translateMatrix","translate","trMatrix","tr","a","b","d","e","f","scaleMatrix","rotateMatrix","rotate","ang","sAng","cAng","sin","cos","gl","fs","vs","shaderProgram","transform","shaderPool","maxTextureSize","gl2d","$getContext","force","initShaders","initBuffers","initCanvas2DAPI","BLEND","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","getParameter","MAX_TEXTURE_SIZE","postInit","shaderMask","texture","crop","path","getFragmentShaderSource","sMask","fsSource","join","getVertexShaderSource","stackDepth","vsSource","transformStackDepth","storedShader","useProgram","createShader","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","VERTEX_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","vertexPositionAttribute","getAttribLocation","enableVertexAttribArray","uColor","getUniformLocation","uSampler","uCropSource","pMatrix","uTransforms","uniformMatrix4fv","rectVerts","Float32Array","rectVertexPositionBuffer","createBuffer","rectVertexColorBuffer","pathVertexPositionBuffer","pathVertexColorBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","instances","hue2rgb","p","q","t","HSLAToRGBA","h","s","l","g","colorStringToVec4","channel","isPercent","hasAlpha","alphaChannel","sameType","reRGBAColor","exec","parseFloat","isNaN","reHSLAColor","reHex6Color","colorInt","reHex3Color","hexString","toLowerCase","colorKeywords","colorVecToString","vec4","saveDrawState","bakedDrawState","drawState","strokeStyle","globalAlpha","globalCompositeOperation","lineCap","lineJoin","lineWidth","miterLimit","shadowBlur","shadowOffsetX","shadowOffsetY","textAlign","font","textBaseline","imageSmoothingEnabled","drawStateStack","restoreDrawState","pop","sendTransformStack","sp","stack","maxI","uniformMatrix3fv","SubPath","closed","verts","fillSubPath","subPath","subPaths","vertexAttribPointer","FLOAT","uniform4f","drawArrays","TRIANGLE_FAN","strokeSubPath","LINE_LOOP","LINE_STRIP","Texture","image","obj","createTexture","textureCache","imageCache","ctx","drawImage","GL_FUNCTION","LINEAR","GL_MIPMAP_FUNCTION","LINEAR_MIPMAP_LINEAR","NEAREST","LINEAR_MIPMAP_NEAREST","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","generateMipmap","textCanvas","textCtx","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","drawStyle","$lineWidth","fillText","text","strokeText","measureText","tempCanvas","tempCtx","createImageData","getImageData","buffer","Uint8Array","readPixels","w","j","maxJ","index1","index2","putImageData","imageData","dx","dy","setTransform","apply","arguments","strokeRect","beginPath","closePath","prevPath","startX","startY","newPath","moveTo","lineTo","quadraticApproximateCount","quadraticCurveTo","hx","hy","tx","ty","fromx","fromy","bezierApproximateCount","bezierCurveTo","h1x","h1y","h2x","h2y","arcTo","rect","arcApproximateCount","arc","cx","cy","radius","startAngle","endAngle","anticlockwise","PI","count","fixed","fill","stroke","clip","isPointInPath","drawFocusRing","doCrop","cacheIndex","indexOf","activeTexture","TEXTURE0","uniform1i","configurable","enumerable","writable","getKey","object","keys","InputManager","mouse","startPosition","currentPosition","previousDistance","distance","enabled","enableAdditionalData","keysPressed","writeMode","timePressed","preventAll","cursor","keyMap","FULLSCREEN","KEY_CTRL","KEY_F11","checkKeyMap","enableCallback","manager","keyCode","which","isArray","eval","equals","events","onMouseClick","isPlay","hasClass","event","inArray","pageX","pageY","timeStamp","preventDefault","splice","onMouseWheel","originalEvent","wheelDelta","fixMouseWheel","mouseWheelCancel","onMouseMove","sqrt","pow","toFixed","onKeyboardPress","char","String","fromCharCode","onTouchTap","touch","touches","changedTouches","onTouchMove","bindEvents","unbindEvents","dX","offsetWidth","dY","offsetHeight","keyPressed","SCROLL_MOUSE_UP","SCROLL_MOUSE_DOWN","disable","load","newKeyMap","oldKeyMap","JSON","stringify","parse","setKeys","mapObject","getPressData","keyList","time","getMouseMoveDistance","previous","checkPressedKeyList","checkPressedKeyMap","setWriteMode","mode","isWriteMode","setCursorImage","toggleCursor","isCursorVisible","KEY_MOUSE_LEFT","KEY_MOUSE_MIDDLE","KEY_MOUSE_RIGHT","KEY_BACKSPACE","KEY_TAB","KEY_ENTER","KEY_SHIFT","KEY_ALT","KEY_PAUSE","KEY_BREAK","KEY_CAPS_LOCK","KEY_ESCAPE","KEY_SPACE_BAR","KEY_PAGE_UP","KEY_PAGE_DOWN","KEY_END","KEY_HOME","KEY_LEFT_ARROW","KEY_UP_ARROW","KEY_RIGHT_ARROW","KEY_DOWN_ARROW","KEY_INSERT","KEY_DELETE","KEY_0","KEY_1","KEY_2","KEY_3","KEY_4","KEY_5","KEY_6","KEY_7","KEY_8","KEY_9","KEY_A","KEY_B","KEY_C","KEY_D","KEY_E","KEY_F","KEY_G","KEY_H","KEY_I","KEY_J","KEY_K","KEY_L","KEY_M","KEY_N","KEY_O","KEY_P","KEY_Q","KEY_R","KEY_S","KEY_T","KEY_U","KEY_V","KEY_W","KEY_X","KEY_Y","KEY_Z","KEY_LEFT_WINDOW_KEY","KEY_RIGHT_WINDOW_KEY","KEY_SELECT_KEY","KEY_NUMPAD_0","KEY_NUMPAD_1","KEY_NUMPAD_2","KEY_NUMPAD_3","KEY_NUMPAD_4","KEY_NUMPAD_5","KEY_NUMPAD_6","KEY_NUMPAD_7","KEY_NUMPAD_8","KEY_NUMPAD_9","KEY_MULTIPLY","KEY_ADD","KEY_SUBTRACT","KEY_DECIMAL_POINT","KEY_DIVIDE","KEY_F1","KEY_F2","KEY_F3","KEY_F4","KEY_F5","KEY_F6","KEY_F7","KEY_F8","KEY_F9","KEY_F10","KEY_F12","KEY_NUM_LOCK","KEY_SCROLL_LOCK","KEY_SEMI_COLON","KEY_EQUAL_SIGN","KEY_COMMA","KEY_DASH","KEY_PERIOD","KEY_FORWARD_SLASH","KEY_GRAVE_ACCENT","KEY_OPEN_BRACKET","KEY_BACK_SLASH","KEY_CLOSE_BRACKET","KEY_SINGLE_QUOTE","KEY_LEFT_COMMAND","KEY_RIGHT_COMMAND","baseNode","enabledCache","type","cache","getPosition","setPosition","getSize","setSize","getOffset","setOffset","collection","create","constructor","calculate","collectionNode","MathUtil","RectNode","color","getColor","setColor","draw","tempOpacity","degree2Radian","args","last","array","contains","Vector2dInteger","innerWidth","innerHeight","getWidth","getHeight","Exception","message","Error","RuntimeException","InvalidArgumentException","BadFunctionCallException","BadMethodCallException","LengthException","LogicException","OutOfBoundsException","OutOfRangeException","RangeException","UnexpectedValueException","number2Integer","number","isInteger","isFinite","floor","randomColor","min","max","omitZero","degree","radian2Degree","radian","getX","getY","toArray","fromArray"],"mappings":"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","file":"jquery.j2d.js","sourcesContent":["/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n/*\r\n * TODO:: Events System\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('jquery.j2d', [\r\n            'jquery',\r\n            'core/SceneManager',\r\n            'utils/DeviceUtil'\r\n        ], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(\r\n            require('jquery'),\r\n            require('core/SceneManager'),\r\n            require('utils/DeviceUtil')\r\n        );\r\n    } else {\r\n        factory(\r\n            root.jQuery,\r\n            root.SceneManager,\r\n            root.DeviceUtil\r\n        );\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function ($, SceneManager, DeviceUtil) {\r\n    \"use strict\";\r\n\r\n    var J2D = function J2D(element, data) {\r\n        var j2d = this;\r\n        this.element = element;\r\n        this.data = data;\r\n\r\n        this.device = new DeviceUtil();\r\n        this.scene = new SceneManager(this);\r\n\r\n        Object.defineProperty(this, 'WebGL', {\r\n            get: function () {\r\n                return j2d.data.webGL;\r\n            },\r\n            set: function (value) {\r\n                j2d.data.webGL = !!value;\r\n                if (!!value && !j2d.data.webGL) {\r\n                    j2d.element.addClass('WebGL');\r\n                } else if (!value && j2d.data.webGL) {\r\n                    j2d.element.removeClass('WebGL');\r\n                }\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(this, 'smoothing', {\r\n            get: function () {\r\n                return j2d.data.smoothing;\r\n            },\r\n            set: function (value) {\r\n                j2d.data.smoothing = !!value;\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(this, 'io', {\r\n            get: function () {\r\n                return j2d.data.io;\r\n            },\r\n            set: function (value) {\r\n                return j2d.data.io = value\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(this, 'isPlay', {\r\n            get: function () {\r\n                return !j2d.data.pause;\r\n            },\r\n            set: function () {\r\n            }\r\n        });\r\n    };\r\n\r\n    J2D.defaults = {\r\n        id: null,\r\n        io: null,\r\n        deltaTime: 0,\r\n        pause: false,\r\n        ready: false,\r\n\r\n        frameLimit: 60,\r\n        smoothing: true,\r\n\r\n        webGL: false\r\n    };\r\n\r\n    /** +GameEngine **/\r\n    J2D.prototype.start = function () {\r\n        this.scene.start();\r\n        this.trigger('start');\r\n    };\r\n\r\n    J2D.prototype.stop = function () {\r\n        this.scene.stop();\r\n        this.trigger('stop');\r\n    };\r\n\r\n    J2D.prototype.pause = function () {\r\n        if (this.data.io) this.data.io.flush();\r\n        this.data.pause = true;\r\n        this.element.addClass('pause');\r\n        this.trigger('pause');\r\n    };\r\n\r\n    J2D.prototype.resume = function () {\r\n        this.element.removeClass('pause').focus();\r\n        this.data.pause = false;\r\n        if (this.data.io) this.data.io.flush();\r\n        this.trigger('resume');\r\n    };\r\n    /** -GameEngine **/\r\n\r\n    /** +Scene **/\r\n    J2D.prototype.getSceneManager = function () {\r\n        return this.scene;\r\n    };\r\n    /** -Scene **/\r\n\r\n    /** +Layers **/\r\n    J2D.prototype.getLayersManager = function () {\r\n        return this.scene.layersManager;\r\n    };\r\n    /** -Layers **/\r\n\r\n    J2D.prototype.getFrameManager = function () {\r\n        return this.scene.frameManager;\r\n    };\r\n\r\n    J2D.prototype.on = function () {\r\n    };\r\n    J2D.prototype.once = function () {\r\n    };\r\n    J2D.prototype.off = function () {\r\n    };\r\n    J2D.prototype.trigger = function () {\r\n    };\r\n\r\n    /** Utils **/\r\n    J2D.util = {\r\n        disableSmoothing: function (context) {\r\n            var chrome = global.navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);\r\n            var version = chrome ? parseInt(chrome[2], 10) : false;\r\n\r\n            context['imageSmoothingEnabled'] = false;\r\n            context['mozImageSmoothingEnabled'] = false;\r\n            context['oImageSmoothingEnabled'] = false;\r\n            if (version && version <= 29) {\r\n                context['webkitImageSmoothingEnabled'] = false;\r\n            }\r\n            context['msImageSmoothingEnabled'] = false;\r\n        }\r\n    };\r\n    J2D.prototype.util = J2D.util;\r\n\r\n    /* ------------------------------ Plugin ------------------------------ */\r\n\r\n    (J2D.initPlugin = function () {\r\n        if (window.j2dPlugin !== undefined) return null;\r\n        window.j2dPlugin = {pluginInit: true};\r\n\r\n        $.fn.j2d = function (options) {\r\n            this.filter('div.canvas:not([guid])').each(function () {\r\n                var options = $.extend(true, {}, J2D.defaults, options);\r\n\r\n                var guid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n                    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n                    return v.toString(16);\r\n                });\r\n                options.id = guid;\r\n\r\n                $(this).attr('guid', guid);\r\n                var id = $(this).attr('id');\r\n                if (typeof id === 'undefined' || id === false) {\r\n                    $(this).attr('id', guid);\r\n                }\r\n                var tabIndex = $(this).attr('tabindex');\r\n                if (typeof tabIndex === 'undefined' || tabIndex === false) {\r\n                    $(this).attr('tabindex', '-1');\r\n                }\r\n                $(this).data('j2d', new J2D($(this), options)).addClass('j2d');\r\n                $(this).click().focus();\r\n            });\r\n\r\n            var $array = [];\r\n            this.filter('div.canvas[guid]').each(function () {\r\n                $array.push($(this).data('j2d'));\r\n            });\r\n\r\n            return (1 === $array.length) ? $(this).data('j2d') : $array;\r\n        };\r\n\r\n        var isFullScreen = function () {\r\n            //noinspection JSUnresolvedVariable\r\n            return !!(document.webkitFullscreenElement\r\n                || document.webkitCurrentFullScreenElement\r\n                || document.mozFullScreenElement\r\n                || document.msFullscreenElement\r\n            );\r\n        };\r\n\r\n        $(document).on('fullscreenchange webkitfullscreenchange mozfullscreenchange MSFullscreenChange', function () {\r\n            var fullScreen = isFullScreen();\r\n            if (!fullScreen) {\r\n                $('div.canvas[guid].active').data('j2d').scene.resizeToFullPage(fullScreen);\r\n                $('div.canvas[guid]:not(.active)').toggle(!fullScreen);\r\n            }\r\n        });\r\n\r\n        $(document).on('click', 'div.canvas[guid].pause', function () {\r\n            $(this).data('j2d').resume();\r\n\r\n            var current = this;\r\n            $('div.canvas[guid]:not(.pause-disable):not(:focus)').each(function () {\r\n                if (current !== this) $(this).removeClass('active').data('j2d').pause();\r\n            });\r\n            $('div.canvas[guid].active.pause-disable:not(:focus)').each(function () {\r\n                if (current !== this) $(this).removeClass('active');\r\n            });\r\n        });\r\n\r\n        $(document).on('click touch mouseenter', 'div.canvas[guid]:not(.resume-by-click):not(:focus)', function () {\r\n            $(this).addClass('active').focus().data('j2d').resume();\r\n\r\n            var current = this;\r\n            $('div.canvas[guid]:not(.pause-disable):not(:focus)').each(function () {\r\n                if (current !== this) $(this).removeClass('active').data('j2d').pause();\r\n            });\r\n            $('div.canvas[guid].active.pause-disable:not(:focus)').each(function () {\r\n                if (current !== this) $(this).removeClass('active');\r\n            });\r\n        });\r\n\r\n        $(window).on('focus', function () {\r\n            $('div.canvas[guid].active').each(function () {\r\n                $(this).data('j2d').resume();\r\n            });\r\n        }).on('blur', function () {\r\n            $('div.canvas[guid]').each(function () {\r\n                $(this).data('j2d').pause();\r\n            });\r\n        });\r\n\r\n        $(window).on('resize', function () {\r\n            $('div.canvas[guid]').each(function () {\r\n                $(this).data('j2d').device.onResize();\r\n            });\r\n            var fullScreen = isFullScreen();\r\n            if (fullScreen) {\r\n                $('div.canvas[guid].active').data('j2d').scene.resizeToFullPage(fullScreen);\r\n            }\r\n        });\r\n    })();\r\n\r\n    if (global.J2D === undefined) global.J2D = J2D;\r\n\r\n    return J2D;\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/FrameManager', ['utils/ArrayMap'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('utils/ArrayMap'));\r\n    } else {\r\n        factory(root.ArrayMap);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global,\r\n    /**\r\n     * @param {Function} ArrayMap\r\n     * @returns {FrameManager}\r\n     */\r\n    function (ArrayMap) {\r\n        \"use strict\";\r\n\r\n        var instance;\r\n        var engineStack = new ArrayMap(), dataStack = new ArrayMap();\r\n        var timestamp = 0;\r\n\r\n        var options = {\r\n            frameLimit: 60,\r\n            frameRun: false,\r\n            breakAnimationFrame: false\r\n        };\r\n\r\n        var requestAnimationFrame = (function () {\r\n            return global.requestAnimationFrame ||\r\n                global.webkitRequestAnimationFrame ||\r\n                global.mozRequestAnimationFrame ||\r\n                global.oRequestAnimationFrame ||\r\n                global.msRequestAnimationFrame ||\r\n                (function (callback) {\r\n                    if (!options.breakAnimationFrame) {\r\n                        if (timestamp >= Number.MAX_SAFE_INTEGER - 1) timestamp = 0;\r\n                        if (timestamp === 0) timestamp = Date.now();\r\n\r\n                        global.setTimeout(callback.bind(this, Date.now() - timestamp), 1000.0 / options.frameLimit);\r\n                    } else {\r\n                        options.breakAnimationFrame = false\r\n                    }\r\n                });\r\n        })();\r\n\r\n        var cancelAnimationFrame = (function () {\r\n            timestamp = 0;\r\n            return global.cancelAnimationFrame ||\r\n                global.webkitCancelAnimationFrame ||\r\n                global.mozCancelAnimationFrame ||\r\n                global.oCancelAnimationFrame ||\r\n                global.msCancelAnimationFrame;\r\n        })();\r\n\r\n\r\n        var FrameManager = function () {\r\n        };\r\n\r\n        FrameManager.prototype.start = function (name, engine, params) {\r\n            var data = {\r\n                j2d: null,\r\n                frameLimit: options.frameLimit,\r\n                now: 0,\r\n                deltaTime: 0,\r\n                lastTime: 0,\r\n                sceneStartTime: 0,\r\n                sceneSkipTime: 0,\r\n\r\n                asyncUpdate: true,\r\n                asyncRender: true\r\n            };\r\n\r\n            if (params.frameLimit !== undefined && params.frameLimit <= options.frameLimit) data.frameLimit = params.frameLimit;\r\n\r\n            if (params.j2d !== undefined) {\r\n                data.j2d = params.j2d;\r\n            } else {\r\n                throw 'j2d not transported to FrameManager.start(id, engine, {... j2d: j2d ...});';\r\n            }\r\n\r\n            data.interval = 1000.0 / data.frameLimit;\r\n            data.lastTime = Date.now();\r\n\r\n            engineStack.add(name, engine);\r\n            dataStack.add(name, data);\r\n            if (!options.frameRun) this.pulse();\r\n\r\n            return this;\r\n        };\r\n\r\n        FrameManager.prototype.stop = function (name) {\r\n            engineStack.remove(name);\r\n            dataStack.remove(name);\r\n            return this;\r\n        };\r\n\r\n        FrameManager.prototype.pulse = function () {\r\n            this.runMainLoop(Date.now());\r\n            return this;\r\n        };\r\n\r\n        FrameManager.prototype.runMainLoop = function (timestamp, frameManager) {\r\n            if (frameManager === undefined) frameManager = this;\r\n\r\n            if (engineStack.length <= 0 && options.frameRun) {\r\n                options.breakAnimationFrame = true;\r\n                options.frameRun = false;\r\n                return cancelAnimationFrame(this.runMainLoop);\r\n            }\r\n            options.frameRun = true;\r\n\r\n            requestAnimationFrame(function (timestamp) {\r\n                frameManager.runMainLoop(timestamp, frameManager);\r\n            });\r\n\r\n            engineStack.each(function (index) {\r\n                if (engineStack.hasOwnProperty(index) && 'object' === typeof engineStack[index]) {\r\n                    var engine = engineStack[index];\r\n                    var data = dataStack[index];\r\n\r\n                    data.now = Date.now();\r\n                    data.deltaTime = (data.now - data.lastTime) / 100.0;\r\n\r\n                    if (data.j2d.data.io && !data.j2d.data.pause) data.j2d.data.io.update();\r\n\r\n                    if (!data.j2d.data.pause) {\r\n                        if (engine.update !== undefined && 'function' === typeof engine.update) {\r\n                            if (data.asyncUpdate) {\r\n                                setTimeout(engine.update.bind(this, timestamp, data), 0);\r\n                            } else {\r\n                                engine.update(timestamp, data);\r\n                            }\r\n                        }\r\n\r\n                        if ((data.deltaTime * 100.0) > data.interval) {\r\n                            data.lastTime = data.now - ((data.deltaTime * 100.0) % data.interval);\r\n\r\n                            if (engine.render !== undefined && 'function' === typeof engine.render) {\r\n                                if (data.asyncRender) {\r\n                                    setTimeout(engine.render.bind(this, timestamp, data), 0);\r\n                                } else {\r\n                                    engine.render(timestamp, data);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    if (data.j2d.data.io && !data.j2d.data.pause) data.j2d.data.io.clear();\r\n                }\r\n            });\r\n        };\r\n\r\n        FrameManager.prototype.setDefaultFrameLimit = function (frameLimit) {\r\n            if (frameLimit <= 60 && frameLimit > 0) {\r\n                options.frameLimit = frameLimit\r\n            }\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * @singleton\r\n         * @returns {FrameManager}\r\n         */\r\n        FrameManager.Init = function () {\r\n            if (global.J2D !== undefined) {\r\n                return global.instanceFrameManager || (global.instanceFrameManager = new FrameManager());\r\n            } else {\r\n                return instance || (instance = new FrameManager());\r\n            }\r\n        };\r\n\r\n        if (global.J2D === undefined) global.FrameManager = FrameManager;\r\n\r\n        return FrameManager;\r\n    }\r\n));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/LayersManager', ['utils/ArrayMap', 'nodes/BaseNode', 'nodes/CollectionNode'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('utils/ArrayMap', require('nodes/BaseNode'), require('nodes/CollectionNode')));\r\n    } else {\r\n        factory(root.ArrayMap, root.BaseNode, root.CollectionNode);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (ArrayMap, BaseNode, CollectionNode) {\r\n    \"use strict\";\r\n\r\n    var LayersManager = function () {\r\n        this.globalCollection = new ArrayMap();\r\n\r\n        this.layers = [];\r\n        this.index = 1000;\r\n    };\r\n\r\n    /**\r\n     * @param {string} name\r\n     * @param {number} [zIndex]\r\n     * @param {CollectionNode|undefined} [node]\r\n     * @returns {LayersManager}\r\n     */\r\n    LayersManager.prototype.addLayer = function (name, zIndex, node) {\r\n        name = name || 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n                var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n                return v.toString(16);\r\n            });\r\n\r\n        if (node === undefined || node instanceof CollectionNode) {\r\n            if (zIndex === undefined) {\r\n                zIndex = this.index;\r\n                this.index++;\r\n            } else {\r\n                zIndex += 1000;\r\n            }\r\n\r\n            node = node || new CollectionNode({id: name, zIndex: zIndex});\r\n\r\n            this.globalCollection.add(name, node);\r\n            this.layers[zIndex] = node;\r\n\r\n            return this;\r\n        }\r\n        // throw new InvalidArgumentException('Unknown node type to add as layers');\r\n    };\r\n\r\n    /**\r\n     * @param {string} name\r\n     * @returns {LayersManager}\r\n     */\r\n    LayersManager.prototype.removeLayer = function (name) {\r\n        delete this.layers[this.globalCollection[name].zIndex];\r\n        this.globalCollection.remove(name);\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @param {string} name\r\n     * @returns {CollectionNode|null}\r\n     */\r\n    LayersManager.prototype.getLayer = function (name) {\r\n        if (this.globalCollection[name] !== undefined) {\r\n            return this.globalCollection[name];\r\n        }\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * @param {string} name\r\n     * @param {number} zIndex\r\n     * @returns {LayersManager}\r\n     */\r\n    LayersManager.prototype.setZIndex = function (name, zIndex) {\r\n        if (this.globalCollection[name] !== undefined) {\r\n            delete this.layers[this.globalCollection[name].zIndex];\r\n            this.globalCollection[name].zIndex = zIndex;\r\n            this.layers[this.globalCollection[name].zIndex] = zIndex;\r\n        }\r\n        return this;\r\n    };\r\n\r\n    if (global.J2D !== undefined) global.LayersManager = LayersManager;\r\n    return LayersManager;\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n/*\r\n * TODO:: GameStateManager to Scene\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/SceneManager', [\r\n            'jquery',\r\n            'core/WebGL2D',\r\n            'core/FrameManager',\r\n            'core/LayersManager'\r\n        ], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(\r\n            require('jquery'),\r\n            require('core/WebGL2D'),\r\n            require('core/FrameManager'),\r\n            require('core/LayersManager')\r\n        );\r\n    } else {\r\n        factory(\r\n            root.jQuery,\r\n            root.WebGL2D,\r\n            root.FrameManager,\r\n            root.LayersManager\r\n        );\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function ($, WebGL2D, FrameManager, LayersManager) {\r\n    \"use strict\";\r\n\r\n    var SceneManager = function (j2d) {\r\n        var sceneManager = this;\r\n        this.j2d = j2d;\r\n\r\n        this.canvas = null;\r\n        this.context = null;\r\n\r\n        /** @type {FrameManager} */\r\n        this.frameManager = FrameManager.Init();\r\n        this.layersManager = new LayersManager();\r\n\r\n        this.initLayers();\r\n\r\n        Object.defineProperty(this, 'backgroundColor', {\r\n            get: function () {\r\n                return sceneManager.data.backgroundColor;\r\n            },\r\n            set: function (value) {\r\n                sceneManager.data.backgroundColor = value;\r\n                sceneManager.context.fillStyle = value;\r\n                sceneManager.context.fillRect(0, 0, sceneManager.data.width, sceneManager.data.height);\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(this, 'opacity', {\r\n            get: function () {\r\n                return sceneManager.data.opacity;\r\n            },\r\n            set: function (value) {\r\n                sceneManager.data.opacity = value;\r\n                sceneManager.canvas.style.opacity = value;\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(this, 'visible', {\r\n            get: function () {\r\n                return sceneManager.data.visible;\r\n            },\r\n            set: function (value) {\r\n                sceneManager.data.visible = !!value;\r\n                sceneManager.canvas.style.display = (!!value) ? 'block' : 'none';\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(this, 'zIndex', {\r\n            get: function () {\r\n                return 1000 - sceneManager.data.zIndex;\r\n            },\r\n            set: function (value) {\r\n                sceneManager.data.zIndex = 1000 + value;\r\n                sceneManager.canvas.style.zIndex = 1000 + value;\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(this, 'viewport', {\r\n            get: function () {\r\n                return sceneManager.data.viewport;\r\n            },\r\n            set: function () {\r\n            }\r\n        });\r\n    };\r\n\r\n    SceneManager.defaults = {\r\n        width: 0,\r\n        height: 0,\r\n\r\n        originalWidth: 0,\r\n        originalHeight: 0,\r\n        originalMargin: 0,\r\n\r\n        visible: true,\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        zIndex: 1000,\r\n        opacity: 1.0,\r\n        backgroundColor: false,\r\n\r\n        frameLimit: 60,\r\n\r\n        enableFullScreen: false,\r\n\r\n        viewport: {x: 0, y: 0},\r\n\r\n        gameState: function () {\r\n            this.id = 'DefaultGameState';\r\n        }\r\n    };\r\n\r\n    SceneManager.prototype.fixGameStateRender = function () {\r\n        var sceneManager = this;\r\n        if (typeof this.data.gameState === 'function' && this.data.gameState.prototype.render === undefined) {\r\n            this.data.gameState.prototype.render = function (timestamp, data) {\r\n                sceneManager.clear().fillBackground().render(data);\r\n            };\r\n        }\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.init = function (options) {\r\n        this.data = $.extend(true, {}, SceneManager.defaults, options);\r\n\r\n        this.j2d.trigger('beforeInit');\r\n\r\n        this.data.originalWidth = this.data.width;\r\n        this.data.originalHeight = this.data.height;\r\n        this.data.originalMargin = this.j2d.element.css('margin');\r\n\r\n        this.j2d.element.width(this.data.width).height(this.data.height);\r\n\r\n        this.initCanvas();\r\n\r\n        this.j2d.trigger('afterInit');\r\n\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.initLayers = function () {\r\n        if (!this.layersManager.getLayer('scene')) {\r\n            this.layersManager.addLayer('scene', 0);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.initCanvas = function () {\r\n        if ($(this.j2d.element.selector + ' canvas').length === 0) {\r\n            this.canvas = document.createElement('canvas');\r\n\r\n            this.canvas.width = this.data.width;\r\n            this.canvas.height = this.data.height;\r\n            this.canvas.style.zIndex = this.data.zIndex;\r\n            this.canvas.style.position = this.data.position;\r\n\r\n            this.canvas.style.left = this.data.left;\r\n            this.canvas.style.top = this.data.top;\r\n\r\n            if (this.j2d.data.webGL) {\r\n                WebGL2D.enable(this.canvas);\r\n                this.context = this.canvas.getContext('WebGL-2d');\r\n            } else {\r\n                this.context = this.canvas.getContext('2d');\r\n            }\r\n\r\n            if (!this.j2d.data.smoothing) {\r\n                this.j2d.util.disableSmoothing(this.context);\r\n            }\r\n\r\n            this.context.shadowColor = 'rgba(0,0,0,0)';\r\n            if (this.data.backgroundColor) this.backgroundColor = this.data.backgroundColor;\r\n            if (this.data.opacity) this.opacity = this.data.opacity;\r\n            if (this.data.visible) this.visible = this.data.visible;\r\n            if (this.data.zIndex) this.zIndex = 1000 - this.data.zIndex;\r\n\r\n            this.j2d.element.append(this.canvas);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.clear = function (pos, size) {\r\n        if (pos !== undefined && size !== undefined) {\r\n            this.context.clearRect(pos.x - this.viewport.x, pos.y - this.viewport.y, size.x, size.y);\r\n        } else {\r\n            this.context.clearRect(0, 0, this.data.width, this.data.height);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.resize = function (width, height) {\r\n        this.canvas.width = this.data.width = width;\r\n        this.canvas.height = this.data.height = height;\r\n\r\n        if (this.data.backgroundColor) {\r\n            this.context.save();\r\n\r\n            this.clear();\r\n            this.backgroundColor = this.data.backgroundColor;\r\n\r\n            this.context.restore();\r\n        }\r\n        if (!this.j2d.data.smoothing) {\r\n            this.j2d.util.disableSmoothing(this.context);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.setGameState = function (gameState) {\r\n        this.data.gameState = gameState || function () {\r\n                console.warn('Error in game state function!');\r\n            };\r\n        this.frameManager.stop(this.j2d.data.id);\r\n\r\n        this.fixGameStateRender();\r\n        this.frameManager.start(this.j2d.data.id, new this.data.gameState(), {\r\n            j2d: this.j2d,\r\n            frameLimit: this.data.frameLimit\r\n        });\r\n\r\n        this.j2d.trigger('changedGameState');\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.async = function (callback, data) {\r\n        setTimeout(callback.call(callback, data), 0);\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.start = function () {\r\n        if (this.j2d.data.io) {\r\n            this.j2d.data.io.init();\r\n        }\r\n        this.j2d.trigger('beforeStart');\r\n\r\n        this.frameManager.stop(this.j2d.data.id);\r\n\r\n        this.fixGameStateRender();\r\n        this.frameManager.start(this.j2d.data.id, new this.data.gameState(), {\r\n            j2d: this.j2d,\r\n            frameLimit: this.data.frameLimit\r\n        });\r\n\r\n        this.j2d.trigger('afterStart');\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.stop = function () {\r\n        this.frameManager.stop(this.j2d.data.id);\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.fullScreen = function (fullscreen) {\r\n        var element = document.getElementById(this.j2d.element.attr('id'));\r\n\r\n        if (undefined === element.requestFullscreen) {\r\n            //noinspection JSUnresolvedVariable\r\n            element.requestFullscreen = element.webkitRequestFullscreen\r\n                || element.webkitRequestFullScreen\r\n                || element.mozRequestFullScreen\r\n                || element.msRequestFullscreen;\r\n        }\r\n\r\n        if (undefined === document.exitFullscreen) {\r\n            //noinspection JSUnresolvedVariable\r\n            document.exitFullscreen = document.webkitExitFullscreen\r\n                || document.webkitCancelFullScreen\r\n                || document.mozCancelFullScreen\r\n                || document.msExitFullscreen;\r\n        }\r\n        if (fullscreen) {\r\n            element.requestFullscreen();\r\n        } else {\r\n            document.exitFullscreen();\r\n        }\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.resizeToFullPage = function (fullscreen) {\r\n        $('div.canvas[guid]:not(.active)').toggle(fullscreen);\r\n\r\n        var j2d = this.j2d;\r\n        var sceneManager = this;\r\n\r\n        if (fullscreen) {\r\n            sceneManager.data.originalWidth = sceneManager.data.width;\r\n            sceneManager.data.originalHeight = sceneManager.data.height;\r\n\r\n            sceneManager.resize(j2d.device.width, j2d.device.height);\r\n            sceneManager.data.enableFullscreen = true;\r\n\r\n            j2d.element\r\n                .width(j2d.device.width)\r\n                .height(j2d.device.height)\r\n                .css('margin', 0);\r\n        } else {\r\n            sceneManager.resize(sceneManager.data.originalWidth, sceneManager.data.originalHeight);\r\n            sceneManager.data.enableFullscreen = false;\r\n\r\n            j2d.element\r\n                .width(sceneManager.data.originalWidth)\r\n                .height(sceneManager.data.originalHeight)\r\n                .css('margin', sceneManager.data.originalMargin);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.toggleFullScreen = function (j2d, data) {\r\n        if (data === undefined) {\r\n            data = {fullscreen: null};\r\n        }\r\n        if (!j2d.scene.enableFullscreen || data.fullscreen) {\r\n            j2d.scene.fullScreen(true);\r\n        } else {\r\n            j2d.scene.fullScreen(false);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.getSceneLayer = function () {\r\n        return this.layersManager.getLayer('scene');\r\n    };\r\n\r\n    SceneManager.prototype.fillBackground = function () {\r\n        if (this.data.backgroundColor) {\r\n            this.backgroundColor = this.data.backgroundColor;\r\n        }\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.render = function (data) {\r\n        var sceneManager = this;\r\n        sceneManager.layersManager.layers.forEach(function (value, index) {\r\n            sceneManager.layersManager.layers[index].render(\r\n                sceneManager.context,\r\n                sceneManager.data.viewport,\r\n                sceneManager.layersManager.globalCollection,\r\n                data || {}\r\n            );\r\n        });\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.add = function (node, key) {\r\n        if (this.layersManager.globalCollection['scene'] !== undefined) {\r\n            this.layersManager.globalCollection['scene'].add(node, key);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.remove = function (node, key) {\r\n        if (this.layersManager.globalCollection['scene'] !== undefined) {\r\n            this.layersManager.globalCollection['scene'].remove(node, key);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    if (global.J2D !== undefined) global.SceneManager = SceneManager;\r\n    return SceneManager;\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/ViewportManager', ['utils/ArrayMap', 'nodes/CameraNode', 'utils/Vector2d'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('utils/ArrayMap'), require('nodes/CameraNode'), require('utils/Vector2d'));\r\n    } else {\r\n        factory(root.ArrayMap, root.CameraNode, root.Vector2d);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (ArrayMap, CameraNode, Vector2d) {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * @param {{x: number, y: number}} screen\r\n     * @param {{offset: {x: number, y: number}, size: {x: number, y: number}, scale: number, angle: number}} viewport\r\n     * @returns {{offset: {x: number, y: number}, size: {x: number, y: number}, scale: number, angle: number}}\r\n     */\r\n    var calculateScale = function (screen, viewport) {\r\n        var data = {\r\n            offset: {x: viewport.offset.x, y: viewport.offset.y},\r\n            size: {x: 0, y: 0},\r\n            scale: 1.0,\r\n            angle: viewport.angle\r\n        };\r\n\r\n        data.size.x = (screen.x < viewport.size.x) ? screen.x : viewport.size.x;\r\n        data.size.y = (screen.y < viewport.size.y) ? screen.y : viewport.size.y;\r\n\r\n        // TODO:: check with test & fix this in future\r\n        data.scale = ((screen.x / viewport.size.x) + (screen.y / viewport.size.y)) / 2;\r\n        return data;\r\n    };\r\n\r\n    /**\r\n     * @constructor\r\n     */\r\n    var ViewportManager = function () {\r\n        this.cameras = new ArrayMap();\r\n\r\n        this.camera = 'No active cameras';\r\n\r\n        this.screen = {x: 0, y: 0};\r\n\r\n        this.data = {\r\n            offset: {x: 0.0, y: 0.0},\r\n            size: {x: 0.0, y: 0.0},\r\n            scale: 1.0,\r\n            angle: 0.0\r\n        };\r\n    };\r\n\r\n    /**\r\n     * @param {{x: number|undefined, y: number|undefined}|Array<number>} data\r\n     * @returns {ViewportManager}\r\n     */\r\n    ViewportManager.prototype.setScreen = function (data) {\r\n        if (typeof data == 'object') {\r\n            if (data instanceof Array && data.length == 2) {\r\n                this.screen = {x: data[0], y: data[1]};\r\n                return this;\r\n            }\r\n            if (data.x !== undefined && data.y !== undefined) {\r\n                this.screen = {x: data.x, y: data.y};\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @param {string} key\r\n     * @param {CameraNode} node\r\n     * @returns {ViewportManager}\r\n     */\r\n    ViewportManager.prototype.addCamera = function (key, node) {\r\n        if (node instanceof CameraNode) {\r\n            this.cameras.add(key, node);\r\n            return this;\r\n        }\r\n        // throw new InvalidArgumentException('Unknown camera node type');\r\n    };\r\n\r\n    /**\r\n     * @param {string} key\r\n     * @returns {ViewportManager}\r\n     */\r\n    ViewportManager.prototype.removeCamera = function (key) {\r\n        this.cameras.remove(key);\r\n        if (this.camera == key) {\r\n            this.camera = 'No active cameras';\r\n            this.data = {\r\n                offset: {x: 0.0, y: 0.0},\r\n                size: {x: 0.0, y: 0.0},\r\n                scale: 1.0,\r\n                angle: 0.0\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @param {string} key\r\n     * @returns {ViewportManager}\r\n     */\r\n    ViewportManager.prototype.updateViewport = function (key) {\r\n        if (this.cameras[key] !== undefined && this.cameras[key] instanceof CameraNode) {\r\n            this.data = this.cameras[key].getCameraViewport(this.screen, calculateScale);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @deprecated Please use CameraNode\r\n     *\r\n     * @param {Vector2d} offset\r\n     * @param {Vector2d} size\r\n     * @returns {ViewportManager}\r\n     */\r\n    ViewportManager.prototype.setViewport = function (offset, size) {\r\n        if (offset !== undefined && typeof offset == 'object') {\r\n            if (offset instanceof Vector2d) {\r\n                this.data.offset = offset.getVector();\r\n            }\r\n        }\r\n\r\n        if (size !== undefined && typeof size == 'object') {\r\n            if (size instanceof Vector2d) {\r\n                this.data.offset = size.getVector();\r\n            }\r\n        }\r\n\r\n        this.data.scale = calculateScale(this.screen, this.data);\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @returns {{offset: {x: number, y: number}, size: {x: number, y: number}, scale: number, angle: number}}\r\n     */\r\n    ViewportManager.prototype.getViewport = function () {\r\n        return this.data;\r\n    };\r\n\r\n    if (global.J2D !== undefined) global.ViewportManager = ViewportManager;\r\n    return ViewportManager;\r\n}));\r\n","/**\r\n *  WebGL-2D.js - HTML5 Canvas2D API in a WebGL context\r\n *\r\n *  Created by Corban Brook <corbanbrook@gmail.com> on 2011-03-02.\r\n *  Amended to by Bobby Richter <secretrobotron@gmail.com> on 2011-03-03\r\n *  CubicVR.js by Charles Cliffe <cj@cubicproductions.com> on 2011-03-03\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/WebGL2D', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    // Vector & Matrix libraries from CubicVR.js\r\n    var M_PI = 3.1415926535897932384626433832795028841968;\r\n    var M_TWO_PI = 2.0 * M_PI;\r\n    var M_HALF_PI = M_PI / 2.0;\r\n\r\n    function isPOT(value) {\r\n        return value > 0 && ((value - 1) & value) === 0;\r\n    }\r\n\r\n    var vec3 = {\r\n        length: function (pt) {\r\n            return Math.sqrt(pt[0] * pt[0] + pt[1] * pt[1] + pt[2] * pt[2]);\r\n        },\r\n\r\n        normalize: function (pt) {\r\n            var d = Math.sqrt((pt[0] * pt[0]) + (pt[1] * pt[1]) + (pt[2] * pt[2]));\r\n            if (d === 0) {\r\n                return [0, 0, 0];\r\n            }\r\n            return [pt[0] / d, pt[1] / d, pt[2] / d];\r\n        },\r\n\r\n        dot: function (v1, v2) {\r\n            return v1[0] * v2[0] + v1[1] * v2[1] + v1[2] * v2[2];\r\n        },\r\n\r\n        angle: function (v1, v2) {\r\n            return Math.acos((v1[0] * v2[0] + v1[1] * v2[1] + v1[2] * v2[2]) / (Math.sqrt(v1[0] * v1[0] + v1[1] * v1[1] + v1[2] * v1[2]) * Math.sqrt(v2[0] * v2[0] + v2[1] * v2[1] + v2[2] * v2[2])));\r\n        },\r\n\r\n        cross: function (vectA, vectB) {\r\n            return [vectA[1] * vectB[2] - vectB[1] * vectA[2], vectA[2] * vectB[0] - vectB[2] * vectA[0], vectA[0] * vectB[1] - vectB[0] * vectA[1]];\r\n        },\r\n\r\n        multiply: function (vectA, constB) {\r\n            return [vectA[0] * constB, vectA[1] * constB, vectA[2] * constB];\r\n        },\r\n\r\n        add: function (vectA, vectB) {\r\n            return [vectA[0] + vectB[0], vectA[1] + vectB[1], vectA[2] + vectB[2]];\r\n        },\r\n\r\n        subtract: function (vectA, vectB) {\r\n            return [vectA[0] - vectB[0], vectA[1] - vectB[1], vectA[2] - vectB[2]];\r\n        },\r\n\r\n        equal: function (a, b) {\r\n            var epsilon = 0.0000001;\r\n            if ((a === undefined) && (b === undefined)) {\r\n                return true;\r\n            }\r\n            if ((a === undefined) || (b === undefined)) {\r\n                return false;\r\n            }\r\n            return (Math.abs(a[0] - b[0]) < epsilon && Math.abs(a[1] - b[1]) < epsilon && Math.abs(a[2] - b[2]) < epsilon);\r\n        }\r\n    };\r\n\r\n    var mat3 = {\r\n        identity: [1.0, 0.0, 0.0,\r\n            0.0, 1.0, 0.0,\r\n            0.0, 0.0, 1.0],\r\n\r\n        multiply: function (m1, m2) {\r\n            var m10 = m1[0], m11 = m1[1], m12 = m1[2], m13 = m1[3], m14 = m1[4], m15 = m1[5], m16 = m1[6], m17 = m1[7], m18 = m1[8],\r\n                m20 = m2[0], m21 = m2[1], m22 = m2[2], m23 = m2[3], m24 = m2[4], m25 = m2[5], m26 = m2[6], m27 = m2[7], m28 = m2[8];\r\n\r\n            m2[0] = m20 * m10 + m23 * m11 + m26 * m12;\r\n            m2[1] = m21 * m10 + m24 * m11 + m27 * m12;\r\n            m2[2] = m22 * m10 + m25 * m11 + m28 * m12;\r\n            m2[3] = m20 * m13 + m23 * m14 + m26 * m15;\r\n            m2[4] = m21 * m13 + m24 * m14 + m27 * m15;\r\n            m2[5] = m22 * m13 + m25 * m14 + m28 * m15;\r\n            m2[6] = m20 * m16 + m23 * m17 + m26 * m18;\r\n            m2[7] = m21 * m16 + m24 * m17 + m27 * m18;\r\n            m2[8] = m22 * m16 + m25 * m17 + m28 * m18;\r\n        },\r\n\r\n        vec2_multiply: function (m1, m2) {\r\n            var mOut = [];\r\n            mOut[0] = m2[0] * m1[0] + m2[3] * m1[1] + m2[6];\r\n            mOut[1] = m2[1] * m1[0] + m2[4] * m1[1] + m2[7];\r\n            return mOut;\r\n        },\r\n\r\n        transpose: function (m) {\r\n            return [m[0], m[3], m[6], m[1], m[4], m[7], m[2], m[5], m[8]];\r\n        }\r\n    }; //mat3\r\n\r\n    // Transform library from CubicVR.js\r\n    function Transform(mat) {\r\n        return this.clearStack(mat);\r\n    }\r\n\r\n    var STACK_DEPTH_LIMIT = 16;\r\n\r\n    Transform.prototype.clearStack = function (init_mat) {\r\n        this.m_stack = [];\r\n        this.m_cache = [];\r\n        this.c_stack = 0;\r\n        this.valid = 0;\r\n        this.result = null;\r\n\r\n        for (var i = 0; i < STACK_DEPTH_LIMIT; i++) {\r\n            this.m_stack[i] = this.getIdentity();\r\n        }\r\n\r\n        if (init_mat !== undefined) {\r\n            this.m_stack[0] = init_mat;\r\n        } else {\r\n            this.setIdentity();\r\n        }\r\n    }; //clearStack\r\n\r\n    Transform.prototype.setIdentity = function () {\r\n        this.m_stack[this.c_stack] = this.getIdentity();\r\n        if (this.valid === this.c_stack && this.c_stack) {\r\n            this.valid--;\r\n        }\r\n    };\r\n\r\n    Transform.prototype.getIdentity = function () {\r\n        return [1.0, 0.0, 0.0,\r\n            0.0, 1.0, 0.0,\r\n            0.0, 0.0, 1.0];\r\n    };\r\n\r\n    Transform.prototype.getResult = function () {\r\n        if (!this.c_stack) {\r\n            return this.m_stack[0];\r\n        }\r\n\r\n        var m = mat3.identity;\r\n\r\n        if (this.valid > this.c_stack - 1) {\r\n            this.valid = this.c_stack - 1;\r\n        }\r\n\r\n        for (var i = this.valid; i < this.c_stack + 1; i++) {\r\n            m = mat3.multiply(this.m_stack[i], m);\r\n            this.m_cache[i] = m;\r\n        }\r\n\r\n        this.valid = this.c_stack - 1;\r\n\r\n        this.result = this.m_cache[this.c_stack];\r\n\r\n        return this.result;\r\n    };\r\n\r\n    Transform.prototype.pushMatrix = function () {\r\n        this.c_stack++;\r\n        this.m_stack[this.c_stack] = this.getIdentity();\r\n    };\r\n\r\n    Transform.prototype.popMatrix = function () {\r\n        if (this.c_stack === 0) {\r\n            return;\r\n        }\r\n        this.c_stack--;\r\n    };\r\n\r\n    var translateMatrix = Transform.prototype.getIdentity();\r\n\r\n    Transform.prototype.translate = function (x, y) {\r\n        translateMatrix[6] = x;\r\n        translateMatrix[7] = y;\r\n\r\n        mat3.multiply(translateMatrix, this.m_stack[this.c_stack]);\r\n\r\n        /*\r\n         if (this.valid === this.c_stack && this.c_stack) {\r\n         this.valid--;\r\n         }\r\n         */\r\n    };\r\n\r\n    var trMatrix = Transform.prototype.getIdentity();\r\n\r\n    Transform.prototype.tr = function (a, b, c, d, e, f) {\r\n        trMatrix[0] = a;\r\n        trMatrix[1] = b;\r\n        trMatrix[3] = c;\r\n        trMatrix[4] = d;\r\n        trMatrix[6] = e;\r\n        trMatrix[7] = f;\r\n\r\n        mat3.multiply(trMatrix, this.m_stack[this.c_stack]);\r\n    };\r\n\r\n    var scaleMatrix = Transform.prototype.getIdentity();\r\n\r\n    Transform.prototype.scale = function (x, y) {\r\n        scaleMatrix[0] = x;\r\n        scaleMatrix[4] = y;\r\n\r\n        mat3.multiply(scaleMatrix, this.m_stack[this.c_stack]);\r\n\r\n        /*\r\n         if (this.valid === this.c_stack && this.c_stack) {\r\n         this.valid--;\r\n         }\r\n         */\r\n    };\r\n\r\n    var rotateMatrix = Transform.prototype.getIdentity();\r\n\r\n    Transform.prototype.rotate = function (ang) {\r\n        var sAng, cAng;\r\n\r\n        sAng = Math.sin(-ang);\r\n        cAng = Math.cos(-ang);\r\n\r\n        rotateMatrix[0] = cAng;\r\n        rotateMatrix[3] = sAng;\r\n        rotateMatrix[1] = -sAng;\r\n        rotateMatrix[4] = cAng;\r\n\r\n        mat3.multiply(rotateMatrix, this.m_stack[this.c_stack]);\r\n\r\n        /*\r\n         if (this.valid === this.c_stack && this.c_stack) {\r\n         this.valid--;\r\n         }\r\n         */\r\n    };\r\n\r\n    var WebGL2D = global.WebGL2D = function WebGL2D(canvas, options) {\r\n        this.canvas = canvas;\r\n        this.options = options || {};\r\n        this.gl = undefined;\r\n        this.fs = undefined;\r\n        this.vs = undefined;\r\n        this.shaderProgram = undefined;\r\n        this.transform = new Transform();\r\n        this.shaderPool = [];\r\n        this.maxTextureSize = undefined;\r\n\r\n        // Save a reference to the WebGL2D instance on the canvas object\r\n        canvas.gl2d = this;\r\n\r\n        // Store getContext function for later use\r\n        canvas.$getContext = canvas.getContext;\r\n\r\n        // Override getContext function with \"webgl-2d\" enabled version\r\n        canvas.getContext = (function (gl2d) {\r\n            return function (context) {\r\n                if ((gl2d.options.force || context === \"WebGL-2d\") && !(canvas.width === 0 || canvas.height === 0)) {\r\n                    if (gl2d.gl) {\r\n                        return gl2d.gl;\r\n                    }\r\n\r\n                    var gl = gl2d.gl = gl2d.canvas.$getContext(\"experimental-webgl\");\r\n\r\n                    // If we failed to get a WebGL context, return a normal 2D context instead.\r\n                    if ((typeof (gl) === \"undefined\") || (gl === null)) {\r\n                        return gl2d.canvas.$getContext(\"2d\");\r\n                    }\r\n\r\n                    gl2d.initShaders();\r\n                    gl2d.initBuffers();\r\n\r\n                    // Append Canvas2D API features to the WebGL context\r\n                    gl2d.initCanvas2DAPI();\r\n\r\n                    // Disables writing to dest-alpha\r\n                    // gl.colorMask(1,1,1,0)\r\n\r\n                    // Depth options\r\n                    //gl.enable(gl.DEPTH_TEST);\r\n                    //gl.depthFunc(gl.LEQUAL);\r\n\r\n                    // Blending options\r\n                    // See http://stackoverflow.com/questions/11521035/blending-with-html-background-in-webgl\r\n                    gl.enable(gl.BLEND);\r\n                    gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n\r\n                    gl2d.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\r\n\r\n                    return gl;\r\n                } else {\r\n                    return gl2d.canvas.$getContext(context);\r\n                }\r\n            };\r\n        }(this));\r\n\r\n        this.postInit();\r\n    };\r\n\r\n    // Enables WebGL2D on your canvas\r\n    WebGL2D.enable = function (canvas, options) {\r\n        return canvas.gl2d || new WebGL2D(canvas, options);\r\n    };\r\n\r\n\r\n    // Shader Pool BitMasks, i.e. sMask = (shaderMask.texture+shaderMask.stroke)\r\n    var shaderMask = {\r\n        texture: 1,\r\n        crop: 2,\r\n        path: 4\r\n    };\r\n\r\n\r\n    // Fragment shader source\r\n    WebGL2D.prototype.getFragmentShaderSource = function getFragmentShaderSource(sMask) {\r\n        var fsSource = [\r\n            \"#ifdef GL_ES\",\r\n            \"precision highp float;\",\r\n            \"#endif\",\r\n\r\n            \"#define hasTexture \" + ((sMask & shaderMask.texture) ? \"1\" : \"0\"),\r\n            \"#define hasCrop \" + ((sMask & shaderMask.crop) ? \"1\" : \"0\"),\r\n\r\n            \"varying vec4 vColor;\",\r\n\r\n            \"#if hasTexture\",\r\n            \"varying vec2 vTextureCoord;\",\r\n            \"uniform sampler2D uSampler;\",\r\n            \"#if hasCrop\",\r\n            \"uniform vec4 uCropSource;\",\r\n            \"#endif\",\r\n            \"#endif\",\r\n\r\n            \"void main(void) {\",\r\n            \"#if hasTexture\",\r\n            \"#if hasCrop\",\r\n            \"gl_FragColor = texture2D(uSampler, vec2(vTextureCoord.x * uCropSource.z, vTextureCoord.y * uCropSource.w) + uCropSource.xy);\",\r\n            \"#else\",\r\n            \"gl_FragColor = texture2D(uSampler, vTextureCoord);\",\r\n            \"#endif\",\r\n            \"#else\",\r\n            \"gl_FragColor = vColor;\",\r\n            \"#endif\",\r\n            \"}\"\r\n        ].join(\"\\n\");\r\n\r\n        return fsSource;\r\n    };\r\n\r\n    WebGL2D.prototype.getVertexShaderSource = function getVertexShaderSource(stackDepth, sMask) {\r\n        stackDepth = stackDepth || 1;\r\n\r\n        var vsSource = [\r\n            \"#define hasTexture \" + ((sMask & shaderMask.texture) ? \"1\" : \"0\"),\r\n            \"attribute vec4 aVertexPosition;\",\r\n\r\n            \"#if hasTexture\",\r\n            \"varying vec2 vTextureCoord;\",\r\n            \"#endif\",\r\n\r\n            \"uniform vec4 uColor;\",\r\n            \"uniform mat3 uTransforms[\" + stackDepth + \"];\",\r\n\r\n            \"varying vec4 vColor;\",\r\n\r\n            \"uniform mat4 pMatrix;\",\r\n\r\n            \"mat3 crunchStack(void) {\",\r\n            \"mat3 result = uTransforms[0];\",\r\n            \"for (int i = 1; i < \" + stackDepth + \"; ++i) {\",\r\n            \"result = uTransforms[i] * result;\",\r\n            \"}\",\r\n            \"return result;\",\r\n            \"}\",\r\n\r\n            \"void main(void) {\",\r\n            \"vec3 position = crunchStack() * vec3(aVertexPosition.x, aVertexPosition.y, 1.0);\",\r\n            \"gl_Position = pMatrix * vec4(position, 1.0);\",\r\n            \"vColor = uColor;\",\r\n            \"#if hasTexture\",\r\n            \"vTextureCoord = aVertexPosition.zw;\",\r\n            \"#endif\",\r\n            \"}\"\r\n        ].join(\"\\n\");\r\n        return vsSource;\r\n    };\r\n\r\n\r\n    // Initialize fragment and vertex shaders\r\n    WebGL2D.prototype.initShaders = function initShaders(transformStackDepth, sMask) {\r\n        var gl = this.gl;\r\n\r\n        transformStackDepth = transformStackDepth || 1;\r\n        sMask = sMask || 0;\r\n        var storedShader = this.shaderPool[transformStackDepth];\r\n\r\n        if (!storedShader) {\r\n            storedShader = this.shaderPool[transformStackDepth] = [];\r\n        }\r\n        storedShader = storedShader[sMask];\r\n\r\n        if (storedShader) {\r\n            gl.useProgram(storedShader);\r\n            this.shaderProgram = storedShader;\r\n        } else {\r\n            var fs = this.fs = gl.createShader(gl.FRAGMENT_SHADER);\r\n            gl.shaderSource(this.fs, this.getFragmentShaderSource(sMask));\r\n            gl.compileShader(this.fs);\r\n\r\n            if (!gl.getShaderParameter(this.fs, gl.COMPILE_STATUS)) {\r\n                throw \"fragment shader error: \" + gl.getShaderInfoLog(this.fs);\r\n            }\r\n\r\n            var vs = this.vs = gl.createShader(gl.VERTEX_SHADER);\r\n            gl.shaderSource(this.vs, this.getVertexShaderSource(transformStackDepth, sMask));\r\n            gl.compileShader(this.vs);\r\n\r\n            if (!gl.getShaderParameter(this.vs, gl.COMPILE_STATUS)) {\r\n                throw \"vertex shader error: \" + gl.getShaderInfoLog(this.vs);\r\n            }\r\n\r\n\r\n            var shaderProgram = this.shaderProgram = gl.createProgram();\r\n            shaderProgram.stackDepth = transformStackDepth;\r\n            gl.attachShader(shaderProgram, fs);\r\n            gl.attachShader(shaderProgram, vs);\r\n            gl.linkProgram(shaderProgram);\r\n\r\n            if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\r\n                throw \"Could not initialise shaders.\";\r\n            }\r\n\r\n            gl.useProgram(shaderProgram);\r\n\r\n            shaderProgram.vertexPositionAttribute = gl.getAttribLocation(shaderProgram, \"aVertexPosition\");\r\n            gl.enableVertexAttribArray(shaderProgram.vertexPositionAttribute);\r\n\r\n            shaderProgram.uColor = gl.getUniformLocation(shaderProgram, 'uColor');\r\n            shaderProgram.uSampler = gl.getUniformLocation(shaderProgram, 'uSampler');\r\n            shaderProgram.uCropSource = gl.getUniformLocation(shaderProgram, 'uCropSource');\r\n\r\n            shaderProgram.pMatrix = gl.getUniformLocation(shaderProgram, 'pMatrix');\r\n\r\n            shaderProgram.uTransforms = [];\r\n            for (var i = 0; i < transformStackDepth; ++i) {\r\n                shaderProgram.uTransforms[i] = gl.getUniformLocation(shaderProgram, 'uTransforms[' + i + ']');\r\n            } //for\r\n            this.shaderPool[transformStackDepth][sMask] = shaderProgram;\r\n        } //if\r\n\r\n        pMatrix[0] = 2 / this.canvas.width;\r\n        pMatrix[5] = -2 / this.canvas.height;\r\n\r\n        gl.uniformMatrix4fv(this.shaderProgram.pMatrix, false, pMatrix);\r\n\r\n        gl.viewport(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n        return this.shaderProgram;\r\n    };\r\n\r\n    // 2D Vertices and Texture UV coords\r\n    var rectVerts = new Float32Array([\r\n        0, 0, 0, 0,\r\n        0, 1, 0, 1,\r\n        1, 1, 1, 1,\r\n        1, 0, 1, 0\r\n    ]);\r\n\r\n    var pMatrix = new Float32Array(16);\r\n    pMatrix[10] = 1;\r\n    pMatrix[11] = 1;\r\n    pMatrix[12] = -1;\r\n    pMatrix[13] = 1;\r\n\r\n    WebGL2D.prototype.initBuffers = function initBuffers() {\r\n        var gl = this.gl;\r\n\r\n        gl.rectVertexPositionBuffer = gl.createBuffer();\r\n        gl.rectVertexColorBuffer = gl.createBuffer();\r\n\r\n        gl.pathVertexPositionBuffer = gl.createBuffer();\r\n        gl.pathVertexColorBuffer = gl.createBuffer();\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, gl.rectVertexPositionBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, rectVerts, gl.STATIC_DRAW);\r\n    };\r\n\r\n    // Maintains an array of all WebGL2D instances\r\n    WebGL2D.instances = [];\r\n\r\n    WebGL2D.prototype.postInit = function () {\r\n        WebGL2D.instances.push(this);\r\n    };\r\n\r\n    // Extends gl context with Canvas2D API\r\n    WebGL2D.prototype.initCanvas2DAPI = function initCanvas2DAPI() {\r\n        var gl2d = this,\r\n            gl = this.gl;\r\n\r\n\r\n        // Rendering Canvas for text fonts\r\n        var textCanvas = document.createElement(\"canvas\");\r\n        textCanvas.width = gl2d.canvas.width;\r\n        textCanvas.height = gl2d.canvas.height;\r\n        var textCtx = textCanvas.getContext(\"2d\");\r\n\r\n        var reRGBAColor = /^rgb(a)?\\(\\s*(-?[\\d]+)(%)?\\s*,\\s*(-?[\\d]+)(%)?\\s*,\\s*(-?[\\d]+)(%)?\\s*,?\\s*(-?[\\d\\.]+)?\\s*\\)$/;\r\n        var reHSLAColor = /^hsl(a)?\\(\\s*(-?[\\d\\.]+)\\s*,\\s*(-?[\\d\\.]+)%\\s*,\\s*(-?[\\d\\.]+)%\\s*,?\\s*(-?[\\d\\.]+)?\\s*\\)$/;\r\n        var reHex6Color = /^#([0-9A-Fa-f]{6})$/;\r\n        var reHex3Color = /^#([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])$/;\r\n\r\n        function hue2rgb(p, q, t) {\r\n            if (t < 0) t += 1;\r\n            if (t > 1) t -= 1;\r\n            if (t < 1 / 6) return p + (q - p) * 6 * t;\r\n            if (t < 1 / 2) return q;\r\n            if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\r\n            return p;\r\n        }\r\n\r\n        // http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n        function HSLAToRGBA(h, s, l, a) {\r\n            var r, g, b, p, q;\r\n\r\n            // Clamp and Normalize values\r\n            h = (((h % 360) + 360) % 360) / 360;\r\n            s = s > 100 ? 1 : s / 100;\r\n            s = s < 0 ? 0 : s;\r\n            l = l > 100 ? 1 : l / 100;\r\n            l = l < 0 ? 0 : l;\r\n\r\n            if (s == 0) {\r\n                r = g = b = l; // achromatic\r\n            } else {\r\n                q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n                p = 2 * l - q;\r\n\r\n                r = hue2rgb(p, q, h + 1 / 3);\r\n                g = hue2rgb(p, q, h);\r\n                b = hue2rgb(p, q, h - 1 / 3);\r\n            }\r\n\r\n            return [r, g, b, a];\r\n        }\r\n\r\n\r\n        // Converts rgb(a) color string to gl color vector\r\n        function colorStringToVec4(value) {\r\n            var result = [], match, channel, isPercent, hasAlpha, alphaChannel, sameType;\r\n\r\n            if ((match = reRGBAColor.exec(value))) {\r\n                hasAlpha = match[1], alphaChannel = parseFloat(match[8]);\r\n\r\n                if ((hasAlpha && isNaN(alphaChannel)) || (!hasAlpha && !isNaN(alphaChannel))) {\r\n                    return false;\r\n                }\r\n\r\n                sameType = match[3];\r\n\r\n                for (var i = 2; i < 8; i += 2) {\r\n                    channel = match[i], isPercent = match[i + 1];\r\n\r\n                    if (isPercent !== sameType) {\r\n                        return false;\r\n                    }\r\n\r\n                    // Clamp and normalize values\r\n                    if (isPercent) {\r\n                        channel = channel > 100 ? 1 : channel / 100;\r\n                        channel = channel < 0 ? 0 : channel;\r\n                    } else {\r\n                        channel = channel > 255 ? 1 : channel / 255;\r\n                        channel = channel < 0 ? 0 : channel;\r\n                    }\r\n\r\n                    result.push(channel);\r\n                }\r\n\r\n                result.push(hasAlpha ? alphaChannel : 1.0);\r\n            } else if ((match = reHSLAColor.exec(value))) {\r\n                hasAlpha = match[1], alphaChannel = parseFloat(match[5]);\r\n                result = HSLAToRGBA(match[2], match[3], match[4], parseFloat(hasAlpha && alphaChannel ? alphaChannel : 1.0));\r\n            } else if ((match = reHex6Color.exec(value))) {\r\n                var colorInt = parseInt(match[1], 16);\r\n                result = [((colorInt & 0xFF0000) >> 16) / 255, ((colorInt & 0x00FF00) >> 8) / 255, (colorInt & 0x0000FF) / 255, 1.0];\r\n            } else if ((match = reHex3Color.exec(value))) {\r\n                var hexString = \"#\" + [match[1], match[1], match[2], match[2], match[3], match[3]].join(\"\");\r\n                result = colorStringToVec4(hexString);\r\n            } else if (value.toLowerCase() in colorKeywords) {\r\n                result = colorStringToVec4(colorKeywords[value.toLowerCase()]);\r\n            } else if (value.toLowerCase() === \"transparent\") {\r\n                result = [0, 0, 0, 0];\r\n            } else {\r\n                // Color keywords not yet implemented, ie \"orange\", return hot pink\r\n                return false;\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        function colorVecToString(vec4) {\r\n            return \"rgba(\" + (vec4[0] * 255) + \", \" + (vec4[1] * 255) + \", \" + (vec4[2] * 255) + \", \" + parseFloat(vec4[3]) + \")\";\r\n        }\r\n\r\n        var colorKeywords = {\r\n            aliceblue: \"#f0f8ff\",\r\n            antiquewhite: \"#faebd7\",\r\n            aqua: \"#00ffff\",\r\n            aquamarine: \"#7fffd4\",\r\n            azure: \"#f0ffff\",\r\n            beige: \"#f5f5dc\",\r\n            bisque: \"#ffe4c4\",\r\n            black: \"#000000\",\r\n            blanchedalmond: \"#ffebcd\",\r\n            blue: \"#0000ff\",\r\n            blueviolet: \"#8a2be2\",\r\n            brown: \"#a52a2a\",\r\n            burlywood: \"#deb887\",\r\n            cadetblue: \"#5f9ea0\",\r\n            chartreuse: \"#7fff00\",\r\n            chocolate: \"#d2691e\",\r\n            coral: \"#ff7f50\",\r\n            cornflowerblue: \"#6495ed\",\r\n            cornsilk: \"#fff8dc\",\r\n            crimson: \"#dc143c\",\r\n            cyan: \"#00ffff\",\r\n            darkblue: \"#00008b\",\r\n            darkcyan: \"#008b8b\",\r\n            darkgoldenrod: \"#b8860b\",\r\n            darkgray: \"#a9a9a9\",\r\n            darkgreen: \"#006400\",\r\n            darkkhaki: \"#bdb76b\",\r\n            darkmagenta: \"#8b008b\",\r\n            darkolivegreen: \"#556b2f\",\r\n            darkorange: \"#ff8c00\",\r\n            darkorchid: \"#9932cc\",\r\n            darkred: \"#8b0000\",\r\n            darksalmon: \"#e9967a\",\r\n            darkseagreen: \"#8fbc8f\",\r\n            darkslateblue: \"#483d8b\",\r\n            darkslategray: \"#2f4f4f\",\r\n            darkturquoise: \"#00ced1\",\r\n            darkviolet: \"#9400d3\",\r\n            deeppink: \"#ff1493\",\r\n            deepskyblue: \"#00bfff\",\r\n            dimgray: \"#696969\",\r\n            dodgerblue: \"#1e90ff\",\r\n            firebrick: \"#b22222\",\r\n            floralwhite: \"#fffaf0\",\r\n            forestgreen: \"#228b22\",\r\n            fuchsia: \"#ff00ff\",\r\n            gainsboro: \"#dcdcdc\",\r\n            ghostwhite: \"#f8f8ff\",\r\n            gold: \"#ffd700\",\r\n            goldenrod: \"#daa520\",\r\n            gray: \"#808080\",\r\n            green: \"#008000\",\r\n            greenyellow: \"#adff2f\",\r\n            grey: \"#808080\",\r\n            honeydew: \"#f0fff0\",\r\n            hotpink: \"#ff69b4\",\r\n            indianred: \"#cd5c5c\",\r\n            indigo: \"#4b0082\",\r\n            ivory: \"#fffff0\",\r\n            khaki: \"#f0e68c\",\r\n            lavender: \"#e6e6fa\",\r\n            lavenderblush: \"#fff0f5\",\r\n            lawngreen: \"#7cfc00\",\r\n            lemonchiffon: \"#fffacd\",\r\n            lightblue: \"#add8e6\",\r\n            lightcoral: \"#f08080\",\r\n            lightcyan: \"#e0ffff\",\r\n            lightgoldenrodyellow: \"#fafad2\",\r\n            lightgrey: \"#d3d3d3\",\r\n            lightgreen: \"#90ee90\",\r\n            lightpink: \"#ffb6c1\",\r\n            lightsalmon: \"#ffa07a\",\r\n            lightseagreen: \"#20b2aa\",\r\n            lightskyblue: \"#87cefa\",\r\n            lightslategray: \"#778899\",\r\n            lightsteelblue: \"#b0c4de\",\r\n            lightyellow: \"#ffffe0\",\r\n            lime: \"#00ff00\",\r\n            limegreen: \"#32cd32\",\r\n            linen: \"#faf0e6\",\r\n            magenta: \"#ff00ff\",\r\n            maroon: \"#800000\",\r\n            mediumaquamarine: \"#66cdaa\",\r\n            mediumblue: \"#0000cd\",\r\n            mediumorchid: \"#ba55d3\",\r\n            mediumpurple: \"#9370d8\",\r\n            mediumseagreen: \"#3cb371\",\r\n            mediumslateblue: \"#7b68ee\",\r\n            mediumspringgreen: \"#00fa9a\",\r\n            mediumturquoise: \"#48d1cc\",\r\n            mediumvioletred: \"#c71585\",\r\n            midnightblue: \"#191970\",\r\n            mintcream: \"#f5fffa\",\r\n            mistyrose: \"#ffe4e1\",\r\n            moccasin: \"#ffe4b5\",\r\n            navajowhite: \"#ffdead\",\r\n            navy: \"#000080\",\r\n            oldlace: \"#fdf5e6\",\r\n            olive: \"#808000\",\r\n            olivedrab: \"#6b8e23\",\r\n            orange: \"#ffa500\",\r\n            orangered: \"#ff4500\",\r\n            orchid: \"#da70d6\",\r\n            palegoldenrod: \"#eee8aa\",\r\n            palegreen: \"#98fb98\",\r\n            paleturquoise: \"#afeeee\",\r\n            palevioletred: \"#d87093\",\r\n            papayawhip: \"#ffefd5\",\r\n            peachpuff: \"#ffdab9\",\r\n            peru: \"#cd853f\",\r\n            pink: \"#ffc0cb\",\r\n            plum: \"#dda0dd\",\r\n            powderblue: \"#b0e0e6\",\r\n            purple: \"#800080\",\r\n            red: \"#ff0000\",\r\n            rosybrown: \"#bc8f8f\",\r\n            royalblue: \"#4169e1\",\r\n            saddlebrown: \"#8b4513\",\r\n            salmon: \"#fa8072\",\r\n            sandybrown: \"#f4a460\",\r\n            seagreen: \"#2e8b57\",\r\n            seashell: \"#fff5ee\",\r\n            sienna: \"#a0522d\",\r\n            silver: \"#c0c0c0\",\r\n            skyblue: \"#87ceeb\",\r\n            slateblue: \"#6a5acd\",\r\n            slategray: \"#708090\",\r\n            snow: \"#fffafa\",\r\n            springgreen: \"#00ff7f\",\r\n            steelblue: \"#4682b4\",\r\n            tan: \"#d2b48c\",\r\n            teal: \"#008080\",\r\n            thistle: \"#d8bfd8\",\r\n            tomato: \"#ff6347\",\r\n            turquoise: \"#40e0d0\",\r\n            violet: \"#ee82ee\",\r\n            wheat: \"#f5deb3\",\r\n            white: \"#ffffff\",\r\n            whitesmoke: \"#f5f5f5\",\r\n            yellow: \"#ffff00\",\r\n            yellowgreen: \"#9acd32\"\r\n        };\r\n\r\n        // Maintain drawing state params during gl.save and gl.restore. see saveDrawState() and restoreDrawState()\r\n        var drawState = {}, drawStateStack = [];\r\n\r\n        // A fast simple shallow clone\r\n        function cloneObject(obj) {\r\n            var target = {};\r\n            for (var i in obj) {\r\n                if (obj.hasOwnProperty(i)) {\r\n                    target[i] = obj[i];\r\n                }\r\n            }\r\n            return target;\r\n        }\r\n\r\n        function saveDrawState() {\r\n            var bakedDrawState = {\r\n                fillStyle: [drawState.fillStyle[0], drawState.fillStyle[1], drawState.fillStyle[2], drawState.fillStyle[3]],\r\n                strokeStyle: [drawState.strokeStyle[0], drawState.strokeStyle[1], drawState.strokeStyle[2], drawState.strokeStyle[3]],\r\n                globalAlpha: drawState.globalAlpha,\r\n                globalCompositeOperation: drawState.globalCompositeOperation,\r\n                lineCap: drawState.lineCap,\r\n                lineJoin: drawState.lineJoin,\r\n                lineWidth: drawState.lineWidth,\r\n                miterLimit: drawState.miterLimit,\r\n                shadowColor: drawState.shadowColor,\r\n                shadowBlur: drawState.shadowBlur,\r\n                shadowOffsetX: drawState.shadowOffsetX,\r\n                shadowOffsetY: drawState.shadowOffsetY,\r\n                textAlign: drawState.textAlign,\r\n                font: drawState.font,\r\n                textBaseline: drawState.textBaseline,\r\n                imageSmoothingEnabled: drawState.imageSmoothingEnabled\r\n            };\r\n\r\n            drawStateStack.push(bakedDrawState);\r\n        }\r\n\r\n        function restoreDrawState() {\r\n            if (drawStateStack.length) {\r\n                drawState = drawStateStack.pop();\r\n            }\r\n        }\r\n\r\n        // WebGL requires colors as a vector while Canvas2D sets colors as an rgba string\r\n        // These getters and setters store the original rgba string as well as convert to a vector\r\n        drawState.fillStyle = [0, 0, 0, 1]; // default black\r\n\r\n        Object.defineProperty(gl, \"fillStyle\", {\r\n            get: function () {\r\n                return colorVecToString(drawState.fillStyle);\r\n            },\r\n            set: function (value) {\r\n                drawState.fillStyle = colorStringToVec4(value) || drawState.fillStyle;\r\n            }\r\n        });\r\n\r\n        drawState.strokeStyle = [0, 0, 0, 1]; // default black\r\n\r\n        Object.defineProperty(gl, \"strokeStyle\", {\r\n            get: function () {\r\n                return colorVecToString(drawState.strokeStyle);\r\n            },\r\n            set: function (value) {\r\n                drawState.strokeStyle = colorStringToVec4(value) || drawStyle.strokeStyle;\r\n            }\r\n        });\r\n\r\n        // WebGL already has a lineWidth() function but Canvas2D requires a lineWidth property\r\n        // Store the original lineWidth() function for later use\r\n        gl.$lineWidth = gl.lineWidth;\r\n        drawState.lineWidth = 1.0;\r\n\r\n        Object.defineProperty(gl, \"lineWidth\", {\r\n            get: function () {\r\n                return drawState.lineWidth;\r\n            },\r\n            set: function (value) {\r\n                if (value > 0) {\r\n                    gl.$lineWidth(value);\r\n                    drawState.lineWidth = value;\r\n                }\r\n            }\r\n        });\r\n\r\n        // Currently unsupported attributes and their default values\r\n        drawState.lineCap = \"butt\";\r\n\r\n        Object.defineProperty(gl, \"lineCap\", {\r\n            get: function () {\r\n                return drawState.lineCap;\r\n            },\r\n            set: function (value) {\r\n                drawState.lineCap = value;\r\n            }\r\n        });\r\n\r\n        drawState.lineJoin = \"miter\";\r\n\r\n        Object.defineProperty(gl, \"lineJoin\", {\r\n            get: function () {\r\n                return drawState.lineJoin;\r\n            },\r\n            set: function (value) {\r\n                drawState.lineJoin = value;\r\n            }\r\n        });\r\n\r\n        drawState.miterLimit = 10;\r\n\r\n        Object.defineProperty(gl, \"miterLimit\", {\r\n            get: function () {\r\n                return drawState.miterLimit;\r\n            },\r\n            set: function (value) {\r\n                drawState.miterLimit = value;\r\n            }\r\n        });\r\n\r\n        drawState.shadowOffsetX = 0;\r\n\r\n        Object.defineProperty(gl, \"shadowOffsetX\", {\r\n            get: function () {\r\n                return drawState.shadowOffsetX;\r\n            },\r\n            set: function (value) {\r\n                drawState.shadowOffsetX = value;\r\n            }\r\n        });\r\n\r\n        drawState.shadowOffsetY = 0;\r\n\r\n        Object.defineProperty(gl, \"shadowOffsetY\", {\r\n            get: function () {\r\n                return drawState.shadowOffsetY;\r\n            },\r\n            set: function (value) {\r\n                drawState.shadowOffsetY = value;\r\n            }\r\n        });\r\n\r\n        drawState.shadowBlur = 0;\r\n\r\n        Object.defineProperty(gl, \"shadowBlur\", {\r\n            get: function () {\r\n                return drawState.shadowBlur;\r\n            },\r\n            set: function (value) {\r\n                drawState.shadowBlur = value;\r\n            }\r\n        });\r\n\r\n        drawState.shadowColor = \"rgba(0, 0, 0, 0.0)\";\r\n\r\n        Object.defineProperty(gl, \"shadowColor\", {\r\n            get: function () {\r\n                return drawState.shadowColor;\r\n            },\r\n            set: function (value) {\r\n                drawState.shadowColor = value;\r\n            }\r\n        });\r\n\r\n        drawState.font = \"10px sans-serif\";\r\n\r\n        Object.defineProperty(gl, \"font\", {\r\n            get: function () {\r\n                return drawState.font;\r\n            },\r\n            set: function (value) {\r\n                textCtx.font = value;\r\n                drawState.font = value;\r\n            }\r\n        });\r\n\r\n        drawState.textAlign = \"start\";\r\n\r\n        Object.defineProperty(gl, \"textAlign\", {\r\n            get: function () {\r\n                return drawState.textAlign;\r\n            },\r\n            set: function (value) {\r\n                drawState.textAlign = value;\r\n            }\r\n        });\r\n\r\n        drawState.textBaseline = \"alphabetic\";\r\n\r\n        Object.defineProperty(gl, \"textBaseline\", {\r\n            get: function () {\r\n                return drawState.textBaseline;\r\n            },\r\n            set: function (value) {\r\n                drawState.textBaseline = value;\r\n            }\r\n        });\r\n\r\n        // This attribute will need to control global alpha of objects drawn.\r\n        drawState.globalAlpha = 1.0;\r\n\r\n        Object.defineProperty(gl, \"globalAlpha\", {\r\n            get: function () {\r\n                return drawState.globalAlpha;\r\n            },\r\n            set: function (value) {\r\n                drawState.globalAlpha = value;\r\n            }\r\n        });\r\n\r\n        // This attribute will need to control smoothing of objects drawn.\r\n        drawState.imageSmoothingEnabled = true;\r\n\r\n        Object.defineProperty(gl, \"imageSmoothingEnabled\", {\r\n            get: function () {\r\n                return drawState.imageSmoothingEnabled;\r\n            },\r\n            set: function (value) {\r\n                drawState.imageSmoothingEnabled = !!value;\r\n            }\r\n        });\r\n\r\n        // This attribute will need to set the gl.blendFunc mode\r\n        drawState.globalCompositeOperation = \"source-over\";\r\n\r\n        Object.defineProperty(gl, \"globalCompositeOperation\", {\r\n            get: function () {\r\n                return drawState.globalCompositeOperation;\r\n            },\r\n            set: function (value) {\r\n                drawState.globalCompositeOperation = value;\r\n            }\r\n        });\r\n\r\n        // Need a solution for drawing text that isnt stupid slow\r\n        gl.fillText = function fillText(text, x, y) {\r\n            // if it exist --key\r\n            textCtx.clearRect(0, 0, gl2d.canvas.width, gl2d.canvas.height);\r\n            textCtx.fillStyle = gl.fillStyle;\r\n            textCtx.fillText(text, x, y);\r\n\r\n            gl.drawImage(textCanvas, 0, 0);\r\n        };\r\n\r\n        gl.strokeText = function strokeText() {\r\n        };\r\n\r\n        gl.measureText = function measureText() {\r\n            return 1;\r\n        };\r\n\r\n        var tempCanvas = document.createElement('canvas');\r\n        var tempCtx = tempCanvas.getContext('2d');\r\n\r\n        gl.save = function save() {\r\n            gl2d.transform.pushMatrix();\r\n            saveDrawState();\r\n        };\r\n\r\n        gl.restore = function restore() {\r\n            gl2d.transform.popMatrix();\r\n            restoreDrawState();\r\n        };\r\n\r\n        gl.translate = function translate(x, y) {\r\n            gl2d.transform.translate(x, y);\r\n        };\r\n\r\n        gl.rotate = function rotate(a) {\r\n            gl2d.transform.rotate(a);\r\n        };\r\n\r\n        gl.scale = function scale(x, y) {\r\n            gl2d.transform.scale(x, y);\r\n        };\r\n\r\n        gl.createImageData = function createImageData(width, height) {\r\n            return tempCtx.createImageData(width, height);\r\n        };\r\n\r\n        gl.getImageData = function getImageData(x, y, width, height) {\r\n            var data = tempCtx.createImageData(width, height);\r\n            var buffer = new Uint8Array(width * height * 4);\r\n            gl.readPixels(x, y, width, height, gl.RGBA, gl.UNSIGNED_BYTE, buffer);\r\n            var w = width * 4, h = height;\r\n            for (var i = 0, maxI = h / 2; i < maxI; ++i) {\r\n                for (var j = 0, maxJ = w; j < maxJ; ++j) {\r\n                    var index1 = i * w + j;\r\n                    var index2 = (h - i - 1) * w + j;\r\n                    data.data[index1] = buffer[index2];\r\n                    data.data[index2] = buffer[index1];\r\n                } //for\r\n            } //for\r\n\r\n            return data;\r\n        };\r\n\r\n        gl.putImageData = function putImageData(imageData, x, y) {\r\n            gl.drawImage(imageData, x, y);\r\n        };\r\n\r\n        gl.transform = function transform(m11, m12, m21, m22, dx, dy) {\r\n            gl2d.transform.tr(m11, m12, m21, m22, dx, dy);\r\n        };\r\n\r\n        function sendTransformStack(sp) {\r\n            var stack = gl2d.transform.m_stack;\r\n            for (var i = 0, maxI = gl2d.transform.c_stack + 1; i < maxI; ++i) {\r\n                gl.uniformMatrix3fv(sp.uTransforms[i], false, stack[maxI - 1 - i]);\r\n            } //for\r\n        }\r\n\r\n        gl.setTransform = function setTransform(m11, m12, m21, m22, dx, dy) {\r\n            gl2d.transform.setIdentity();\r\n            gl.transform.apply(this, arguments);\r\n        };\r\n\r\n        gl.fillRect = function fillRect(x, y, width, height) {\r\n            var transform = gl2d.transform;\r\n            var shaderProgram = gl2d.initShaders(transform.c_stack + 2, 0);\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, gl.rectVertexPositionBuffer);\r\n            gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, 4, gl.FLOAT, false, 0, 0);\r\n\r\n            transform.pushMatrix();\r\n\r\n            transform.translate(x, y);\r\n            transform.scale(width, height);\r\n\r\n            sendTransformStack(shaderProgram);\r\n\r\n            gl.uniform4f(shaderProgram.uColor, drawState.fillStyle[0], drawState.fillStyle[1], drawState.fillStyle[2], drawState.fillStyle[3]);\r\n\r\n            gl.drawArrays(gl.TRIANGLE_FAN, 0, 4);\r\n\r\n            transform.popMatrix();\r\n        };\r\n\r\n        gl.strokeRect = function strokeRect(x, y, width, height) {\r\n            var transform = gl2d.transform;\r\n            var shaderProgram = gl2d.initShaders(transform.c_stack + 2, 0);\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, gl.rectVertexPositionBuffer);\r\n            gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, 4, gl.FLOAT, false, 0, 0);\r\n\r\n            transform.pushMatrix();\r\n\r\n            transform.translate(x, y);\r\n            transform.scale(width, height);\r\n\r\n            sendTransformStack(shaderProgram);\r\n\r\n            gl.uniform4f(shaderProgram.uColor, drawState.strokeStyle[0], drawState.strokeStyle[1], drawState.strokeStyle[2], drawState.strokeStyle[3]);\r\n\r\n            gl.drawArrays(gl.LINE_LOOP, 0, 4);\r\n\r\n            transform.popMatrix();\r\n        };\r\n\r\n        gl.clearRect = function clearRect(x, y, width, height) {\r\n        };\r\n\r\n        var subPaths = [];\r\n\r\n        function SubPath(x, y) {\r\n            this.closed = false;\r\n            this.verts = [x, y, 0, 0];\r\n        }\r\n\r\n        // Empty the list of subpaths so that the context once again has zero subpaths\r\n        gl.beginPath = function beginPath() {\r\n            subPaths.length = 0;\r\n        };\r\n\r\n        // Mark last subpath as closed and create a new subpath with the same starting point as the previous subpath\r\n        gl.closePath = function closePath() {\r\n            if (subPaths.length) {\r\n                // Mark last subpath closed.\r\n                var prevPath = subPaths[subPaths.length - 1], startX = prevPath.verts[0], startY = prevPath.verts[1];\r\n                prevPath.closed = true;\r\n\r\n                // Create new subpath using the starting position of previous subpath\r\n                var newPath = new SubPath(startX, startY);\r\n                subPaths.push(newPath);\r\n            }\r\n        };\r\n\r\n        // Create a new subpath with the specified point as its first (and only) point\r\n        gl.moveTo = function moveTo(x, y) {\r\n            subPaths.push(new SubPath(x, y));\r\n        };\r\n\r\n        gl.lineTo = function lineTo(x, y) {\r\n            if (subPaths.length) {\r\n                subPaths[subPaths.length - 1].verts.push(x, y, 0, 0);\r\n            } else {\r\n                // Create a new subpath if none currently exist\r\n                gl.moveTo(x, y);\r\n            }\r\n        };\r\n\r\n        gl.quadraticApproximateCount = 50;\r\n        gl.quadraticCurveTo = function quadraticCurveTo(hx, hy, x, y) {\r\n            if (subPaths.length) {\r\n                var verts = subPaths[subPaths.length - 1].verts,\r\n                    fromx = verts[verts.length - 4],\r\n                    fromy = verts[verts.length - 3],\r\n                    t, i, tx, ty;\r\n                for (var j = 0; j < gl.quadraticApproximateCount; j++) {\r\n                    t = j / gl.quadraticApproximateCount;\r\n                    i = 1 - t;\r\n                    tx = i * i * fromx + 2 * i * t * hx + t * t * x;\r\n                    ty = i * i * fromy + 2 * i * t * hy + t * t * y;\r\n                    verts.push(tx, ty, 0, 0);\r\n                }\r\n            } else {\r\n                gl.moveTo(x, y);\r\n            }\r\n        };\r\n\r\n        gl.bezierApproximateCount = 50;\r\n        gl.bezierCurveTo = function quadraticCurveTo(h1x, h1y, h2x, h2y, x, y) {\r\n            if (subPaths.length) {\r\n                var verts = subPaths[subPaths.length - 1].verts,\r\n                    fromx = verts[verts.length - 4],\r\n                    fromy = verts[verts.length - 3],\r\n                    t, i, tx, ty;\r\n                for (var j = 0; j < gl.bezierApproximateCount; j++) {\r\n                    t = j / gl.bezierApproximateCount;\r\n                    i = 1 - t;\r\n                    tx = i * i * i * fromx + 3 * i * i * t * h1x + 3 * i * t * t * h2x + t * t * t * x;\r\n                    ty = i * i * i * fromy + 3 * i * i * t * h1y + 3 * i * t * t * h2y + t * t * t * y;\r\n                    verts.push(tx, ty, 0, 0);\r\n                }\r\n            } else {\r\n                gl.moveTo(x, y);\r\n            }\r\n        };\r\n\r\n        gl.arcTo = function arcTo() {\r\n            if (subPaths.length) {\r\n                ;\r\n            } else {\r\n                gl.moveTo(x, y);\r\n            }\r\n        };\r\n\r\n        // Adds a closed rect subpath and creates a new subpath\r\n        gl.rect = function rect(x, y, w, h) {\r\n            gl.moveTo(x, y);\r\n            gl.lineTo(x + w, y);\r\n            gl.lineTo(x + w, y + h);\r\n            gl.lineTo(x, y + h);\r\n            gl.closePath();\r\n        };\r\n\r\n        gl.arcApproximateCount = 100;\r\n        gl.arc = function arc(cx, cy, radius, startAngle, endAngle, anticlockwise) {\r\n            if (subPaths.length) {\r\n                var verts = subPaths[subPaths.length - 1].verts;\r\n\r\n                // startAngle\r\n                var x = cx + radius * Math.cos(startAngle),\r\n                    y = cy + radius * Math.sin(startAngle);\r\n                verts.push(x, y, 0, 0);\r\n\r\n                while (startAngle > Math.PI * 2)\r\n                    startAngle -= Math.PI * 2;\r\n                while (endAngle > Math.PI * 2)\r\n                    endAngle -= Math.PI * 2;\r\n                while (startAngle < -Math.PI * 2)\r\n                    startAngle += Math.PI * 2;\r\n                while (endAngle < -Math.PI * 2)\r\n                    endAngle += Math.PI * 2;\r\n                if (startAngle == endAngle)\r\n                    return;\r\n\r\n                var count = 1 / gl.arcApproximateCount,\r\n                    fixed = gl.arcApproximateCount,\r\n                    t;\r\n                if (anticlockwise) {\r\n                    endAngle -= Math.PI * 2;\r\n                    count = -count;\r\n                }\r\n                for (var i = startAngle; (i > endAngle && anticlockwise) || (i < endAngle && !anticlockwise); i += count) {\r\n                    if (t == (t = (i * fixed | 0) / fixed))\r\n                        continue;\r\n                    x = cx + radius * Math.cos(t);\r\n                    y = cy + radius * Math.sin(t);\r\n                    verts.push(x, y, 0, 0);\r\n                }\r\n            } else {\r\n                gl.moveTo(x, y);\r\n            }\r\n        };\r\n\r\n        function fillSubPath(index) {\r\n            var transform = gl2d.transform;\r\n            var shaderProgram = gl2d.initShaders(transform.c_stack + 2, 0);\r\n\r\n            var subPath = subPaths[index];\r\n            var verts = subPath.verts;\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, gl.pathVertexPositionBuffer);\r\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(verts), gl.STATIC_DRAW);\r\n\r\n            gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, 4, gl.FLOAT, false, 0, 0);\r\n\r\n            transform.pushMatrix();\r\n\r\n            sendTransformStack(shaderProgram);\r\n\r\n            gl.uniform4f(shaderProgram.uColor, drawState.fillStyle[0], drawState.fillStyle[1], drawState.fillStyle[2], drawState.fillStyle[3]);\r\n\r\n            gl.drawArrays(gl.TRIANGLE_FAN, 0, verts.length / 4);\r\n\r\n            transform.popMatrix();\r\n        }\r\n\r\n        gl.fill = function fill() {\r\n            for (var i = 0; i < subPaths.length; i++) {\r\n                fillSubPath(i);\r\n            }\r\n        };\r\n\r\n        function strokeSubPath(index) {\r\n            var transform = gl2d.transform;\r\n            var shaderProgram = gl2d.initShaders(transform.c_stack + 2, 0);\r\n\r\n            var subPath = subPaths[index];\r\n            var verts = subPath.verts;\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, gl.pathVertexPositionBuffer);\r\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(verts), gl.STATIC_DRAW);\r\n\r\n            gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, 4, gl.FLOAT, false, 0, 0);\r\n\r\n            transform.pushMatrix();\r\n\r\n            sendTransformStack(shaderProgram);\r\n\r\n            gl.uniform4f(shaderProgram.uColor, drawState.strokeStyle[0], drawState.strokeStyle[1], drawState.strokeStyle[2], drawState.strokeStyle[3]);\r\n\r\n            if (subPath.closed) {\r\n                gl.drawArrays(gl.LINE_LOOP, 0, verts.length / 4);\r\n            } else {\r\n                gl.drawArrays(gl.LINE_STRIP, 0, verts.length / 4);\r\n            }\r\n\r\n            transform.popMatrix();\r\n        }\r\n\r\n        gl.stroke = function stroke() {\r\n            for (var i = 0; i < subPaths.length; i++) {\r\n                strokeSubPath(i);\r\n            }\r\n        };\r\n\r\n        gl.clip = function clip() {\r\n        };\r\n\r\n        gl.isPointInPath = function isPointInPath() {\r\n        };\r\n\r\n        gl.drawFocusRing = function drawFocusRing() {\r\n        };\r\n\r\n\r\n        var imageCache = [], textureCache = [];\r\n\r\n        function Texture(image) {\r\n            this.obj = gl.createTexture();\r\n            this.index = textureCache.push(this);\r\n\r\n            imageCache.push(image);\r\n\r\n            // we may wish to consider tiling large images like this instead of scaling and\r\n            // adjust appropriately (flip to next texture source and tile offset) when drawing\r\n            if (image.width > gl2d.maxTextureSize || image.height > gl2d.maxTextureSize) {\r\n                var canvas = document.createElement(\"canvas\");\r\n\r\n                canvas.width = (image.width > gl2d.maxTextureSize) ? gl2d.maxTextureSize : image.width;\r\n                canvas.height = (image.height > gl2d.maxTextureSize) ? gl2d.maxTextureSize : image.height;\r\n\r\n                var ctx = canvas.getContext(\"2d\");\r\n\r\n                ctx.drawImage(image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height);\r\n\r\n                image = canvas;\r\n            }\r\n\r\n            var GL_FUNCTION = gl.LINEAR;\r\n            var GL_MIPMAP_FUNCTION = gl.LINEAR_MIPMAP_LINEAR;\r\n\r\n            if (!drawState.imageSmoothingEnabled) {\r\n                GL_FUNCTION = gl.NEAREST;\r\n                GL_MIPMAP_FUNCTION = gl.LINEAR_MIPMAP_NEAREST;\r\n            }\r\n\r\n            gl.bindTexture(gl.TEXTURE_2D, this.obj);\r\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, GL_FUNCTION);\r\n\r\n            // Enable Mip mapping on power-of-2 textures\r\n            if (isPOT(image.width) && isPOT(image.height)) {\r\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, GL_MIPMAP_FUNCTION);\r\n                gl.generateMipmap(gl.TEXTURE_2D);\r\n            } else {\r\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, GL_FUNCTION);\r\n            }\r\n\r\n            // Unbind texture\r\n            gl.bindTexture(gl.TEXTURE_2D, null);\r\n        }\r\n\r\n        gl.drawImage = function drawImage(image, a, b, c, d, e, f, g, h) {\r\n            var transform = gl2d.transform;\r\n\r\n            transform.pushMatrix();\r\n\r\n            var sMask = shaderMask.texture;\r\n            var doCrop = false;\r\n\r\n            //drawImage(image, dx, dy)\r\n            if (arguments.length === 3) {\r\n                transform.translate(a, b);\r\n                transform.scale(image.width, image.height);\r\n            }\r\n\r\n            //drawImage(image, dx, dy, dw, dh)\r\n            else if (arguments.length === 5) {\r\n                transform.translate(a, b);\r\n                transform.scale(c, d);\r\n            }\r\n\r\n            //drawImage(image, sx, sy, sw, sh, dx, dy, dw, dh)\r\n            else if (arguments.length === 9) {\r\n                transform.translate(e, f);\r\n                transform.scale(g, h);\r\n                sMask = sMask | shaderMask.crop;\r\n                doCrop = true;\r\n            }\r\n\r\n            var shaderProgram = gl2d.initShaders(transform.c_stack + 1, sMask);\r\n\r\n            var texture, cacheIndex = imageCache.indexOf(image);\r\n\r\n            if (cacheIndex !== -1) {\r\n                texture = textureCache[cacheIndex];\r\n            } else {\r\n                texture = new Texture(image);\r\n            }\r\n\r\n            if (doCrop) {\r\n                gl.uniform4f(shaderProgram.uCropSource, a / image.width, b / image.height, c / image.width, d / image.height);\r\n            }\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, gl.rectVertexPositionBuffer);\r\n            gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, 4, gl.FLOAT, false, 0, 0);\r\n\r\n            gl.bindTexture(gl.TEXTURE_2D, texture.obj);\r\n            gl.activeTexture(gl.TEXTURE0);\r\n\r\n            gl.uniform1i(shaderProgram.uSampler, 0);\r\n\r\n            sendTransformStack(shaderProgram);\r\n            gl.drawArrays(gl.TRIANGLE_FAN, 0, 4);\r\n\r\n            transform.popMatrix();\r\n        };\r\n\r\n        // This enables the user to detect whether they got a webgl-2d context or a 2d context.\r\n        Object.defineProperty(gl, \"isWebGL\", {\r\n            configurable: false,\r\n            enumerable: true,\r\n            writable: false,\r\n            value: true\r\n        });\r\n    };\r\n\r\n    return WebGL2D;\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('io/InputManager', ['jquery', 'utils/ArrayMap'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('jquery'), require('utils/ArrayMap'));\r\n    } else {\r\n        factory(root.jQuery, root.ArrayMap);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function ($, ArrayMap) {\r\n    \"use strict\";\r\n\r\n    var InputManager = function (j2d) {\r\n        this.j2d = j2d;\r\n\r\n        this.id = j2d.id;\r\n        this.element = j2d.element;\r\n\r\n        this.data = {\r\n            mouse: {\r\n                startPosition: {\r\n                    x: 0,\r\n                    y: 0\r\n                },\r\n                currentPosition: {\r\n                    x: 0,\r\n                    y: 0\r\n                },\r\n                previousDistance: 0,\r\n                distance: 0\r\n            },\r\n            viewport: {\r\n                position: {\r\n                    x: 0,\r\n                    y: 0\r\n                }\r\n            },\r\n            enabled: false,\r\n            enableAdditionalData: false,\r\n            keysPressed: new ArrayMap(),\r\n            writeMode: false,\r\n            timePressed: 0,\r\n            preventAll: false,\r\n\r\n            cursor: {\r\n                enabled: false,\r\n                image: 'auto'\r\n            }\r\n        };\r\n        this.keyMap = {\r\n            //DEBUG_INFO: [[InputManager.key.KEY_CTRL, InputManager.key.KEY_F1], 'j2d.debug.toggleScreen', {}],\r\n            FULLSCREEN: [[InputManager.key.KEY_CTRL, InputManager.key.KEY_F11], 'j2d.scene.toggleFullScreen', {}]\r\n        };\r\n    };\r\n\r\n    var checkKeyMap = function (e, enableCallback) {\r\n        if (enableCallback === undefined) enableCallback = true;\r\n\r\n        var j2d = e.data.manager.j2d,\r\n            manager = e.data.manager,\r\n            keyCode = e.which,\r\n            keyMap = e.data.manager.keyMap;\r\n\r\n        for (var index in keyMap) {\r\n            if (keyMap.hasOwnProperty(index)) {\r\n                var value = keyMap[index];\r\n                if (!$.isArray(value[0]) && value[0] === keyCode && !!value[1]) {\r\n                    if (typeof value[1] === 'string') {\r\n                        value[1] = eval('(' + value[1] + ')');\r\n                    }\r\n                    if ((typeof value[1] === 'function') && enableCallback) {\r\n                        value[1](j2d, value[2]);\r\n                    }\r\n                    return true;\r\n                } else if ($.isArray(value[0])\r\n                    && manager.data.keysPressed.equals(value[0]) && !!value[1]\r\n                ) {\r\n                    if (typeof value[1] === 'string') {\r\n                        value[1] = eval('(' + value[1] + ')');\r\n                    }\r\n                    if (typeof value[1] === 'function' && enableCallback) {\r\n                        value[1](j2d, value[2]);\r\n                    }\r\n                    return true\r\n                }\r\n            }\r\n        }\r\n        return false\r\n    };\r\n\r\n    var events = {\r\n        onMouseClick: function (e) {\r\n            var manager = e.data.manager;\r\n            if (!manager.data.enabled || !manager.j2d.isPlay || !manager.j2d.element.hasClass('active')) return true;\r\n            var keysPressed = manager.data.keysPressed;\r\n            var keyCode = getKey(InputManager.key, e.which) || 'KEY_UNKNOWN_' + e.which;\r\n            var mouse = manager.data.mouse;\r\n\r\n            if (e.data.event !== 2) {\r\n                if (e.data.event === 0) {\r\n                    if (-1 === $.inArray(InputManager.key[keyCode], keysPressed)) {\r\n                        keysPressed.push(InputManager.key[keyCode]);\r\n\r\n                        if (manager.data.enableAdditionalData) {\r\n                            mouse.startPosition.x = e.pageX;\r\n                            mouse.startPosition.y = e.pageY;\r\n                            mouse.distance = 0;\r\n\r\n                            manager.data.timePressed = e.timeStamp;\r\n                        }\r\n                    }\r\n                    if (checkKeyMap(e, false) || manager.data.preventAll) {\r\n                        e.preventDefault();\r\n                    }\r\n                } else {\r\n                    if (checkKeyMap(e) || manager.data.preventAll) {\r\n                        e.preventDefault();\r\n                    }\r\n                    if (manager.data.enableAdditionalData) {\r\n                        mouse.previousDistance = mouse.distance;\r\n                        mouse.startPosition.x = 0;\r\n                        mouse.startPosition.y = 0;\r\n                    }\r\n\r\n                    keysPressed.splice(\r\n                        keysPressed.indexOf(InputManager.key[keyCode]), 1\r\n                    );\r\n                }\r\n                manager.element.trigger(e.data.event === 0 ?\r\n                    'mouseKeyDown' : 'mouseKeyUp', {keyCode: keyCode}\r\n                );\r\n            } else {\r\n                if (checkKeyMap(e, false)) {\r\n                    e.preventDefault();\r\n                }\r\n            }\r\n        },\r\n\r\n        onMouseWheel: function (e) {\r\n            var manager = e.data.manager;\r\n            if (!manager.data.enabled || !manager.j2d.isPlay || !manager.j2d.element.hasClass('active')) return true;\r\n            var keysPressed = manager.data.keysPressed;\r\n            var keyCode = (e.originalEvent.wheelDelta / 120 > 0) ?\r\n                getKey(InputManager.key, 4) : getKey(InputManager.key, 5);\r\n\r\n            e.which = (e.originalEvent.wheelDelta / 120 > 0) ? 4 : 5;\r\n\r\n            if (-1 === $.inArray(InputManager.key[keyCode], keysPressed)) {\r\n                keysPressed.push(InputManager.key[keyCode]);\r\n            }\r\n\r\n            if (checkKeyMap(e) || manager.data.preventAll) {\r\n                e.preventDefault();\r\n                manager.fixMouseWheel();\r\n            }\r\n\r\n            manager.element.trigger('mouseWheel', {keyCode: keyCode});\r\n        },\r\n\r\n        mouseWheelCancel: function (keysPressed, keyCode) {\r\n            keysPressed.splice(\r\n                keysPressed.indexOf(InputManager.key[keyCode]), 1\r\n            );\r\n        },\r\n\r\n        onMouseMove: function (e) {\r\n            var manager = e.data.manager;\r\n            var mouse = e.data.manager.data.mouse;\r\n\r\n            manager.data.mouse.currentPosition.x = e.pageX;\r\n            manager.data.mouse.currentPosition.y = e.pageY;\r\n\r\n            if (e.data.manager.data.enableAdditionalData) {\r\n                mouse.distance = Math.sqrt(\r\n                    Math.pow((mouse.currentPosition.x - mouse.startPosition.x), 2)\r\n                    + Math.pow((mouse.currentPosition.y - mouse.startPosition.y), 2)\r\n                ).toFixed(1);\r\n            }\r\n        },\r\n\r\n        onKeyboardPress: function (e) {\r\n            var manager = e.data.manager;\r\n            if (!manager.data.enabled || !manager.j2d.isPlay || !manager.element.hasClass('active')) return true;\r\n            var keysPressed = manager.data.keysPressed;\r\n            var keyCode = getKey(InputManager.key, e.which) || 'KEY_UNKNOWN_' + e.which;\r\n            if (e.data.event === 2 && true === manager.data.writeMode) {\r\n                var char = String.fromCharCode(e.which || e.keyCode);\r\n                e.preventDefault();\r\n                manager.element.focus().trigger('keyboardCharPress', {\r\n                    key: e.which || e.keyCode,\r\n                    keyCode: keyCode,\r\n                    char: char\r\n                });\r\n            }\r\n\r\n            if (e.data.event !== 2 && false === manager.data.writeMode) {\r\n                if (e.data.event === 0) {\r\n                    if (-1 === $.inArray(InputManager.key[keyCode], keysPressed)) {\r\n                        keysPressed.push(InputManager.key[keyCode]);\r\n                        if (manager.data.enableAdditionalData) {\r\n                            manager.data.timePressed = e.timeStamp;\r\n                        }\r\n                    }\r\n                    if (checkKeyMap(e, false) || manager.data.preventAll) {\r\n                        e.preventDefault();\r\n                    }\r\n                } else {\r\n                    if (checkKeyMap(e) || manager.data.preventAll) {\r\n                        e.preventDefault();\r\n                    }\r\n\r\n                    keysPressed.splice(\r\n                        keysPressed.indexOf(InputManager.key[keyCode]), 1\r\n                    );\r\n                }\r\n\r\n                manager.element.trigger(e.data.event === 0 ?\r\n                    'keyboardKeyDown' : 'keyboardKeyUp', {keyCode: keyCode, key: e.which || e.keyCode}\r\n                );\r\n            }\r\n\r\n            if (e.data.event !== 2 && true === manager.data.writeMode) {\r\n                manager.element.trigger(e.data.event === 0 ?\r\n                    'keyboardKeyDown' : 'keyboardKeyUp', {keyCode: keyCode, key: e.which || e.keyCode}\r\n                );\r\n            }\r\n        },\r\n\r\n        onTouchTap: function (e) {\r\n            var manager = e.data.manager;\r\n            if (!manager.data.enabled || !manager.j2d.isPlay || !manager.j2d.element.hasClass('active')) return true;\r\n            var keysPressed = manager.data.keysPressed;\r\n            var keyCode = getKey(InputManager.key, e.which + 1) || 'KEY_UNKNOWN_' + e.which;\r\n            var touch = e.originalEvent.touches[0] || e.originalEvent.changedTouches[0];\r\n            var mouse = manager.data.mouse;\r\n\r\n            if (e.data.event === 0) {\r\n                if (-1 === $.inArray(InputManager.key[keyCode], keysPressed)) {\r\n                    keysPressed.push(InputManager.key[keyCode]);\r\n                    if (manager.data.enableAdditionalData) {\r\n                        mouse.startPosition.x = touch.pageX;\r\n                        mouse.startPosition.y = touch.pageY;\r\n                        mouse.distance = 0;\r\n\r\n                        manager.data.timePressed = e.timeStamp;\r\n                    }\r\n                }\r\n                if (checkKeyMap(e, false) || manager.data.preventAll) {\r\n                    e.preventDefault();\r\n                }\r\n            } else {\r\n                if (checkKeyMap(e) || manager.data.preventAll) {\r\n                    e.preventDefault();\r\n                }\r\n\r\n                if (manager.data.enableAdditionalData) {\r\n                    mouse.previousDistance = mouse.distance;\r\n                    mouse.startPosition.x = 0;\r\n                    mouse.startPosition.y = 0;\r\n                }\r\n\r\n                keysPressed.splice(\r\n                    keysPressed.indexOf(InputManager.key[keyCode]), 1\r\n                );\r\n            }\r\n\r\n            manager.element.trigger(e.data.event === 0 ?\r\n                'mouseKeyDown' : 'mouseKeyUp', {keyCode: keyCode}\r\n            );\r\n        },\r\n\r\n        onTouchMove: function (e) {\r\n            var touch = e.originalEvent.touches[0] || e.originalEvent.changedTouches[0];\r\n            var mouse = e.data.manager.data.mouse;\r\n\r\n            mouse.currentPosition.x = touch.pageX.toFixed(0);\r\n            mouse.currentPosition.y = touch.pageY.toFixed(0);\r\n\r\n            if (e.data.manager.data.enableAdditionalData) {\r\n                mouse.distance = Math.sqrt(\r\n                    Math.pow((mouse.currentPosition.x - mouse.startPosition.x), 2)\r\n                    + Math.pow((mouse.currentPosition.y - mouse.startPosition.y), 2)\r\n                ).toFixed(1);\r\n            }\r\n        }\r\n    };\r\n\r\n    var bindEvents = function (manager) {\r\n        var selector = '[guid=' + manager.id + ']';\r\n\r\n        $(document).on('contextmenu', selector, {manager: manager, event: 2}, events.onMouseClick);\r\n        $(document).on('mousedown', selector, {manager: manager, event: 0}, events.onMouseClick);\r\n        $(document).on('mouseup', selector, {manager: manager, event: 1}, events.onMouseClick);\r\n        $(document).on('mousewheel', selector, {manager: manager}, events.onMouseWheel);\r\n        $(document).on('mousemove', selector, {manager: manager}, events.onMouseMove);\r\n\r\n        $(document).on('keydown', null, {manager: manager, event: 0}, events.onKeyboardPress);\r\n        $(document).on('keyup', null, {manager: manager, event: 1}, events.onKeyboardPress);\r\n        $(document).on('keypress', null, {manager: manager, event: 2}, events.onKeyboardPress);\r\n\r\n        $(document).on('touchstart', selector, {manager: manager, event: 0}, events.onTouchTap);\r\n        $(document).on('touchend', selector, {manager: manager, event: 1}, events.onTouchTap);\r\n        $(document).on('touchmove ', selector, {manager: manager}, events.onTouchMove);\r\n    };\r\n\r\n    var unbindEvents = function (manager) {\r\n        var selector = '[guid=' + manager.id + ']';\r\n\r\n        $(document).off('contextmenu', selector, {manager: manager, event: 1}, events.onMouseClick);\r\n        $(document).off('mousedown', selector, {manager: manager, event: 0}, events.onMouseClick);\r\n        $(document).off('mouseup', selector, {manager: manager, event: 1}, events.onMouseClick);\r\n        $(document).off('mousewheel', selector, {manager: manager}, events.onMouseWheel);\r\n        $(document).off('mousemove', selector, {manager: manager}, events.onMouseMove);\r\n\r\n        $(document).off('keydown', null, {manager: manager, event: 0}, events.onKeyboardPress);\r\n        $(document).off('keyup', null, {manager: manager, event: 1}, events.onKeyboardPress);\r\n        $(document).off('keypress', null, {manager: manager, event: 2}, events.onKeyboardPress);\r\n\r\n        $(document).off('touchstart', selector, {manager: manager, event: 0}, events.onTouchTap);\r\n        $(document).off('touchend', selector, {manager: manager, event: 1}, events.onTouchTap);\r\n        $(document).off('touchmove ', selector, {manager: manager}, events.onTouchMove);\r\n    };\r\n\r\n    InputManager.prototype.init = function () {\r\n        if (!this.data.enabled && global.j2dPlugin.pluginInit) {\r\n            bindEvents(this);\r\n\r\n            this.data.enabled = true;\r\n        }\r\n    };\r\n\r\n    InputManager.prototype.update = function () {\r\n        if (!this.data.enabled) return false;\r\n\r\n        var dX = this.j2d.scene.canvas.offsetWidth / this.j2d.scene.width,\r\n            dY = this.j2d.scene.canvas.offsetHeight / this.j2d.scene.height,\r\n            x = this.data.mouse.currentPosition.x / dX,\r\n            y = this.data.mouse.currentPosition.y / dY;\r\n\r\n        var offset = this.element.offset();\r\n        this.data.viewport.x = this.j2d.scene.viewport.x + x - offset.left;\r\n        this.data.viewport.y = this.j2d.scene.viewport.y + y - offset.top;\r\n    };\r\n\r\n    InputManager.prototype.flush = function () {\r\n        this.data.keysPressed.length = 0;\r\n    };\r\n\r\n    InputManager.prototype.clear = function () {\r\n    };\r\n\r\n    InputManager.prototype.fixMouseWheel = function () {\r\n        var keyPressed = this.data.keysPressed;\r\n        if (-1 !== $.inArray(InputManager.key.SCROLL_MOUSE_UP, keyPressed)) {\r\n            events.mouseWheelCancel(keyPressed, InputManager.key.SCROLL_MOUSE_UP);\r\n        } else if (-1 !== $.inArray(InputManager.key.SCROLL_MOUSE_DOWN, keyPressed)) {\r\n            events.mouseWheelCancel(keyPressed, InputManager.key.SCROLL_MOUSE_DOWN);\r\n        }\r\n    };\r\n\r\n    InputManager.prototype.enable = function () {\r\n        if (!this.data.enabled) {\r\n            //bindEvents(this);\r\n            this.data.enabled = false;\r\n        }\r\n    };\r\n\r\n    InputManager.prototype.disable = function () {\r\n        if (this.data.enabled) {\r\n            //unbindEvents(this);\r\n            this.data.enabled = false;\r\n        }\r\n    };\r\n\r\n    InputManager.prototype.load = function (newKeyMap) {\r\n        var oldKeyMap = JSON.stringify(this.keyMap);\r\n        this.keyMap = JSON.parse(newKeyMap);\r\n        return oldKeyMap;\r\n    };\r\n\r\n    InputManager.prototype.save = function () {\r\n        return JSON.stringify(this.keyMap);\r\n    };\r\n\r\n    /** +KeyMap Manager **/\r\n    InputManager.prototype.setKeys = function (mapObject) {\r\n        this.keyMap = $.extend(true, {}, this.keyMap, mapObject);\r\n    };\r\n    /** -KeyMap Manager **/\r\n\r\n    var getPressData = function (manager, keyList) {\r\n        if (!manager.data.enableAdditionalData) return true;\r\n        return {\r\n            keyList: keyList,\r\n            time: Date.now() - manager.data.timePressed\r\n        };\r\n    };\r\n\r\n    InputManager.prototype.getMouseMoveDistance = function () {\r\n        if (!this.data.enableAdditionalData) return 0;\r\n        return {current: this.data.mouse.distance, previous: this.data.mouse.previousDistance};\r\n    };\r\n\r\n    /** +Input Checkers **/\r\n    InputManager.prototype.checkPressedKeyList = function (keyList) {\r\n        if ($.isArray(keyList)) {\r\n            if (keyList.length !== this.data.keysPressed.length) {\r\n                return false;\r\n            } else if (this.data.keysPressed.equals(keyList)) {\r\n                this.fixMouseWheel();\r\n                return getPressData(this, keyList);\r\n            }\r\n            this.fixMouseWheel();\r\n            return false;\r\n        }\r\n        //if (!this.data.keysPressed.equals([])) console.log(this.data.keysPressed);\r\n        if (isNaN(keyList)) return false;\r\n        if (-1 !== this.data.keysPressed.indexOf(keyList)) {\r\n            this.fixMouseWheel();\r\n            return getPressData(this, keyList);\r\n        }\r\n        this.fixMouseWheel();\r\n        return false;\r\n    };\r\n\r\n    InputManager.prototype.checkPressedKeyMap = function (key) {\r\n        if (this.keyMap[key] === undefined) return false;\r\n        var keyList = this.keyMap[key][0];\r\n\r\n        return this.checkPressedKeyList(keyList);\r\n    };\r\n\r\n    //InputManager.prototype.getPosition = function () {\r\n    //    return this.j2d.vector.v2f(this.data.viewport.x + 0.5, this.data.viewport.y + 0.5);\r\n    //};\r\n\r\n    //InputManager.prototype.onNode = function (id) {\r\n    //    if (!id.layer.visible) return false;\r\n    //    return (this.data.viewport.x > id.options.position.x && this.data.viewport.x < id.options.position.x + id.options.size.x) &&\r\n    //        (this.data.viewport.y > id.options.position.y && this.data.viewport.y < id.options.position.y + id.options.size.y);\r\n    //};\r\n    /** -Input Checkers **/\r\n\r\n    /** +Input Write Mode **/\r\n    InputManager.prototype.setWriteMode = function (mode) {\r\n        this.data.writeMode = !!mode;\r\n    };\r\n\r\n    InputManager.prototype.isWriteMode = function () {\r\n        return !!this.data.writeMode;\r\n    };\r\n    /** -Input Write Mode **/\r\n\r\n    /** +Cursor **/\r\n    InputManager.prototype.setCursorImage = function (image) {\r\n        this.data.cursor.image = 'url(\"' + image + '\"), auto';\r\n        $(this.element).css('cursor', this.data.cursor.image);\r\n    };\r\n\r\n    InputManager.prototype.toggleCursor = function (enable) {\r\n        if (enable !== undefined) {\r\n            this.data.cursor.enable = !!enable;\r\n        } else {\r\n            this.data.cursor.enable = !this.data.cursor.enable;\r\n        }\r\n\r\n        if (!this.data.cursor.enable) {\r\n            this.data.cursor.image = $(this.j2d.element).css('cursor');\r\n            $(this.element).css('cursor', 'none');\r\n        } else {\r\n            $(this.element).css('cursor', this.data.cursor.image);\r\n        }\r\n    };\r\n\r\n    InputManager.prototype.isCursorVisible = function () {\r\n        return !!this.data.cursor.enable;\r\n    };\r\n    /** -Cursor **/\r\n\r\n    /** static keys arrayList **/\r\n    InputManager.key = {\r\n        KEY_MOUSE_LEFT: 1,\r\n        KEY_MOUSE_MIDDLE: 2,\r\n        KEY_MOUSE_RIGHT: 3,\r\n\r\n        SCROLL_MOUSE_UP: 4,\r\n        SCROLL_MOUSE_DOWN: 5,\r\n\r\n        KEY_BACKSPACE: 8,\r\n        KEY_TAB: 9,\r\n        KEY_ENTER: 13,\r\n        KEY_SHIFT: 16,\r\n        KEY_CTRL: 17,\r\n        KEY_ALT: 18,\r\n        KEY_PAUSE: 19,\r\n        KEY_BREAK: 19,\r\n        KEY_CAPS_LOCK: 20,\r\n        KEY_ESCAPE: 27,\r\n        KEY_SPACE_BAR: 32,\r\n        KEY_PAGE_UP: 33,\r\n        KEY_PAGE_DOWN: 34,\r\n        KEY_END: 35,\r\n        KEY_HOME: 36,\r\n        KEY_LEFT_ARROW: 37,\r\n        KEY_UP_ARROW: 38,\r\n        KEY_RIGHT_ARROW: 39,\r\n        KEY_DOWN_ARROW: 40,\r\n        KEY_INSERT: 45,\r\n        KEY_DELETE: 46,\r\n        KEY_0: 48,\r\n        KEY_1: 49,\r\n        KEY_2: 50,\r\n        KEY_3: 51,\r\n        KEY_4: 52,\r\n        KEY_5: 53,\r\n        KEY_6: 54,\r\n        KEY_7: 55,\r\n        KEY_8: 56,\r\n        KEY_9: 57,\r\n        KEY_A: 65,\r\n        KEY_B: 66,\r\n        KEY_C: 67,\r\n        KEY_D: 68,\r\n        KEY_E: 69,\r\n        KEY_F: 70,\r\n        KEY_G: 71,\r\n        KEY_H: 72,\r\n        KEY_I: 73,\r\n        KEY_J: 74,\r\n        KEY_K: 75,\r\n        KEY_L: 76,\r\n        KEY_M: 77,\r\n        KEY_N: 78,\r\n        KEY_O: 79,\r\n        KEY_P: 80,\r\n        KEY_Q: 81,\r\n        KEY_R: 82,\r\n        KEY_S: 83,\r\n        KEY_T: 84,\r\n        KEY_U: 85,\r\n        KEY_V: 86,\r\n        KEY_W: 87,\r\n        KEY_X: 88,\r\n        KEY_Y: 89,\r\n        KEY_Z: 90,\r\n        KEY_LEFT_WINDOW_KEY: 91,\r\n        KEY_RIGHT_WINDOW_KEY: 92,\r\n        KEY_SELECT_KEY: 93,\r\n        KEY_NUMPAD_0: 96,\r\n        KEY_NUMPAD_1: 97,\r\n        KEY_NUMPAD_2: 98,\r\n        KEY_NUMPAD_3: 99,\r\n        KEY_NUMPAD_4: 100,\r\n        KEY_NUMPAD_5: 101,\r\n        KEY_NUMPAD_6: 102,\r\n        KEY_NUMPAD_7: 103,\r\n        KEY_NUMPAD_8: 104,\r\n        KEY_NUMPAD_9: 105,\r\n        KEY_MULTIPLY: 106,\r\n        KEY_ADD: 107,\r\n        KEY_SUBTRACT: 109,\r\n        KEY_DECIMAL_POINT: 110,\r\n        KEY_DIVIDE: 111,\r\n        KEY_F1: 112,\r\n        KEY_F2: 113,\r\n        KEY_F3: 114,\r\n        KEY_F4: 115,\r\n        KEY_F5: 116,\r\n        KEY_F6: 117,\r\n        KEY_F7: 118,\r\n        KEY_F8: 119,\r\n        KEY_F9: 120,\r\n        KEY_F10: 121,\r\n        KEY_F11: 122,\r\n        KEY_F12: 123,\r\n        KEY_NUM_LOCK: 144,\r\n        KEY_SCROLL_LOCK: 145,\r\n        KEY_SEMI_COLON: 186,\r\n        KEY_EQUAL_SIGN: 187,\r\n        KEY_COMMA: 188,\r\n        KEY_DASH: 189,\r\n        KEY_PERIOD: 190,\r\n        KEY_FORWARD_SLASH: 191,\r\n        KEY_GRAVE_ACCENT: 192,\r\n        KEY_OPEN_BRACKET: 219,\r\n        KEY_BACK_SLASH: 220,\r\n        KEY_CLOSE_BRACKET: 221,\r\n        KEY_SINGLE_QUOTE: 222,\r\n        KEY_LEFT_COMMAND: 224,\r\n        KEY_RIGHT_COMMAND: 224\r\n    };\r\n\r\n    function getKey(object, value) {\r\n        return Object.keys(object).filter(function (key) {\r\n            return object[key] === value\r\n        })[0];\r\n    }\r\n\r\n    if (global.J2D !== undefined) global.InputManager = InputManager;\r\n    return InputManager;\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/BaseNode', ['jquery', 'utils/Vector2d'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('jquery'), require('utils/Vector2d'));\r\n    } else {\r\n        factory(root.jQuery, root.Vector2d);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function ($, Vector2d) {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * @param {BaseNode.defaults} data\r\n     * @constructor\r\n     * @property {BaseNode.defaults} data\r\n     */\r\n    var BaseNode = function (data) {\r\n        var baseNode = this;\r\n        this.data = $.extend(true, {}, BaseNode.defaults, data);\r\n\r\n        if (this.data.id === null) {\r\n            this.data.id = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n                var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n                return v.toString(16);\r\n            });\r\n        }\r\n\r\n        Object.defineProperty(this, 'opacity', {\r\n            get: function () {\r\n                return baseNode.data.opacity;\r\n            },\r\n            set: function (value) {\r\n                baseNode.data.opacity = value;\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(this, 'visible', {\r\n            get: function () {\r\n                return baseNode.data.visible;\r\n            },\r\n            set: function (value) {\r\n                baseNode.data.visible = !!value;\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(this, 'angle', {\r\n            get: function () {\r\n                return baseNode.data.angle;\r\n            },\r\n            set: function (value) {\r\n                baseNode.data.angle = value % 360;\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(this, 'cache', {\r\n            get: function () {\r\n                return baseNode.data.enabledCache;\r\n            },\r\n            set: function (value) {\r\n                baseNode.data.enabledCache = !!value;\r\n            }\r\n        });\r\n    };\r\n\r\n    BaseNode.defaults = {\r\n        /** @type {string|null} */\r\n        id: null,\r\n        type: 'BaseNode',\r\n\r\n        position: {\r\n            x: 0.0,\r\n            y: 0.0\r\n        },\r\n        size: {\r\n            x: 0.0,\r\n            y: 0.0\r\n        },\r\n        offset: {\r\n            x: 0.0,\r\n            y: 0.0\r\n        },\r\n\r\n        visible: true,\r\n        angle: 0,\r\n        opacity: 1,\r\n\r\n        cache: null,\r\n        enabledCache: false // TODO:: Collections & AnimatedPrimitiveNode\r\n    };\r\n\r\n    /**\r\n     * @returns {Vector2d}\r\n     */\r\n    BaseNode.prototype.getPosition = function () {\r\n        return new Vector2d(this.data.position.x, this.data.position.y);\r\n    };\r\n\r\n    /**\r\n     * @param {Vector2d} position\r\n     * @returns {BaseNode}\r\n     */\r\n    BaseNode.prototype.setPosition = function (position) {\r\n        if (position !== undefined && position instanceof Vector2d) {\r\n            this.data.position = position.getVector();\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @returns {Vector2d}\r\n     */\r\n    BaseNode.prototype.getSize = function () {\r\n        return new Vector2d(this.data.size.x, this.data.size.y);\r\n    };\r\n\r\n    /**\r\n     * @param {Vector2d} size\r\n     * @returns {BaseNode}\r\n     */\r\n    BaseNode.prototype.setSize = function (size) {\r\n        if (size !== undefined && size instanceof Vector2d) {\r\n            this.data.size = size.getVector();\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @returns {Vector2d}\r\n     */\r\n    BaseNode.prototype.getOffset = function () {\r\n        return new Vector2d(this.data.offset.x, this.data.offset.y);\r\n    };\r\n\r\n    /**\r\n     * @param {Vector2d} offset\r\n     * @returns {BaseNode}\r\n     */\r\n    BaseNode.prototype.setOffset = function (offset) {\r\n        if (offset !== undefined && offset instanceof Vector2d) {\r\n            this.data.offset = offset.getVector();\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /* ------------------------------ Render ------------------------------ */\r\n\r\n    /**\r\n     * Must be override this in child!\r\n     *\r\n     * @deprecated\r\n     * @overridable\r\n     *\r\n     * @param {object} context\r\n     * @param {{offset: {x: number, y: number}, size: {x: number, y: number}, scale: number, angle: number}} viewport\r\n     * @param {CollectionNode} collection\r\n     * @param {object} data\r\n     * @returns {BaseNode}\r\n     */\r\n    BaseNode.prototype.render = function (context, viewport, collection, data) {\r\n        // throw new Exception('Trying to render base node.'); // TODO:: exceptions\r\n        return this;\r\n    };\r\n\r\n    if (global.J2D !== undefined) global.BaseNode = BaseNode;\r\n    return BaseNode;\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/CameraNode', ['jquery', 'nodes/BaseNode'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('jquery'), require('nodes/BaseNode'));\r\n    } else {\r\n        factory(root.jQuery, root.BaseNode);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function ($, BaseNode) {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * @param {BaseNode.defaults|CameraNode.defaults} data data\r\n     * @constructor\r\n     * @property {BaseNode.defaults|CameraNode.defaults} data\r\n     */\r\n    var CameraNode = function (data) {\r\n        BaseNode.call(this, $.extend(true, {}, CameraNode.defaults, data));\r\n    };\r\n\r\n    CameraNode.prototype = Object.create(BaseNode.prototype);\r\n    CameraNode.prototype.constructor = CameraNode;\r\n\r\n    CameraNode.defaults = {\r\n        type: 'CameraNode'\r\n    };\r\n\r\n    /**\r\n     * @param {{x: number, y: number}} screen\r\n     * @param {Function|callback} calculate\r\n     * @returns {{offset: {x: number, y: number}, size: {x: number, y: number}, scale: number, angle: number}}\r\n     */\r\n    CameraNode.prototype.getCameraViewport = function (screen, calculate) {\r\n        return calculate(screen, {\r\n            offset: this.data.position,\r\n            size: this.data.size,\r\n            scale: 1.0\r\n        });\r\n    };\r\n\r\n    /* ------------------------------ Render ------------------------------ */\r\n\r\n    /**\r\n     * @override\r\n     *\r\n     * @param {object} context\r\n     * @param {{offset: {x: number, y: number}, size: {x: number, y: number}, scale: number, angle: number}} viewport\r\n     * @param {CollectionNode} collection\r\n     * @param {object} data\r\n     * @returns {CameraNode}\r\n     */\r\n    CameraNode.prototype.render = function (context, viewport, collection, data) {\r\n        return this;\r\n    };\r\n\r\n    if (global.J2D !== undefined) global.CameraNode = CameraNode;\r\n    return CameraNode;\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/CollectionNode', ['jquery', 'nodes/BaseNode', 'utils/ArrayMap'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('jquery'), require('nodes/BaseNode'), require('utils/ArrayMap'));\r\n    } else {\r\n        factory(root.jQuery, root.BaseNode, root.ArrayMap);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function ($, BaseNode, ArrayMap) {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * @param {BaseNode.defaults|CollectionNode.defaults} data\r\n     * @constructor\r\n     * @property {BaseNode.defaults|CollectionNode.defaults} data\r\n     */\r\n    var CollectionNode = function (data) {\r\n        var collectionNode = this;\r\n        BaseNode.call(this, $.extend(true, {}, CollectionNode.defaults, data));\r\n\r\n        if (this.data.collection === null) {\r\n            this.data.collection = new ArrayMap();\r\n        }\r\n\r\n        Object.defineProperty(this, 'zIndex', {\r\n            get: function () {\r\n                return 1000 - collectionNode.data.zIndex;\r\n            },\r\n            set: function (value) {\r\n                collectionNode.data.zIndex = 1000 + value;\r\n            }\r\n        });\r\n    };\r\n\r\n    CollectionNode.prototype = Object.create(BaseNode.prototype);\r\n    CollectionNode.prototype.constructor = CollectionNode;\r\n\r\n    CollectionNode.defaults = {\r\n        type: 'CollectionNode',\r\n        /** @type {ArrayMap|null} */\r\n        collection: null,\r\n        zIndex: 1000\r\n    };\r\n\r\n    /**\r\n     * @param {BaseNode|CollectionNode} node\r\n     * @param {string} key\r\n     * @returns {CollectionNode}\r\n     */\r\n    CollectionNode.prototype.add = function (node, key) {\r\n        if (node instanceof BaseNode) {\r\n            key = key || node.data.id;\r\n            this.data.collection.add(key, node);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @param {BaseNode|CollectionNode|null} node\r\n     * @param {string} key\r\n     * @returns {CollectionNode}\r\n     */\r\n    CollectionNode.prototype.remove = function (node, key) {\r\n        if (node instanceof BaseNode) {\r\n            this.data.collection.remove(this.data.collection[node.data.id]);\r\n        }\r\n        if (typeof key === 'string' && node === null) {\r\n            this.data.collection.remove(key);\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @returns {CollectionNode}\r\n     */\r\n    CollectionNode.prototype.flush = function () {\r\n        this.data.collection.length = 0;\r\n        return this;\r\n    };\r\n\r\n    /* ------------------------------ Render ------------------------------ */\r\n\r\n    /**\r\n     * @override\r\n     *\r\n     * @param {object} context\r\n     * @param {{offset: {x: number, y: number}, size: {x: number, y: number}, scale: number, angle: number}} viewport\r\n     * @param {CollectionNode} collection\r\n     * @param {object} data\r\n     * @returns {CollectionNode}\r\n     */\r\n    CollectionNode.prototype.render = function (context, viewport, collection, data) {\r\n        var collectionNode = this;\r\n\r\n        if (this.data.collection.length !== 0) {\r\n            this.data.collection.each(function (index) {\r\n                if (collectionNode.data.collection.hasOwnProperty(index)\r\n                    && collectionNode.data.collection[index] instanceof BaseNode) {\r\n                    collectionNode.data.collection[index].render(context, viewport, collection, data);\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    };\r\n\r\n    if (global.J2D !== undefined) global.CollectionNode = CollectionNode;\r\n    return CollectionNode;\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/RectNode', ['jquery', 'nodes/BaseNode', 'utils/MathUtil'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('jquery'), require('nodes/BaseNode'), require('utils/MathUtil'));\r\n    } else {\r\n        factory(root.jQuery, root.BaseNode, root.MathUtil);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function ($, BaseNode, MathUtil) {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * @param {BaseNode.defaults|RectNode.defaults} data data\r\n     * @constructor\r\n     * @property {BaseNode.defaults|RectNode.defaults} data\r\n     */\r\n    var RectNode = function (data) {\r\n        BaseNode.call(this, $.extend(true, {}, RectNode.defaults, data));\r\n    };\r\n\r\n    RectNode.prototype = Object.create(BaseNode.prototype);\r\n    RectNode.prototype.constructor = RectNode;\r\n\r\n    RectNode.defaults = {\r\n        type: 'RectNode',\r\n        color: '#000000'\r\n    };\r\n\r\n    /**\r\n     * @returns {string}\r\n     */\r\n    RectNode.prototype.getColor = function () {\r\n        return this.data.color;\r\n    };\r\n\r\n    /**\r\n     * @param {string} color\r\n     * @returns {RectNode}\r\n     */\r\n    RectNode.prototype.setColor = function (color) {\r\n        this.data.color = color;\r\n        return this;\r\n    };\r\n\r\n\r\n    /* ------------------------------ Draw ------------------------------ */\r\n\r\n    /**\r\n     * @param {object} context\r\n     * @param {{offset: {x: number, y: number}, size: {x: number, y: number}, scale: number, angle: number}} viewport\r\n     * @param {CollectionNode} collection\r\n     * @param {object} data\r\n     * @returns {null}\r\n     */\r\n    RectNode.prototype.draw = function (context, viewport, collection, data) {\r\n        //if (this.data.visible && this.isLookScene()) {\r\n        if (this.data.visible) {\r\n\r\n            if (this.data.opacity !== 1.0) {\r\n                var tempOpacity = context.globalAlpha;\r\n                context.globalAlpha = this.options.opacity;\r\n            }\r\n\r\n            if (this.data.angle) {\r\n                context.save();\r\n\r\n                context.translate(this.getPosition().x - viewport.x, this.getPosition().y - viewport.y);\r\n                context.rotate(MathUtil.degree2Radian(this.data.angle));\r\n                context.translate(-(this.getPosition().x - viewport.x), -(this.getPosition().y - viewport.y));\r\n            }\r\n\r\n            context.fillStyle = this.data.color;\r\n            context.lineWidth = 0;\r\n\r\n            context.fillRect(\r\n                this.data.position.x - viewport.x,\r\n                this.data.position.y - viewport.y,\r\n                this.data.size.x,\r\n                this.data.size.y\r\n            );\r\n\r\n            if (this.data.angle) {\r\n                context.restore();\r\n            }\r\n\r\n            if (this.data.opacity !== 1.0) {\r\n                context.globalAlpha = tempOpacity;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n\r\n    /* ------------------------------ Render ------------------------------ */\r\n\r\n    /**\r\n     * @override\r\n     *\r\n     * @param {object} context\r\n     * @param {{offset: {x: number, y: number}, size: {x: number, y: number}, scale: number, angle: number}} viewport\r\n     * @param {CollectionNode} collection\r\n     * @param {object} data\r\n     * @returns {RectNode}\r\n     */\r\n    RectNode.prototype.render = function (context, viewport, collection, data) {\r\n        this.draw(context, viewport, collection, data);\r\n        return this;\r\n    };\r\n\r\n    if (global.J2D !== undefined) global.RectNode = RectNode;\r\n    return RectNode;\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('utils/ArrayMap', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var ArrayMap = function (args) {\r\n        Array.call(this, args);\r\n    };\r\n\r\n    ArrayMap.prototype = Object.create(Array.prototype);\r\n    ArrayMap.prototype.constructor = ArrayMap;\r\n\r\n    ArrayMap.prototype.last = function () {\r\n        return this[this.length - 1];\r\n    };\r\n\r\n    /**\r\n     * @param {ArrayMap} array\r\n     * @returns {boolean}\r\n     */\r\n    ArrayMap.prototype.equals = function (array) {\r\n        if (!array)\r\n            return false;\r\n\r\n        if (this.length != array.length)\r\n            return false;\r\n\r\n        for (var i = 0, l = this.length; i < l; i++) {\r\n            if (this[i] instanceof Array && array[i] instanceof Array) {\r\n                if (!this[i].equals(array[i]))\r\n                    return false;\r\n            }\r\n            else if (this[i] != array[i]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    Object.defineProperty(ArrayMap.prototype, 'equals', {enumerable: false});\r\n\r\n    /**\r\n     * @param {string|Object} object\r\n     * @returns {boolean}\r\n     */\r\n    ArrayMap.prototype.contains = function (object) {\r\n        var i = this.length;\r\n        while (i--) {\r\n            if (this[i] === object) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    Object.defineProperty(ArrayMap.prototype, 'contains', {enumerable: false});\r\n\r\n    /**\r\n     * @param {Function} callback\r\n     * @returns {boolean}\r\n     */\r\n    ArrayMap.prototype.each = function (callback) {\r\n        if (!callback) return false;\r\n        var result = false;\r\n        for (var i = 0; i < this.length; i++) {\r\n            if ((result = callback(this[i], i)) == false) {\r\n                return result;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    Object.defineProperty(ArrayMap.prototype, 'each', {enumerable: false});\r\n\r\n    /**\r\n     * @param {string|Object} key\r\n     * @param {*} value\r\n     * @returns {ArrayMap}\r\n     */\r\n    ArrayMap.prototype.add = function (key, value) {\r\n        if (this.contains(key))\r\n            this[key] = value;\r\n        else {\r\n            this.push(key);\r\n            this[key] = value;\r\n        }\r\n        return this;\r\n    };\r\n    Object.defineProperty(ArrayMap.prototype, 'add', {enumerable: false});\r\n\r\n    /**\r\n     * @param {string|Object} key\r\n     * @returns {ArrayMap}\r\n     */\r\n    ArrayMap.prototype.remove = function (key) {\r\n        for (var i = 0; i < this.length; ++i) {\r\n            if (this[i] == key) {\r\n                this.splice(i, 1);\r\n                delete this[key];\r\n                return this;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    Object.defineProperty(ArrayMap.prototype, 'remove', {enumerable: false});\r\n\r\n    if (typeof define !== 'function' || !define.amd) global.ArrayMap = ArrayMap;\r\n\r\n    return ArrayMap;\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('utils/DeviceUtil', ['jquery', 'utils/Vector2dInteger'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('jquery'), require('utils/Vector2dInteger'));\r\n    } else {\r\n        factory(root.jQuery, root.Vector2dInteger);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function ($, Vector2dInteger) {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * Class utility for get system browser window size\r\n     */\r\n    var DeviceUtil = function () {\r\n        this.width = parseInt($(document).width()) < parseInt(screen.width) ? parseInt($(document).width()) : parseInt(screen.width);\r\n        this.height = parseInt($(document).height()) < parseInt(screen.height) ? parseInt($(document).height()) : parseInt(screen.height);\r\n    };\r\n\r\n    /**\r\n     * @returns {DeviceUtil}\r\n     */\r\n    DeviceUtil.prototype.onResize = function () {\r\n        this.width = window.innerWidth;\r\n        this.height = window.innerHeight;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @returns {number}\r\n     */\r\n    DeviceUtil.prototype.getWidth = function () {\r\n        return this.width;\r\n    };\r\n\r\n    /**\r\n     * @returns {number}\r\n     */\r\n    DeviceUtil.prototype.getHeight = function () {\r\n        return this.height;\r\n    };\r\n\r\n    /**\r\n     * @returns {Vector2d}\r\n     */\r\n    DeviceUtil.prototype.getSize = function () {\r\n        return new Vector2dInteger(this.width, this.height);\r\n    };\r\n\r\n    if (global.J2D === undefined) global.DeviceUtil = DeviceUtil;\r\n    return DeviceUtil;\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('utils/Exceptions', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * Default Exception\r\n     * Create custom exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var Exception = function (message) {\r\n        Error.call(this);\r\n        this.message = message;\r\n\r\n        /**\r\n         * Convert exception to String\r\n         * @returns {string|}\r\n         */\r\n        this.toString = function () {\r\n            return this.message;\r\n        }\r\n    };\r\n\r\n    Exception.prototype = Object.create(Error.prototype);\r\n    Exception.prototype.constructor = Exception;\r\n\r\n    /**\r\n     * RuntimeException\r\n     * Create RuntimeException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var RuntimeException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    RuntimeException.prototype = Object.create(Exception.prototype);\r\n    RuntimeException.prototype.constructor = RuntimeException;\r\n\r\n    /**\r\n     * InvalidArgumentException\r\n     * Create InvalidArgumentException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var InvalidArgumentException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    InvalidArgumentException.prototype = Object.create(Exception.prototype);\r\n    InvalidArgumentException.prototype.constructor = InvalidArgumentException;\r\n\r\n    /**\r\n     * BadFunctionCallException\r\n     * Create BadFunctionCallException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var BadFunctionCallException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    BadFunctionCallException.prototype = Object.create(Exception.prototype);\r\n    BadFunctionCallException.prototype.constructor = BadFunctionCallException;\r\n\r\n    /**\r\n     * BadMethodCallException\r\n     * Create BadMethodCallException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var BadMethodCallException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    BadMethodCallException.prototype = Object.create(Exception.prototype);\r\n    BadMethodCallException.prototype.constructor = BadMethodCallException;\r\n\r\n    /**\r\n     * LengthException\r\n     * Create LengthException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var LengthException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    LengthException.prototype = Object.create(Exception.prototype);\r\n    LengthException.prototype.constructor = LengthException;\r\n\r\n    /**\r\n     * LogicException\r\n     * Create LogicException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var LogicException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    LogicException.prototype = Object.create(Exception.prototype);\r\n    LogicException.prototype.constructor = LogicException;\r\n\r\n    /**\r\n     * OutOfBoundsException\r\n     * Create OutOfBoundsException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var OutOfBoundsException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    OutOfBoundsException.prototype = Object.create(Exception.prototype);\r\n    OutOfBoundsException.prototype.constructor = OutOfBoundsException;\r\n\r\n    /**\r\n     * OutOfRangeException\r\n     * Create OutOfRangeException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var OutOfRangeException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    OutOfRangeException.prototype = Object.create(Exception.prototype);\r\n    OutOfRangeException.prototype.constructor = OutOfRangeException;\r\n\r\n    /**\r\n     * RangeException\r\n     * Create RangeException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var RangeException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    RangeException.prototype = Object.create(Exception.prototype);\r\n    RangeException.prototype.constructor = RangeException;\r\n\r\n    /**\r\n     * UnexpectedValueException\r\n     *\r\n     * Create UnexpectedValueException exception with message\r\n     * @param {string} message\r\n     */\r\n    var UnexpectedValueException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    UnexpectedValueException.prototype = Object.create(Exception.prototype);\r\n    UnexpectedValueException.prototype.constructor = UnexpectedValueException;\r\n\r\n    if (typeof define !== 'function' || !define.amd) {\r\n        global.Exception = Exception;\r\n        global.RuntimeException = RuntimeException;\r\n        global.InvalidArgumentException = InvalidArgumentException;\r\n        global.BadFunctionCallException = BadFunctionCallException;\r\n        global.BadMethodCallException = BadMethodCallException;\r\n        global.LengthException = LengthException;\r\n        global.LogicException = LogicException;\r\n        global.OutOfBoundsException = OutOfBoundsException;\r\n        global.OutOfRangeException = OutOfRangeException;\r\n        global.RangeException = RangeException;\r\n        global.UnexpectedValueException = UnexpectedValueException;\r\n    }\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('utils/MathUtil', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    /**\r\n     *\r\n     */\r\n    var MathUtil = function () {\r\n    };\r\n\r\n    /**\r\n     * @param {number} number\r\n     * @returns {number}\r\n     */\r\n    MathUtil.number2Integer = function (number) {\r\n        return number >> 0;\r\n    };\r\n\r\n    /**\r\n     * @param {number} number\r\n     * @returns {boolean}\r\n     */\r\n    MathUtil.isInteger = function (number) {\r\n        return typeof number === \"number\" && isFinite(number)\r\n            && number > -9007199254740992 && number < 9007199254740992\r\n            && Math.floor(number) === number;\r\n    };\r\n\r\n    /**\r\n     * @param {number} min\r\n     * @param {number} max\r\n     * @param {number} opacity\r\n     * @returns {string}\r\n     */\r\n    MathUtil.randomColor = function (min, max, opacity) {\r\n        return 'rgba('\r\n            + MathUtil.random(min, max) + ', '\r\n            + MathUtil.random(min, max) + ', '\r\n            + MathUtil.random(min, max) + ', '\r\n            + opacity + ')';\r\n    };\r\n\r\n    /**\r\n     * @param {number} min\r\n     * @param {number} max\r\n     * @param {boolean} omitZero\r\n     * @returns {number}\r\n     */\r\n    MathUtil.random = function (min, max, omitZero) {\r\n        var random = (Math.floor(Math.random() * (max - min + 1) + min));\r\n        return (omitZero && random == 0)\r\n            ? MathUtil.random(min, max, omitZero)\r\n            : random;\r\n    };\r\n\r\n    /**\r\n     * @param {number} degree\r\n     * @returns {number}\r\n     */\r\n    MathUtil.degree2Radian = function (degree) {\r\n        return degree * (Math.PI / 180);\r\n    };\r\n\r\n    /**\r\n     * @param {number} radian\r\n     * @returns {number}\r\n     */\r\n    MathUtil.radian2Degree = function (radian) {\r\n        return radian * (180 / Math.PI);\r\n    };\r\n\r\n    if (global.J2D === undefined) global.MathUtil = MathUtil;\r\n    return MathUtil\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('utils/Vector2d', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * @param {number} x\r\n     * @param {number} y\r\n     */\r\n    var Vector2d = function (x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    };\r\n\r\n    /**\r\n     * @returns {number}\r\n     */\r\n    Vector2d.prototype.getX = function () {\r\n        return this.x;\r\n    };\r\n\r\n    /**\r\n     * @returns {number}\r\n     */\r\n    Vector2d.prototype.getY = function () {\r\n        return this.y;\r\n    };\r\n\r\n    /**\r\n     * @returns {{x: number, y: number}}\r\n     */\r\n    Vector2d.prototype.getVector = function () {\r\n        return {x: this.x, y: this.y};\r\n    };\r\n\r\n    /**\r\n     * @returns {Array<number>}\r\n     */\r\n    Vector2d.prototype.toArray = function () {\r\n        return [this.x, this.y];\r\n    };\r\n\r\n    /**\r\n     * @param {Array<number>} array\r\n     * @returns {Vector2d}\r\n     */\r\n    Vector2d.prototype.fromArray = function (array) {\r\n        this.x = array[0];\r\n        this.y = array[1];\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @returns {string}\r\n     */\r\n    Vector2d.prototype.toString = function () {\r\n        return \"(\" + this.x + \",\" + this.y + \")\";\r\n    };\r\n\r\n    if (global.J2D === undefined) global.Vector2d = Vector2d;\r\n\r\n    return Vector2d\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('utils/Vector2dInteger', ['utils/Vector2d'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('utils/Vector2d'));\r\n    } else {\r\n        factory(root.Vector2d);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (Vector2d) {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * @param {number} x\r\n     * @param {number} y\r\n     */\r\n    var Vector2dInteger = function (x, y) {\r\n        Vector2d.call(this, x >> 0, y >> 0);\r\n    };\r\n\r\n    Vector2dInteger.prototype = Object.create(Vector2d.prototype);\r\n    Vector2dInteger.prototype.constructor = Vector2dInteger;\r\n\r\n    /**\r\n     * @param {Array<number>} array\r\n     * @returns {Vector2d|Vector2dInteger}\r\n     */\r\n    Vector2dInteger.prototype.fromArray = function (array) {\r\n        this.x = array[0] >> 0;\r\n        this.y = array[1] >> 0;\r\n\r\n        return this;\r\n    };\r\n\r\n    if (global.J2D === undefined) global.Vector2dInteger = Vector2dInteger;\r\n\r\n    return Vector2dInteger;\r\n}));\r\n"],"sourceRoot":"/source/"}