{"version":3,"sources":["jquery.j2d.js","core/FrameManager.js","core/LayersManager.js","core/SceneManager.js","core/WebGL2D.js","utils/ArrayMap.js","utils/DeviceUtil.js","utils/Exceptions.js","utils/MathUtil.js","utils/Vector2d.js","utils/Vector2dInteger.js"],"names":["root","factory","define","amd","module","exports","require","jQuery","WebGL2D","FrameManager","SceneManager","LayersManager","window","global","$","defaults","id","undefined","io","deltaTime","pause","ready","frameLimit","smoothing","webGL","J2D","element","data","this","layers","scene","prototype","getIOHandler","IOHandler","handler","start","engine","j2d","html","console","warn","trigger","stop","flush","addClass","resume","removeClass","focus","isPlay","enableWebGL","setSmoothing","value","disableWebGL","setGameState","getLayerManager","getSceneManager","on","once","off","util","disableSmoothing","context","chrome","navigator","userAgent","match","version","parseInt","initPlugin","j2dPlugin","pluginInit","fn","options","filter","each","extend","guid","replace","c","r","Math","random","v","toString","attr","tabIndex","click","$array","push","length","isFullScreen","document","webkitFullscreenElement","webkitCurrentFullScreenElement","mozFullScreenElement","msFullscreenElement","fullScreen","toggle","current","device","resize","pulse","ArrayMap","instance","engineStack","dataStack","frameRun","breakAnimationFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","setTimeout","call","Date","now","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","name","params","lastTime","sceneStartTime","sceneSkipTime","interval","add","remove","runMainLoop","timestamp","frameManager","index","hasOwnProperty","update","clear","setDefaultFrameLimit","Init","instanceFrameManager","WebGL_API","list","width","height","originalWidth","originalHeight","originalMargin","position","top","left","zIndex","opacity","backgroundColor","enableFullScreen","sceneManager","canvas","Object","defineProperty","get","set","fillStyle","fillRect","style","init","css","initCanvas","createElement","enable","getContext","shadowColor","append","gameState","isPOT","Transform","mat","clearStack","mat3","identity","multiply","m1","m2","m10","m11","m12","m13","m14","m15","m16","m17","m18","m20","m21","m22","m23","m24","m25","m26","m27","m28","vec2_multiply","mOut","transpose","m","STACK_DEPTH_LIMIT","init_mat","m_stack","m_cache","c_stack","valid","result","i","getIdentity","setIdentity","getResult","pushMatrix","popMatrix","translateMatrix","translate","x","y","trMatrix","tr","a","b","d","e","f","scaleMatrix","scale","rotateMatrix","rotate","ang","sAng","cAng","sin","cos","gl","fs","vs","shaderProgram","transform","shaderPool","maxTextureSize","gl2d","$getContext","force","initShaders","initBuffers","initCanvas2DAPI","BLEND","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","getParameter","MAX_TEXTURE_SIZE","postInit","shaderMask","texture","crop","path","getFragmentShaderSource","sMask","fsSource","join","getVertexShaderSource","stackDepth","vsSource","transformStackDepth","storedShader","useProgram","createShader","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","VERTEX_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","vertexPositionAttribute","getAttribLocation","enableVertexAttribArray","uColor","getUniformLocation","uSampler","uCropSource","pMatrix","uTransforms","uniformMatrix4fv","viewport","rectVerts","Float32Array","rectVertexPositionBuffer","createBuffer","rectVertexColorBuffer","pathVertexPositionBuffer","pathVertexColorBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","instances","hue2rgb","p","q","t","HSLAToRGBA","h","s","l","g","colorStringToVec4","channel","isPercent","hasAlpha","alphaChannel","sameType","reRGBAColor","exec","parseFloat","isNaN","reHSLAColor","reHex6Color","colorInt","reHex3Color","hexString","toLowerCase","colorKeywords","colorVecToString","vec4","saveDrawState","bakedDrawState","drawState","strokeStyle","globalAlpha","globalCompositeOperation","lineCap","lineJoin","lineWidth","miterLimit","shadowBlur","shadowOffsetX","shadowOffsetY","textAlign","font","textBaseline","imageSmoothingEnabled","drawStateStack","restoreDrawState","pop","sendTransformStack","sp","stack","maxI","uniformMatrix3fv","SubPath","closed","verts","fillSubPath","subPath","subPaths","vertexAttribPointer","FLOAT","uniform4f","drawArrays","TRIANGLE_FAN","strokeSubPath","LINE_LOOP","LINE_STRIP","Texture","image","obj","createTexture","textureCache","imageCache","ctx","drawImage","GL_FUNCTION","LINEAR","GL_MIPMAP_FUNCTION","LINEAR_MIPMAP_LINEAR","NEAREST","LINEAR_MIPMAP_NEAREST","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","generateMipmap","textCanvas","textCtx","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","drawStyle","$lineWidth","fillText","text","clearRect","strokeText","measureText","tempCanvas","tempCtx","save","restore","createImageData","getImageData","buffer","Uint8Array","readPixels","w","j","maxJ","index1","index2","putImageData","imageData","dx","dy","setTransform","apply","arguments","strokeRect","beginPath","closePath","prevPath","startX","startY","newPath","moveTo","lineTo","quadraticApproximateCount","quadraticCurveTo","hx","hy","tx","ty","fromx","fromy","bezierApproximateCount","bezierCurveTo","h1x","h1y","h2x","h2y","arcTo","rect","arcApproximateCount","arc","cx","cy","radius","startAngle","endAngle","anticlockwise","PI","count","fixed","fill","stroke","clip","isPointInPath","drawFocusRing","doCrop","cacheIndex","indexOf","activeTexture","TEXTURE0","uniform1i","configurable","enumerable","writable","args","Array","create","constructor","equals","array","contains","object","key","splice","Vector2dInteger","DeviceUtil","screen","reCalculateSize","innerWidth","innerHeight","getWidth","getHeight","getSize","Exception","message","Error","RuntimeException","InvalidArgumentException","BadFunctionCallException","BadMethodCallException","LengthException","LogicException","OutOfBoundsException","OutOfRangeException","RangeException","UnexpectedValueException","MathUtil","number2Integer","number","isInteger","isFinite","floor","randomColor","min","max","omitZero","degree2Radian","degree","radian2Degree","radian","Vector2d","getX","getY","getCoordinates","toArray","fromArray"],"mappings":"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","file":"jquery.j2d.js","sourcesContent":["/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('jquery.j2d', [\r\n            'jquery',\r\n            'core/WebGL2D',\r\n            'core/FrameManager',\r\n            'core/SceneManager',\r\n            'core/LayersManager'\r\n        ], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(\r\n            require('jquery'),\r\n            require('core/WebGL2D'),\r\n            require('core/FrameManager'),\r\n            require('core/SceneManager'),\r\n            require('core/LayersManager')\r\n        );\r\n    } else {\r\n        factory(\r\n            root.jQuery,\r\n            root.WebGL2D,\r\n            root.FrameManager,\r\n            root.SceneManager,\r\n            root.LayersManager\r\n        );\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function ($, WebGL2D, FrameManager, SceneManager, LayersManager) {\r\n    \"use strict\";\r\n\r\n    var defaults = {\r\n        id: undefined,\r\n        io: undefined,\r\n        deltaTime: 0,\r\n        pause: false,\r\n        ready: false,\r\n\r\n        frameLimit: 60,\r\n        smoothing: true,\r\n\r\n        webGL: false\r\n    };\r\n\r\n    var J2D = function J2D(element, data) {\r\n        this.element = element;\r\n        this.data = data;\r\n\r\n        this.layers = new LayersManager(this, WebGL2D);\r\n        this.scene = new SceneManager(this, WebGL2D);\r\n    };\r\n\r\n    J2D.prototype.getIOHandler = function () {\r\n        return this.data.io;\r\n    };\r\n    /** -links getters **/\r\n\r\n    /** +GameEngine **/\r\n    J2D.prototype.IOHandler = function (handler) {\r\n        return this.data.io = handler;\r\n    };\r\n\r\n    // старт игры\r\n    J2D.prototype.start = function (engine, frameLimit) {\r\n        var j2d = this;\r\n\r\n        engine = engine || function () {\r\n                j2d.element.html('Please init game engine function!');\r\n                console.warn('Please init game engine function for ' + j2d.data.id + '!');\r\n            };\r\n\r\n        FrameManager.start(j2d.data.id, engine, {\r\n            j2d: j2d,\r\n            frameLimit: frameLimit\r\n        });\r\n\r\n        j2d.data.frameLimit = frameLimit;\r\n\r\n        j2d.element.trigger('start');\r\n    };\r\n\r\n    J2D.prototype.stop = function () {\r\n        FrameManager.stop(this.data.id);\r\n        this.element.trigger('stop');\r\n    };\r\n\r\n    J2D.prototype.pause = function () {\r\n        if (this.data.io) this.data.io.flush();\r\n        this.data.pause = true;\r\n        this.element.addClass('pause');\r\n        this.element.trigger('pause');\r\n    };\r\n\r\n    J2D.prototype.resume = function () {\r\n        this.element.removeClass('pause').focus();\r\n        this.data.pause = false;\r\n        if (this.data.io) this.data.io.flush();\r\n        this.element.trigger('resume');\r\n    };\r\n\r\n    J2D.prototype.isPlay = function () {\r\n        return !this.data.pause;\r\n    };\r\n\r\n    J2D.prototype.enableWebGL = function () {\r\n        this.data.webGL = true;\r\n        this.element.addClass('WebGL');\r\n    };\r\n\r\n    J2D.prototype.setSmoothing = function (value) {\r\n        this.data.smoothing = !!value;\r\n    };\r\n\r\n    J2D.prototype.disableWebGL = function () {\r\n        this.data.webGL = false;\r\n        this.element.removeClass('WebGL');\r\n    };\r\n\r\n    J2D.prototype.setGameState = function (engine) {\r\n        var j2d = this;\r\n\r\n        engine = engine || function () {\r\n                j2d.element.html('Please set game engine function!');\r\n                console.warn('Please set game engine function for ' + j2d.data.id + '!');\r\n            };\r\n\r\n        FrameManager.stop(j2d.data.id);\r\n\r\n        FrameManager.start(j2d.data.id, engine, {\r\n            j2d: j2d,\r\n            frameLimit: j2d.data.frameLimit\r\n        });\r\n    };\r\n    /** -GameEngine **/\r\n\r\n    /** +Layers **/\r\n    J2D.prototype.getLayerManager = function () {\r\n        return this.layers;\r\n    };\r\n    /** -Layers **/\r\n\r\n    /** +Scene **/\r\n    J2D.prototype.getSceneManager = function () {\r\n        return this.scene;\r\n    };\r\n    /** -Scene **/\r\n\r\n    J2D.prototype.on = function () {\r\n    };\r\n    J2D.prototype.once = function () {\r\n    };\r\n    J2D.prototype.off = function () {\r\n    };\r\n    J2D.prototype.trigger = function () {\r\n    };\r\n\r\n    /** Utils **/\r\n    J2D.util = {\r\n        disableSmoothing: function (context) {\r\n            var chrome = global.navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);\r\n            var version = chrome ? parseInt(chrome[2], 10) : false;\r\n\r\n            context['imageSmoothingEnabled'] = false;\r\n            context['mozImageSmoothingEnabled'] = false;\r\n            context['oImageSmoothingEnabled'] = false;\r\n            if (version && version <= 29) {\r\n                context['webkitImageSmoothingEnabled'] = false;\r\n            }\r\n            context['msImageSmoothingEnabled'] = false;\r\n        }\r\n    };\r\n    J2D.prototype.util = J2D.util;\r\n\r\n    /* ------------------------------ Plugin ------------------------------ */\r\n\r\n    J2D.initPlugin = function () {\r\n        if (window.j2dPlugin !== undefined) return null;\r\n        window.j2dPlugin = {pluginInit: true};\r\n\r\n        $.fn.j2d = function (options) {\r\n            this.filter('div.canvas:not([guid])').each(function () {\r\n                var options = $.extend(true, {}, defaults, options);\r\n\r\n                var guid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n                    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n                    return v.toString(16);\r\n                });\r\n                options.id = guid;\r\n\r\n                $(this).attr('guid', guid);\r\n                var id = $(this).attr('id');\r\n                if (typeof id === typeof undefined || id === false) {\r\n                    $(this).attr('id', guid);\r\n                }\r\n                var tabIndex = $(this).attr('tabindex');\r\n                if (typeof tabIndex === typeof undefined || tabIndex === false) {\r\n                    $(this).attr('tabindex', '-1');\r\n                }\r\n                $(this).data('j2d', new J2D($(this), options)).addClass('j2d');\r\n                $(this).click().focus();\r\n            });\r\n\r\n            var $array = [];\r\n            this.filter('div.canvas[guid]').each(function () {\r\n                $array.push($(this).data('j2d'));\r\n            });\r\n\r\n            if (1 === $array.length) {\r\n                return $(this).data('j2d');\r\n            } else {\r\n                return $array;\r\n            }\r\n        };\r\n\r\n        var isFullScreen = function () {\r\n            //noinspection JSUnresolvedVariable\r\n            return !!(document.webkitFullscreenElement\r\n                || document.webkitCurrentFullScreenElement\r\n                || document.mozFullScreenElement\r\n                || document.msFullscreenElement\r\n            );\r\n        };\r\n\r\n        $(document).on('fullscreenchange webkitfullscreenchange mozfullscreenchange MSFullscreenChange', function () {\r\n            var fullScreen = isFullScreen();\r\n            if (!fullScreen) {\r\n                // $('div.canvas[guid].active').data('j2d').scene.resizeToFullPage(fullScreen); TODO::\r\n                $('div.canvas[guid]:not(.active)').toggle(!fullScreen);\r\n            }\r\n        });\r\n\r\n        $(document).on('click', 'div.canvas[guid].pause', function () {\r\n            $(this).data('j2d').resume();\r\n\r\n            var current = this;\r\n            $('div.canvas[guid]:not(.pause-disable):not(:focus)').each(function () {\r\n                if (current !== this) $(this).removeClass('active').data('j2d').pause();\r\n            });\r\n            $('div.canvas[guid].active.pause-disable:not(:focus)').each(function () {\r\n                if (current !== this) $(this).removeClass('active');\r\n            });\r\n        });\r\n\r\n        $(document).on('click touch mouseenter', 'div.canvas[guid]:not(.resume-by-click):not(:focus)', function () {\r\n            $(this).addClass('active').focus().data('j2d').resume();\r\n\r\n            var current = this;\r\n            $('div.canvas[guid]:not(.pause-disable):not(:focus)').each(function () {\r\n                if (current !== this) $(this).removeClass('active').data('j2d').pause();\r\n            });\r\n            $('div.canvas[guid].active.pause-disable:not(:focus)').each(function () {\r\n                if (current !== this) $(this).removeClass('active');\r\n            });\r\n        });\r\n\r\n        $(window).on('focus', function () {\r\n            $('div.canvas[guid].active').each(function () {\r\n                $(this).data('j2d').resume();\r\n            });\r\n        }).on('blur', function () {\r\n            $('div.canvas[guid]').each(function () {\r\n                $(this).data('j2d').pause();\r\n            });\r\n        });\r\n\r\n        $(window).on('resize', function () {\r\n            $('div.canvas[guid]').each(function () {\r\n                $(this).data('j2d').device.resize();\r\n            });\r\n            var fullScreen = isFullScreen();\r\n            if (fullScreen) {\r\n                // $('div.canvas[guid].active').data('j2d').scene.resizeToFullPage(fullScreen); TODO::\r\n            }\r\n        });\r\n\r\n        FrameManager.pulse();\r\n    };\r\n\r\n    global.J2D = (global.J2D === undefined) ? J2D : undefined;\r\n\r\n    return J2D;\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/FrameManager', ['utils/ArrayMap'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('utils/ArrayMap'));\r\n    } else {\r\n        factory(root.ArrayMap);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (ArrayMap) {\r\n    \"use strict\";\r\n\r\n    var instance;\r\n    var engineStack = new ArrayMap(), dataStack = new ArrayMap();\r\n\r\n    var options = {\r\n        frameLimit: 60,\r\n        frameRun: false,\r\n        breakAnimationFrame: false\r\n    };\r\n\r\n    var requestAnimationFrame = (function () {\r\n        return window.requestAnimationFrame ||\r\n            window.webkitRequestAnimationFrame ||\r\n            window.mozRequestAnimationFrame ||\r\n            window.oRequestAnimationFrame ||\r\n            window.msRequestAnimationFrame ||\r\n            function (callback) {\r\n                if (!options.breakAnimationFrame) {\r\n                    window.setTimeout(callback.call(callback, [\r\n                        Date.now() //TODO:: fix this\r\n                    ]), 1000.0 / options.frameLimit);\r\n                } else {\r\n                    options.breakAnimationFrame = false\r\n                }\r\n            };\r\n    })();\r\n\r\n    var cancelAnimationFrame = (function () {\r\n        options.breakAnimationFrame = true;\r\n\r\n        return window.cancelAnimationFrame ||\r\n            window.webkitCancelAnimationFrame ||\r\n            window.mozCancelAnimationFrame ||\r\n            window.oCancelAnimationFrame ||\r\n            window.msCancelAnimationFrame;\r\n    })();\r\n\r\n\r\n    var FrameManager = function () {\r\n    };\r\n\r\n    FrameManager.prototype.start = function (name, engine, params) {\r\n        var data = {\r\n            j2d: undefined,\r\n            frameLimit: options.frameLimit,\r\n            now: 0,\r\n            deltaTime: 0,\r\n            lastTime: 0,\r\n            sceneStartTime: 0,\r\n            sceneSkipTime: 0\r\n        };\r\n\r\n        if (params.frameLimit !== undefined && params.frameLimit <= options.frameLimit) data.frameLimit = params.frameLimit;\r\n\r\n        if (params.j2d !== undefined) {\r\n            data.j2d = params.j2d;\r\n        } else {\r\n            throw 'j2d not transported to FrameManager.start(id, engine, {... j2d: j2d ...});';\r\n        }\r\n\r\n        data.interval = 1000.0 / data.frameLimit;\r\n        data.lastTime = Date.now();\r\n\r\n        engineStack.add(name, engine);\r\n        dataStack.add(name, data);\r\n        if (!options.frameRun) this.pulse();\r\n    };\r\n\r\n    FrameManager.prototype.stop = function (name) {\r\n        engineStack.remove(name);\r\n        dataStack.remove(name);\r\n    };\r\n\r\n    FrameManager.prototype.pulse = function () {\r\n        this.runMainLoop(Date.now());\r\n    };\r\n\r\n    FrameManager.prototype.runMainLoop = function (timestamp, frameManager) {\r\n        if (frameManager === undefined) frameManager = this;\r\n\r\n        if (engineStack.length <= 0 && options.frameRun) {\r\n            options.frameRun = false;\r\n            return cancelAnimationFrame(this.runMainLoop);\r\n        }\r\n        options.frameRun = true;\r\n\r\n        for (var index in engineStack) {\r\n            if (engineStack.hasOwnProperty(index) && 'function' === typeof engineStack[index]) {\r\n                var engine = engineStack[index];\r\n                var data = dataStack[index];\r\n\r\n                data.now = Date.now();\r\n                data.j2d.data.deltaTime = data.deltaTime = (data.now - data.lastTime) / 100.0;\r\n\r\n                if (data.j2d.data.io && !data.j2d.data.pause) data.j2d.data.io.update();\r\n                if ((data.deltaTime * 100.0) > data.interval) {\r\n                    data.lastTime = data.now - ((data.deltaTime * 100.0) % data.interval);\r\n\r\n                    if (!data.j2d.data.pause) {\r\n                        data.j2d.data.deltaTime = data.deltaTime;\r\n\r\n                        engine(timestamp, data);\r\n\r\n                    }\r\n                }\r\n                if (data.j2d.data.io && !data.j2d.data.pause) data.j2d.data.io.clear();\r\n            }\r\n        }\r\n\r\n        requestAnimationFrame(function (timestamp) {\r\n            frameManager.runMainLoop(timestamp, frameManager);\r\n        });\r\n    };\r\n\r\n    FrameManager.prototype.setDefaultFrameLimit = function (frameLimit) {\r\n        if (frameLimit <= 60 && frameLimit > 0) {\r\n            options.frameLimit = frameLimit\r\n        }\r\n    };\r\n\r\n    /* Singleton */\r\n    FrameManager.Init = function () {\r\n        if (window.J2D !== undefined) {\r\n            return window.instanceFrameManager || (window.instanceFrameManager = new FrameManager());\r\n        } else {\r\n            return instance || (instance = new FrameManager());\r\n        }\r\n    };\r\n\r\n    if (window.J2D === undefined) window.FrameManager = FrameManager.Init();\r\n\r\n    return FrameManager.Init();\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/LayersManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var WebGL2D;\r\n\r\n    var LayersManager = function (j2d, WebGL_API) {\r\n        this.j2d = j2d;\r\n        this.list = {};\r\n\r\n        WebGL2D = WebGL_API;\r\n    };\r\n\r\n    //LayersManager.prototype.getLayer = function (id) {\r\n    //    return this.list[id];\r\n    //};\r\n    //LayersManager.prototype.add = function (id, zIndex) {\r\n    //    if (this.list[id]) {\r\n    //        return false;\r\n    //    }\r\n    //\r\n    //    var layer = {};\r\n    //    var j2d = this.parent;\r\n    //\r\n    //    layer.layerName = id;\r\n    //    layer.canvas = document.createElement('canvas');\r\n    //    layer.canvas.width = j2d.scene.width;\r\n    //    layer.canvas.height = j2d.scene.height;\r\n    //    layer.width = j2d.scene.width;\r\n    //    layer.height = j2d.scene.height;\r\n    //    if (j2d.options.webGL) {\r\n    //        WebGL2D.enable(layer.canvas);\r\n    //        layer.context = layer.canvas.getContext('WebGL-2d');\r\n    //    } else {\r\n    //        layer.context = layer.canvas.getContext('2d');\r\n    //    }\r\n    //    if (!j2d.options.smoothing) {\r\n    //        layer.smoothing = false;\r\n    //        layer.disableSmoothing = j2d.util.disableSmoothing;\r\n    //        j2d.util.disableSmoothing(layer.context);\r\n    //    } else layer.smoothing = true;\r\n    //    layer.context.shadowColor = 'rgba(0,0,0,0)';\r\n    //    layer.canvas.style.zIndex = 1000 + zIndex;\r\n    //    layer.canvas.style.position = 'absolute';\r\n    //    layer.canvas.style.left = '0';\r\n    //    layer.canvas.style.top = '0';\r\n    //    layer.canvas.id = id;\r\n    //    layer.opacity = 1;\r\n    //    layer.angle = 0;\r\n    //    layer.visible = 1;\r\n    //\r\n    //    layer.fillColor = false;\r\n    //\r\n    //    layer.onContext = function (callback) {\r\n    //        callback(this.context);\r\n    //    };\r\n    //\r\n    //    layer.fill = function (color) {\r\n    //        this.fillColor = color;\r\n    //        this.context.fillStyle = color;\r\n    //        this.context.fillRect(0, 0, this.width, this.height);\r\n    //    };\r\n    //\r\n    //    layer.setOpacity = function (opacity) {\r\n    //        this.canvas.style.opacity = opacity;\r\n    //        this.opacity = opacity;\r\n    //    };\r\n    //\r\n    //    layer.getOpacity = function () {\r\n    //        return this.opacity;\r\n    //    };\r\n    //\r\n    //    layer.setVisible = function (visible) {\r\n    //        if (visible) {\r\n    //            this.canvas.style.display = 'block';\r\n    //            this.visible = true;\r\n    //        } else {\r\n    //            this.canvas.style.display = 'none';\r\n    //            this.visible = false;\r\n    //        }\r\n    //    };\r\n    //\r\n    //    layer.isVisible = function () {\r\n    //        return this.visible;\r\n    //    };\r\n    //\r\n    //    layer.setIndex = function (zIndex) {\r\n    //        this.canvas.style.zIndex = 1000 + zIndex;\r\n    //    };\r\n    //\r\n    //    layer.clear = function () {\r\n    //        this.context.clearRect(0, 0, this.width, this.height);\r\n    //    };\r\n    //\r\n    //    layer.clearNode = function (node) {\r\n    //        if (node.isLookScene()) {\r\n    //            this.context.clearRect(node.pos.x - j2d.scene.viewport.x, node.pos.y - j2d.scene.viewport.y, node.size.x, node.size.y);\r\n    //        }\r\n    //    };\r\n    //\r\n    //    layer.clearRect = function (pos, size) {\r\n    //        this.context.clearRect(pos.x - j2d.scene.viewport.x, pos.y - j2d.scene.viewport.y, size.x, size.y);\r\n    //    };\r\n    //\r\n    //    layer.resize = function (width, height) {\r\n    //        this.canvas.width = width;\r\n    //        this.canvas.height = height;\r\n    //        this.width = width;\r\n    //        this.height = height;\r\n    //\r\n    //        if (this.fillColor) {\r\n    //            this.context.save();\r\n    //\r\n    //            this.context.fillStyle = this.fillColor;\r\n    //            this.context.fillRect(0, 0, this.width, this.height);\r\n    //\r\n    //            this.context.restore();\r\n    //        }\r\n    //        if (!this.smoothing) this.disableSmoothing(this.context);\r\n    //    };\r\n    //\r\n    //    this.list[id] = layer;\r\n    //\r\n    //    if (j2d.options.ready) {\r\n    //        j2d.element.append(this.list[id].canvas);\r\n    //    }\r\n    //\r\n    //    return layer;\r\n    //};\r\n\r\n    if (global.J2D !== undefined) global.LayersManager = LayersManager;\r\n    return LayersManager;\r\n}));","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/SceneManager', ['jquery'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('jquery'));\r\n    } else {\r\n        factory(root.jQuery);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function ($) {\r\n    \"use strict\";\r\n\r\n    var WebGL2D;\r\n\r\n    var defaults = {\r\n        width: 0,\r\n        height: 0,\r\n\r\n        originalWidth: 0,\r\n        originalHeight: 0,\r\n        originalMargin: 0,\r\n\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        zIndex: 1000,\r\n        opacity: 1.0,\r\n        backgroundColor: false,\r\n\r\n        frameLimit: 60,\r\n\r\n        enableFullScreen: false\r\n    };\r\n\r\n    var SceneManager = function (j2d, WebGL_API) {\r\n        var sceneManager = this;\r\n        this.j2d = j2d;\r\n\r\n        this.canvas = null;\r\n        this.context = null;\r\n\r\n        WebGL2D = WebGL_API;\r\n\r\n        Object.defineProperty(this, \"backgroundColor\", {\r\n            get: function () {\r\n                return sceneManager.data.backgroundColor;\r\n            },\r\n            set: function (value) {\r\n                sceneManager.data.backgroundColor = value;\r\n                sceneManager.context.fillStyle = value;\r\n                sceneManager.context.fillRect(0, 0, sceneManager.data.width, sceneManager.data.height);\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(this, \"opacity\", {\r\n            get: function () {\r\n                return sceneManager.data.opacity;\r\n            },\r\n            set: function (value) {\r\n                sceneManager.data.opacity = value;\r\n                sceneManager.canvas.style.opacity = value;\r\n            }\r\n        });\r\n\r\n        //this.enableFullscreen = false;\r\n        //this.layerName = 'sceneNode';\r\n        //this.layers = (parent.layers) ? parent.layers : {};\r\n    };\r\n\r\n    SceneManager.prototype.init = function (options) {\r\n        this.data = $.extend(true, {}, defaults, options);\r\n\r\n        this.j2d.trigger('beforeInit');\r\n\r\n        this.data.originalWidth = this.data.width;\r\n        this.data.originalHeight = this.data.height;\r\n        this.data.originalMargin = this.j2d.element.css('margin');\r\n\r\n        this.j2d.element.width(this.data.width).height(this.data.height);\r\n\r\n        this.initCanvas();\r\n\r\n        this.j2d.trigger('afterInit');\r\n\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.initCanvas = function () {\r\n        this.canvas = document.createElement('canvas');\r\n\r\n        this.canvas.width = this.data.width;\r\n        this.canvas.height = this.data.height;\r\n        this.canvas.style.zIndex = this.data.zIndex;\r\n        this.canvas.style.position = this.data.position;\r\n\r\n        this.canvas.style.left = this.data.left;\r\n        this.canvas.style.top = this.data.top;\r\n\r\n        if (this.j2d.data.webGL) {\r\n            WebGL2D.enable(this.canvas);\r\n            this.context = this.canvas.getContext('WebGL-2d');\r\n        } else {\r\n            this.context = this.canvas.getContext('2d');\r\n        }\r\n\r\n        if (!this.j2d.data.smoothing) {\r\n            this.j2d.util.disableSmoothing(this.context);\r\n        }\r\n\r\n        this.context.shadowColor = 'rgba(0,0,0,0)';\r\n        if (this.data.backgroundColor) this.backgroundColor = this.data.backgroundColor;\r\n        if (this.data.opacity) this.opacity = this.data.opacity;\r\n\r\n        this.j2d.element.append(this.canvas);\r\n    };\r\n\r\n    SceneManager.prototype.start = function () {\r\n\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.setGameState = function (gameState) {\r\n        this.j2d.setGameState(gameState);\r\n        return this;\r\n    };\r\n\r\n    //SceneManager.prototype.resize = function (width, height) {\r\n    //    var j2d = this.parent;\r\n    //\r\n    //    this.width = width;\r\n    //    this.height = height;\r\n    //\r\n    //    for (var i in j2d.layers.list) {\r\n    //        if (j2d.layers.list.hasOwnProperty(i)) {\r\n    //            j2d.layers.list[i].resize(width, height);\r\n    //        }\r\n    //    }\r\n    //};\r\n    //\r\n    //SceneManager.prototype.async = function (callback, data) {\r\n    //    setTimeout(callback.call(callback, data), 0);\r\n    //};\r\n    //\r\n    //SceneManager.prototype.setGameState = function (engine) {\r\n    //    this.parent.setEngine(engine);\r\n    //    this.parent.element.trigger('changedGameState');\r\n    //};\r\n    //\r\n    //SceneManager.prototype.start = function (engine, frameLimit) {\r\n    //    if (this.parent.options.io) {\r\n    //        this.parent.options.io.init();\r\n    //    }\r\n    //    this.parent.element.trigger('beforeStart');\r\n    //    this.parent.start(engine, frameLimit);\r\n    //    this.parent.element.trigger('afterStart');\r\n    //};\r\n\r\n    //SceneManager.prototype.fullScreen = function (fullscreen) {\r\n    //    var element = document.getElementById(this.parent.element.attr('id'));\r\n    //\r\n    //    if (undefined === element.requestFullscreen) {\r\n    //        element.requestFullscreen = element.webkitRequestFullscreen\r\n    //            || element.webkitRequestFullScreen\r\n    //            || element.mozRequestFullScreen\r\n    //            || element.msRequestFullscreen;\r\n    //    }\r\n    //\r\n    //    if (undefined === document.exitFullscreen) {\r\n    //        document.exitFullscreen = document.webkitExitFullscreen\r\n    //            || document.webkitCancelFullScreen\r\n    //            || document.mozCancelFullScreen\r\n    //            || document.msExitFullscreen;\r\n    //    }\r\n    //    if (fullscreen) {\r\n    //        element.requestFullscreen();\r\n    //    } else {\r\n    //        document.exitFullscreen();\r\n    //    }\r\n    //};\r\n    //\r\n    //SceneManager.prototype.resizeToFullPage = function (fullscreen) {\r\n    //    $('div.canvas[guid]:not(.active)').toggle(fullscreen);\r\n    //\r\n    //    var j2d = this.parent;\r\n    //    var scene = this;\r\n    //\r\n    //    if (fullscreen) {\r\n    //        scene.originalWidth = scene.width;\r\n    //        scene.originalHeight = scene.height;\r\n    //\r\n    //        scene.resize(j2d.device.width, j2d.device.height);\r\n    //        scene.enableFullscreen = true;\r\n    //\r\n    //        this.parent.element.width(j2d.device.width).height(j2d.device.height).css('margin', 0);\r\n    //    } else {\r\n    //        scene.resize(scene.originalWidth, scene.originalHeight);\r\n    //        scene.enableFullscreen = false;\r\n    //\r\n    //        this.parent.element.width(scene.originalWidth).height(scene.originalHeight).css('margin', scene.originalMargin);\r\n    //    }\r\n    //};\r\n    //\r\n    //SceneManager.prototype.scaleToFullScreen = function (fullscreen) {\r\n    //    $('div.canvas[guid]:not(.active)').toggle(fullscreen);\r\n    //\r\n    //    var layer, i;\r\n    //    if (fullscreen) {\r\n    //        for (i in this.parent.layers.list) {\r\n    //            if (this.parent.layers.list.hasOwnProperty(i)) {\r\n    //                layer = this.parent.layers.list[i].canvas;\r\n    //                layer.style.width = this.parent.device.width + 'px';\r\n    //                layer.style.height = this.parent.device.height + 'px';\r\n    //            }\r\n    //        }\r\n    //        this.enableFullscreen = true;\r\n    //        this.parent.element.width(this.parent.device.width).height(this.parent.device.height).css('margin', 0);\r\n    //    } else {\r\n    //        for (i in this.parent.layers.list) {\r\n    //            if (this.parent.layers.list.hasOwnProperty(i)) {\r\n    //                layer = this.parent.layers.list[i].canvas;\r\n    //                layer.style.width = this.width + 'px';\r\n    //                layer.style.height = this.height + 'px';\r\n    //            }\r\n    //        }\r\n    //        this.enableFullscreen = false;\r\n    //        this.parent.element.width(this.width).height(this.height).css('margin', this.originalMargin);\r\n    //    }\r\n    //};\r\n    //\r\n    //SceneManager.prototype.toggleFullScreen = function (j2d, data) {\r\n    //    if (data === undefined) {\r\n    //        data = {fullscreen: undefined};\r\n    //    }\r\n    //    if (!j2d.scene.enableFullscreen || data.fullscreen) {\r\n    //        j2d.scene.fullScreen(true);\r\n    //    } else {\r\n    //        j2d.scene.fullScreen(false);\r\n    //    }\r\n    //};\r\n\r\n    //// Устанавливает позицию для камеры\r\n    //SceneManager.prototype.setViewPosition = function (position) {\r\n    //    this.parent.scene.viewport.x = position.x - Math.ceil(this.parent.scene.width / 2);\r\n    //    this.parent.scene.viewport.y = position.y - Math.ceil(this.parent.scene.height / 2);\r\n    //};\r\n    //\r\n    ////! Движение \"камеры\" вслед за объектом\r\n    //SceneManager.prototype.setViewFocus = function (id, offset) {\r\n    //    this.parent.scene.viewport.x = id.getPosition().x - Math.ceil(this.parent.scene.width / 2) + (offset ? offset.x : 0);\r\n    //    this.parent.scene.viewport.y = id.getPosition().y - Math.ceil(this.parent.scene.height / 2) + (offset ? offset.y : 0);\r\n    //};\r\n    //\r\n    ////! Движение \"камеры\"\r\n    //SceneManager.prototype.viewMove = function (position) {\r\n    //    this.parent.scene.viewport.x += position.x;\r\n    //    this.parent.scene.viewport.y += position.y;\r\n    //};\r\n\r\n    //! Очистка отрисованного предыдущего кадра сцены\r\n    //SceneManager.prototype.clear = function () {\r\n    //    this.getLayer().clear();\r\n    //};\r\n\r\n    //SceneManager.prototype.getLayer = function () {\r\n    //    return this.parent.layers.getLayer('sceneNode');\r\n    //};\r\n\r\n    //// инициализация сцены\r\n    //SceneManager.prototype.init = function (width, heigth) {\r\n    //    var j2d = this.parent;\r\n    //    j2d.element.trigger('beforeInit');\r\n    //\r\n    //    this.width = this.originalWidth = width;\r\n    //    this.height = this.originalHeight = heigth;\r\n    //    this.originalMargin = j2d.element.css('margin');\r\n    //\r\n    //    this.parent.element.width(width).height(heigth);\r\n    //\r\n    //    j2d.layers.add('sceneNode', 0);\r\n    //\r\n    //    this.context = j2d.layers.getLayer('sceneNode').context;\r\n    //    this.canvas = j2d.layers.getLayer('sceneNode').canvas;\r\n    //    this.visible = true;\r\n    //\r\n    //    this.cancelClear = false;\r\n    //\r\n    //    /* Вид \"камеры\" */\r\n    //    this.viewport = j2d.vector.v2f(0, 0);\r\n    //\r\n    //    j2d.element.trigger('afterInit');\r\n    //\r\n    //    $(window).ready(function () {\r\n    //        for (var i in j2d.layers.list) {\r\n    //            if (j2d.layers.list.hasOwnProperty(i)) {\r\n    //                j2d.element.append(j2d.layers.getLayer(i).canvas);\r\n    //            }\r\n    //        }\r\n    //        j2d.options.ready = true;\r\n    //        j2d.element.trigger('ready');\r\n    //    });\r\n    //};\r\n\r\n    if (global.J2D !== undefined) global.SceneManager = SceneManager;\r\n    return SceneManager;\r\n}));","/**\r\n *  WebGL-2D.js - HTML5 Canvas2D API in a WebGL context\r\n *\r\n *  Created by Corban Brook <corbanbrook@gmail.com> on 2011-03-02.\r\n *  Amended to by Bobby Richter <secretrobotron@gmail.com> on 2011-03-03\r\n *  CubicVR.js by Charles Cliffe <cj@cubicproductions.com> on 2011-03-03\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/WebGL2D', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    // Vector & Matrix libraries from CubicVR.js\r\n    var M_PI = 3.1415926535897932384626433832795028841968;\r\n    var M_TWO_PI = 2.0 * M_PI;\r\n    var M_HALF_PI = M_PI / 2.0;\r\n\r\n    function isPOT(value) {\r\n        return value > 0 && ((value - 1) & value) === 0;\r\n    }\r\n\r\n    var vec3 = {\r\n        length: function (pt) {\r\n            return Math.sqrt(pt[0] * pt[0] + pt[1] * pt[1] + pt[2] * pt[2]);\r\n        },\r\n\r\n        normalize: function (pt) {\r\n            var d = Math.sqrt((pt[0] * pt[0]) + (pt[1] * pt[1]) + (pt[2] * pt[2]));\r\n            if (d === 0) {\r\n                return [0, 0, 0];\r\n            }\r\n            return [pt[0] / d, pt[1] / d, pt[2] / d];\r\n        },\r\n\r\n        dot: function (v1, v2) {\r\n            return v1[0] * v2[0] + v1[1] * v2[1] + v1[2] * v2[2];\r\n        },\r\n\r\n        angle: function (v1, v2) {\r\n            return Math.acos((v1[0] * v2[0] + v1[1] * v2[1] + v1[2] * v2[2]) / (Math.sqrt(v1[0] * v1[0] + v1[1] * v1[1] + v1[2] * v1[2]) * Math.sqrt(v2[0] * v2[0] + v2[1] * v2[1] + v2[2] * v2[2])));\r\n        },\r\n\r\n        cross: function (vectA, vectB) {\r\n            return [vectA[1] * vectB[2] - vectB[1] * vectA[2], vectA[2] * vectB[0] - vectB[2] * vectA[0], vectA[0] * vectB[1] - vectB[0] * vectA[1]];\r\n        },\r\n\r\n        multiply: function (vectA, constB) {\r\n            return [vectA[0] * constB, vectA[1] * constB, vectA[2] * constB];\r\n        },\r\n\r\n        add: function (vectA, vectB) {\r\n            return [vectA[0] + vectB[0], vectA[1] + vectB[1], vectA[2] + vectB[2]];\r\n        },\r\n\r\n        subtract: function (vectA, vectB) {\r\n            return [vectA[0] - vectB[0], vectA[1] - vectB[1], vectA[2] - vectB[2]];\r\n        },\r\n\r\n        equal: function (a, b) {\r\n            var epsilon = 0.0000001;\r\n            if ((a === undefined) && (b === undefined)) {\r\n                return true;\r\n            }\r\n            if ((a === undefined) || (b === undefined)) {\r\n                return false;\r\n            }\r\n            return (Math.abs(a[0] - b[0]) < epsilon && Math.abs(a[1] - b[1]) < epsilon && Math.abs(a[2] - b[2]) < epsilon);\r\n        }\r\n    };\r\n\r\n    var mat3 = {\r\n        identity: [1.0, 0.0, 0.0,\r\n            0.0, 1.0, 0.0,\r\n            0.0, 0.0, 1.0],\r\n\r\n        multiply: function (m1, m2) {\r\n            var m10 = m1[0], m11 = m1[1], m12 = m1[2], m13 = m1[3], m14 = m1[4], m15 = m1[5], m16 = m1[6], m17 = m1[7], m18 = m1[8],\r\n                m20 = m2[0], m21 = m2[1], m22 = m2[2], m23 = m2[3], m24 = m2[4], m25 = m2[5], m26 = m2[6], m27 = m2[7], m28 = m2[8];\r\n\r\n            m2[0] = m20 * m10 + m23 * m11 + m26 * m12;\r\n            m2[1] = m21 * m10 + m24 * m11 + m27 * m12;\r\n            m2[2] = m22 * m10 + m25 * m11 + m28 * m12;\r\n            m2[3] = m20 * m13 + m23 * m14 + m26 * m15;\r\n            m2[4] = m21 * m13 + m24 * m14 + m27 * m15;\r\n            m2[5] = m22 * m13 + m25 * m14 + m28 * m15;\r\n            m2[6] = m20 * m16 + m23 * m17 + m26 * m18;\r\n            m2[7] = m21 * m16 + m24 * m17 + m27 * m18;\r\n            m2[8] = m22 * m16 + m25 * m17 + m28 * m18;\r\n        },\r\n\r\n        vec2_multiply: function (m1, m2) {\r\n            var mOut = [];\r\n            mOut[0] = m2[0] * m1[0] + m2[3] * m1[1] + m2[6];\r\n            mOut[1] = m2[1] * m1[0] + m2[4] * m1[1] + m2[7];\r\n            return mOut;\r\n        },\r\n\r\n        transpose: function (m) {\r\n            return [m[0], m[3], m[6], m[1], m[4], m[7], m[2], m[5], m[8]];\r\n        }\r\n    }; //mat3\r\n\r\n    // Transform library from CubicVR.js\r\n    function Transform(mat) {\r\n        return this.clearStack(mat);\r\n    }\r\n\r\n    var STACK_DEPTH_LIMIT = 16;\r\n\r\n    Transform.prototype.clearStack = function (init_mat) {\r\n        this.m_stack = [];\r\n        this.m_cache = [];\r\n        this.c_stack = 0;\r\n        this.valid = 0;\r\n        this.result = null;\r\n\r\n        for (var i = 0; i < STACK_DEPTH_LIMIT; i++) {\r\n            this.m_stack[i] = this.getIdentity();\r\n        }\r\n\r\n        if (init_mat !== undefined) {\r\n            this.m_stack[0] = init_mat;\r\n        } else {\r\n            this.setIdentity();\r\n        }\r\n    }; //clearStack\r\n\r\n    Transform.prototype.setIdentity = function () {\r\n        this.m_stack[this.c_stack] = this.getIdentity();\r\n        if (this.valid === this.c_stack && this.c_stack) {\r\n            this.valid--;\r\n        }\r\n    };\r\n\r\n    Transform.prototype.getIdentity = function () {\r\n        return [1.0, 0.0, 0.0,\r\n            0.0, 1.0, 0.0,\r\n            0.0, 0.0, 1.0];\r\n    };\r\n\r\n    Transform.prototype.getResult = function () {\r\n        if (!this.c_stack) {\r\n            return this.m_stack[0];\r\n        }\r\n\r\n        var m = mat3.identity;\r\n\r\n        if (this.valid > this.c_stack - 1) {\r\n            this.valid = this.c_stack - 1;\r\n        }\r\n\r\n        for (var i = this.valid; i < this.c_stack + 1; i++) {\r\n            m = mat3.multiply(this.m_stack[i], m);\r\n            this.m_cache[i] = m;\r\n        }\r\n\r\n        this.valid = this.c_stack - 1;\r\n\r\n        this.result = this.m_cache[this.c_stack];\r\n\r\n        return this.result;\r\n    };\r\n\r\n    Transform.prototype.pushMatrix = function () {\r\n        this.c_stack++;\r\n        this.m_stack[this.c_stack] = this.getIdentity();\r\n    };\r\n\r\n    Transform.prototype.popMatrix = function () {\r\n        if (this.c_stack === 0) {\r\n            return;\r\n        }\r\n        this.c_stack--;\r\n    };\r\n\r\n    var translateMatrix = Transform.prototype.getIdentity();\r\n\r\n    Transform.prototype.translate = function (x, y) {\r\n        translateMatrix[6] = x;\r\n        translateMatrix[7] = y;\r\n\r\n        mat3.multiply(translateMatrix, this.m_stack[this.c_stack]);\r\n\r\n        /*\r\n         if (this.valid === this.c_stack && this.c_stack) {\r\n         this.valid--;\r\n         }\r\n         */\r\n    };\r\n\r\n    var trMatrix = Transform.prototype.getIdentity();\r\n\r\n    Transform.prototype.tr = function (a, b, c, d, e, f) {\r\n        trMatrix[0] = a;\r\n        trMatrix[1] = b;\r\n        trMatrix[3] = c;\r\n        trMatrix[4] = d;\r\n        trMatrix[6] = e;\r\n        trMatrix[7] = f;\r\n\r\n        mat3.multiply(trMatrix, this.m_stack[this.c_stack]);\r\n    };\r\n\r\n    var scaleMatrix = Transform.prototype.getIdentity();\r\n\r\n    Transform.prototype.scale = function (x, y) {\r\n        scaleMatrix[0] = x;\r\n        scaleMatrix[4] = y;\r\n\r\n        mat3.multiply(scaleMatrix, this.m_stack[this.c_stack]);\r\n\r\n        /*\r\n         if (this.valid === this.c_stack && this.c_stack) {\r\n         this.valid--;\r\n         }\r\n         */\r\n    };\r\n\r\n    var rotateMatrix = Transform.prototype.getIdentity();\r\n\r\n    Transform.prototype.rotate = function (ang) {\r\n        var sAng, cAng;\r\n\r\n        sAng = Math.sin(-ang);\r\n        cAng = Math.cos(-ang);\r\n\r\n        rotateMatrix[0] = cAng;\r\n        rotateMatrix[3] = sAng;\r\n        rotateMatrix[1] = -sAng;\r\n        rotateMatrix[4] = cAng;\r\n\r\n        mat3.multiply(rotateMatrix, this.m_stack[this.c_stack]);\r\n\r\n        /*\r\n         if (this.valid === this.c_stack && this.c_stack) {\r\n         this.valid--;\r\n         }\r\n         */\r\n    };\r\n\r\n    var WebGL2D = global.WebGL2D = function WebGL2D(canvas, options) {\r\n        this.canvas = canvas;\r\n        this.options = options || {};\r\n        this.gl = undefined;\r\n        this.fs = undefined;\r\n        this.vs = undefined;\r\n        this.shaderProgram = undefined;\r\n        this.transform = new Transform();\r\n        this.shaderPool = [];\r\n        this.maxTextureSize = undefined;\r\n\r\n        // Save a reference to the WebGL2D instance on the canvas object\r\n        canvas.gl2d = this;\r\n\r\n        // Store getContext function for later use\r\n        canvas.$getContext = canvas.getContext;\r\n\r\n        // Override getContext function with \"webgl-2d\" enabled version\r\n        canvas.getContext = (function (gl2d) {\r\n            return function (context) {\r\n                if ((gl2d.options.force || context === \"WebGL-2d\") && !(canvas.width === 0 || canvas.height === 0)) {\r\n                    if (gl2d.gl) {\r\n                        return gl2d.gl;\r\n                    }\r\n\r\n                    var gl = gl2d.gl = gl2d.canvas.$getContext(\"experimental-webgl\");\r\n\r\n                    // If we failed to get a WebGL context, return a normal 2D context instead.\r\n                    if ((typeof (gl) === \"undefined\") || (gl === null)) {\r\n                        return gl2d.canvas.$getContext(\"2d\");\r\n                    }\r\n\r\n                    gl2d.initShaders();\r\n                    gl2d.initBuffers();\r\n\r\n                    // Append Canvas2D API features to the WebGL context\r\n                    gl2d.initCanvas2DAPI();\r\n\r\n                    // Disables writing to dest-alpha\r\n                    // gl.colorMask(1,1,1,0)\r\n\r\n                    // Depth options\r\n                    //gl.enable(gl.DEPTH_TEST);\r\n                    //gl.depthFunc(gl.LEQUAL);\r\n\r\n                    // Blending options\r\n                    // See http://stackoverflow.com/questions/11521035/blending-with-html-background-in-webgl\r\n                    gl.enable(gl.BLEND);\r\n                    gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n\r\n                    gl2d.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\r\n\r\n                    return gl;\r\n                } else {\r\n                    return gl2d.canvas.$getContext(context);\r\n                }\r\n            };\r\n        }(this));\r\n\r\n        this.postInit();\r\n    };\r\n\r\n    // Enables WebGL2D on your canvas\r\n    WebGL2D.enable = function (canvas, options) {\r\n        return canvas.gl2d || new WebGL2D(canvas, options);\r\n    };\r\n\r\n\r\n    // Shader Pool BitMasks, i.e. sMask = (shaderMask.texture+shaderMask.stroke)\r\n    var shaderMask = {\r\n        texture: 1,\r\n        crop: 2,\r\n        path: 4\r\n    };\r\n\r\n\r\n    // Fragment shader source\r\n    WebGL2D.prototype.getFragmentShaderSource = function getFragmentShaderSource(sMask) {\r\n        var fsSource = [\r\n            \"#ifdef GL_ES\",\r\n            \"precision highp float;\",\r\n            \"#endif\",\r\n\r\n            \"#define hasTexture \" + ((sMask & shaderMask.texture) ? \"1\" : \"0\"),\r\n            \"#define hasCrop \" + ((sMask & shaderMask.crop) ? \"1\" : \"0\"),\r\n\r\n            \"varying vec4 vColor;\",\r\n\r\n            \"#if hasTexture\",\r\n            \"varying vec2 vTextureCoord;\",\r\n            \"uniform sampler2D uSampler;\",\r\n            \"#if hasCrop\",\r\n            \"uniform vec4 uCropSource;\",\r\n            \"#endif\",\r\n            \"#endif\",\r\n\r\n            \"void main(void) {\",\r\n            \"#if hasTexture\",\r\n            \"#if hasCrop\",\r\n            \"gl_FragColor = texture2D(uSampler, vec2(vTextureCoord.x * uCropSource.z, vTextureCoord.y * uCropSource.w) + uCropSource.xy);\",\r\n            \"#else\",\r\n            \"gl_FragColor = texture2D(uSampler, vTextureCoord);\",\r\n            \"#endif\",\r\n            \"#else\",\r\n            \"gl_FragColor = vColor;\",\r\n            \"#endif\",\r\n            \"}\"\r\n        ].join(\"\\n\");\r\n\r\n        return fsSource;\r\n    };\r\n\r\n    WebGL2D.prototype.getVertexShaderSource = function getVertexShaderSource(stackDepth, sMask) {\r\n        stackDepth = stackDepth || 1;\r\n\r\n        var vsSource = [\r\n            \"#define hasTexture \" + ((sMask & shaderMask.texture) ? \"1\" : \"0\"),\r\n            \"attribute vec4 aVertexPosition;\",\r\n\r\n            \"#if hasTexture\",\r\n            \"varying vec2 vTextureCoord;\",\r\n            \"#endif\",\r\n\r\n            \"uniform vec4 uColor;\",\r\n            \"uniform mat3 uTransforms[\" + stackDepth + \"];\",\r\n\r\n            \"varying vec4 vColor;\",\r\n\r\n            \"uniform mat4 pMatrix;\",\r\n\r\n            \"mat3 crunchStack(void) {\",\r\n            \"mat3 result = uTransforms[0];\",\r\n            \"for (int i = 1; i < \" + stackDepth + \"; ++i) {\",\r\n            \"result = uTransforms[i] * result;\",\r\n            \"}\",\r\n            \"return result;\",\r\n            \"}\",\r\n\r\n            \"void main(void) {\",\r\n            \"vec3 position = crunchStack() * vec3(aVertexPosition.x, aVertexPosition.y, 1.0);\",\r\n            \"gl_Position = pMatrix * vec4(position, 1.0);\",\r\n            \"vColor = uColor;\",\r\n            \"#if hasTexture\",\r\n            \"vTextureCoord = aVertexPosition.zw;\",\r\n            \"#endif\",\r\n            \"}\"\r\n        ].join(\"\\n\");\r\n        return vsSource;\r\n    };\r\n\r\n\r\n    // Initialize fragment and vertex shaders\r\n    WebGL2D.prototype.initShaders = function initShaders(transformStackDepth, sMask) {\r\n        var gl = this.gl;\r\n\r\n        transformStackDepth = transformStackDepth || 1;\r\n        sMask = sMask || 0;\r\n        var storedShader = this.shaderPool[transformStackDepth];\r\n\r\n        if (!storedShader) {\r\n            storedShader = this.shaderPool[transformStackDepth] = [];\r\n        }\r\n        storedShader = storedShader[sMask];\r\n\r\n        if (storedShader) {\r\n            gl.useProgram(storedShader);\r\n            this.shaderProgram = storedShader;\r\n        } else {\r\n            var fs = this.fs = gl.createShader(gl.FRAGMENT_SHADER);\r\n            gl.shaderSource(this.fs, this.getFragmentShaderSource(sMask));\r\n            gl.compileShader(this.fs);\r\n\r\n            if (!gl.getShaderParameter(this.fs, gl.COMPILE_STATUS)) {\r\n                throw \"fragment shader error: \" + gl.getShaderInfoLog(this.fs);\r\n            }\r\n\r\n            var vs = this.vs = gl.createShader(gl.VERTEX_SHADER);\r\n            gl.shaderSource(this.vs, this.getVertexShaderSource(transformStackDepth, sMask));\r\n            gl.compileShader(this.vs);\r\n\r\n            if (!gl.getShaderParameter(this.vs, gl.COMPILE_STATUS)) {\r\n                throw \"vertex shader error: \" + gl.getShaderInfoLog(this.vs);\r\n            }\r\n\r\n\r\n            var shaderProgram = this.shaderProgram = gl.createProgram();\r\n            shaderProgram.stackDepth = transformStackDepth;\r\n            gl.attachShader(shaderProgram, fs);\r\n            gl.attachShader(shaderProgram, vs);\r\n            gl.linkProgram(shaderProgram);\r\n\r\n            if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\r\n                throw \"Could not initialise shaders.\";\r\n            }\r\n\r\n            gl.useProgram(shaderProgram);\r\n\r\n            shaderProgram.vertexPositionAttribute = gl.getAttribLocation(shaderProgram, \"aVertexPosition\");\r\n            gl.enableVertexAttribArray(shaderProgram.vertexPositionAttribute);\r\n\r\n            shaderProgram.uColor = gl.getUniformLocation(shaderProgram, 'uColor');\r\n            shaderProgram.uSampler = gl.getUniformLocation(shaderProgram, 'uSampler');\r\n            shaderProgram.uCropSource = gl.getUniformLocation(shaderProgram, 'uCropSource');\r\n\r\n            shaderProgram.pMatrix = gl.getUniformLocation(shaderProgram, 'pMatrix');\r\n\r\n            shaderProgram.uTransforms = [];\r\n            for (var i = 0; i < transformStackDepth; ++i) {\r\n                shaderProgram.uTransforms[i] = gl.getUniformLocation(shaderProgram, 'uTransforms[' + i + ']');\r\n            } //for\r\n            this.shaderPool[transformStackDepth][sMask] = shaderProgram;\r\n        } //if\r\n\r\n        pMatrix[0] = 2 / this.canvas.width;\r\n        pMatrix[5] = -2 / this.canvas.height;\r\n\r\n        gl.uniformMatrix4fv(this.shaderProgram.pMatrix, false, pMatrix);\r\n\r\n        gl.viewport(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n        return this.shaderProgram;\r\n    };\r\n\r\n    // 2D Vertices and Texture UV coords\r\n    var rectVerts = new Float32Array([\r\n        0, 0, 0, 0,\r\n        0, 1, 0, 1,\r\n        1, 1, 1, 1,\r\n        1, 0, 1, 0\r\n    ]);\r\n\r\n    var pMatrix = new Float32Array(16);\r\n    pMatrix[10] = 1;\r\n    pMatrix[11] = 1;\r\n    pMatrix[12] = -1;\r\n    pMatrix[13] = 1;\r\n\r\n    WebGL2D.prototype.initBuffers = function initBuffers() {\r\n        var gl = this.gl;\r\n\r\n        gl.rectVertexPositionBuffer = gl.createBuffer();\r\n        gl.rectVertexColorBuffer = gl.createBuffer();\r\n\r\n        gl.pathVertexPositionBuffer = gl.createBuffer();\r\n        gl.pathVertexColorBuffer = gl.createBuffer();\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, gl.rectVertexPositionBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, rectVerts, gl.STATIC_DRAW);\r\n    };\r\n\r\n    // Maintains an array of all WebGL2D instances\r\n    WebGL2D.instances = [];\r\n\r\n    WebGL2D.prototype.postInit = function () {\r\n        WebGL2D.instances.push(this);\r\n    };\r\n\r\n    // Extends gl context with Canvas2D API\r\n    WebGL2D.prototype.initCanvas2DAPI = function initCanvas2DAPI() {\r\n        var gl2d = this,\r\n            gl = this.gl;\r\n\r\n\r\n        // Rendering Canvas for text fonts\r\n        var textCanvas = document.createElement(\"canvas\");\r\n        textCanvas.width = gl2d.canvas.width;\r\n        textCanvas.height = gl2d.canvas.height;\r\n        var textCtx = textCanvas.getContext(\"2d\");\r\n\r\n        var reRGBAColor = /^rgb(a)?\\(\\s*(-?[\\d]+)(%)?\\s*,\\s*(-?[\\d]+)(%)?\\s*,\\s*(-?[\\d]+)(%)?\\s*,?\\s*(-?[\\d\\.]+)?\\s*\\)$/;\r\n        var reHSLAColor = /^hsl(a)?\\(\\s*(-?[\\d\\.]+)\\s*,\\s*(-?[\\d\\.]+)%\\s*,\\s*(-?[\\d\\.]+)%\\s*,?\\s*(-?[\\d\\.]+)?\\s*\\)$/;\r\n        var reHex6Color = /^#([0-9A-Fa-f]{6})$/;\r\n        var reHex3Color = /^#([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])$/;\r\n\r\n        function hue2rgb(p, q, t) {\r\n            if (t < 0) t += 1;\r\n            if (t > 1) t -= 1;\r\n            if (t < 1 / 6) return p + (q - p) * 6 * t;\r\n            if (t < 1 / 2) return q;\r\n            if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\r\n            return p;\r\n        }\r\n\r\n        // http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n        function HSLAToRGBA(h, s, l, a) {\r\n            var r, g, b, p, q;\r\n\r\n            // Clamp and Normalize values\r\n            h = (((h % 360) + 360) % 360) / 360;\r\n            s = s > 100 ? 1 : s / 100;\r\n            s = s < 0 ? 0 : s;\r\n            l = l > 100 ? 1 : l / 100;\r\n            l = l < 0 ? 0 : l;\r\n\r\n            if (s == 0) {\r\n                r = g = b = l; // achromatic\r\n            } else {\r\n                q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n                p = 2 * l - q;\r\n\r\n                r = hue2rgb(p, q, h + 1 / 3);\r\n                g = hue2rgb(p, q, h);\r\n                b = hue2rgb(p, q, h - 1 / 3);\r\n            }\r\n\r\n            return [r, g, b, a];\r\n        }\r\n\r\n\r\n        // Converts rgb(a) color string to gl color vector\r\n        function colorStringToVec4(value) {\r\n            var result = [], match, channel, isPercent, hasAlpha, alphaChannel, sameType;\r\n\r\n            if ((match = reRGBAColor.exec(value))) {\r\n                hasAlpha = match[1], alphaChannel = parseFloat(match[8]);\r\n\r\n                if ((hasAlpha && isNaN(alphaChannel)) || (!hasAlpha && !isNaN(alphaChannel))) {\r\n                    return false;\r\n                }\r\n\r\n                sameType = match[3];\r\n\r\n                for (var i = 2; i < 8; i += 2) {\r\n                    channel = match[i], isPercent = match[i + 1];\r\n\r\n                    if (isPercent !== sameType) {\r\n                        return false;\r\n                    }\r\n\r\n                    // Clamp and normalize values\r\n                    if (isPercent) {\r\n                        channel = channel > 100 ? 1 : channel / 100;\r\n                        channel = channel < 0 ? 0 : channel;\r\n                    } else {\r\n                        channel = channel > 255 ? 1 : channel / 255;\r\n                        channel = channel < 0 ? 0 : channel;\r\n                    }\r\n\r\n                    result.push(channel);\r\n                }\r\n\r\n                result.push(hasAlpha ? alphaChannel : 1.0);\r\n            } else if ((match = reHSLAColor.exec(value))) {\r\n                hasAlpha = match[1], alphaChannel = parseFloat(match[5]);\r\n                result = HSLAToRGBA(match[2], match[3], match[4], parseFloat(hasAlpha && alphaChannel ? alphaChannel : 1.0));\r\n            } else if ((match = reHex6Color.exec(value))) {\r\n                var colorInt = parseInt(match[1], 16);\r\n                result = [((colorInt & 0xFF0000) >> 16) / 255, ((colorInt & 0x00FF00) >> 8) / 255, (colorInt & 0x0000FF) / 255, 1.0];\r\n            } else if ((match = reHex3Color.exec(value))) {\r\n                var hexString = \"#\" + [match[1], match[1], match[2], match[2], match[3], match[3]].join(\"\");\r\n                result = colorStringToVec4(hexString);\r\n            } else if (value.toLowerCase() in colorKeywords) {\r\n                result = colorStringToVec4(colorKeywords[value.toLowerCase()]);\r\n            } else if (value.toLowerCase() === \"transparent\") {\r\n                result = [0, 0, 0, 0];\r\n            } else {\r\n                // Color keywords not yet implemented, ie \"orange\", return hot pink\r\n                return false;\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        function colorVecToString(vec4) {\r\n            return \"rgba(\" + (vec4[0] * 255) + \", \" + (vec4[1] * 255) + \", \" + (vec4[2] * 255) + \", \" + parseFloat(vec4[3]) + \")\";\r\n        }\r\n\r\n        var colorKeywords = {\r\n            aliceblue: \"#f0f8ff\",\r\n            antiquewhite: \"#faebd7\",\r\n            aqua: \"#00ffff\",\r\n            aquamarine: \"#7fffd4\",\r\n            azure: \"#f0ffff\",\r\n            beige: \"#f5f5dc\",\r\n            bisque: \"#ffe4c4\",\r\n            black: \"#000000\",\r\n            blanchedalmond: \"#ffebcd\",\r\n            blue: \"#0000ff\",\r\n            blueviolet: \"#8a2be2\",\r\n            brown: \"#a52a2a\",\r\n            burlywood: \"#deb887\",\r\n            cadetblue: \"#5f9ea0\",\r\n            chartreuse: \"#7fff00\",\r\n            chocolate: \"#d2691e\",\r\n            coral: \"#ff7f50\",\r\n            cornflowerblue: \"#6495ed\",\r\n            cornsilk: \"#fff8dc\",\r\n            crimson: \"#dc143c\",\r\n            cyan: \"#00ffff\",\r\n            darkblue: \"#00008b\",\r\n            darkcyan: \"#008b8b\",\r\n            darkgoldenrod: \"#b8860b\",\r\n            darkgray: \"#a9a9a9\",\r\n            darkgreen: \"#006400\",\r\n            darkkhaki: \"#bdb76b\",\r\n            darkmagenta: \"#8b008b\",\r\n            darkolivegreen: \"#556b2f\",\r\n            darkorange: \"#ff8c00\",\r\n            darkorchid: \"#9932cc\",\r\n            darkred: \"#8b0000\",\r\n            darksalmon: \"#e9967a\",\r\n            darkseagreen: \"#8fbc8f\",\r\n            darkslateblue: \"#483d8b\",\r\n            darkslategray: \"#2f4f4f\",\r\n            darkturquoise: \"#00ced1\",\r\n            darkviolet: \"#9400d3\",\r\n            deeppink: \"#ff1493\",\r\n            deepskyblue: \"#00bfff\",\r\n            dimgray: \"#696969\",\r\n            dodgerblue: \"#1e90ff\",\r\n            firebrick: \"#b22222\",\r\n            floralwhite: \"#fffaf0\",\r\n            forestgreen: \"#228b22\",\r\n            fuchsia: \"#ff00ff\",\r\n            gainsboro: \"#dcdcdc\",\r\n            ghostwhite: \"#f8f8ff\",\r\n            gold: \"#ffd700\",\r\n            goldenrod: \"#daa520\",\r\n            gray: \"#808080\",\r\n            green: \"#008000\",\r\n            greenyellow: \"#adff2f\",\r\n            grey: \"#808080\",\r\n            honeydew: \"#f0fff0\",\r\n            hotpink: \"#ff69b4\",\r\n            indianred: \"#cd5c5c\",\r\n            indigo: \"#4b0082\",\r\n            ivory: \"#fffff0\",\r\n            khaki: \"#f0e68c\",\r\n            lavender: \"#e6e6fa\",\r\n            lavenderblush: \"#fff0f5\",\r\n            lawngreen: \"#7cfc00\",\r\n            lemonchiffon: \"#fffacd\",\r\n            lightblue: \"#add8e6\",\r\n            lightcoral: \"#f08080\",\r\n            lightcyan: \"#e0ffff\",\r\n            lightgoldenrodyellow: \"#fafad2\",\r\n            lightgrey: \"#d3d3d3\",\r\n            lightgreen: \"#90ee90\",\r\n            lightpink: \"#ffb6c1\",\r\n            lightsalmon: \"#ffa07a\",\r\n            lightseagreen: \"#20b2aa\",\r\n            lightskyblue: \"#87cefa\",\r\n            lightslategray: \"#778899\",\r\n            lightsteelblue: \"#b0c4de\",\r\n            lightyellow: \"#ffffe0\",\r\n            lime: \"#00ff00\",\r\n            limegreen: \"#32cd32\",\r\n            linen: \"#faf0e6\",\r\n            magenta: \"#ff00ff\",\r\n            maroon: \"#800000\",\r\n            mediumaquamarine: \"#66cdaa\",\r\n            mediumblue: \"#0000cd\",\r\n            mediumorchid: \"#ba55d3\",\r\n            mediumpurple: \"#9370d8\",\r\n            mediumseagreen: \"#3cb371\",\r\n            mediumslateblue: \"#7b68ee\",\r\n            mediumspringgreen: \"#00fa9a\",\r\n            mediumturquoise: \"#48d1cc\",\r\n            mediumvioletred: \"#c71585\",\r\n            midnightblue: \"#191970\",\r\n            mintcream: \"#f5fffa\",\r\n            mistyrose: \"#ffe4e1\",\r\n            moccasin: \"#ffe4b5\",\r\n            navajowhite: \"#ffdead\",\r\n            navy: \"#000080\",\r\n            oldlace: \"#fdf5e6\",\r\n            olive: \"#808000\",\r\n            olivedrab: \"#6b8e23\",\r\n            orange: \"#ffa500\",\r\n            orangered: \"#ff4500\",\r\n            orchid: \"#da70d6\",\r\n            palegoldenrod: \"#eee8aa\",\r\n            palegreen: \"#98fb98\",\r\n            paleturquoise: \"#afeeee\",\r\n            palevioletred: \"#d87093\",\r\n            papayawhip: \"#ffefd5\",\r\n            peachpuff: \"#ffdab9\",\r\n            peru: \"#cd853f\",\r\n            pink: \"#ffc0cb\",\r\n            plum: \"#dda0dd\",\r\n            powderblue: \"#b0e0e6\",\r\n            purple: \"#800080\",\r\n            red: \"#ff0000\",\r\n            rosybrown: \"#bc8f8f\",\r\n            royalblue: \"#4169e1\",\r\n            saddlebrown: \"#8b4513\",\r\n            salmon: \"#fa8072\",\r\n            sandybrown: \"#f4a460\",\r\n            seagreen: \"#2e8b57\",\r\n            seashell: \"#fff5ee\",\r\n            sienna: \"#a0522d\",\r\n            silver: \"#c0c0c0\",\r\n            skyblue: \"#87ceeb\",\r\n            slateblue: \"#6a5acd\",\r\n            slategray: \"#708090\",\r\n            snow: \"#fffafa\",\r\n            springgreen: \"#00ff7f\",\r\n            steelblue: \"#4682b4\",\r\n            tan: \"#d2b48c\",\r\n            teal: \"#008080\",\r\n            thistle: \"#d8bfd8\",\r\n            tomato: \"#ff6347\",\r\n            turquoise: \"#40e0d0\",\r\n            violet: \"#ee82ee\",\r\n            wheat: \"#f5deb3\",\r\n            white: \"#ffffff\",\r\n            whitesmoke: \"#f5f5f5\",\r\n            yellow: \"#ffff00\",\r\n            yellowgreen: \"#9acd32\"\r\n        };\r\n\r\n        // Maintain drawing state params during gl.save and gl.restore. see saveDrawState() and restoreDrawState()\r\n        var drawState = {}, drawStateStack = [];\r\n\r\n        // A fast simple shallow clone\r\n        function cloneObject(obj) {\r\n            var target = {};\r\n            for (var i in obj) {\r\n                if (obj.hasOwnProperty(i)) {\r\n                    target[i] = obj[i];\r\n                }\r\n            }\r\n            return target;\r\n        }\r\n\r\n        function saveDrawState() {\r\n            var bakedDrawState = {\r\n                fillStyle: [drawState.fillStyle[0], drawState.fillStyle[1], drawState.fillStyle[2], drawState.fillStyle[3]],\r\n                strokeStyle: [drawState.strokeStyle[0], drawState.strokeStyle[1], drawState.strokeStyle[2], drawState.strokeStyle[3]],\r\n                globalAlpha: drawState.globalAlpha,\r\n                globalCompositeOperation: drawState.globalCompositeOperation,\r\n                lineCap: drawState.lineCap,\r\n                lineJoin: drawState.lineJoin,\r\n                lineWidth: drawState.lineWidth,\r\n                miterLimit: drawState.miterLimit,\r\n                shadowColor: drawState.shadowColor,\r\n                shadowBlur: drawState.shadowBlur,\r\n                shadowOffsetX: drawState.shadowOffsetX,\r\n                shadowOffsetY: drawState.shadowOffsetY,\r\n                textAlign: drawState.textAlign,\r\n                font: drawState.font,\r\n                textBaseline: drawState.textBaseline,\r\n                imageSmoothingEnabled: drawState.imageSmoothingEnabled\r\n            };\r\n\r\n            drawStateStack.push(bakedDrawState);\r\n        }\r\n\r\n        function restoreDrawState() {\r\n            if (drawStateStack.length) {\r\n                drawState = drawStateStack.pop();\r\n            }\r\n        }\r\n\r\n        // WebGL requires colors as a vector while Canvas2D sets colors as an rgba string\r\n        // These getters and setters store the original rgba string as well as convert to a vector\r\n        drawState.fillStyle = [0, 0, 0, 1]; // default black\r\n\r\n        Object.defineProperty(gl, \"fillStyle\", {\r\n            get: function () {\r\n                return colorVecToString(drawState.fillStyle);\r\n            },\r\n            set: function (value) {\r\n                drawState.fillStyle = colorStringToVec4(value) || drawState.fillStyle;\r\n            }\r\n        });\r\n\r\n        drawState.strokeStyle = [0, 0, 0, 1]; // default black\r\n\r\n        Object.defineProperty(gl, \"strokeStyle\", {\r\n            get: function () {\r\n                return colorVecToString(drawState.strokeStyle);\r\n            },\r\n            set: function (value) {\r\n                drawState.strokeStyle = colorStringToVec4(value) || drawStyle.strokeStyle;\r\n            }\r\n        });\r\n\r\n        // WebGL already has a lineWidth() function but Canvas2D requires a lineWidth property\r\n        // Store the original lineWidth() function for later use\r\n        gl.$lineWidth = gl.lineWidth;\r\n        drawState.lineWidth = 1.0;\r\n\r\n        Object.defineProperty(gl, \"lineWidth\", {\r\n            get: function () {\r\n                return drawState.lineWidth;\r\n            },\r\n            set: function (value) {\r\n                if (value > 0) {\r\n                    gl.$lineWidth(value);\r\n                    drawState.lineWidth = value;\r\n                }\r\n            }\r\n        });\r\n\r\n        // Currently unsupported attributes and their default values\r\n        drawState.lineCap = \"butt\";\r\n\r\n        Object.defineProperty(gl, \"lineCap\", {\r\n            get: function () {\r\n                return drawState.lineCap;\r\n            },\r\n            set: function (value) {\r\n                drawState.lineCap = value;\r\n            }\r\n        });\r\n\r\n        drawState.lineJoin = \"miter\";\r\n\r\n        Object.defineProperty(gl, \"lineJoin\", {\r\n            get: function () {\r\n                return drawState.lineJoin;\r\n            },\r\n            set: function (value) {\r\n                drawState.lineJoin = value;\r\n            }\r\n        });\r\n\r\n        drawState.miterLimit = 10;\r\n\r\n        Object.defineProperty(gl, \"miterLimit\", {\r\n            get: function () {\r\n                return drawState.miterLimit;\r\n            },\r\n            set: function (value) {\r\n                drawState.miterLimit = value;\r\n            }\r\n        });\r\n\r\n        drawState.shadowOffsetX = 0;\r\n\r\n        Object.defineProperty(gl, \"shadowOffsetX\", {\r\n            get: function () {\r\n                return drawState.shadowOffsetX;\r\n            },\r\n            set: function (value) {\r\n                drawState.shadowOffsetX = value;\r\n            }\r\n        });\r\n\r\n        drawState.shadowOffsetY = 0;\r\n\r\n        Object.defineProperty(gl, \"shadowOffsetY\", {\r\n            get: function () {\r\n                return drawState.shadowOffsetY;\r\n            },\r\n            set: function (value) {\r\n                drawState.shadowOffsetY = value;\r\n            }\r\n        });\r\n\r\n        drawState.shadowBlur = 0;\r\n\r\n        Object.defineProperty(gl, \"shadowBlur\", {\r\n            get: function () {\r\n                return drawState.shadowBlur;\r\n            },\r\n            set: function (value) {\r\n                drawState.shadowBlur = value;\r\n            }\r\n        });\r\n\r\n        drawState.shadowColor = \"rgba(0, 0, 0, 0.0)\";\r\n\r\n        Object.defineProperty(gl, \"shadowColor\", {\r\n            get: function () {\r\n                return drawState.shadowColor;\r\n            },\r\n            set: function (value) {\r\n                drawState.shadowColor = value;\r\n            }\r\n        });\r\n\r\n        drawState.font = \"10px sans-serif\";\r\n\r\n        Object.defineProperty(gl, \"font\", {\r\n            get: function () {\r\n                return drawState.font;\r\n            },\r\n            set: function (value) {\r\n                textCtx.font = value;\r\n                drawState.font = value;\r\n            }\r\n        });\r\n\r\n        drawState.textAlign = \"start\";\r\n\r\n        Object.defineProperty(gl, \"textAlign\", {\r\n            get: function () {\r\n                return drawState.textAlign;\r\n            },\r\n            set: function (value) {\r\n                drawState.textAlign = value;\r\n            }\r\n        });\r\n\r\n        drawState.textBaseline = \"alphabetic\";\r\n\r\n        Object.defineProperty(gl, \"textBaseline\", {\r\n            get: function () {\r\n                return drawState.textBaseline;\r\n            },\r\n            set: function (value) {\r\n                drawState.textBaseline = value;\r\n            }\r\n        });\r\n\r\n        // This attribute will need to control global alpha of objects drawn.\r\n        drawState.globalAlpha = 1.0;\r\n\r\n        Object.defineProperty(gl, \"globalAlpha\", {\r\n            get: function () {\r\n                return drawState.globalAlpha;\r\n            },\r\n            set: function (value) {\r\n                drawState.globalAlpha = value;\r\n            }\r\n        });\r\n\r\n        // This attribute will need to control smoothing of objects drawn.\r\n        drawState.imageSmoothingEnabled = true;\r\n\r\n        Object.defineProperty(gl, \"imageSmoothingEnabled\", {\r\n            get: function () {\r\n                return drawState.imageSmoothingEnabled;\r\n            },\r\n            set: function (value) {\r\n                drawState.imageSmoothingEnabled = !!value;\r\n            }\r\n        });\r\n\r\n        // This attribute will need to set the gl.blendFunc mode\r\n        drawState.globalCompositeOperation = \"source-over\";\r\n\r\n        Object.defineProperty(gl, \"globalCompositeOperation\", {\r\n            get: function () {\r\n                return drawState.globalCompositeOperation;\r\n            },\r\n            set: function (value) {\r\n                drawState.globalCompositeOperation = value;\r\n            }\r\n        });\r\n\r\n        // Need a solution for drawing text that isnt stupid slow\r\n        gl.fillText = function fillText(text, x, y) {\r\n            // if it exist --key\r\n            textCtx.clearRect(0, 0, gl2d.canvas.width, gl2d.canvas.height);\r\n            textCtx.fillStyle = gl.fillStyle;\r\n            textCtx.fillText(text, x, y);\r\n\r\n            gl.drawImage(textCanvas, 0, 0);\r\n        };\r\n\r\n        gl.strokeText = function strokeText() {\r\n        };\r\n\r\n        gl.measureText = function measureText() {\r\n            return 1;\r\n        };\r\n\r\n        var tempCanvas = document.createElement('canvas');\r\n        var tempCtx = tempCanvas.getContext('2d');\r\n\r\n        gl.save = function save() {\r\n            gl2d.transform.pushMatrix();\r\n            saveDrawState();\r\n        };\r\n\r\n        gl.restore = function restore() {\r\n            gl2d.transform.popMatrix();\r\n            restoreDrawState();\r\n        };\r\n\r\n        gl.translate = function translate(x, y) {\r\n            gl2d.transform.translate(x, y);\r\n        };\r\n\r\n        gl.rotate = function rotate(a) {\r\n            gl2d.transform.rotate(a);\r\n        };\r\n\r\n        gl.scale = function scale(x, y) {\r\n            gl2d.transform.scale(x, y);\r\n        };\r\n\r\n        gl.createImageData = function createImageData(width, height) {\r\n            return tempCtx.createImageData(width, height);\r\n        };\r\n\r\n        gl.getImageData = function getImageData(x, y, width, height) {\r\n            var data = tempCtx.createImageData(width, height);\r\n            var buffer = new Uint8Array(width * height * 4);\r\n            gl.readPixels(x, y, width, height, gl.RGBA, gl.UNSIGNED_BYTE, buffer);\r\n            var w = width * 4, h = height;\r\n            for (var i = 0, maxI = h / 2; i < maxI; ++i) {\r\n                for (var j = 0, maxJ = w; j < maxJ; ++j) {\r\n                    var index1 = i * w + j;\r\n                    var index2 = (h - i - 1) * w + j;\r\n                    data.data[index1] = buffer[index2];\r\n                    data.data[index2] = buffer[index1];\r\n                } //for\r\n            } //for\r\n\r\n            return data;\r\n        };\r\n\r\n        gl.putImageData = function putImageData(imageData, x, y) {\r\n            gl.drawImage(imageData, x, y);\r\n        };\r\n\r\n        gl.transform = function transform(m11, m12, m21, m22, dx, dy) {\r\n            gl2d.transform.tr(m11, m12, m21, m22, dx, dy);\r\n        };\r\n\r\n        function sendTransformStack(sp) {\r\n            var stack = gl2d.transform.m_stack;\r\n            for (var i = 0, maxI = gl2d.transform.c_stack + 1; i < maxI; ++i) {\r\n                gl.uniformMatrix3fv(sp.uTransforms[i], false, stack[maxI - 1 - i]);\r\n            } //for\r\n        }\r\n\r\n        gl.setTransform = function setTransform(m11, m12, m21, m22, dx, dy) {\r\n            gl2d.transform.setIdentity();\r\n            gl.transform.apply(this, arguments);\r\n        };\r\n\r\n        gl.fillRect = function fillRect(x, y, width, height) {\r\n            var transform = gl2d.transform;\r\n            var shaderProgram = gl2d.initShaders(transform.c_stack + 2, 0);\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, gl.rectVertexPositionBuffer);\r\n            gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, 4, gl.FLOAT, false, 0, 0);\r\n\r\n            transform.pushMatrix();\r\n\r\n            transform.translate(x, y);\r\n            transform.scale(width, height);\r\n\r\n            sendTransformStack(shaderProgram);\r\n\r\n            gl.uniform4f(shaderProgram.uColor, drawState.fillStyle[0], drawState.fillStyle[1], drawState.fillStyle[2], drawState.fillStyle[3]);\r\n\r\n            gl.drawArrays(gl.TRIANGLE_FAN, 0, 4);\r\n\r\n            transform.popMatrix();\r\n        };\r\n\r\n        gl.strokeRect = function strokeRect(x, y, width, height) {\r\n            var transform = gl2d.transform;\r\n            var shaderProgram = gl2d.initShaders(transform.c_stack + 2, 0);\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, gl.rectVertexPositionBuffer);\r\n            gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, 4, gl.FLOAT, false, 0, 0);\r\n\r\n            transform.pushMatrix();\r\n\r\n            transform.translate(x, y);\r\n            transform.scale(width, height);\r\n\r\n            sendTransformStack(shaderProgram);\r\n\r\n            gl.uniform4f(shaderProgram.uColor, drawState.strokeStyle[0], drawState.strokeStyle[1], drawState.strokeStyle[2], drawState.strokeStyle[3]);\r\n\r\n            gl.drawArrays(gl.LINE_LOOP, 0, 4);\r\n\r\n            transform.popMatrix();\r\n        };\r\n\r\n        gl.clearRect = function clearRect(x, y, width, height) {\r\n        };\r\n\r\n        var subPaths = [];\r\n\r\n        function SubPath(x, y) {\r\n            this.closed = false;\r\n            this.verts = [x, y, 0, 0];\r\n        }\r\n\r\n        // Empty the list of subpaths so that the context once again has zero subpaths\r\n        gl.beginPath = function beginPath() {\r\n            subPaths.length = 0;\r\n        };\r\n\r\n        // Mark last subpath as closed and create a new subpath with the same starting point as the previous subpath\r\n        gl.closePath = function closePath() {\r\n            if (subPaths.length) {\r\n                // Mark last subpath closed.\r\n                var prevPath = subPaths[subPaths.length - 1], startX = prevPath.verts[0], startY = prevPath.verts[1];\r\n                prevPath.closed = true;\r\n\r\n                // Create new subpath using the starting position of previous subpath\r\n                var newPath = new SubPath(startX, startY);\r\n                subPaths.push(newPath);\r\n            }\r\n        };\r\n\r\n        // Create a new subpath with the specified point as its first (and only) point\r\n        gl.moveTo = function moveTo(x, y) {\r\n            subPaths.push(new SubPath(x, y));\r\n        };\r\n\r\n        gl.lineTo = function lineTo(x, y) {\r\n            if (subPaths.length) {\r\n                subPaths[subPaths.length - 1].verts.push(x, y, 0, 0);\r\n            } else {\r\n                // Create a new subpath if none currently exist\r\n                gl.moveTo(x, y);\r\n            }\r\n        };\r\n\r\n        gl.quadraticApproximateCount = 50;\r\n        gl.quadraticCurveTo = function quadraticCurveTo(hx, hy, x, y) {\r\n            if (subPaths.length) {\r\n                var verts = subPaths[subPaths.length - 1].verts,\r\n                    fromx = verts[verts.length - 4],\r\n                    fromy = verts[verts.length - 3],\r\n                    t, i, tx, ty;\r\n                for (var j = 0; j < gl.quadraticApproximateCount; j++) {\r\n                    t = j / gl.quadraticApproximateCount;\r\n                    i = 1 - t;\r\n                    tx = i * i * fromx + 2 * i * t * hx + t * t * x;\r\n                    ty = i * i * fromy + 2 * i * t * hy + t * t * y;\r\n                    verts.push(tx, ty, 0, 0);\r\n                }\r\n            } else {\r\n                gl.moveTo(x, y);\r\n            }\r\n        };\r\n\r\n        gl.bezierApproximateCount = 50;\r\n        gl.bezierCurveTo = function quadraticCurveTo(h1x, h1y, h2x, h2y, x, y) {\r\n            if (subPaths.length) {\r\n                var verts = subPaths[subPaths.length - 1].verts,\r\n                    fromx = verts[verts.length - 4],\r\n                    fromy = verts[verts.length - 3],\r\n                    t, i, tx, ty;\r\n                for (var j = 0; j < gl.bezierApproximateCount; j++) {\r\n                    t = j / gl.bezierApproximateCount;\r\n                    i = 1 - t;\r\n                    tx = i * i * i * fromx + 3 * i * i * t * h1x + 3 * i * t * t * h2x + t * t * t * x;\r\n                    ty = i * i * i * fromy + 3 * i * i * t * h1y + 3 * i * t * t * h2y + t * t * t * y;\r\n                    verts.push(tx, ty, 0, 0);\r\n                }\r\n            } else {\r\n                gl.moveTo(x, y);\r\n            }\r\n        };\r\n\r\n        gl.arcTo = function arcTo() {\r\n            if (subPaths.length) {\r\n                ;\r\n            } else {\r\n                gl.moveTo(x, y);\r\n            }\r\n        };\r\n\r\n        // Adds a closed rect subpath and creates a new subpath\r\n        gl.rect = function rect(x, y, w, h) {\r\n            gl.moveTo(x, y);\r\n            gl.lineTo(x + w, y);\r\n            gl.lineTo(x + w, y + h);\r\n            gl.lineTo(x, y + h);\r\n            gl.closePath();\r\n        };\r\n\r\n        gl.arcApproximateCount = 100;\r\n        gl.arc = function arc(cx, cy, radius, startAngle, endAngle, anticlockwise) {\r\n            if (subPaths.length) {\r\n                var verts = subPaths[subPaths.length - 1].verts;\r\n\r\n                // startAngle\r\n                var x = cx + radius * Math.cos(startAngle),\r\n                    y = cy + radius * Math.sin(startAngle);\r\n                verts.push(x, y, 0, 0);\r\n\r\n                while (startAngle > Math.PI * 2)\r\n                    startAngle -= Math.PI * 2;\r\n                while (endAngle > Math.PI * 2)\r\n                    endAngle -= Math.PI * 2;\r\n                while (startAngle < -Math.PI * 2)\r\n                    startAngle += Math.PI * 2;\r\n                while (endAngle < -Math.PI * 2)\r\n                    endAngle += Math.PI * 2;\r\n                if (startAngle == endAngle)\r\n                    return;\r\n\r\n                var count = 1 / gl.arcApproximateCount,\r\n                    fixed = gl.arcApproximateCount,\r\n                    t;\r\n                if (anticlockwise) {\r\n                    endAngle -= Math.PI * 2;\r\n                    count = -count;\r\n                }\r\n                for (var i = startAngle; (i > endAngle && anticlockwise) || (i < endAngle && !anticlockwise); i += count) {\r\n                    if (t == (t = (i * fixed | 0) / fixed))\r\n                        continue;\r\n                    x = cx + radius * Math.cos(t);\r\n                    y = cy + radius * Math.sin(t);\r\n                    verts.push(x, y, 0, 0);\r\n                }\r\n            } else {\r\n                gl.moveTo(x, y);\r\n            }\r\n        };\r\n\r\n        function fillSubPath(index) {\r\n            var transform = gl2d.transform;\r\n            var shaderProgram = gl2d.initShaders(transform.c_stack + 2, 0);\r\n\r\n            var subPath = subPaths[index];\r\n            var verts = subPath.verts;\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, gl.pathVertexPositionBuffer);\r\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(verts), gl.STATIC_DRAW);\r\n\r\n            gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, 4, gl.FLOAT, false, 0, 0);\r\n\r\n            transform.pushMatrix();\r\n\r\n            sendTransformStack(shaderProgram);\r\n\r\n            gl.uniform4f(shaderProgram.uColor, drawState.fillStyle[0], drawState.fillStyle[1], drawState.fillStyle[2], drawState.fillStyle[3]);\r\n\r\n            gl.drawArrays(gl.TRIANGLE_FAN, 0, verts.length / 4);\r\n\r\n            transform.popMatrix();\r\n        }\r\n\r\n        gl.fill = function fill() {\r\n            for (var i = 0; i < subPaths.length; i++) {\r\n                fillSubPath(i);\r\n            }\r\n        };\r\n\r\n        function strokeSubPath(index) {\r\n            var transform = gl2d.transform;\r\n            var shaderProgram = gl2d.initShaders(transform.c_stack + 2, 0);\r\n\r\n            var subPath = subPaths[index];\r\n            var verts = subPath.verts;\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, gl.pathVertexPositionBuffer);\r\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(verts), gl.STATIC_DRAW);\r\n\r\n            gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, 4, gl.FLOAT, false, 0, 0);\r\n\r\n            transform.pushMatrix();\r\n\r\n            sendTransformStack(shaderProgram);\r\n\r\n            gl.uniform4f(shaderProgram.uColor, drawState.strokeStyle[0], drawState.strokeStyle[1], drawState.strokeStyle[2], drawState.strokeStyle[3]);\r\n\r\n            if (subPath.closed) {\r\n                gl.drawArrays(gl.LINE_LOOP, 0, verts.length / 4);\r\n            } else {\r\n                gl.drawArrays(gl.LINE_STRIP, 0, verts.length / 4);\r\n            }\r\n\r\n            transform.popMatrix();\r\n        }\r\n\r\n        gl.stroke = function stroke() {\r\n            for (var i = 0; i < subPaths.length; i++) {\r\n                strokeSubPath(i);\r\n            }\r\n        };\r\n\r\n        gl.clip = function clip() {\r\n        };\r\n\r\n        gl.isPointInPath = function isPointInPath() {\r\n        };\r\n\r\n        gl.drawFocusRing = function drawFocusRing() {\r\n        };\r\n\r\n\r\n        var imageCache = [], textureCache = [];\r\n\r\n        function Texture(image) {\r\n            this.obj = gl.createTexture();\r\n            this.index = textureCache.push(this);\r\n\r\n            imageCache.push(image);\r\n\r\n            // we may wish to consider tiling large images like this instead of scaling and\r\n            // adjust appropriately (flip to next texture source and tile offset) when drawing\r\n            if (image.width > gl2d.maxTextureSize || image.height > gl2d.maxTextureSize) {\r\n                var canvas = document.createElement(\"canvas\");\r\n\r\n                canvas.width = (image.width > gl2d.maxTextureSize) ? gl2d.maxTextureSize : image.width;\r\n                canvas.height = (image.height > gl2d.maxTextureSize) ? gl2d.maxTextureSize : image.height;\r\n\r\n                var ctx = canvas.getContext(\"2d\");\r\n\r\n                ctx.drawImage(image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height);\r\n\r\n                image = canvas;\r\n            }\r\n\r\n            var GL_FUNCTION = gl.LINEAR;\r\n            var GL_MIPMAP_FUNCTION = gl.LINEAR_MIPMAP_LINEAR;\r\n\r\n            if (!drawState.imageSmoothingEnabled) {\r\n                GL_FUNCTION = gl.NEAREST;\r\n                GL_MIPMAP_FUNCTION = gl.LINEAR_MIPMAP_NEAREST;\r\n            }\r\n\r\n            gl.bindTexture(gl.TEXTURE_2D, this.obj);\r\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, GL_FUNCTION);\r\n\r\n            // Enable Mip mapping on power-of-2 textures\r\n            if (isPOT(image.width) && isPOT(image.height)) {\r\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, GL_MIPMAP_FUNCTION);\r\n                gl.generateMipmap(gl.TEXTURE_2D);\r\n            } else {\r\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, GL_FUNCTION);\r\n            }\r\n\r\n            // Unbind texture\r\n            gl.bindTexture(gl.TEXTURE_2D, null);\r\n        }\r\n\r\n        gl.drawImage = function drawImage(image, a, b, c, d, e, f, g, h) {\r\n            var transform = gl2d.transform;\r\n\r\n            transform.pushMatrix();\r\n\r\n            var sMask = shaderMask.texture;\r\n            var doCrop = false;\r\n\r\n            //drawImage(image, dx, dy)\r\n            if (arguments.length === 3) {\r\n                transform.translate(a, b);\r\n                transform.scale(image.width, image.height);\r\n            }\r\n\r\n            //drawImage(image, dx, dy, dw, dh)\r\n            else if (arguments.length === 5) {\r\n                transform.translate(a, b);\r\n                transform.scale(c, d);\r\n            }\r\n\r\n            //drawImage(image, sx, sy, sw, sh, dx, dy, dw, dh)\r\n            else if (arguments.length === 9) {\r\n                transform.translate(e, f);\r\n                transform.scale(g, h);\r\n                sMask = sMask | shaderMask.crop;\r\n                doCrop = true;\r\n            }\r\n\r\n            var shaderProgram = gl2d.initShaders(transform.c_stack + 1, sMask);\r\n\r\n            var texture, cacheIndex = imageCache.indexOf(image);\r\n\r\n            if (cacheIndex !== -1) {\r\n                texture = textureCache[cacheIndex];\r\n            } else {\r\n                texture = new Texture(image);\r\n            }\r\n\r\n            if (doCrop) {\r\n                gl.uniform4f(shaderProgram.uCropSource, a / image.width, b / image.height, c / image.width, d / image.height);\r\n            }\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, gl.rectVertexPositionBuffer);\r\n            gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, 4, gl.FLOAT, false, 0, 0);\r\n\r\n            gl.bindTexture(gl.TEXTURE_2D, texture.obj);\r\n            gl.activeTexture(gl.TEXTURE0);\r\n\r\n            gl.uniform1i(shaderProgram.uSampler, 0);\r\n\r\n            sendTransformStack(shaderProgram);\r\n            gl.drawArrays(gl.TRIANGLE_FAN, 0, 4);\r\n\r\n            transform.popMatrix();\r\n        };\r\n\r\n        // This enables the user to detect whether they got a webgl-2d context or a 2d context.\r\n        Object.defineProperty(gl, \"isWebGL\", {\r\n            configurable: false,\r\n            enumerable: true,\r\n            writable: false,\r\n            value: true\r\n        });\r\n    };\r\n\r\n    return WebGL2D;\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('utils/ArrayMap', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var ArrayMap = function (args) {\r\n        Array.call(this, args);\r\n    };\r\n\r\n    ArrayMap.prototype = Object.create(Array.prototype);\r\n    ArrayMap.prototype.constructor = ArrayMap;\r\n\r\n    /**\r\n     * @param {ArrayMap} array\r\n     * @returns {boolean}\r\n     */\r\n    ArrayMap.prototype.equals = function (array) {\r\n        if (!array)\r\n            return false;\r\n\r\n        if (this.length != array.length)\r\n            return false;\r\n\r\n        for (var i = 0, l = this.length; i < l; i++) {\r\n            if (this[i] instanceof Array && array[i] instanceof Array) {\r\n                if (!this[i].equals(array[i]))\r\n                    return false;\r\n            }\r\n            else if (this[i] != array[i]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    Object.defineProperty(ArrayMap.prototype, 'equals', {enumerable: false});\r\n\r\n    /**\r\n     * @param {string|Object} object\r\n     * @returns {boolean}\r\n     */\r\n    ArrayMap.prototype.contains = function (object) {\r\n        var i = this.length;\r\n        while (i--) {\r\n            if (this[i] === object) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    Object.defineProperty(ArrayMap.prototype, 'contains', {enumerable: false});\r\n\r\n    /**\r\n     * @param {Function} callback\r\n     * @returns {boolean}\r\n     */\r\n    ArrayMap.prototype.each = function (callback) {\r\n        if (!callback) return false;\r\n        var result = false;\r\n        for (var i = 0; i < this.length; i++) {\r\n            if ((result = callback(this[i], i)) == false) {\r\n                return result;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    Object.defineProperty(ArrayMap.prototype, 'each', {enumerable: false});\r\n\r\n    /**\r\n     * @param {string|Object} key\r\n     * @param {*} value\r\n     * @returns {ArrayMap}\r\n     */\r\n    ArrayMap.prototype.add = function (key, value) {\r\n        if (this.contains(key))\r\n            this[key] = value;\r\n        else {\r\n            this.push(key);\r\n            this[key] = value;\r\n        }\r\n        return this;\r\n    };\r\n    Object.defineProperty(ArrayMap.prototype, 'add', {enumerable: false});\r\n\r\n    /**\r\n     * @param {string|Object} key\r\n     * @returns {ArrayMap}\r\n     */\r\n    ArrayMap.prototype.remove = function (key) {\r\n        for (var i = 0; i < this.length; ++i) {\r\n            if (this[i] == key) {\r\n                this.splice(i, 1);\r\n                delete this[key];\r\n                return this;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    Object.defineProperty(ArrayMap.prototype, 'remove', {enumerable: false});\r\n\r\n    if (typeof define !== 'function' || !define.amd) global.ArrayMap = ArrayMap;\r\n\r\n    return ArrayMap;\r\n}));","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('utils/DeviceUtil', ['jquery', 'utils/Vector2dInteger'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('jquery'), require('utils/Vector2dInteger'));\r\n    } else {\r\n        factory(root.jQuery, root.Vector2dInteger);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function ($, Vector2dInteger) {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * Class utility for get system browser window size\r\n     */\r\n    var DeviceUtil = function () {\r\n        this.width = parseInt($(document).width()) < parseInt(screen.width) ? parseInt($(document).width()) : parseInt(screen.width);\r\n        this.height = parseInt($(document).height()) < parseInt(screen.height) ? parseInt($(document).height()) : parseInt(screen.height);\r\n    };\r\n\r\n    /**\r\n     * @returns {DeviceUtil}\r\n     */\r\n    DeviceUtil.prototype.reCalculateSize = function () {\r\n        this.width = window.innerWidth;\r\n        this.height = window.innerHeight;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @returns {number}\r\n     */\r\n    DeviceUtil.prototype.getWidth = function () {\r\n        return this.width;\r\n    };\r\n\r\n    /**\r\n     * @returns {number}\r\n     */\r\n    DeviceUtil.prototype.getHeight = function () {\r\n        return this.height;\r\n    };\r\n\r\n    /**\r\n     * @returns {Vector2d}\r\n     */\r\n    DeviceUtil.prototype.getSize = function () {\r\n        return new Vector2dInteger(this.width, this.height);\r\n    };\r\n\r\n    if (global.J2D === undefined) global.DeviceUtil = DeviceUtil;\r\n\r\n    return DeviceUtil;\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('utils/Exceptions', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * Default Exception\r\n     * Create custom exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var Exception = function (message) {\r\n        Error.call(this);\r\n        this.message = message;\r\n\r\n        /**\r\n         * Convert exception to String\r\n         * @returns {string|}\r\n         */\r\n        this.toString = function () {\r\n            return this.message;\r\n        }\r\n    };\r\n\r\n    Exception.prototype = Object.create(Error.prototype);\r\n    Exception.prototype.constructor = Exception;\r\n\r\n    /**\r\n     * RuntimeException\r\n     * Create RuntimeException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var RuntimeException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    RuntimeException.prototype = Object.create(Exception.prototype);\r\n    RuntimeException.prototype.constructor = RuntimeException;\r\n\r\n    /**\r\n     * InvalidArgumentException\r\n     * Create InvalidArgumentException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var InvalidArgumentException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    InvalidArgumentException.prototype = Object.create(Exception.prototype);\r\n    InvalidArgumentException.prototype.constructor = InvalidArgumentException;\r\n\r\n    /**\r\n     * BadFunctionCallException\r\n     * Create BadFunctionCallException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var BadFunctionCallException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    BadFunctionCallException.prototype = Object.create(Exception.prototype);\r\n    BadFunctionCallException.prototype.constructor = BadFunctionCallException;\r\n\r\n    /**\r\n     * BadMethodCallException\r\n     * Create BadMethodCallException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var BadMethodCallException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    BadMethodCallException.prototype = Object.create(Exception.prototype);\r\n    BadMethodCallException.prototype.constructor = BadMethodCallException;\r\n\r\n    /**\r\n     * LengthException\r\n     * Create LengthException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var LengthException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    LengthException.prototype = Object.create(Exception.prototype);\r\n    LengthException.prototype.constructor = LengthException;\r\n\r\n    /**\r\n     * LogicException\r\n     * Create LogicException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var LogicException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    LogicException.prototype = Object.create(Exception.prototype);\r\n    LogicException.prototype.constructor = LogicException;\r\n\r\n    /**\r\n     * OutOfBoundsException\r\n     * Create OutOfBoundsException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var OutOfBoundsException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    OutOfBoundsException.prototype = Object.create(Exception.prototype);\r\n    OutOfBoundsException.prototype.constructor = OutOfBoundsException;\r\n\r\n    /**\r\n     * OutOfRangeException\r\n     * Create OutOfRangeException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var OutOfRangeException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    OutOfRangeException.prototype = Object.create(Exception.prototype);\r\n    OutOfRangeException.prototype.constructor = OutOfRangeException;\r\n\r\n    /**\r\n     * RangeException\r\n     * Create RangeException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var RangeException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    RangeException.prototype = Object.create(Exception.prototype);\r\n    RangeException.prototype.constructor = RangeException;\r\n\r\n    /**\r\n     * UnexpectedValueException\r\n     *\r\n     * Create UnexpectedValueException exception with message\r\n     * @param {string} message\r\n     */\r\n    var UnexpectedValueException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    UnexpectedValueException.prototype = Object.create(Exception.prototype);\r\n    UnexpectedValueException.prototype.constructor = UnexpectedValueException;\r\n\r\n    if (typeof define !== 'function' || !define.amd) {\r\n        global.Exception = Exception;\r\n        global.RuntimeException = RuntimeException;\r\n        global.InvalidArgumentException = InvalidArgumentException;\r\n        global.BadFunctionCallException = BadFunctionCallException;\r\n        global.BadMethodCallException = BadMethodCallException;\r\n        global.LengthException = LengthException;\r\n        global.LogicException = LogicException;\r\n        global.OutOfBoundsException = OutOfBoundsException;\r\n        global.OutOfRangeException = OutOfRangeException;\r\n        global.RangeException = RangeException;\r\n        global.UnexpectedValueException = UnexpectedValueException;\r\n    }\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('utils/MathUtil', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    /**\r\n     *\r\n     */\r\n    var MathUtil = function () {\r\n    };\r\n\r\n    /**\r\n     * @param {number} number\r\n     * @returns {number}\r\n     */\r\n    MathUtil.number2Integer = function (number) {\r\n        return number >> 0;\r\n    };\r\n\r\n    /**\r\n     * @param {number} number\r\n     * @returns {boolean}\r\n     */\r\n    MathUtil.isInteger = function (number) {\r\n        return typeof number === \"number\" && isFinite(number)\r\n            && number > -9007199254740992 && number < 9007199254740992\r\n            && Math.floor(number) === number;\r\n    };\r\n\r\n    /**\r\n     * @param {number} min\r\n     * @param {number} max\r\n     * @param {number} opacity\r\n     * @returns {string}\r\n     */\r\n    MathUtil.randomColor = function (min, max, opacity) {\r\n        return 'rgba('\r\n            + MathUtil.random(min, max) + ', '\r\n            + MathUtil.random(min, max) + ', '\r\n            + MathUtil.random(min, max) + ', '\r\n            + opacity + ')';\r\n    };\r\n\r\n    /**\r\n     * @param {number} min\r\n     * @param {number} max\r\n     * @param {boolean} omitZero\r\n     * @returns {number}\r\n     */\r\n    MathUtil.random = function (min, max, omitZero) {\r\n        var random = (Math.floor(Math.random() * (max - min + 1) + min));\r\n        return (omitZero && random == 0)\r\n            ? MathUtil.random(min, max, omitZero)\r\n            : random;\r\n    };\r\n\r\n    /**\r\n     * @param {number} degree\r\n     * @returns {number}\r\n     */\r\n    MathUtil.degree2Radian = function (degree) {\r\n        return degree * (Math.PI / 180);\r\n    };\r\n\r\n    /**\r\n     * @param {number} radian\r\n     * @returns {number}\r\n     */\r\n    MathUtil.radian2Degree = function (radian) {\r\n        return radian * (180 / Math.PI);\r\n    };\r\n\r\n    if (global.J2D === undefined) global.MathUtil = MathUtil;\r\n\r\n    return MathUtil\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('utils/Vector2d', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * @param {number} x\r\n     * @param {number} y\r\n     */\r\n    var Vector2d = function (x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    };\r\n\r\n    /**\r\n     * @returns {number}\r\n     */\r\n    Vector2d.prototype.getX = function () {\r\n        return this.x;\r\n    };\r\n\r\n    /**\r\n     * @returns {number}\r\n     */\r\n    Vector2d.prototype.getY = function () {\r\n        return this.y;\r\n    };\r\n\r\n    /**\r\n     * @returns {Vector2d}\r\n     */\r\n    Vector2d.prototype.getCoordinates = function () {\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @returns {Array<number>}\r\n     */\r\n    Vector2d.prototype.toArray = function () {\r\n        return [this.x, this.y];\r\n    };\r\n\r\n    /**\r\n     * @param {Array<number>} array\r\n     * @returns {Vector2d}\r\n     */\r\n    Vector2d.prototype.fromArray = function (array) {\r\n        this.x = array[0];\r\n        this.y = array[1];\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @returns {string}\r\n     */\r\n    Vector2d.prototype.toString = function () {\r\n        return \"(\" + this.x + \",\" + this.y + \")\";\r\n    };\r\n\r\n    if (global.J2D === undefined) global.Vector2d = Vector2d;\r\n\r\n    return Vector2d\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('utils/Vector2dInteger', ['utils/Vector2d'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('utils/Vector2d'));\r\n    } else {\r\n        factory(root.Vector2d);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (Vector2d) {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * @param {number} x\r\n     * @param {number} y\r\n     */\r\n    var Vector2dInteger = function (x, y) {\r\n        Vector2d.call(this, x >> 0, y >> 0);\r\n    };\r\n\r\n    Vector2dInteger.prototype = Object.create(Vector2d.prototype);\r\n    Vector2dInteger.prototype.constructor = Vector2dInteger;\r\n\r\n    /**\r\n     * @param {Array<number>} array\r\n     * @returns {Vector2d|Vector2dInteger}\r\n     */\r\n    Vector2dInteger.prototype.fromArray = function (array) {\r\n        this.x = array[0] >> 0;\r\n        this.y = array[1] >> 0;\r\n\r\n        return this;\r\n    };\r\n\r\n    if (global.J2D === undefined) global.Vector2dInteger = Vector2dInteger;\r\n\r\n    return Vector2dInteger;\r\n}));\r\n"],"sourceRoot":"/source/"}