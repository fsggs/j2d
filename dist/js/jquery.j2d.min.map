{"version":3,"sources":["jquery.j2d.js","io/InputManager.js","nodes/BaseNode.js","nodes/CameraNode.js","nodes/CollectionNode.js","utils/ArrayMap.js","utils/DeviceUtil.js","utils/Exceptions.js","utils/MathUtil.js","utils/Vector2d.js","utils/Vector2dInteger.js","core/FrameManager.js","core/LayersManager.js","core/SceneManager.js","core/ViewportManager.js","core/WebGL2D.js"],"names":["root","factory","define","amd","module","exports","require","jQuery","SceneManager","DeviceUtil","window","global","$","defaults","id","io","deltaTime","pause","ready","frameLimit","smoothing","webGL","J2D","element","data","j2d","this","device","scene","Object","defineProperty","get","set","value","addClass","removeClass","prototype","start","trigger","stop","flush","resume","focus","getSceneManager","getLayersManager","layersManager","getFrameManager","frameManager","on","once","off","util","disableSmoothing","context","chrome","navigator","userAgent","match","version","parseInt","initPlugin","undefined","j2dPlugin","pluginInit","fn","options","filter","each","extend","guid","replace","c","r","Math","random","v","toString","attr","tabIndex","click","$array","push","length","isFullScreen","document","webkitFullscreenElement","webkitCurrentFullScreenElement","mozFullScreenElement","msFullscreenElement","fullScreen","resizeToFullPage","toggle","current","onResize","ArrayMap","getKey","object","keys","key","InputManager","mouse","startPosition","x","y","currentPosition","previousDistance","distance","viewport","position","enabled","enableAdditionalData","keysPressed","writeMode","timePressed","preventAll","cursor","image","keyMap","FULLSCREEN","KEY_CTRL","KEY_F11","checkKeyMap","e","enableCallback","manager","keyCode","which","index","hasOwnProperty","isArray","eval","equals","events","onMouseClick","isPlay","hasClass","event","inArray","pageX","pageY","timeStamp","preventDefault","splice","indexOf","onMouseWheel","originalEvent","wheelDelta","fixMouseWheel","mouseWheelCancel","onMouseMove","sqrt","pow","toFixed","onKeyboardPress","char","String","fromCharCode","onTouchTap","touch","touches","changedTouches","onTouchMove","bindEvents","selector","unbindEvents","init","update","dX","canvas","offsetWidth","width","dY","offsetHeight","height","offset","left","top","clear","keyPressed","SCROLL_MOUSE_UP","SCROLL_MOUSE_DOWN","enable","disable","load","newKeyMap","oldKeyMap","JSON","stringify","parse","save","setKeys","mapObject","getPressData","keyList","time","Date","now","getMouseMoveDistance","previous","checkPressedKeyList","isNaN","checkPressedKeyMap","getPosition","vector","v2f","setWriteMode","mode","isWriteMode","setCursorImage","css","toggleCursor","isCursorVisible","KEY_MOUSE_LEFT","KEY_MOUSE_MIDDLE","KEY_MOUSE_RIGHT","KEY_BACKSPACE","KEY_TAB","KEY_ENTER","KEY_SHIFT","KEY_ALT","KEY_PAUSE","KEY_BREAK","KEY_CAPS_LOCK","KEY_ESCAPE","KEY_SPACE_BAR","KEY_PAGE_UP","KEY_PAGE_DOWN","KEY_END","KEY_HOME","KEY_LEFT_ARROW","KEY_UP_ARROW","KEY_RIGHT_ARROW","KEY_DOWN_ARROW","KEY_INSERT","KEY_DELETE","KEY_0","KEY_1","KEY_2","KEY_3","KEY_4","KEY_5","KEY_6","KEY_7","KEY_8","KEY_9","KEY_A","KEY_B","KEY_C","KEY_D","KEY_E","KEY_F","KEY_G","KEY_H","KEY_I","KEY_J","KEY_K","KEY_L","KEY_M","KEY_N","KEY_O","KEY_P","KEY_Q","KEY_R","KEY_S","KEY_T","KEY_U","KEY_V","KEY_W","KEY_X","KEY_Y","KEY_Z","KEY_LEFT_WINDOW_KEY","KEY_RIGHT_WINDOW_KEY","KEY_SELECT_KEY","KEY_NUMPAD_0","KEY_NUMPAD_1","KEY_NUMPAD_2","KEY_NUMPAD_3","KEY_NUMPAD_4","KEY_NUMPAD_5","KEY_NUMPAD_6","KEY_NUMPAD_7","KEY_NUMPAD_8","KEY_NUMPAD_9","KEY_MULTIPLY","KEY_ADD","KEY_SUBTRACT","KEY_DECIMAL_POINT","KEY_DIVIDE","KEY_F1","KEY_F2","KEY_F3","KEY_F4","KEY_F5","KEY_F6","KEY_F7","KEY_F8","KEY_F9","KEY_F10","KEY_F12","KEY_NUM_LOCK","KEY_SCROLL_LOCK","KEY_SEMI_COLON","KEY_EQUAL_SIGN","KEY_COMMA","KEY_DASH","KEY_PERIOD","KEY_FORWARD_SLASH","KEY_GRAVE_ACCENT","KEY_OPEN_BRACKET","KEY_BACK_SLASH","KEY_CLOSE_BRACKET","KEY_SINGLE_QUOTE","KEY_LEFT_COMMAND","KEY_RIGHT_COMMAND","Vector2d","BaseNode","baseNode","opacity","visible","angle","enabledCache","type","size","cache","setPosition","getVector","getSize","setSize","getOffset","setOffset","render","collection","CameraNode","call","create","constructor","getCameraViewport","screen","calculate","scale","CollectionNode","add","node","remove","args","Array","last","array","i","l","enumerable","contains","callback","result","Vector2dInteger","innerWidth","innerHeight","getWidth","getHeight","Exception","message","Error","RuntimeException","InvalidArgumentException","BadFunctionCallException","BadMethodCallException","LengthException","LogicException","OutOfBoundsException","OutOfRangeException","RangeException","UnexpectedValueException","MathUtil","number2Integer","number","isInteger","isFinite","floor","randomColor","min","max","omitZero","degree2Radian","degree","PI","radian2Degree","radian","getX","getY","toArray","fromArray","instance","engineStack","dataStack","timestamp","frameRun","breakAnimationFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","Number","MAX_SAFE_INTEGER","setTimeout","bind","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","FrameManager","name","engine","params","lastTime","sceneStartTime","sceneSkipTime","asyncUpdate","asyncRender","interval","pulse","runMainLoop","setDefaultFrameLimit","Init","instanceFrameManager","LayersManager","list","WebGL2D","originalWidth","originalHeight","originalMargin","zIndex","backgroundColor","enableFullScreen","gameState","sceneManager","fillStyle","fillRect","style","display","initCanvas","createElement","getContext","shadowColor","append","pos","clearRect","resize","restore","setGameState","console","warn","async","fullscreen","getElementById","requestFullscreen","webkitRequestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","exitFullscreen","webkitExitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","enableFullscreen","toggleFullScreen","calculateScale","ViewportManager","cameras","camera","setScreen","addCamera","removeCamera","updateViewport","setViewport","getViewport","isPOT","Transform","mat","clearStack","mat3","identity","multiply","m1","m2","m10","m11","m12","m13","m14","m15","m16","m17","m18","m20","m21","m22","m23","m24","m25","m26","m27","m28","vec2_multiply","mOut","transpose","m","STACK_DEPTH_LIMIT","init_mat","m_stack","m_cache","c_stack","valid","getIdentity","setIdentity","getResult","pushMatrix","popMatrix","translateMatrix","translate","trMatrix","tr","a","b","d","f","scaleMatrix","rotateMatrix","rotate","ang","sAng","cAng","sin","cos","gl","fs","vs","shaderProgram","transform","shaderPool","maxTextureSize","gl2d","$getContext","force","initShaders","initBuffers","initCanvas2DAPI","BLEND","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","getParameter","MAX_TEXTURE_SIZE","postInit","shaderMask","texture","crop","path","getFragmentShaderSource","sMask","fsSource","join","getVertexShaderSource","stackDepth","vsSource","transformStackDepth","storedShader","useProgram","createShader","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","VERTEX_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","vertexPositionAttribute","getAttribLocation","enableVertexAttribArray","uColor","getUniformLocation","uSampler","uCropSource","pMatrix","uTransforms","uniformMatrix4fv","rectVerts","Float32Array","rectVertexPositionBuffer","createBuffer","rectVertexColorBuffer","pathVertexPositionBuffer","pathVertexColorBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","instances","hue2rgb","p","q","t","HSLAToRGBA","h","s","g","colorStringToVec4","channel","isPercent","hasAlpha","alphaChannel","sameType","reRGBAColor","exec","parseFloat","reHSLAColor","reHex6Color","colorInt","reHex3Color","hexString","toLowerCase","colorKeywords","colorVecToString","vec4","saveDrawState","bakedDrawState","drawState","strokeStyle","globalAlpha","globalCompositeOperation","lineCap","lineJoin","lineWidth","miterLimit","shadowBlur","shadowOffsetX","shadowOffsetY","textAlign","font","textBaseline","imageSmoothingEnabled","drawStateStack","restoreDrawState","pop","sendTransformStack","sp","stack","maxI","uniformMatrix3fv","SubPath","closed","verts","fillSubPath","subPath","subPaths","vertexAttribPointer","FLOAT","uniform4f","drawArrays","TRIANGLE_FAN","strokeSubPath","LINE_LOOP","LINE_STRIP","Texture","obj","createTexture","textureCache","imageCache","ctx","drawImage","GL_FUNCTION","LINEAR","GL_MIPMAP_FUNCTION","LINEAR_MIPMAP_LINEAR","NEAREST","LINEAR_MIPMAP_NEAREST","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","generateMipmap","textCanvas","textCtx","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","drawStyle","$lineWidth","fillText","text","strokeText","measureText","tempCanvas","tempCtx","createImageData","getImageData","buffer","Uint8Array","readPixels","w","j","maxJ","index1","index2","putImageData","imageData","dx","dy","setTransform","apply","arguments","strokeRect","beginPath","closePath","prevPath","startX","startY","newPath","moveTo","lineTo","quadraticApproximateCount","quadraticCurveTo","hx","hy","tx","ty","fromx","fromy","bezierApproximateCount","bezierCurveTo","h1x","h1y","h2x","h2y","arcTo","rect","arcApproximateCount","arc","cx","cy","radius","startAngle","endAngle","anticlockwise","count","fixed","fill","stroke","clip","isPointInPath","drawFocusRing","doCrop","cacheIndex","activeTexture","TEXTURE0","uniform1i","configurable","writable"],"mappings":"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","file":"jquery.j2d.js","sourcesContent":["/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n/*\r\n * TODO:: Events System\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('jquery.j2d', [\r\n            'jquery',\r\n            'core/SceneManager',\r\n            'utils/DeviceUtil'\r\n        ], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(\r\n            require('jquery'),\r\n            require('core/SceneManager'),\r\n            require('utils/DeviceUtil')\r\n        );\r\n    } else {\r\n        factory(\r\n            root.jQuery,\r\n            root.SceneManager,\r\n            root.DeviceUtil\r\n        );\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function ($, SceneManager, DeviceUtil) {\r\n    \"use strict\";\r\n\r\n    var defaults = {\r\n        id: null,\r\n        io: null,\r\n        deltaTime: 0,\r\n        pause: false,\r\n        ready: false,\r\n\r\n        frameLimit: 60,\r\n        smoothing: true,\r\n\r\n        webGL: false\r\n    };\r\n\r\n    var J2D = function J2D(element, data) {\r\n        var j2d = this;\r\n        this.element = element;\r\n        this.data = data;\r\n\r\n        this.device = new DeviceUtil();\r\n        this.scene = new SceneManager(this);\r\n\r\n        Object.defineProperty(this, 'WebGL', {\r\n            get: function () {\r\n                return j2d.data.webGL;\r\n            },\r\n            set: function (value) {\r\n                j2d.data.webGL = !!value;\r\n                if (!!value && !j2d.data.webGL) {\r\n                    j2d.element.addClass('WebGL');\r\n                } else if (!value && j2d.data.webGL) {\r\n                    j2d.element.removeClass('WebGL');\r\n                }\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(this, 'smoothing', {\r\n            get: function () {\r\n                return j2d.data.smoothing;\r\n            },\r\n            set: function (value) {\r\n                j2d.data.smoothing = !!value;\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(this, 'io', {\r\n            get: function () {\r\n                return j2d.data.io;\r\n            },\r\n            set: function (value) {\r\n                return j2d.data.io = value\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(this, 'isPlay', {\r\n            get: function () {\r\n                return !j2d.data.pause;\r\n            },\r\n            set: function () {\r\n            }\r\n        });\r\n    };\r\n\r\n    /** +GameEngine **/\r\n    J2D.prototype.start = function () {\r\n        this.scene.start();\r\n        this.trigger('start');\r\n    };\r\n\r\n    J2D.prototype.stop = function () {\r\n        this.scene.stop();\r\n        this.trigger('stop');\r\n    };\r\n\r\n    J2D.prototype.pause = function () {\r\n        if (this.data.io) this.data.io.flush();\r\n        this.data.pause = true;\r\n        this.element.addClass('pause');\r\n        this.trigger('pause');\r\n    };\r\n\r\n    J2D.prototype.resume = function () {\r\n        this.element.removeClass('pause').focus();\r\n        this.data.pause = false;\r\n        if (this.data.io) this.data.io.flush();\r\n        this.trigger('resume');\r\n    };\r\n    /** -GameEngine **/\r\n\r\n    /** +Scene **/\r\n    J2D.prototype.getSceneManager = function () {\r\n        return this.scene;\r\n    };\r\n    /** -Scene **/\r\n\r\n    /** +Layers **/\r\n    J2D.prototype.getLayersManager = function () {\r\n        return this.scene.layersManager;\r\n    };\r\n    /** -Layers **/\r\n\r\n    J2D.prototype.getFrameManager = function () {\r\n        return this.scene.frameManager;\r\n    };\r\n\r\n    J2D.prototype.on = function () {\r\n    };\r\n    J2D.prototype.once = function () {\r\n    };\r\n    J2D.prototype.off = function () {\r\n    };\r\n    J2D.prototype.trigger = function () {\r\n    };\r\n\r\n    /** Utils **/\r\n    J2D.util = {\r\n        disableSmoothing: function (context) {\r\n            var chrome = global.navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);\r\n            var version = chrome ? parseInt(chrome[2], 10) : false;\r\n\r\n            context['imageSmoothingEnabled'] = false;\r\n            context['mozImageSmoothingEnabled'] = false;\r\n            context['oImageSmoothingEnabled'] = false;\r\n            if (version && version <= 29) {\r\n                context['webkitImageSmoothingEnabled'] = false;\r\n            }\r\n            context['msImageSmoothingEnabled'] = false;\r\n        }\r\n    };\r\n    J2D.prototype.util = J2D.util;\r\n\r\n    /* ------------------------------ Plugin ------------------------------ */\r\n\r\n    (J2D.initPlugin = function () {\r\n        if (window.j2dPlugin !== undefined) return null;\r\n        window.j2dPlugin = {pluginInit: true};\r\n\r\n        $.fn.j2d = function (options) {\r\n            this.filter('div.canvas:not([guid])').each(function () {\r\n                var options = $.extend(true, {}, defaults, options);\r\n\r\n                var guid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n                    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n                    return v.toString(16);\r\n                });\r\n                options.id = guid;\r\n\r\n                $(this).attr('guid', guid);\r\n                var id = $(this).attr('id');\r\n                if (typeof id === 'undefined' || id === false) {\r\n                    $(this).attr('id', guid);\r\n                }\r\n                var tabIndex = $(this).attr('tabindex');\r\n                if (typeof tabIndex === 'undefined' || tabIndex === false) {\r\n                    $(this).attr('tabindex', '-1');\r\n                }\r\n                $(this).data('j2d', new J2D($(this), options)).addClass('j2d');\r\n                $(this).click().focus();\r\n            });\r\n\r\n            var $array = [];\r\n            this.filter('div.canvas[guid]').each(function () {\r\n                $array.push($(this).data('j2d'));\r\n            });\r\n\r\n            return (1 === $array.length) ? $(this).data('j2d') : $array;\r\n        };\r\n\r\n        var isFullScreen = function () {\r\n            //noinspection JSUnresolvedVariable\r\n            return !!(document.webkitFullscreenElement\r\n                || document.webkitCurrentFullScreenElement\r\n                || document.mozFullScreenElement\r\n                || document.msFullscreenElement\r\n            );\r\n        };\r\n\r\n        $(document).on('fullscreenchange webkitfullscreenchange mozfullscreenchange MSFullscreenChange', function () {\r\n            var fullScreen = isFullScreen();\r\n            if (!fullScreen) {\r\n                $('div.canvas[guid].active').data('j2d').scene.resizeToFullPage(fullScreen);\r\n                $('div.canvas[guid]:not(.active)').toggle(!fullScreen);\r\n            }\r\n        });\r\n\r\n        $(document).on('click', 'div.canvas[guid].pause', function () {\r\n            $(this).data('j2d').resume();\r\n\r\n            var current = this;\r\n            $('div.canvas[guid]:not(.pause-disable):not(:focus)').each(function () {\r\n                if (current !== this) $(this).removeClass('active').data('j2d').pause();\r\n            });\r\n            $('div.canvas[guid].active.pause-disable:not(:focus)').each(function () {\r\n                if (current !== this) $(this).removeClass('active');\r\n            });\r\n        });\r\n\r\n        $(document).on('click touch mouseenter', 'div.canvas[guid]:not(.resume-by-click):not(:focus)', function () {\r\n            $(this).addClass('active').focus().data('j2d').resume();\r\n\r\n            var current = this;\r\n            $('div.canvas[guid]:not(.pause-disable):not(:focus)').each(function () {\r\n                if (current !== this) $(this).removeClass('active').data('j2d').pause();\r\n            });\r\n            $('div.canvas[guid].active.pause-disable:not(:focus)').each(function () {\r\n                if (current !== this) $(this).removeClass('active');\r\n            });\r\n        });\r\n\r\n        $(window).on('focus', function () {\r\n            $('div.canvas[guid].active').each(function () {\r\n                $(this).data('j2d').resume();\r\n            });\r\n        }).on('blur', function () {\r\n            $('div.canvas[guid]').each(function () {\r\n                $(this).data('j2d').pause();\r\n            });\r\n        });\r\n\r\n        $(window).on('resize', function () {\r\n            $('div.canvas[guid]').each(function () {\r\n                $(this).data('j2d').device.onResize();\r\n            });\r\n            var fullScreen = isFullScreen();\r\n            if (fullScreen) {\r\n                $('div.canvas[guid].active').data('j2d').scene.resizeToFullPage(fullScreen);\r\n            }\r\n        });\r\n    })();\r\n\r\n    if (global.J2D === undefined) global.J2D = J2D;\r\n\r\n    return J2D;\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('io/InputManager', ['jquery', 'utils/ArrayMap'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('jquery'), require('utils/ArrayMap'));\r\n    } else {\r\n        factory(root.jQuery, root.ArrayMap);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function ($, ArrayMap) {\r\n    \"use strict\";\r\n\r\n    var InputManager = function (j2d) {\r\n        this.j2d = j2d;\r\n\r\n        this.id = j2d.id;\r\n        this.element = j2d.element;\r\n\r\n        this.data = {\r\n            mouse: {\r\n                startPosition: {\r\n                    x: 0,\r\n                    y: 0\r\n                },\r\n                currentPosition: {\r\n                    x: 0,\r\n                    y: 0\r\n                },\r\n                previousDistance: 0,\r\n                distance: 0\r\n            },\r\n            viewport: {\r\n                position: {\r\n                    x: 0,\r\n                    y: 0\r\n                }\r\n            },\r\n            enabled: false,\r\n            enableAdditionalData: false,\r\n            keysPressed: new ArrayMap(),\r\n            writeMode: false,\r\n            timePressed: 0,\r\n            preventAll: false,\r\n\r\n            cursor: {\r\n                enabled: false,\r\n                image: 'auto'\r\n            }\r\n        };\r\n        this.keyMap = {\r\n            //DEBUG_INFO: [[InputManager.key.KEY_CTRL, InputManager.key.KEY_F1], 'j2d.debug.toggleScreen', {}],\r\n            FULLSCREEN: [[InputManager.key.KEY_CTRL, InputManager.key.KEY_F11], 'j2d.scene.toggleFullScreen', {}]\r\n        };\r\n    };\r\n\r\n    var checkKeyMap = function (e, enableCallback) {\r\n        if (enableCallback === undefined) enableCallback = true;\r\n\r\n        var j2d = e.data.manager.j2d,\r\n            manager = e.data.manager,\r\n            keyCode = e.which,\r\n            keyMap = e.data.manager.keyMap;\r\n\r\n        for (var index in keyMap) {\r\n            if (keyMap.hasOwnProperty(index)) {\r\n                var value = keyMap[index];\r\n                if (!$.isArray(value[0]) && value[0] === keyCode && !!value[1]) {\r\n                    if (typeof value[1] === 'string') {\r\n                        value[1] = eval('(' + value[1] + ')');\r\n                    }\r\n                    if ((typeof value[1] === 'function') && enableCallback) {\r\n                        value[1](j2d, value[2]);\r\n                    }\r\n                    return true;\r\n                } else if ($.isArray(value[0])\r\n                    && manager.data.keysPressed.equals(value[0]) && !!value[1]\r\n                ) {\r\n                    if (typeof value[1] === 'string') {\r\n                        value[1] = eval('(' + value[1] + ')');\r\n                    }\r\n                    if (typeof value[1] === 'function' && enableCallback) {\r\n                        value[1](j2d, value[2]);\r\n                    }\r\n                    return true\r\n                }\r\n            }\r\n        }\r\n        return false\r\n    };\r\n\r\n    var events = {\r\n        onMouseClick: function (e) {\r\n            var manager = e.data.manager;\r\n            if (!manager.data.enabled || !manager.j2d.isPlay || !manager.j2d.element.hasClass('active')) return true;\r\n            var keysPressed = manager.data.keysPressed;\r\n            var keyCode = getKey(InputManager.key, e.which) || 'KEY_UNKNOWN_' + e.which;\r\n            var mouse = manager.data.mouse;\r\n\r\n            if (e.data.event !== 2) {\r\n                if (e.data.event === 0) {\r\n                    if (-1 === $.inArray(InputManager.key[keyCode], keysPressed)) {\r\n                        keysPressed.push(InputManager.key[keyCode]);\r\n\r\n                        if (manager.data.enableAdditionalData) {\r\n                            mouse.startPosition.x = e.pageX;\r\n                            mouse.startPosition.y = e.pageY;\r\n                            mouse.distance = 0;\r\n\r\n                            manager.data.timePressed = e.timeStamp;\r\n                        }\r\n                    }\r\n                    if (checkKeyMap(e, false) || manager.data.preventAll) {\r\n                        e.preventDefault();\r\n                    }\r\n                } else {\r\n                    if (checkKeyMap(e) || manager.data.preventAll) {\r\n                        e.preventDefault();\r\n                    }\r\n                    if (manager.data.enableAdditionalData) {\r\n                        mouse.previousDistance = mouse.distance;\r\n                        mouse.startPosition.x = 0;\r\n                        mouse.startPosition.y = 0;\r\n                    }\r\n\r\n                    keysPressed.splice(\r\n                        keysPressed.indexOf(InputManager.key[keyCode]), 1\r\n                    );\r\n                }\r\n                manager.element.trigger(e.data.event === 0 ?\r\n                    'mouseKeyDown' : 'mouseKeyUp', {keyCode: keyCode}\r\n                );\r\n            } else {\r\n                if (checkKeyMap(e, false)) {\r\n                    e.preventDefault();\r\n                }\r\n            }\r\n        },\r\n\r\n        onMouseWheel: function (e) {\r\n            var manager = e.data.manager;\r\n            if (!manager.data.enabled || !manager.j2d.isPlay || !manager.j2d.element.hasClass('active')) return true;\r\n            var keysPressed = manager.data.keysPressed;\r\n            var keyCode = (e.originalEvent.wheelDelta / 120 > 0) ?\r\n                getKey(InputManager.key, 4) : getKey(InputManager.key, 5);\r\n\r\n            e.which = (e.originalEvent.wheelDelta / 120 > 0) ? 4 : 5;\r\n\r\n            if (-1 === $.inArray(InputManager.key[keyCode], keysPressed)) {\r\n                keysPressed.push(InputManager.key[keyCode]);\r\n            }\r\n\r\n            if (checkKeyMap(e) || manager.data.preventAll) {\r\n                e.preventDefault();\r\n                manager.fixMouseWheel();\r\n            }\r\n\r\n            manager.element.trigger('mouseWheel', {keyCode: keyCode});\r\n        },\r\n\r\n        mouseWheelCancel: function (keysPressed, keyCode) {\r\n            keysPressed.splice(\r\n                keysPressed.indexOf(InputManager.key[keyCode]), 1\r\n            );\r\n        },\r\n\r\n        onMouseMove: function (e) {\r\n            var manager = e.data.manager;\r\n            var mouse = e.data.manager.data.mouse;\r\n\r\n            manager.data.mouse.currentPosition.x = e.pageX;\r\n            manager.data.mouse.currentPosition.y = e.pageY;\r\n\r\n            if (e.data.manager.data.enableAdditionalData) {\r\n                mouse.distance = Math.sqrt(\r\n                    Math.pow((mouse.currentPosition.x - mouse.startPosition.x), 2)\r\n                    + Math.pow((mouse.currentPosition.y - mouse.startPosition.y), 2)\r\n                ).toFixed(1);\r\n            }\r\n        },\r\n\r\n        onKeyboardPress: function (e) {\r\n            var manager = e.data.manager;\r\n            if (!manager.data.enabled || !manager.j2d.isPlay || !manager.element.hasClass('active')) return true;\r\n            var keysPressed = manager.data.keysPressed;\r\n            var keyCode = getKey(InputManager.key, e.which) || 'KEY_UNKNOWN_' + e.which;\r\n            if (e.data.event === 2 && true === manager.data.writeMode) {\r\n                var char = String.fromCharCode(e.which || e.keyCode);\r\n                e.preventDefault();\r\n                manager.element.focus().trigger('keyboardCharPress', {\r\n                    key: e.which || e.keyCode,\r\n                    keyCode: keyCode,\r\n                    char: char\r\n                });\r\n            }\r\n\r\n            if (e.data.event !== 2 && false === manager.data.writeMode) {\r\n                if (e.data.event === 0) {\r\n                    if (-1 === $.inArray(InputManager.key[keyCode], keysPressed)) {\r\n                        keysPressed.push(InputManager.key[keyCode]);\r\n                        if (manager.data.enableAdditionalData) {\r\n                            manager.data.timePressed = e.timeStamp;\r\n                        }\r\n                    }\r\n                    if (checkKeyMap(e, false) || manager.data.preventAll) {\r\n                        e.preventDefault();\r\n                    }\r\n                } else {\r\n                    if (checkKeyMap(e) || manager.data.preventAll) {\r\n                        e.preventDefault();\r\n                    }\r\n\r\n                    keysPressed.splice(\r\n                        keysPressed.indexOf(InputManager.key[keyCode]), 1\r\n                    );\r\n                }\r\n\r\n                manager.element.trigger(e.data.event === 0 ?\r\n                    'keyboardKeyDown' : 'keyboardKeyUp', {keyCode: keyCode, key: e.which || e.keyCode}\r\n                );\r\n            }\r\n\r\n            if (e.data.event !== 2 && true === manager.data.writeMode) {\r\n                manager.element.trigger(e.data.event === 0 ?\r\n                    'keyboardKeyDown' : 'keyboardKeyUp', {keyCode: keyCode, key: e.which || e.keyCode}\r\n                );\r\n            }\r\n        },\r\n\r\n        onTouchTap: function (e) {\r\n            var manager = e.data.manager;\r\n            if (!manager.data.enabled || !manager.j2d.isPlay || !manager.j2d.element.hasClass('active')) return true;\r\n            var keysPressed = manager.data.keysPressed;\r\n            var keyCode = getKey(InputManager.key, e.which + 1) || 'KEY_UNKNOWN_' + e.which;\r\n            var touch = e.originalEvent.touches[0] || e.originalEvent.changedTouches[0];\r\n            var mouse = manager.data.mouse;\r\n\r\n            if (e.data.event === 0) {\r\n                if (-1 === $.inArray(InputManager.key[keyCode], keysPressed)) {\r\n                    keysPressed.push(InputManager.key[keyCode]);\r\n                    if (manager.data.enableAdditionalData) {\r\n                        mouse.startPosition.x = touch.pageX;\r\n                        mouse.startPosition.y = touch.pageY;\r\n                        mouse.distance = 0;\r\n\r\n                        manager.data.timePressed = e.timeStamp;\r\n                    }\r\n                }\r\n                if (checkKeyMap(e, false) || manager.data.preventAll) {\r\n                    e.preventDefault();\r\n                }\r\n            } else {\r\n                if (checkKeyMap(e) || manager.data.preventAll) {\r\n                    e.preventDefault();\r\n                }\r\n\r\n                if (manager.data.enableAdditionalData) {\r\n                    mouse.previousDistance = mouse.distance;\r\n                    mouse.startPosition.x = 0;\r\n                    mouse.startPosition.y = 0;\r\n                }\r\n\r\n                keysPressed.splice(\r\n                    keysPressed.indexOf(InputManager.key[keyCode]), 1\r\n                );\r\n            }\r\n\r\n            manager.element.trigger(e.data.event === 0 ?\r\n                'mouseKeyDown' : 'mouseKeyUp', {keyCode: keyCode}\r\n            );\r\n        },\r\n\r\n        onTouchMove: function (e) {\r\n            var touch = e.originalEvent.touches[0] || e.originalEvent.changedTouches[0];\r\n            var mouse = e.data.manager.data.mouse;\r\n\r\n            mouse.currentPosition.x = touch.pageX.toFixed(0);\r\n            mouse.currentPosition.y = touch.pageY.toFixed(0);\r\n\r\n            if (e.data.manager.data.enableAdditionalData) {\r\n                mouse.distance = Math.sqrt(\r\n                    Math.pow((mouse.currentPosition.x - mouse.startPosition.x), 2)\r\n                    + Math.pow((mouse.currentPosition.y - mouse.startPosition.y), 2)\r\n                ).toFixed(1);\r\n            }\r\n        }\r\n    };\r\n\r\n    var bindEvents = function (manager) {\r\n        var selector = '[guid=' + manager.id + ']';\r\n\r\n        $(document).on('contextmenu', selector, {manager: manager, event: 2}, events.onMouseClick);\r\n        $(document).on('mousedown', selector, {manager: manager, event: 0}, events.onMouseClick);\r\n        $(document).on('mouseup', selector, {manager: manager, event: 1}, events.onMouseClick);\r\n        $(document).on('mousewheel', selector, {manager: manager}, events.onMouseWheel);\r\n        $(document).on('mousemove', selector, {manager: manager}, events.onMouseMove);\r\n\r\n        $(document).on('keydown', null, {manager: manager, event: 0}, events.onKeyboardPress);\r\n        $(document).on('keyup', null, {manager: manager, event: 1}, events.onKeyboardPress);\r\n        $(document).on('keypress', null, {manager: manager, event: 2}, events.onKeyboardPress);\r\n\r\n        $(document).on('touchstart', selector, {manager: manager, event: 0}, events.onTouchTap);\r\n        $(document).on('touchend', selector, {manager: manager, event: 1}, events.onTouchTap);\r\n        $(document).on('touchmove ', selector, {manager: manager}, events.onTouchMove);\r\n    };\r\n\r\n    var unbindEvents = function (manager) {\r\n        var selector = '[guid=' + manager.id + ']';\r\n\r\n        $(document).off('contextmenu', selector, {manager: manager, event: 1}, events.onMouseClick);\r\n        $(document).off('mousedown', selector, {manager: manager, event: 0}, events.onMouseClick);\r\n        $(document).off('mouseup', selector, {manager: manager, event: 1}, events.onMouseClick);\r\n        $(document).off('mousewheel', selector, {manager: manager}, events.onMouseWheel);\r\n        $(document).off('mousemove', selector, {manager: manager}, events.onMouseMove);\r\n\r\n        $(document).off('keydown', null, {manager: manager, event: 0}, events.onKeyboardPress);\r\n        $(document).off('keyup', null, {manager: manager, event: 1}, events.onKeyboardPress);\r\n        $(document).off('keypress', null, {manager: manager, event: 2}, events.onKeyboardPress);\r\n\r\n        $(document).off('touchstart', selector, {manager: manager, event: 0}, events.onTouchTap);\r\n        $(document).off('touchend', selector, {manager: manager, event: 1}, events.onTouchTap);\r\n        $(document).off('touchmove ', selector, {manager: manager}, events.onTouchMove);\r\n    };\r\n\r\n    InputManager.prototype.init = function () {\r\n        if (!this.data.enabled && global.j2dPlugin.pluginInit) {\r\n            bindEvents(this);\r\n\r\n            this.data.enabled = true;\r\n        }\r\n    };\r\n\r\n    InputManager.prototype.update = function () {\r\n        if (!this.data.enabled) return false;\r\n\r\n        var dX = this.j2d.scene.canvas.offsetWidth / this.j2d.scene.width,\r\n            dY = this.j2d.scene.canvas.offsetHeight / this.j2d.scene.height,\r\n            x = this.data.mouse.currentPosition.x / dX,\r\n            y = this.data.mouse.currentPosition.y / dY;\r\n\r\n        var offset = this.element.offset();\r\n        this.data.viewport.x = this.j2d.scene.viewport.x + x - offset.left;\r\n        this.data.viewport.y = this.j2d.scene.viewport.y + y - offset.top;\r\n    };\r\n\r\n    InputManager.prototype.flush = function () {\r\n        this.data.keysPressed.length = 0;\r\n    };\r\n\r\n    InputManager.prototype.clear = function () {\r\n    };\r\n\r\n    InputManager.prototype.fixMouseWheel = function () {\r\n        var keyPressed = this.data.keysPressed;\r\n        if (-1 !== $.inArray(InputManager.key.SCROLL_MOUSE_UP, keyPressed)) {\r\n            events.mouseWheelCancel(keyPressed, InputManager.key.SCROLL_MOUSE_UP);\r\n        } else if (-1 !== $.inArray(InputManager.key.SCROLL_MOUSE_DOWN, keyPressed)) {\r\n            events.mouseWheelCancel(keyPressed, InputManager.key.SCROLL_MOUSE_DOWN);\r\n        }\r\n    };\r\n\r\n    InputManager.prototype.enable = function () {\r\n        if (!this.data.enabled) {\r\n            //bindEvents(this);\r\n            this.data.enabled = false;\r\n        }\r\n    };\r\n\r\n    InputManager.prototype.disable = function () {\r\n        if (this.data.enabled) {\r\n            //unbindEvents(this);\r\n            this.data.enabled = false;\r\n        }\r\n    };\r\n\r\n    InputManager.prototype.load = function (newKeyMap) {\r\n        var oldKeyMap = JSON.stringify(this.keyMap);\r\n        this.keyMap = JSON.parse(newKeyMap);\r\n        return oldKeyMap;\r\n    };\r\n\r\n    InputManager.prototype.save = function () {\r\n        return JSON.stringify(this.keyMap);\r\n    };\r\n\r\n    /** +KeyMap Manager **/\r\n    InputManager.prototype.setKeys = function (mapObject) {\r\n        this.keyMap = $.extend(true, {}, this.keyMap, mapObject);\r\n    };\r\n    /** -KeyMap Manager **/\r\n\r\n    var getPressData = function (manager, keyList) {\r\n        if (!manager.data.enableAdditionalData) return true;\r\n        return {\r\n            keyList: keyList,\r\n            time: Date.now() - manager.data.timePressed\r\n        };\r\n    };\r\n\r\n    InputManager.prototype.getMouseMoveDistance = function () {\r\n        if (!this.data.enableAdditionalData) return 0;\r\n        return {current: this.data.mouse.distance, previous: this.data.mouse.previousDistance};\r\n    };\r\n\r\n    /** +Input Checkers **/\r\n    InputManager.prototype.checkPressedKeyList = function (keyList) {\r\n        if ($.isArray(keyList)) {\r\n            if (keyList.length !== this.data.keysPressed.length) {\r\n                return false;\r\n            } else if (this.data.keysPressed.equals(keyList)) {\r\n                this.fixMouseWheel();\r\n                return getPressData(this, keyList);\r\n            }\r\n            this.fixMouseWheel();\r\n            return false;\r\n        }\r\n        //if (!this.data.keysPressed.equals([])) console.log(this.data.keysPressed);\r\n        if (isNaN(keyList)) return false;\r\n        if (-1 !== this.data.keysPressed.indexOf(keyList)) {\r\n            this.fixMouseWheel();\r\n            return getPressData(this, keyList);\r\n        }\r\n        this.fixMouseWheel();\r\n        return false;\r\n    };\r\n\r\n    InputManager.prototype.checkPressedKeyMap = function (key) {\r\n        if (this.keyMap[key] === undefined) return false;\r\n        var keyList = this.keyMap[key][0];\r\n\r\n        return this.checkPressedKeyList(keyList);\r\n    };\r\n\r\n    InputManager.prototype.getPosition = function () {\r\n        return this.j2d.vector.v2f(this.data.viewport.x + 0.5, this.data.viewport.y + 0.5);\r\n    };\r\n\r\n    //InputManager.prototype.onNode = function (id) {\r\n    //    if (!id.layer.visible) return false;\r\n    //    return (this.data.viewport.x > id.options.position.x && this.data.viewport.x < id.options.position.x + id.options.size.x) &&\r\n    //        (this.data.viewport.y > id.options.position.y && this.data.viewport.y < id.options.position.y + id.options.size.y);\r\n    //};\r\n    /** -Input Checkers **/\r\n\r\n    /** +Input Write Mode **/\r\n    InputManager.prototype.setWriteMode = function (mode) {\r\n        this.data.writeMode = mode;\r\n    };\r\n\r\n    InputManager.prototype.isWriteMode = function () {\r\n        return !!this.data.writeMode;\r\n    };\r\n    /** -Input Write Mode **/\r\n\r\n    /** +Cursor **/\r\n    InputManager.prototype.setCursorImage = function (image) {\r\n        this.data.cursor.image = 'url(\"' + image + '\"), auto';\r\n        $(this.element).css('cursor', this.data.cursor.image);\r\n    };\r\n\r\n    InputManager.prototype.toggleCursor = function (enable) {\r\n        if (enable !== undefined) {\r\n            this.data.cursor.enable = enable;\r\n        } else {\r\n            this.data.cursor.enable = !this.data.cursor.enable;\r\n        }\r\n\r\n        if (!this.data.cursor.enable) {\r\n            this.data.cursor.image = $(this.j2d.element).css('cursor');\r\n            $(this.element).css('cursor', 'none');\r\n        } else {\r\n            $(this.element).css('cursor', this.data.cursor.image);\r\n        }\r\n    };\r\n\r\n    InputManager.prototype.isCursorVisible = function () {\r\n        return this.data.cursor.enable;\r\n    };\r\n    /** -Cursor **/\r\n\r\n    /** static keys arrayList **/\r\n    InputManager.key = {\r\n        KEY_MOUSE_LEFT: 1,\r\n        KEY_MOUSE_MIDDLE: 2,\r\n        KEY_MOUSE_RIGHT: 3,\r\n\r\n        SCROLL_MOUSE_UP: 4,\r\n        SCROLL_MOUSE_DOWN: 5,\r\n\r\n        KEY_BACKSPACE: 8,\r\n        KEY_TAB: 9,\r\n        KEY_ENTER: 13,\r\n        KEY_SHIFT: 16,\r\n        KEY_CTRL: 17,\r\n        KEY_ALT: 18,\r\n        KEY_PAUSE: 19,\r\n        KEY_BREAK: 19,\r\n        KEY_CAPS_LOCK: 20,\r\n        KEY_ESCAPE: 27,\r\n        KEY_SPACE_BAR: 32,\r\n        KEY_PAGE_UP: 33,\r\n        KEY_PAGE_DOWN: 34,\r\n        KEY_END: 35,\r\n        KEY_HOME: 36,\r\n        KEY_LEFT_ARROW: 37,\r\n        KEY_UP_ARROW: 38,\r\n        KEY_RIGHT_ARROW: 39,\r\n        KEY_DOWN_ARROW: 40,\r\n        KEY_INSERT: 45,\r\n        KEY_DELETE: 46,\r\n        KEY_0: 48,\r\n        KEY_1: 49,\r\n        KEY_2: 50,\r\n        KEY_3: 51,\r\n        KEY_4: 52,\r\n        KEY_5: 53,\r\n        KEY_6: 54,\r\n        KEY_7: 55,\r\n        KEY_8: 56,\r\n        KEY_9: 57,\r\n        KEY_A: 65,\r\n        KEY_B: 66,\r\n        KEY_C: 67,\r\n        KEY_D: 68,\r\n        KEY_E: 69,\r\n        KEY_F: 70,\r\n        KEY_G: 71,\r\n        KEY_H: 72,\r\n        KEY_I: 73,\r\n        KEY_J: 74,\r\n        KEY_K: 75,\r\n        KEY_L: 76,\r\n        KEY_M: 77,\r\n        KEY_N: 78,\r\n        KEY_O: 79,\r\n        KEY_P: 80,\r\n        KEY_Q: 81,\r\n        KEY_R: 82,\r\n        KEY_S: 83,\r\n        KEY_T: 84,\r\n        KEY_U: 85,\r\n        KEY_V: 86,\r\n        KEY_W: 87,\r\n        KEY_X: 88,\r\n        KEY_Y: 89,\r\n        KEY_Z: 90,\r\n        KEY_LEFT_WINDOW_KEY: 91,\r\n        KEY_RIGHT_WINDOW_KEY: 92,\r\n        KEY_SELECT_KEY: 93,\r\n        KEY_NUMPAD_0: 96,\r\n        KEY_NUMPAD_1: 97,\r\n        KEY_NUMPAD_2: 98,\r\n        KEY_NUMPAD_3: 99,\r\n        KEY_NUMPAD_4: 100,\r\n        KEY_NUMPAD_5: 101,\r\n        KEY_NUMPAD_6: 102,\r\n        KEY_NUMPAD_7: 103,\r\n        KEY_NUMPAD_8: 104,\r\n        KEY_NUMPAD_9: 105,\r\n        KEY_MULTIPLY: 106,\r\n        KEY_ADD: 107,\r\n        KEY_SUBTRACT: 109,\r\n        KEY_DECIMAL_POINT: 110,\r\n        KEY_DIVIDE: 111,\r\n        KEY_F1: 112,\r\n        KEY_F2: 113,\r\n        KEY_F3: 114,\r\n        KEY_F4: 115,\r\n        KEY_F5: 116,\r\n        KEY_F6: 117,\r\n        KEY_F7: 118,\r\n        KEY_F8: 119,\r\n        KEY_F9: 120,\r\n        KEY_F10: 121,\r\n        KEY_F11: 122,\r\n        KEY_F12: 123,\r\n        KEY_NUM_LOCK: 144,\r\n        KEY_SCROLL_LOCK: 145,\r\n        KEY_SEMI_COLON: 186,\r\n        KEY_EQUAL_SIGN: 187,\r\n        KEY_COMMA: 188,\r\n        KEY_DASH: 189,\r\n        KEY_PERIOD: 190,\r\n        KEY_FORWARD_SLASH: 191,\r\n        KEY_GRAVE_ACCENT: 192,\r\n        KEY_OPEN_BRACKET: 219,\r\n        KEY_BACK_SLASH: 220,\r\n        KEY_CLOSE_BRACKET: 221,\r\n        KEY_SINGLE_QUOTE: 222,\r\n        KEY_LEFT_COMMAND: 224,\r\n        KEY_RIGHT_COMMAND: 224\r\n    };\r\n\r\n    function getKey(object, value) {\r\n        return Object.keys(object).filter(function (key) {\r\n            return object[key] === value\r\n        })[0];\r\n    }\r\n\r\n    if (global.J2D !== undefined) global.InputManager = InputManager;\r\n    return InputManager;\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/BaseNode', ['jquery', 'utils/Vector2d'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('jquery'), require('utils/Vector2d'));\r\n    } else {\r\n        factory(root.jQuery, root.Vector2d);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function ($, Vector2d) {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * @param {BaseNode.defaults} data\r\n     * @constructor\r\n     * @property {BaseNode.defaults} data\r\n     */\r\n    var BaseNode = function (data) {\r\n        var baseNode = this;\r\n        this.data = $.extend(true, {}, defaults, data);\r\n\r\n        if (this.data.id === null) {\r\n            this.data.id = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n                var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n                return v.toString(16);\r\n            });\r\n        }\r\n\r\n        Object.defineProperty(this, 'opacity', {\r\n            get: function () {\r\n                return baseNode.data.opacity;\r\n            },\r\n            set: function (value) {\r\n                baseNode.data.opacity = value;\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(this, 'visible', {\r\n            get: function () {\r\n                return baseNode.data.visible;\r\n            },\r\n            set: function (value) {\r\n                baseNode.data.visible = !!value;\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(this, 'angle', {\r\n            get: function () {\r\n                return baseNode.data.angle;\r\n            },\r\n            set: function (value) {\r\n                baseNode.data.angle = value % 360;\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(this, 'cache', {\r\n            get: function () {\r\n                return baseNode.data.enabledCache;\r\n            },\r\n            set: function (value) {\r\n                baseNode.data.enabledCache = !!value;\r\n            }\r\n        });\r\n    };\r\n\r\n    BaseNode.defaults = {\r\n        id: null,\r\n        type: 'BaseNode',\r\n\r\n        position: {\r\n            x: 0.0,\r\n            y: 0.0\r\n        },\r\n        size: {\r\n            x: 0.0,\r\n            y: 0.0\r\n        },\r\n        offset: {\r\n            x: 0.0,\r\n            y: 0.0\r\n        },\r\n\r\n        visible: true,\r\n        angle: 0,\r\n        opacity: 1,\r\n\r\n        cache: null,\r\n        enabledCache: false // TODO:: Collections & AnimatedPrimitiveNode\r\n    };\r\n\r\n    /**\r\n     * @returns {Vector2d}\r\n     */\r\n    BaseNode.prototype.getPosition = function () {\r\n        return new Vector2d(this.data.position.x, this.data.position.y);\r\n    };\r\n\r\n    /**\r\n     * @param {Vector2d} position\r\n     * @returns {BaseNode}\r\n     */\r\n    BaseNode.prototype.setPosition = function (position) {\r\n        if (position !== undefined && position instanceof Vector2d) {\r\n            this.data.position = position.getVector();\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @returns {Vector2d}\r\n     */\r\n    BaseNode.prototype.getSize = function () {\r\n        return new Vector2d(this.data.size.x, this.data.size.y);\r\n    };\r\n\r\n    /**\r\n     * @param {Vector2d} size\r\n     * @returns {BaseNode}\r\n     */\r\n    BaseNode.prototype.setSize = function (size) {\r\n        if (size !== undefined && size instanceof Vector2d) {\r\n            this.data.size = size.getVector();\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @returns {Vector2d}\r\n     */\r\n    BaseNode.prototype.getOffset = function () {\r\n        return new Vector2d(this.data.offset.x, this.data.offset.y);\r\n    };\r\n\r\n    /**\r\n     * @param {Vector2d} offset\r\n     * @returns {BaseNode}\r\n     */\r\n    BaseNode.prototype.setOffset = function (offset) {\r\n        if (offset !== undefined && offset instanceof Vector2d) {\r\n            this.data.offset = offset.getVector();\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /* ------------------------------ Render ------------------------------ */\r\n\r\n    /**\r\n     * Must be override this in child!\r\n     *\r\n     * @deprecated\r\n     * @overridable\r\n     *\r\n     * @param {object} context\r\n     * @param {{offset: {x: number, y: number}, size: {x: number, y: number}, scale: number}} viewport\r\n     * @param {CollectionNode} collection\r\n     * @param {object} data\r\n     * @returns {BaseNode}\r\n     */\r\n    BaseNode.prototype.render = function (context, viewport, collection, data) {\r\n        // throw new Exception('Trying to render base node.'); // TODO:: exceptions\r\n        return this;\r\n    };\r\n\r\n    if (global.J2D !== undefined) global.BaseNode = BaseNode;\r\n    return BaseNode;\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/CameraNode', ['jquery', 'nodes/BaseNode'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('jquery'), require('nodes/BaseNode'));\r\n    } else {\r\n        factory(root.jQuery, root.BaseNode);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function ($, BaseNode) {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * @param {BaseNode.defaults|CameraNode.defaults} data data\r\n     * @constructor\r\n     * @property {BaseNode.defaults|CameraNode.defaults} data\r\n     */\r\n    var CameraNode = function (data) {\r\n        BaseNode.call(this, $.extend(true, {}, defaults, data));\r\n    };\r\n\r\n    CameraNode.prototype = Object.create(BaseNode.prototype);\r\n    CameraNode.prototype.constructor = CameraNode;\r\n\r\n    CameraNode.defaults = {\r\n        type: 'CameraNode'\r\n    };\r\n\r\n    /**\r\n     * @param {{x: number, y: number}} screen\r\n     * @param {Function|callback} calculate\r\n     * @returns {{offset: {x: number, y: number}, size: {x: number, y: number}, scale: number}}\r\n     */\r\n    CameraNode.prototype.getCameraViewport = function (screen, calculate) {\r\n        return calculate(screen, {\r\n            offset: this.data.position,\r\n            size: this.data.size,\r\n            scale: 1.0\r\n        });\r\n    };\r\n\r\n    /* ------------------------------ Render ------------------------------ */\r\n\r\n    /**\r\n     * @override\r\n     *\r\n     * @param {object} context\r\n     * @param {{offset: {x: number, y: number}, size: {x: number, y: number}, scale: number}} viewport\r\n     * @param {CollectionNode} collection\r\n     * @param {object} data\r\n     * @returns {CameraNode}\r\n     */\r\n    CameraNode.prototype.render = function (context, viewport, collection, data) {\r\n        return this;\r\n    };\r\n\r\n    if (global.J2D !== undefined) global.CameraNode = CameraNode;\r\n    return CameraNode;\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('nodes/CollectionNode', ['jquery', 'nodes/BaseNode', 'utils/ArrayMap'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('jquery'), require('nodes/BaseNode'), require('utils/ArrayMap'));\r\n    } else {\r\n        factory(root.jQuery, root.BaseNode, root.ArrayMap);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function ($, BaseNode, ArrayMap) {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * @param {BaseNode.defaults|CollectionNode.defaults} data\r\n     * @constructor\r\n     * @property {BaseNode.defaults|CollectionNode.defaults} data\r\n     */\r\n    var CollectionNode = function (data) {\r\n        BaseNode.call(this, $.extend(true, {}, defaults, data));\r\n\r\n        if (this.data.collection === null) {\r\n            this.data.collection = new ArrayMap();\r\n        }\r\n    };\r\n\r\n    CollectionNode.prototype = Object.create(BaseNode.prototype);\r\n    CollectionNode.prototype.constructor = CollectionNode;\r\n\r\n    CollectionNode.defaults = {\r\n        type: 'CollectionNode',\r\n        collection: null\r\n    };\r\n\r\n    /**\r\n     * @param {BaseNode|CollectionNode} node\r\n     * @param {string} key\r\n     * @returns {CollectionNode}\r\n     */\r\n    CollectionNode.prototype.add = function (node, key) {\r\n        if (typeof key === 'string' && node instanceof BaseNode) {\r\n            this.data.collection.add(key, node);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @param {BaseNode|CollectionNode|null} node\r\n     * @param {string} key\r\n     * @returns {CollectionNode}\r\n     */\r\n    CollectionNode.prototype.remove = function (node, key) {\r\n        if (node instanceof BaseNode) {\r\n            this.data.collection.remove(this.data.collection[node.id]);\r\n        }\r\n        if (typeof key === 'string' && node === null) {\r\n            this.data.collection.remove(key);\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @returns {CollectionNode}\r\n     */\r\n    CollectionNode.prototype.flush = function () {\r\n        this.data.collection.length = 0;\r\n        return this;\r\n    };\r\n\r\n    /* ------------------------------ Render ------------------------------ */\r\n\r\n    /**\r\n     * @override\r\n     *\r\n     * @param {object} context\r\n     * @param {{offset: {x: number, y: number}, size: {x: number, y: number}, scale: number}} viewport\r\n     * @param {CollectionNode} collection\r\n     * @param {object} data\r\n     * @returns {CollectionNode}\r\n     */\r\n    CollectionNode.prototype.render = function (context, viewport, collection, data) {\r\n        //TODO:: make this\r\n        return this;\r\n    };\r\n\r\n    if (global.J2D !== undefined) global.CollectionNode = CollectionNode;\r\n    return CollectionNode;\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('utils/ArrayMap', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var ArrayMap = function (args) {\r\n        Array.call(this, args);\r\n    };\r\n\r\n    ArrayMap.prototype = Object.create(Array.prototype);\r\n    ArrayMap.prototype.constructor = ArrayMap;\r\n\r\n    ArrayMap.prototype.last = function () {\r\n        return this[this.length - 1];\r\n    };\r\n\r\n    /**\r\n     * @param {ArrayMap} array\r\n     * @returns {boolean}\r\n     */\r\n    ArrayMap.prototype.equals = function (array) {\r\n        if (!array)\r\n            return false;\r\n\r\n        if (this.length != array.length)\r\n            return false;\r\n\r\n        for (var i = 0, l = this.length; i < l; i++) {\r\n            if (this[i] instanceof Array && array[i] instanceof Array) {\r\n                if (!this[i].equals(array[i]))\r\n                    return false;\r\n            }\r\n            else if (this[i] != array[i]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    Object.defineProperty(ArrayMap.prototype, 'equals', {enumerable: false});\r\n\r\n    /**\r\n     * @param {string|Object} object\r\n     * @returns {boolean}\r\n     */\r\n    ArrayMap.prototype.contains = function (object) {\r\n        var i = this.length;\r\n        while (i--) {\r\n            if (this[i] === object) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    Object.defineProperty(ArrayMap.prototype, 'contains', {enumerable: false});\r\n\r\n    /**\r\n     * @param {Function} callback\r\n     * @returns {boolean}\r\n     */\r\n    ArrayMap.prototype.each = function (callback) {\r\n        if (!callback) return false;\r\n        var result = false;\r\n        for (var i = 0; i < this.length; i++) {\r\n            if ((result = callback(this[i], i)) == false) {\r\n                return result;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    Object.defineProperty(ArrayMap.prototype, 'each', {enumerable: false});\r\n\r\n    /**\r\n     * @param {string|Object} key\r\n     * @param {*} value\r\n     * @returns {ArrayMap}\r\n     */\r\n    ArrayMap.prototype.add = function (key, value) {\r\n        if (this.contains(key))\r\n            this[key] = value;\r\n        else {\r\n            this.push(key);\r\n            this[key] = value;\r\n        }\r\n        return this;\r\n    };\r\n    Object.defineProperty(ArrayMap.prototype, 'add', {enumerable: false});\r\n\r\n    /**\r\n     * @param {string|Object} key\r\n     * @returns {ArrayMap}\r\n     */\r\n    ArrayMap.prototype.remove = function (key) {\r\n        for (var i = 0; i < this.length; ++i) {\r\n            if (this[i] == key) {\r\n                this.splice(i, 1);\r\n                delete this[key];\r\n                return this;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    Object.defineProperty(ArrayMap.prototype, 'remove', {enumerable: false});\r\n\r\n    if (typeof define !== 'function' || !define.amd) global.ArrayMap = ArrayMap;\r\n\r\n    return ArrayMap;\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('utils/DeviceUtil', ['jquery', 'utils/Vector2dInteger'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('jquery'), require('utils/Vector2dInteger'));\r\n    } else {\r\n        factory(root.jQuery, root.Vector2dInteger);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function ($, Vector2dInteger) {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * Class utility for get system browser window size\r\n     */\r\n    var DeviceUtil = function () {\r\n        this.width = parseInt($(document).width()) < parseInt(screen.width) ? parseInt($(document).width()) : parseInt(screen.width);\r\n        this.height = parseInt($(document).height()) < parseInt(screen.height) ? parseInt($(document).height()) : parseInt(screen.height);\r\n    };\r\n\r\n    /**\r\n     * @returns {DeviceUtil}\r\n     */\r\n    DeviceUtil.prototype.onResize = function () {\r\n        this.width = window.innerWidth;\r\n        this.height = window.innerHeight;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @returns {number}\r\n     */\r\n    DeviceUtil.prototype.getWidth = function () {\r\n        return this.width;\r\n    };\r\n\r\n    /**\r\n     * @returns {number}\r\n     */\r\n    DeviceUtil.prototype.getHeight = function () {\r\n        return this.height;\r\n    };\r\n\r\n    /**\r\n     * @returns {Vector2d}\r\n     */\r\n    DeviceUtil.prototype.getSize = function () {\r\n        return new Vector2dInteger(this.width, this.height);\r\n    };\r\n\r\n    if (global.J2D === undefined) global.DeviceUtil = DeviceUtil;\r\n\r\n    return DeviceUtil;\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('utils/Exceptions', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * Default Exception\r\n     * Create custom exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var Exception = function (message) {\r\n        Error.call(this);\r\n        this.message = message;\r\n\r\n        /**\r\n         * Convert exception to String\r\n         * @returns {string|}\r\n         */\r\n        this.toString = function () {\r\n            return this.message;\r\n        }\r\n    };\r\n\r\n    Exception.prototype = Object.create(Error.prototype);\r\n    Exception.prototype.constructor = Exception;\r\n\r\n    /**\r\n     * RuntimeException\r\n     * Create RuntimeException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var RuntimeException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    RuntimeException.prototype = Object.create(Exception.prototype);\r\n    RuntimeException.prototype.constructor = RuntimeException;\r\n\r\n    /**\r\n     * InvalidArgumentException\r\n     * Create InvalidArgumentException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var InvalidArgumentException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    InvalidArgumentException.prototype = Object.create(Exception.prototype);\r\n    InvalidArgumentException.prototype.constructor = InvalidArgumentException;\r\n\r\n    /**\r\n     * BadFunctionCallException\r\n     * Create BadFunctionCallException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var BadFunctionCallException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    BadFunctionCallException.prototype = Object.create(Exception.prototype);\r\n    BadFunctionCallException.prototype.constructor = BadFunctionCallException;\r\n\r\n    /**\r\n     * BadMethodCallException\r\n     * Create BadMethodCallException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var BadMethodCallException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    BadMethodCallException.prototype = Object.create(Exception.prototype);\r\n    BadMethodCallException.prototype.constructor = BadMethodCallException;\r\n\r\n    /**\r\n     * LengthException\r\n     * Create LengthException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var LengthException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    LengthException.prototype = Object.create(Exception.prototype);\r\n    LengthException.prototype.constructor = LengthException;\r\n\r\n    /**\r\n     * LogicException\r\n     * Create LogicException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var LogicException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    LogicException.prototype = Object.create(Exception.prototype);\r\n    LogicException.prototype.constructor = LogicException;\r\n\r\n    /**\r\n     * OutOfBoundsException\r\n     * Create OutOfBoundsException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var OutOfBoundsException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    OutOfBoundsException.prototype = Object.create(Exception.prototype);\r\n    OutOfBoundsException.prototype.constructor = OutOfBoundsException;\r\n\r\n    /**\r\n     * OutOfRangeException\r\n     * Create OutOfRangeException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var OutOfRangeException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    OutOfRangeException.prototype = Object.create(Exception.prototype);\r\n    OutOfRangeException.prototype.constructor = OutOfRangeException;\r\n\r\n    /**\r\n     * RangeException\r\n     * Create RangeException exception with message\r\n     *\r\n     * @param {string} message\r\n     */\r\n    var RangeException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    RangeException.prototype = Object.create(Exception.prototype);\r\n    RangeException.prototype.constructor = RangeException;\r\n\r\n    /**\r\n     * UnexpectedValueException\r\n     *\r\n     * Create UnexpectedValueException exception with message\r\n     * @param {string} message\r\n     */\r\n    var UnexpectedValueException = function (message) {\r\n        Exception.call(this, message);\r\n    };\r\n\r\n    UnexpectedValueException.prototype = Object.create(Exception.prototype);\r\n    UnexpectedValueException.prototype.constructor = UnexpectedValueException;\r\n\r\n    if (typeof define !== 'function' || !define.amd) {\r\n        global.Exception = Exception;\r\n        global.RuntimeException = RuntimeException;\r\n        global.InvalidArgumentException = InvalidArgumentException;\r\n        global.BadFunctionCallException = BadFunctionCallException;\r\n        global.BadMethodCallException = BadMethodCallException;\r\n        global.LengthException = LengthException;\r\n        global.LogicException = LogicException;\r\n        global.OutOfBoundsException = OutOfBoundsException;\r\n        global.OutOfRangeException = OutOfRangeException;\r\n        global.RangeException = RangeException;\r\n        global.UnexpectedValueException = UnexpectedValueException;\r\n    }\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('utils/MathUtil', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    /**\r\n     *\r\n     */\r\n    var MathUtil = function () {\r\n    };\r\n\r\n    /**\r\n     * @param {number} number\r\n     * @returns {number}\r\n     */\r\n    MathUtil.number2Integer = function (number) {\r\n        return number >> 0;\r\n    };\r\n\r\n    /**\r\n     * @param {number} number\r\n     * @returns {boolean}\r\n     */\r\n    MathUtil.isInteger = function (number) {\r\n        return typeof number === \"number\" && isFinite(number)\r\n            && number > -9007199254740992 && number < 9007199254740992\r\n            && Math.floor(number) === number;\r\n    };\r\n\r\n    /**\r\n     * @param {number} min\r\n     * @param {number} max\r\n     * @param {number} opacity\r\n     * @returns {string}\r\n     */\r\n    MathUtil.randomColor = function (min, max, opacity) {\r\n        return 'rgba('\r\n            + MathUtil.random(min, max) + ', '\r\n            + MathUtil.random(min, max) + ', '\r\n            + MathUtil.random(min, max) + ', '\r\n            + opacity + ')';\r\n    };\r\n\r\n    /**\r\n     * @param {number} min\r\n     * @param {number} max\r\n     * @param {boolean} omitZero\r\n     * @returns {number}\r\n     */\r\n    MathUtil.random = function (min, max, omitZero) {\r\n        var random = (Math.floor(Math.random() * (max - min + 1) + min));\r\n        return (omitZero && random == 0)\r\n            ? MathUtil.random(min, max, omitZero)\r\n            : random;\r\n    };\r\n\r\n    /**\r\n     * @param {number} degree\r\n     * @returns {number}\r\n     */\r\n    MathUtil.degree2Radian = function (degree) {\r\n        return degree * (Math.PI / 180);\r\n    };\r\n\r\n    /**\r\n     * @param {number} radian\r\n     * @returns {number}\r\n     */\r\n    MathUtil.radian2Degree = function (radian) {\r\n        return radian * (180 / Math.PI);\r\n    };\r\n\r\n    if (global.J2D === undefined) global.MathUtil = MathUtil;\r\n\r\n    return MathUtil\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('utils/Vector2d', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * @param {number} x\r\n     * @param {number} y\r\n     */\r\n    var Vector2d = function (x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    };\r\n\r\n    /**\r\n     * @returns {number}\r\n     */\r\n    Vector2d.prototype.getX = function () {\r\n        return this.x;\r\n    };\r\n\r\n    /**\r\n     * @returns {number}\r\n     */\r\n    Vector2d.prototype.getY = function () {\r\n        return this.y;\r\n    };\r\n\r\n    /**\r\n     * @returns {{x: number, y: number}}\r\n     */\r\n    Vector2d.prototype.getVector = function () {\r\n        return {x: this.x, y: this.y};\r\n    };\r\n\r\n    /**\r\n     * @returns {Array<number>}\r\n     */\r\n    Vector2d.prototype.toArray = function () {\r\n        return [this.x, this.y];\r\n    };\r\n\r\n    /**\r\n     * @param {Array<number>} array\r\n     * @returns {Vector2d}\r\n     */\r\n    Vector2d.prototype.fromArray = function (array) {\r\n        this.x = array[0];\r\n        this.y = array[1];\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @returns {string}\r\n     */\r\n    Vector2d.prototype.toString = function () {\r\n        return \"(\" + this.x + \",\" + this.y + \")\";\r\n    };\r\n\r\n    if (global.J2D === undefined) global.Vector2d = Vector2d;\r\n\r\n    return Vector2d\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('utils/Vector2dInteger', ['utils/Vector2d'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('utils/Vector2d'));\r\n    } else {\r\n        factory(root.Vector2d);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (Vector2d) {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * @param {number} x\r\n     * @param {number} y\r\n     */\r\n    var Vector2dInteger = function (x, y) {\r\n        Vector2d.call(this, x >> 0, y >> 0);\r\n    };\r\n\r\n    Vector2dInteger.prototype = Object.create(Vector2d.prototype);\r\n    Vector2dInteger.prototype.constructor = Vector2dInteger;\r\n\r\n    /**\r\n     * @param {Array<number>} array\r\n     * @returns {Vector2d|Vector2dInteger}\r\n     */\r\n    Vector2dInteger.prototype.fromArray = function (array) {\r\n        this.x = array[0] >> 0;\r\n        this.y = array[1] >> 0;\r\n\r\n        return this;\r\n    };\r\n\r\n    if (global.J2D === undefined) global.Vector2dInteger = Vector2dInteger;\r\n\r\n    return Vector2dInteger;\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/FrameManager', ['utils/ArrayMap'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('utils/ArrayMap'));\r\n    } else {\r\n        factory(root.ArrayMap);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global,\r\n    /**\r\n     * @param {Function} ArrayMap\r\n     * @returns {FrameManager}\r\n     */\r\n    function (ArrayMap) {\r\n        \"use strict\";\r\n\r\n        var instance;\r\n        var engineStack = new ArrayMap(), dataStack = new ArrayMap();\r\n        var timestamp = 0;\r\n\r\n        var options = {\r\n            frameLimit: 60,\r\n            frameRun: false,\r\n            breakAnimationFrame: false\r\n        };\r\n\r\n        var requestAnimationFrame = (function () {\r\n            return global.requestAnimationFrame ||\r\n                global.webkitRequestAnimationFrame ||\r\n                global.mozRequestAnimationFrame ||\r\n                global.oRequestAnimationFrame ||\r\n                global.msRequestAnimationFrame ||\r\n                (function (callback) {\r\n                    if (!options.breakAnimationFrame) {\r\n                        if (timestamp >= Number.MAX_SAFE_INTEGER - 1) timestamp = 0;\r\n                        if (timestamp === 0) timestamp = Date.now();\r\n\r\n                        global.setTimeout(callback.bind(this, Date.now() - timestamp), 1000.0 / options.frameLimit);\r\n                    } else {\r\n                        options.breakAnimationFrame = false\r\n                    }\r\n                });\r\n        })();\r\n\r\n        var cancelAnimationFrame = (function () {\r\n            timestamp = 0;\r\n            return global.cancelAnimationFrame ||\r\n                global.webkitCancelAnimationFrame ||\r\n                global.mozCancelAnimationFrame ||\r\n                global.oCancelAnimationFrame ||\r\n                global.msCancelAnimationFrame;\r\n        })();\r\n\r\n\r\n        var FrameManager = function () {\r\n        };\r\n\r\n        FrameManager.prototype.start = function (name, engine, params) {\r\n            var data = {\r\n                j2d: null,\r\n                frameLimit: options.frameLimit,\r\n                now: 0,\r\n                deltaTime: 0,\r\n                lastTime: 0,\r\n                sceneStartTime: 0,\r\n                sceneSkipTime: 0,\r\n\r\n                asyncUpdate: true,\r\n                asyncRender: true\r\n            };\r\n\r\n            if (params.frameLimit !== undefined && params.frameLimit <= options.frameLimit) data.frameLimit = params.frameLimit;\r\n\r\n            if (params.j2d !== undefined) {\r\n                data.j2d = params.j2d;\r\n            } else {\r\n                throw 'j2d not transported to FrameManager.start(id, engine, {... j2d: j2d ...});';\r\n            }\r\n\r\n            data.interval = 1000.0 / data.frameLimit;\r\n            data.lastTime = Date.now();\r\n\r\n            engineStack.add(name, engine);\r\n            dataStack.add(name, data);\r\n            if (!options.frameRun) this.pulse();\r\n        };\r\n\r\n        FrameManager.prototype.stop = function (name) {\r\n            engineStack.remove(name);\r\n            dataStack.remove(name);\r\n        };\r\n\r\n        FrameManager.prototype.pulse = function () {\r\n            this.runMainLoop(Date.now());\r\n        };\r\n\r\n        FrameManager.prototype.runMainLoop = function (timestamp, frameManager) {\r\n            if (frameManager === undefined) frameManager = this;\r\n\r\n            if (engineStack.length <= 0 && options.frameRun) {\r\n                options.breakAnimationFrame = true;\r\n                options.frameRun = false;\r\n                return cancelAnimationFrame(this.runMainLoop);\r\n            }\r\n            options.frameRun = true;\r\n\r\n            requestAnimationFrame(function (timestamp) {\r\n                frameManager.runMainLoop(timestamp, frameManager);\r\n            });\r\n\r\n            engineStack.each(function (index) {\r\n                if (engineStack.hasOwnProperty(index) && 'object' === typeof engineStack[index]) {\r\n                    var engine = engineStack[index];\r\n                    var data = dataStack[index];\r\n\r\n                    data.now = Date.now();\r\n                    data.deltaTime = (data.now - data.lastTime) / 100.0;\r\n\r\n                    if (data.j2d.data.io && !data.j2d.data.pause) data.j2d.data.io.update();\r\n\r\n                    if (!data.j2d.data.pause) {\r\n                        if (engine.update !== undefined && 'function' === typeof engine.update) {\r\n                            if (data.asyncUpdate) {\r\n                                setTimeout(engine.update.bind(this, timestamp, data), 0);\r\n                            } else {\r\n                                engine.update(timestamp, data);\r\n                            }\r\n                        }\r\n\r\n                        if ((data.deltaTime * 100.0) > data.interval) {\r\n                            data.lastTime = data.now - ((data.deltaTime * 100.0) % data.interval);\r\n\r\n                            if (engine.render !== undefined && 'function' === typeof engine.render) {\r\n                                if (data.asyncRender) {\r\n                                    setTimeout(engine.render.bind(this, timestamp, data), 0);\r\n                                } else {\r\n                                    engine.render(timestamp, data);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    if (data.j2d.data.io && !data.j2d.data.pause) data.j2d.data.io.clear();\r\n                }\r\n            });\r\n        };\r\n\r\n        FrameManager.prototype.setDefaultFrameLimit = function (frameLimit) {\r\n            if (frameLimit <= 60 && frameLimit > 0) {\r\n                options.frameLimit = frameLimit\r\n            }\r\n        };\r\n\r\n        /**\r\n         * @singleton\r\n         * @returns {FrameManager}\r\n         */\r\n        FrameManager.Init = function () {\r\n            if (global.J2D !== undefined) {\r\n                return global.instanceFrameManager || (global.instanceFrameManager = new FrameManager());\r\n            } else {\r\n                return instance || (instance = new FrameManager());\r\n            }\r\n        };\r\n\r\n        if (global.J2D === undefined) global.FrameManager = FrameManager;\r\n\r\n        return FrameManager;\r\n    }\r\n));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/LayersManager', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    var LayersManager = function (j2d) {\r\n        this.j2d = j2d;\r\n        this.list = {};\r\n    };\r\n\r\n    if (global.J2D !== undefined) global.LayersManager = LayersManager;\r\n    return LayersManager;\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n/*\r\n * TODO:: global layer collection\r\n * TODO:: render\r\n *\r\n * TODO:: GameStateManager to Scene\r\n * TODO:: ViewportManager\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/SceneManager', [\r\n            'jquery',\r\n            'core/WebGL2D',\r\n            'core/FrameManager',\r\n            'core/LayersManager'\r\n        ], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(\r\n            require('jquery'),\r\n            require('core/WebGL2D'),\r\n            require('core/FrameManager'),\r\n            require('core/LayersManager')\r\n        );\r\n    } else {\r\n        factory(\r\n            root.jQuery,\r\n            root.WebGL2D,\r\n            root.FrameManager,\r\n            root.LayersManager\r\n        );\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function ($, WebGL2D, FrameManager, LayersManager) {\r\n    \"use strict\";\r\n\r\n    var defaults = {\r\n        width: 0,\r\n        height: 0,\r\n\r\n        originalWidth: 0,\r\n        originalHeight: 0,\r\n        originalMargin: 0,\r\n\r\n        visible: true,\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        zIndex: 1000,\r\n        opacity: 1.0,\r\n        backgroundColor: false,\r\n\r\n        frameLimit: 60,\r\n\r\n        enableFullScreen: false,\r\n\r\n        viewport: {x: 0, y: 0},\r\n\r\n        // TODO::\r\n        gameState: function () {\r\n        }\r\n    };\r\n\r\n    var SceneManager = function (j2d) {\r\n        var sceneManager = this;\r\n        this.j2d = j2d;\r\n\r\n        this.canvas = null;\r\n        this.context = null;\r\n\r\n        /** @type {FrameManager} */\r\n        this.frameManager = FrameManager.Init();\r\n        this.layersManager = new LayersManager(this.j2d);\r\n\r\n        Object.defineProperty(this, 'backgroundColor', {\r\n            get: function () {\r\n                return sceneManager.data.backgroundColor;\r\n            },\r\n            set: function (value) {\r\n                sceneManager.data.backgroundColor = value;\r\n                sceneManager.context.fillStyle = value;\r\n                sceneManager.context.fillRect(0, 0, sceneManager.data.width, sceneManager.data.height);\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(this, 'opacity', {\r\n            get: function () {\r\n                return sceneManager.data.opacity;\r\n            },\r\n            set: function (value) {\r\n                sceneManager.data.opacity = value;\r\n                sceneManager.canvas.style.opacity = value;\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(this, 'visible', {\r\n            get: function () {\r\n                return sceneManager.data.visible;\r\n            },\r\n            set: function (value) {\r\n                sceneManager.data.visible = !!value;\r\n                sceneManager.canvas.style.display = (!!value) ? 'block' : 'none';\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(this, 'zIndex', {\r\n            get: function () {\r\n                return 1000 - sceneManager.data.zIndex;\r\n            },\r\n            set: function (value) {\r\n                sceneManager.data.zIndex = 1000 + value;\r\n                sceneManager.canvas.style.zIndex = 1000 + value;\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(this, 'viewport', {\r\n            get: function () {\r\n                return sceneManager.data.viewport;\r\n            },\r\n            set: function () {\r\n            }\r\n        });\r\n    };\r\n\r\n    SceneManager.prototype.init = function (options) {\r\n        this.data = $.extend(true, {}, defaults, options);\r\n\r\n        this.j2d.trigger('beforeInit');\r\n\r\n        this.data.originalWidth = this.data.width;\r\n        this.data.originalHeight = this.data.height;\r\n        this.data.originalMargin = this.j2d.element.css('margin');\r\n\r\n        this.j2d.element.width(this.data.width).height(this.data.height);\r\n\r\n        this.initCanvas();\r\n\r\n        this.j2d.trigger('afterInit');\r\n\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.initCanvas = function () {\r\n        this.canvas = document.createElement('canvas');\r\n\r\n        this.canvas.width = this.data.width;\r\n        this.canvas.height = this.data.height;\r\n        this.canvas.style.zIndex = this.data.zIndex;\r\n        this.canvas.style.position = this.data.position;\r\n\r\n        this.canvas.style.left = this.data.left;\r\n        this.canvas.style.top = this.data.top;\r\n\r\n        if (this.j2d.data.webGL) {\r\n            WebGL2D.enable(this.canvas);\r\n            this.context = this.canvas.getContext('WebGL-2d');\r\n        } else {\r\n            this.context = this.canvas.getContext('2d');\r\n        }\r\n\r\n        if (!this.j2d.data.smoothing) {\r\n            this.j2d.util.disableSmoothing(this.context);\r\n        }\r\n\r\n        this.context.shadowColor = 'rgba(0,0,0,0)';\r\n        if (this.data.backgroundColor) this.backgroundColor = this.data.backgroundColor;\r\n        if (this.data.opacity) this.opacity = this.data.opacity;\r\n        if (this.data.visible) this.visible = this.data.visible;\r\n        if (this.data.zIndex) this.zIndex = 1000 - this.data.zIndex;\r\n\r\n        this.j2d.element.append(this.canvas);\r\n    };\r\n\r\n    SceneManager.prototype.clear = function (pos, size) {\r\n        if (pos !== undefined && size !== undefined) {\r\n            this.context.clearRect(pos.x - this.viewport.x, pos.y - this.viewport.y, size.x, size.y);\r\n        } else {\r\n            this.context.clearRect(0, 0, this.data.width, this.data.height);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.resize = function (width, height) {\r\n        this.canvas.width = this.data.width = width;\r\n        this.canvas.height = this.data.height = height;\r\n\r\n        if (this.data.backgroundColor) {\r\n            this.context.save();\r\n\r\n            this.clear();\r\n            this.backgroundColor = this.data.backgroundColor;\r\n\r\n            this.context.restore();\r\n        }\r\n        if (!this.j2d.data.smoothing) {\r\n            this.j2d.util.disableSmoothing(this.context);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.setGameState = function (gameState) {\r\n        this.data.gameState = gameState || function () {\r\n                console.warn('Error in game state function!');\r\n            };\r\n\r\n        this.frameManager.stop(this.j2d.data.id);\r\n        this.frameManager.start(this.j2d.data.id, this.data.gameState, {\r\n            j2d: this.j2d,\r\n            frameLimit: this.data.frameLimit\r\n        });\r\n\r\n        this.j2d.trigger('changedGameState');\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.async = function (callback, data) {\r\n        setTimeout(callback.call(callback, data), 0);\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.start = function () {\r\n        if (this.j2d.data.io) {\r\n            this.j2d.data.io.init();\r\n        }\r\n        this.j2d.trigger('beforeStart');\r\n\r\n        this.frameManager.stop(this.j2d.data.id);\r\n        this.frameManager.start(this.j2d.data.id, this.data.gameState, {\r\n            j2d: this.j2d,\r\n            frameLimit: this.data.frameLimit\r\n        });\r\n\r\n        this.j2d.trigger('afterStart');\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.stop = function () {\r\n        this.frameManager.stop(this.j2d.data.id);\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.fullScreen = function (fullscreen) {\r\n        var element = document.getElementById(this.j2d.element.attr('id'));\r\n\r\n        if (undefined === element.requestFullscreen) {\r\n            //noinspection JSUnresolvedVariable\r\n            element.requestFullscreen = element.webkitRequestFullscreen\r\n                || element.webkitRequestFullScreen\r\n                || element.mozRequestFullScreen\r\n                || element.msRequestFullscreen;\r\n        }\r\n\r\n        if (undefined === document.exitFullscreen) {\r\n            //noinspection JSUnresolvedVariable\r\n            document.exitFullscreen = document.webkitExitFullscreen\r\n                || document.webkitCancelFullScreen\r\n                || document.mozCancelFullScreen\r\n                || document.msExitFullscreen;\r\n        }\r\n        if (fullscreen) {\r\n            element.requestFullscreen();\r\n        } else {\r\n            document.exitFullscreen();\r\n        }\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.resizeToFullPage = function (fullscreen) {\r\n        $('div.canvas[guid]:not(.active)').toggle(fullscreen);\r\n\r\n        var j2d = this.j2d;\r\n        var sceneManager = this;\r\n\r\n        if (fullscreen) {\r\n            sceneManager.data.originalWidth = sceneManager.data.width;\r\n            sceneManager.data.originalHeight = sceneManager.data.height;\r\n\r\n            sceneManager.resize(j2d.device.width, j2d.device.height);\r\n            sceneManager.data.enableFullscreen = true;\r\n\r\n            j2d.element\r\n                .width(j2d.device.width)\r\n                .height(j2d.device.height)\r\n                .css('margin', 0);\r\n        } else {\r\n            sceneManager.resize(sceneManager.data.originalWidth, sceneManager.data.originalHeight);\r\n            sceneManager.data.enableFullscreen = false;\r\n\r\n            j2d.element\r\n                .width(sceneManager.data.originalWidth)\r\n                .height(sceneManager.data.originalHeight)\r\n                .css('margin', sceneManager.data.originalMargin);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    SceneManager.prototype.toggleFullScreen = function (j2d, data) {\r\n        if (data === undefined) {\r\n            data = {fullscreen: null};\r\n        }\r\n        if (!j2d.scene.enableFullscreen || data.fullscreen) {\r\n            j2d.scene.fullScreen(true);\r\n        } else {\r\n            j2d.scene.fullScreen(false);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    //SceneManager.prototype.getLayer = function () {\r\n    //    return this.parent.layers.getLayer('sceneNode');\r\n    //};\r\n\r\n    //// Устанавливает позицию для камеры\r\n    //SceneManager.prototype.setViewPosition = function (position) {\r\n    //    this.parent.scene.viewport.x = position.x - Math.ceil(this.parent.scene.width / 2);\r\n    //    this.parent.scene.viewport.y = position.y - Math.ceil(this.parent.scene.height / 2);\r\n    //};\r\n    //\r\n    ////! Движение \"камеры\" вслед за объектом\r\n    //SceneManager.prototype.setViewFocus = function (id, offset) {\r\n    //    this.parent.scene.viewport.x = id.getPosition().x - Math.ceil(this.parent.scene.width / 2) + (offset ? offset.x : 0);\r\n    //    this.parent.scene.viewport.y = id.getPosition().y - Math.ceil(this.parent.scene.height / 2) + (offset ? offset.y : 0);\r\n    //};\r\n    //\r\n    ////! Движение \"камеры\"\r\n    //SceneManager.prototype.viewMove = function (position) {\r\n    //    this.parent.scene.viewport.x += position.x;\r\n    //    this.parent.scene.viewport.y += position.y;\r\n    //};\r\n\r\n    if (global.J2D !== undefined) global.SceneManager = SceneManager;\r\n    return SceneManager;\r\n}));\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/ViewportManager', ['utils/ArrayMap', 'nodes/CameraNode', 'utils/Vector2d'], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory(require('utils/ArrayMap'), require('nodes/CameraNode'), require('utils/Vector2d'));\r\n    } else {\r\n        factory(root.ArrayMap, root.CameraNode, root.Vector2d);\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function (ArrayMap, CameraNode, Vector2d) {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * @param {{x: number, y: number}} screen\r\n     * @param {{offset: {x: number, y: number}, size: {x: number, y: number}, scale: number}} viewport\r\n     * @returns {{offset: {x: number, y: number}, size: {x: number, y: number}, scale: number}}\r\n     */\r\n    var calculateScale = function (screen, viewport) {\r\n        var data = {\r\n            offset: {x: viewport.offset.x, y: viewport.offset.y},\r\n            size: {x: 0, y: 0},\r\n            scale: 1.0\r\n        };\r\n\r\n        data.size.x = (screen.x < viewport.size.x) ? screen.x : viewport.size.x;\r\n        data.size.y = (screen.y < viewport.size.y) ? screen.y : viewport.size.y;\r\n\r\n        // TODO:: check with test & fix this in future\r\n        data.scale = ((screen.x / viewport.size.x) + (screen.y / viewport.size.y)) / 2;\r\n        return data;\r\n    };\r\n\r\n    /**\r\n     * @constructor\r\n     */\r\n    var ViewportManager = function () {\r\n        this.cameras = new ArrayMap();\r\n\r\n        this.camera = 'No active cameras';\r\n\r\n        this.screen = {x: 0, y: 0};\r\n\r\n        this.data = {\r\n            offset: {x: 0.0, y: 0.0},\r\n            size: {x: 0.0, y: 0.0},\r\n            scale: 1.0\r\n        };\r\n    };\r\n\r\n    /**\r\n     * @param {{x: number|undefined, y: number|undefined}|Array<number>} data\r\n     * @returns {ViewportManager}\r\n     */\r\n    ViewportManager.prototype.setScreen = function (data) {\r\n        if (typeof data == 'object') {\r\n            if (data instanceof Array && data.length == 2) {\r\n                this.screen = {x: data[0], y: data[1]};\r\n                return this;\r\n            }\r\n            if (data.x !== undefined && data.y !== undefined) {\r\n                this.screen = {x: data.x, y: data.y};\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @param {string} key\r\n     * @param {CameraNode} node\r\n     * @returns {ViewportManager}\r\n     */\r\n    ViewportManager.prototype.addCamera = function (key, node) {\r\n        if (node instanceof CameraNode) {\r\n            this.cameras.add(key, node);\r\n            return this;\r\n        }\r\n        // throw new InvalidArgumentException('Unknown camera node type');\r\n    };\r\n\r\n    /**\r\n     * @param {string} key\r\n     * @returns {ViewportManager}\r\n     */\r\n    ViewportManager.prototype.removeCamera = function (key) {\r\n        this.cameras.remove(key);\r\n        if (this.camera == key) {\r\n            this.camera = 'No active cameras';\r\n            this.data = {\r\n                offset: {x: 0.0, y: 0.0},\r\n                size: {x: 0.0, y: 0.0},\r\n                scale: 1.0\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @param {string} key\r\n     * @returns {ViewportManager}\r\n     */\r\n    ViewportManager.prototype.updateViewport = function (key) {\r\n        if (this.cameras[key] !== undefined && this.cameras[key] instanceof CameraNode) {\r\n            this.data = this.cameras[key].getCameraViewport(this.screen, calculateScale);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @deprecated\r\n     *\r\n     * @param {Vector2d} offset\r\n     * @param {Vector2d} size\r\n     * @returns {ViewportManager}\r\n     */\r\n    ViewportManager.prototype.setViewport = function (offset, size) {\r\n        if (offset !== undefined && typeof offset == 'object') {\r\n            if (offset instanceof Vector2d) {\r\n                this.data.offset = offset.getVector();\r\n            }\r\n        }\r\n\r\n        if (size !== undefined && typeof size == 'object') {\r\n            if (size instanceof Vector2d) {\r\n                this.data.offset = size.getVector();\r\n            }\r\n        }\r\n\r\n        this.data.scale = calculateScale(this.screen, this.data);\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @returns {{offset: {x: number, y: number}, size: {x: number, y: number}, scale: number}}\r\n     */\r\n    ViewportManager.prototype.getViewport = function () {\r\n        return this.data;\r\n    };\r\n\r\n    if (global.J2D !== undefined) global.ViewportManager = ViewportManager;\r\n    return ViewportManager;\r\n}));\r\n","/**\r\n *  WebGL-2D.js - HTML5 Canvas2D API in a WebGL context\r\n *\r\n *  Created by Corban Brook <corbanbrook@gmail.com> on 2011-03-02.\r\n *  Amended to by Bobby Richter <secretrobotron@gmail.com> on 2011-03-03\r\n *  CubicVR.js by Charles Cliffe <cj@cubicproductions.com> on 2011-03-03\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('core/WebGL2D', [], factory);\r\n    } else if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else {\r\n        factory();\r\n    }\r\n}(typeof window !== 'undefined' ? window : global, function () {\r\n    \"use strict\";\r\n\r\n    // Vector & Matrix libraries from CubicVR.js\r\n    var M_PI = 3.1415926535897932384626433832795028841968;\r\n    var M_TWO_PI = 2.0 * M_PI;\r\n    var M_HALF_PI = M_PI / 2.0;\r\n\r\n    function isPOT(value) {\r\n        return value > 0 && ((value - 1) & value) === 0;\r\n    }\r\n\r\n    var vec3 = {\r\n        length: function (pt) {\r\n            return Math.sqrt(pt[0] * pt[0] + pt[1] * pt[1] + pt[2] * pt[2]);\r\n        },\r\n\r\n        normalize: function (pt) {\r\n            var d = Math.sqrt((pt[0] * pt[0]) + (pt[1] * pt[1]) + (pt[2] * pt[2]));\r\n            if (d === 0) {\r\n                return [0, 0, 0];\r\n            }\r\n            return [pt[0] / d, pt[1] / d, pt[2] / d];\r\n        },\r\n\r\n        dot: function (v1, v2) {\r\n            return v1[0] * v2[0] + v1[1] * v2[1] + v1[2] * v2[2];\r\n        },\r\n\r\n        angle: function (v1, v2) {\r\n            return Math.acos((v1[0] * v2[0] + v1[1] * v2[1] + v1[2] * v2[2]) / (Math.sqrt(v1[0] * v1[0] + v1[1] * v1[1] + v1[2] * v1[2]) * Math.sqrt(v2[0] * v2[0] + v2[1] * v2[1] + v2[2] * v2[2])));\r\n        },\r\n\r\n        cross: function (vectA, vectB) {\r\n            return [vectA[1] * vectB[2] - vectB[1] * vectA[2], vectA[2] * vectB[0] - vectB[2] * vectA[0], vectA[0] * vectB[1] - vectB[0] * vectA[1]];\r\n        },\r\n\r\n        multiply: function (vectA, constB) {\r\n            return [vectA[0] * constB, vectA[1] * constB, vectA[2] * constB];\r\n        },\r\n\r\n        add: function (vectA, vectB) {\r\n            return [vectA[0] + vectB[0], vectA[1] + vectB[1], vectA[2] + vectB[2]];\r\n        },\r\n\r\n        subtract: function (vectA, vectB) {\r\n            return [vectA[0] - vectB[0], vectA[1] - vectB[1], vectA[2] - vectB[2]];\r\n        },\r\n\r\n        equal: function (a, b) {\r\n            var epsilon = 0.0000001;\r\n            if ((a === undefined) && (b === undefined)) {\r\n                return true;\r\n            }\r\n            if ((a === undefined) || (b === undefined)) {\r\n                return false;\r\n            }\r\n            return (Math.abs(a[0] - b[0]) < epsilon && Math.abs(a[1] - b[1]) < epsilon && Math.abs(a[2] - b[2]) < epsilon);\r\n        }\r\n    };\r\n\r\n    var mat3 = {\r\n        identity: [1.0, 0.0, 0.0,\r\n            0.0, 1.0, 0.0,\r\n            0.0, 0.0, 1.0],\r\n\r\n        multiply: function (m1, m2) {\r\n            var m10 = m1[0], m11 = m1[1], m12 = m1[2], m13 = m1[3], m14 = m1[4], m15 = m1[5], m16 = m1[6], m17 = m1[7], m18 = m1[8],\r\n                m20 = m2[0], m21 = m2[1], m22 = m2[2], m23 = m2[3], m24 = m2[4], m25 = m2[5], m26 = m2[6], m27 = m2[7], m28 = m2[8];\r\n\r\n            m2[0] = m20 * m10 + m23 * m11 + m26 * m12;\r\n            m2[1] = m21 * m10 + m24 * m11 + m27 * m12;\r\n            m2[2] = m22 * m10 + m25 * m11 + m28 * m12;\r\n            m2[3] = m20 * m13 + m23 * m14 + m26 * m15;\r\n            m2[4] = m21 * m13 + m24 * m14 + m27 * m15;\r\n            m2[5] = m22 * m13 + m25 * m14 + m28 * m15;\r\n            m2[6] = m20 * m16 + m23 * m17 + m26 * m18;\r\n            m2[7] = m21 * m16 + m24 * m17 + m27 * m18;\r\n            m2[8] = m22 * m16 + m25 * m17 + m28 * m18;\r\n        },\r\n\r\n        vec2_multiply: function (m1, m2) {\r\n            var mOut = [];\r\n            mOut[0] = m2[0] * m1[0] + m2[3] * m1[1] + m2[6];\r\n            mOut[1] = m2[1] * m1[0] + m2[4] * m1[1] + m2[7];\r\n            return mOut;\r\n        },\r\n\r\n        transpose: function (m) {\r\n            return [m[0], m[3], m[6], m[1], m[4], m[7], m[2], m[5], m[8]];\r\n        }\r\n    }; //mat3\r\n\r\n    // Transform library from CubicVR.js\r\n    function Transform(mat) {\r\n        return this.clearStack(mat);\r\n    }\r\n\r\n    var STACK_DEPTH_LIMIT = 16;\r\n\r\n    Transform.prototype.clearStack = function (init_mat) {\r\n        this.m_stack = [];\r\n        this.m_cache = [];\r\n        this.c_stack = 0;\r\n        this.valid = 0;\r\n        this.result = null;\r\n\r\n        for (var i = 0; i < STACK_DEPTH_LIMIT; i++) {\r\n            this.m_stack[i] = this.getIdentity();\r\n        }\r\n\r\n        if (init_mat !== undefined) {\r\n            this.m_stack[0] = init_mat;\r\n        } else {\r\n            this.setIdentity();\r\n        }\r\n    }; //clearStack\r\n\r\n    Transform.prototype.setIdentity = function () {\r\n        this.m_stack[this.c_stack] = this.getIdentity();\r\n        if (this.valid === this.c_stack && this.c_stack) {\r\n            this.valid--;\r\n        }\r\n    };\r\n\r\n    Transform.prototype.getIdentity = function () {\r\n        return [1.0, 0.0, 0.0,\r\n            0.0, 1.0, 0.0,\r\n            0.0, 0.0, 1.0];\r\n    };\r\n\r\n    Transform.prototype.getResult = function () {\r\n        if (!this.c_stack) {\r\n            return this.m_stack[0];\r\n        }\r\n\r\n        var m = mat3.identity;\r\n\r\n        if (this.valid > this.c_stack - 1) {\r\n            this.valid = this.c_stack - 1;\r\n        }\r\n\r\n        for (var i = this.valid; i < this.c_stack + 1; i++) {\r\n            m = mat3.multiply(this.m_stack[i], m);\r\n            this.m_cache[i] = m;\r\n        }\r\n\r\n        this.valid = this.c_stack - 1;\r\n\r\n        this.result = this.m_cache[this.c_stack];\r\n\r\n        return this.result;\r\n    };\r\n\r\n    Transform.prototype.pushMatrix = function () {\r\n        this.c_stack++;\r\n        this.m_stack[this.c_stack] = this.getIdentity();\r\n    };\r\n\r\n    Transform.prototype.popMatrix = function () {\r\n        if (this.c_stack === 0) {\r\n            return;\r\n        }\r\n        this.c_stack--;\r\n    };\r\n\r\n    var translateMatrix = Transform.prototype.getIdentity();\r\n\r\n    Transform.prototype.translate = function (x, y) {\r\n        translateMatrix[6] = x;\r\n        translateMatrix[7] = y;\r\n\r\n        mat3.multiply(translateMatrix, this.m_stack[this.c_stack]);\r\n\r\n        /*\r\n         if (this.valid === this.c_stack && this.c_stack) {\r\n         this.valid--;\r\n         }\r\n         */\r\n    };\r\n\r\n    var trMatrix = Transform.prototype.getIdentity();\r\n\r\n    Transform.prototype.tr = function (a, b, c, d, e, f) {\r\n        trMatrix[0] = a;\r\n        trMatrix[1] = b;\r\n        trMatrix[3] = c;\r\n        trMatrix[4] = d;\r\n        trMatrix[6] = e;\r\n        trMatrix[7] = f;\r\n\r\n        mat3.multiply(trMatrix, this.m_stack[this.c_stack]);\r\n    };\r\n\r\n    var scaleMatrix = Transform.prototype.getIdentity();\r\n\r\n    Transform.prototype.scale = function (x, y) {\r\n        scaleMatrix[0] = x;\r\n        scaleMatrix[4] = y;\r\n\r\n        mat3.multiply(scaleMatrix, this.m_stack[this.c_stack]);\r\n\r\n        /*\r\n         if (this.valid === this.c_stack && this.c_stack) {\r\n         this.valid--;\r\n         }\r\n         */\r\n    };\r\n\r\n    var rotateMatrix = Transform.prototype.getIdentity();\r\n\r\n    Transform.prototype.rotate = function (ang) {\r\n        var sAng, cAng;\r\n\r\n        sAng = Math.sin(-ang);\r\n        cAng = Math.cos(-ang);\r\n\r\n        rotateMatrix[0] = cAng;\r\n        rotateMatrix[3] = sAng;\r\n        rotateMatrix[1] = -sAng;\r\n        rotateMatrix[4] = cAng;\r\n\r\n        mat3.multiply(rotateMatrix, this.m_stack[this.c_stack]);\r\n\r\n        /*\r\n         if (this.valid === this.c_stack && this.c_stack) {\r\n         this.valid--;\r\n         }\r\n         */\r\n    };\r\n\r\n    var WebGL2D = global.WebGL2D = function WebGL2D(canvas, options) {\r\n        this.canvas = canvas;\r\n        this.options = options || {};\r\n        this.gl = undefined;\r\n        this.fs = undefined;\r\n        this.vs = undefined;\r\n        this.shaderProgram = undefined;\r\n        this.transform = new Transform();\r\n        this.shaderPool = [];\r\n        this.maxTextureSize = undefined;\r\n\r\n        // Save a reference to the WebGL2D instance on the canvas object\r\n        canvas.gl2d = this;\r\n\r\n        // Store getContext function for later use\r\n        canvas.$getContext = canvas.getContext;\r\n\r\n        // Override getContext function with \"webgl-2d\" enabled version\r\n        canvas.getContext = (function (gl2d) {\r\n            return function (context) {\r\n                if ((gl2d.options.force || context === \"WebGL-2d\") && !(canvas.width === 0 || canvas.height === 0)) {\r\n                    if (gl2d.gl) {\r\n                        return gl2d.gl;\r\n                    }\r\n\r\n                    var gl = gl2d.gl = gl2d.canvas.$getContext(\"experimental-webgl\");\r\n\r\n                    // If we failed to get a WebGL context, return a normal 2D context instead.\r\n                    if ((typeof (gl) === \"undefined\") || (gl === null)) {\r\n                        return gl2d.canvas.$getContext(\"2d\");\r\n                    }\r\n\r\n                    gl2d.initShaders();\r\n                    gl2d.initBuffers();\r\n\r\n                    // Append Canvas2D API features to the WebGL context\r\n                    gl2d.initCanvas2DAPI();\r\n\r\n                    // Disables writing to dest-alpha\r\n                    // gl.colorMask(1,1,1,0)\r\n\r\n                    // Depth options\r\n                    //gl.enable(gl.DEPTH_TEST);\r\n                    //gl.depthFunc(gl.LEQUAL);\r\n\r\n                    // Blending options\r\n                    // See http://stackoverflow.com/questions/11521035/blending-with-html-background-in-webgl\r\n                    gl.enable(gl.BLEND);\r\n                    gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n\r\n                    gl2d.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\r\n\r\n                    return gl;\r\n                } else {\r\n                    return gl2d.canvas.$getContext(context);\r\n                }\r\n            };\r\n        }(this));\r\n\r\n        this.postInit();\r\n    };\r\n\r\n    // Enables WebGL2D on your canvas\r\n    WebGL2D.enable = function (canvas, options) {\r\n        return canvas.gl2d || new WebGL2D(canvas, options);\r\n    };\r\n\r\n\r\n    // Shader Pool BitMasks, i.e. sMask = (shaderMask.texture+shaderMask.stroke)\r\n    var shaderMask = {\r\n        texture: 1,\r\n        crop: 2,\r\n        path: 4\r\n    };\r\n\r\n\r\n    // Fragment shader source\r\n    WebGL2D.prototype.getFragmentShaderSource = function getFragmentShaderSource(sMask) {\r\n        var fsSource = [\r\n            \"#ifdef GL_ES\",\r\n            \"precision highp float;\",\r\n            \"#endif\",\r\n\r\n            \"#define hasTexture \" + ((sMask & shaderMask.texture) ? \"1\" : \"0\"),\r\n            \"#define hasCrop \" + ((sMask & shaderMask.crop) ? \"1\" : \"0\"),\r\n\r\n            \"varying vec4 vColor;\",\r\n\r\n            \"#if hasTexture\",\r\n            \"varying vec2 vTextureCoord;\",\r\n            \"uniform sampler2D uSampler;\",\r\n            \"#if hasCrop\",\r\n            \"uniform vec4 uCropSource;\",\r\n            \"#endif\",\r\n            \"#endif\",\r\n\r\n            \"void main(void) {\",\r\n            \"#if hasTexture\",\r\n            \"#if hasCrop\",\r\n            \"gl_FragColor = texture2D(uSampler, vec2(vTextureCoord.x * uCropSource.z, vTextureCoord.y * uCropSource.w) + uCropSource.xy);\",\r\n            \"#else\",\r\n            \"gl_FragColor = texture2D(uSampler, vTextureCoord);\",\r\n            \"#endif\",\r\n            \"#else\",\r\n            \"gl_FragColor = vColor;\",\r\n            \"#endif\",\r\n            \"}\"\r\n        ].join(\"\\n\");\r\n\r\n        return fsSource;\r\n    };\r\n\r\n    WebGL2D.prototype.getVertexShaderSource = function getVertexShaderSource(stackDepth, sMask) {\r\n        stackDepth = stackDepth || 1;\r\n\r\n        var vsSource = [\r\n            \"#define hasTexture \" + ((sMask & shaderMask.texture) ? \"1\" : \"0\"),\r\n            \"attribute vec4 aVertexPosition;\",\r\n\r\n            \"#if hasTexture\",\r\n            \"varying vec2 vTextureCoord;\",\r\n            \"#endif\",\r\n\r\n            \"uniform vec4 uColor;\",\r\n            \"uniform mat3 uTransforms[\" + stackDepth + \"];\",\r\n\r\n            \"varying vec4 vColor;\",\r\n\r\n            \"uniform mat4 pMatrix;\",\r\n\r\n            \"mat3 crunchStack(void) {\",\r\n            \"mat3 result = uTransforms[0];\",\r\n            \"for (int i = 1; i < \" + stackDepth + \"; ++i) {\",\r\n            \"result = uTransforms[i] * result;\",\r\n            \"}\",\r\n            \"return result;\",\r\n            \"}\",\r\n\r\n            \"void main(void) {\",\r\n            \"vec3 position = crunchStack() * vec3(aVertexPosition.x, aVertexPosition.y, 1.0);\",\r\n            \"gl_Position = pMatrix * vec4(position, 1.0);\",\r\n            \"vColor = uColor;\",\r\n            \"#if hasTexture\",\r\n            \"vTextureCoord = aVertexPosition.zw;\",\r\n            \"#endif\",\r\n            \"}\"\r\n        ].join(\"\\n\");\r\n        return vsSource;\r\n    };\r\n\r\n\r\n    // Initialize fragment and vertex shaders\r\n    WebGL2D.prototype.initShaders = function initShaders(transformStackDepth, sMask) {\r\n        var gl = this.gl;\r\n\r\n        transformStackDepth = transformStackDepth || 1;\r\n        sMask = sMask || 0;\r\n        var storedShader = this.shaderPool[transformStackDepth];\r\n\r\n        if (!storedShader) {\r\n            storedShader = this.shaderPool[transformStackDepth] = [];\r\n        }\r\n        storedShader = storedShader[sMask];\r\n\r\n        if (storedShader) {\r\n            gl.useProgram(storedShader);\r\n            this.shaderProgram = storedShader;\r\n        } else {\r\n            var fs = this.fs = gl.createShader(gl.FRAGMENT_SHADER);\r\n            gl.shaderSource(this.fs, this.getFragmentShaderSource(sMask));\r\n            gl.compileShader(this.fs);\r\n\r\n            if (!gl.getShaderParameter(this.fs, gl.COMPILE_STATUS)) {\r\n                throw \"fragment shader error: \" + gl.getShaderInfoLog(this.fs);\r\n            }\r\n\r\n            var vs = this.vs = gl.createShader(gl.VERTEX_SHADER);\r\n            gl.shaderSource(this.vs, this.getVertexShaderSource(transformStackDepth, sMask));\r\n            gl.compileShader(this.vs);\r\n\r\n            if (!gl.getShaderParameter(this.vs, gl.COMPILE_STATUS)) {\r\n                throw \"vertex shader error: \" + gl.getShaderInfoLog(this.vs);\r\n            }\r\n\r\n\r\n            var shaderProgram = this.shaderProgram = gl.createProgram();\r\n            shaderProgram.stackDepth = transformStackDepth;\r\n            gl.attachShader(shaderProgram, fs);\r\n            gl.attachShader(shaderProgram, vs);\r\n            gl.linkProgram(shaderProgram);\r\n\r\n            if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\r\n                throw \"Could not initialise shaders.\";\r\n            }\r\n\r\n            gl.useProgram(shaderProgram);\r\n\r\n            shaderProgram.vertexPositionAttribute = gl.getAttribLocation(shaderProgram, \"aVertexPosition\");\r\n            gl.enableVertexAttribArray(shaderProgram.vertexPositionAttribute);\r\n\r\n            shaderProgram.uColor = gl.getUniformLocation(shaderProgram, 'uColor');\r\n            shaderProgram.uSampler = gl.getUniformLocation(shaderProgram, 'uSampler');\r\n            shaderProgram.uCropSource = gl.getUniformLocation(shaderProgram, 'uCropSource');\r\n\r\n            shaderProgram.pMatrix = gl.getUniformLocation(shaderProgram, 'pMatrix');\r\n\r\n            shaderProgram.uTransforms = [];\r\n            for (var i = 0; i < transformStackDepth; ++i) {\r\n                shaderProgram.uTransforms[i] = gl.getUniformLocation(shaderProgram, 'uTransforms[' + i + ']');\r\n            } //for\r\n            this.shaderPool[transformStackDepth][sMask] = shaderProgram;\r\n        } //if\r\n\r\n        pMatrix[0] = 2 / this.canvas.width;\r\n        pMatrix[5] = -2 / this.canvas.height;\r\n\r\n        gl.uniformMatrix4fv(this.shaderProgram.pMatrix, false, pMatrix);\r\n\r\n        gl.viewport(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n        return this.shaderProgram;\r\n    };\r\n\r\n    // 2D Vertices and Texture UV coords\r\n    var rectVerts = new Float32Array([\r\n        0, 0, 0, 0,\r\n        0, 1, 0, 1,\r\n        1, 1, 1, 1,\r\n        1, 0, 1, 0\r\n    ]);\r\n\r\n    var pMatrix = new Float32Array(16);\r\n    pMatrix[10] = 1;\r\n    pMatrix[11] = 1;\r\n    pMatrix[12] = -1;\r\n    pMatrix[13] = 1;\r\n\r\n    WebGL2D.prototype.initBuffers = function initBuffers() {\r\n        var gl = this.gl;\r\n\r\n        gl.rectVertexPositionBuffer = gl.createBuffer();\r\n        gl.rectVertexColorBuffer = gl.createBuffer();\r\n\r\n        gl.pathVertexPositionBuffer = gl.createBuffer();\r\n        gl.pathVertexColorBuffer = gl.createBuffer();\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, gl.rectVertexPositionBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, rectVerts, gl.STATIC_DRAW);\r\n    };\r\n\r\n    // Maintains an array of all WebGL2D instances\r\n    WebGL2D.instances = [];\r\n\r\n    WebGL2D.prototype.postInit = function () {\r\n        WebGL2D.instances.push(this);\r\n    };\r\n\r\n    // Extends gl context with Canvas2D API\r\n    WebGL2D.prototype.initCanvas2DAPI = function initCanvas2DAPI() {\r\n        var gl2d = this,\r\n            gl = this.gl;\r\n\r\n\r\n        // Rendering Canvas for text fonts\r\n        var textCanvas = document.createElement(\"canvas\");\r\n        textCanvas.width = gl2d.canvas.width;\r\n        textCanvas.height = gl2d.canvas.height;\r\n        var textCtx = textCanvas.getContext(\"2d\");\r\n\r\n        var reRGBAColor = /^rgb(a)?\\(\\s*(-?[\\d]+)(%)?\\s*,\\s*(-?[\\d]+)(%)?\\s*,\\s*(-?[\\d]+)(%)?\\s*,?\\s*(-?[\\d\\.]+)?\\s*\\)$/;\r\n        var reHSLAColor = /^hsl(a)?\\(\\s*(-?[\\d\\.]+)\\s*,\\s*(-?[\\d\\.]+)%\\s*,\\s*(-?[\\d\\.]+)%\\s*,?\\s*(-?[\\d\\.]+)?\\s*\\)$/;\r\n        var reHex6Color = /^#([0-9A-Fa-f]{6})$/;\r\n        var reHex3Color = /^#([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])$/;\r\n\r\n        function hue2rgb(p, q, t) {\r\n            if (t < 0) t += 1;\r\n            if (t > 1) t -= 1;\r\n            if (t < 1 / 6) return p + (q - p) * 6 * t;\r\n            if (t < 1 / 2) return q;\r\n            if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\r\n            return p;\r\n        }\r\n\r\n        // http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n        function HSLAToRGBA(h, s, l, a) {\r\n            var r, g, b, p, q;\r\n\r\n            // Clamp and Normalize values\r\n            h = (((h % 360) + 360) % 360) / 360;\r\n            s = s > 100 ? 1 : s / 100;\r\n            s = s < 0 ? 0 : s;\r\n            l = l > 100 ? 1 : l / 100;\r\n            l = l < 0 ? 0 : l;\r\n\r\n            if (s == 0) {\r\n                r = g = b = l; // achromatic\r\n            } else {\r\n                q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n                p = 2 * l - q;\r\n\r\n                r = hue2rgb(p, q, h + 1 / 3);\r\n                g = hue2rgb(p, q, h);\r\n                b = hue2rgb(p, q, h - 1 / 3);\r\n            }\r\n\r\n            return [r, g, b, a];\r\n        }\r\n\r\n\r\n        // Converts rgb(a) color string to gl color vector\r\n        function colorStringToVec4(value) {\r\n            var result = [], match, channel, isPercent, hasAlpha, alphaChannel, sameType;\r\n\r\n            if ((match = reRGBAColor.exec(value))) {\r\n                hasAlpha = match[1], alphaChannel = parseFloat(match[8]);\r\n\r\n                if ((hasAlpha && isNaN(alphaChannel)) || (!hasAlpha && !isNaN(alphaChannel))) {\r\n                    return false;\r\n                }\r\n\r\n                sameType = match[3];\r\n\r\n                for (var i = 2; i < 8; i += 2) {\r\n                    channel = match[i], isPercent = match[i + 1];\r\n\r\n                    if (isPercent !== sameType) {\r\n                        return false;\r\n                    }\r\n\r\n                    // Clamp and normalize values\r\n                    if (isPercent) {\r\n                        channel = channel > 100 ? 1 : channel / 100;\r\n                        channel = channel < 0 ? 0 : channel;\r\n                    } else {\r\n                        channel = channel > 255 ? 1 : channel / 255;\r\n                        channel = channel < 0 ? 0 : channel;\r\n                    }\r\n\r\n                    result.push(channel);\r\n                }\r\n\r\n                result.push(hasAlpha ? alphaChannel : 1.0);\r\n            } else if ((match = reHSLAColor.exec(value))) {\r\n                hasAlpha = match[1], alphaChannel = parseFloat(match[5]);\r\n                result = HSLAToRGBA(match[2], match[3], match[4], parseFloat(hasAlpha && alphaChannel ? alphaChannel : 1.0));\r\n            } else if ((match = reHex6Color.exec(value))) {\r\n                var colorInt = parseInt(match[1], 16);\r\n                result = [((colorInt & 0xFF0000) >> 16) / 255, ((colorInt & 0x00FF00) >> 8) / 255, (colorInt & 0x0000FF) / 255, 1.0];\r\n            } else if ((match = reHex3Color.exec(value))) {\r\n                var hexString = \"#\" + [match[1], match[1], match[2], match[2], match[3], match[3]].join(\"\");\r\n                result = colorStringToVec4(hexString);\r\n            } else if (value.toLowerCase() in colorKeywords) {\r\n                result = colorStringToVec4(colorKeywords[value.toLowerCase()]);\r\n            } else if (value.toLowerCase() === \"transparent\") {\r\n                result = [0, 0, 0, 0];\r\n            } else {\r\n                // Color keywords not yet implemented, ie \"orange\", return hot pink\r\n                return false;\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        function colorVecToString(vec4) {\r\n            return \"rgba(\" + (vec4[0] * 255) + \", \" + (vec4[1] * 255) + \", \" + (vec4[2] * 255) + \", \" + parseFloat(vec4[3]) + \")\";\r\n        }\r\n\r\n        var colorKeywords = {\r\n            aliceblue: \"#f0f8ff\",\r\n            antiquewhite: \"#faebd7\",\r\n            aqua: \"#00ffff\",\r\n            aquamarine: \"#7fffd4\",\r\n            azure: \"#f0ffff\",\r\n            beige: \"#f5f5dc\",\r\n            bisque: \"#ffe4c4\",\r\n            black: \"#000000\",\r\n            blanchedalmond: \"#ffebcd\",\r\n            blue: \"#0000ff\",\r\n            blueviolet: \"#8a2be2\",\r\n            brown: \"#a52a2a\",\r\n            burlywood: \"#deb887\",\r\n            cadetblue: \"#5f9ea0\",\r\n            chartreuse: \"#7fff00\",\r\n            chocolate: \"#d2691e\",\r\n            coral: \"#ff7f50\",\r\n            cornflowerblue: \"#6495ed\",\r\n            cornsilk: \"#fff8dc\",\r\n            crimson: \"#dc143c\",\r\n            cyan: \"#00ffff\",\r\n            darkblue: \"#00008b\",\r\n            darkcyan: \"#008b8b\",\r\n            darkgoldenrod: \"#b8860b\",\r\n            darkgray: \"#a9a9a9\",\r\n            darkgreen: \"#006400\",\r\n            darkkhaki: \"#bdb76b\",\r\n            darkmagenta: \"#8b008b\",\r\n            darkolivegreen: \"#556b2f\",\r\n            darkorange: \"#ff8c00\",\r\n            darkorchid: \"#9932cc\",\r\n            darkred: \"#8b0000\",\r\n            darksalmon: \"#e9967a\",\r\n            darkseagreen: \"#8fbc8f\",\r\n            darkslateblue: \"#483d8b\",\r\n            darkslategray: \"#2f4f4f\",\r\n            darkturquoise: \"#00ced1\",\r\n            darkviolet: \"#9400d3\",\r\n            deeppink: \"#ff1493\",\r\n            deepskyblue: \"#00bfff\",\r\n            dimgray: \"#696969\",\r\n            dodgerblue: \"#1e90ff\",\r\n            firebrick: \"#b22222\",\r\n            floralwhite: \"#fffaf0\",\r\n            forestgreen: \"#228b22\",\r\n            fuchsia: \"#ff00ff\",\r\n            gainsboro: \"#dcdcdc\",\r\n            ghostwhite: \"#f8f8ff\",\r\n            gold: \"#ffd700\",\r\n            goldenrod: \"#daa520\",\r\n            gray: \"#808080\",\r\n            green: \"#008000\",\r\n            greenyellow: \"#adff2f\",\r\n            grey: \"#808080\",\r\n            honeydew: \"#f0fff0\",\r\n            hotpink: \"#ff69b4\",\r\n            indianred: \"#cd5c5c\",\r\n            indigo: \"#4b0082\",\r\n            ivory: \"#fffff0\",\r\n            khaki: \"#f0e68c\",\r\n            lavender: \"#e6e6fa\",\r\n            lavenderblush: \"#fff0f5\",\r\n            lawngreen: \"#7cfc00\",\r\n            lemonchiffon: \"#fffacd\",\r\n            lightblue: \"#add8e6\",\r\n            lightcoral: \"#f08080\",\r\n            lightcyan: \"#e0ffff\",\r\n            lightgoldenrodyellow: \"#fafad2\",\r\n            lightgrey: \"#d3d3d3\",\r\n            lightgreen: \"#90ee90\",\r\n            lightpink: \"#ffb6c1\",\r\n            lightsalmon: \"#ffa07a\",\r\n            lightseagreen: \"#20b2aa\",\r\n            lightskyblue: \"#87cefa\",\r\n            lightslategray: \"#778899\",\r\n            lightsteelblue: \"#b0c4de\",\r\n            lightyellow: \"#ffffe0\",\r\n            lime: \"#00ff00\",\r\n            limegreen: \"#32cd32\",\r\n            linen: \"#faf0e6\",\r\n            magenta: \"#ff00ff\",\r\n            maroon: \"#800000\",\r\n            mediumaquamarine: \"#66cdaa\",\r\n            mediumblue: \"#0000cd\",\r\n            mediumorchid: \"#ba55d3\",\r\n            mediumpurple: \"#9370d8\",\r\n            mediumseagreen: \"#3cb371\",\r\n            mediumslateblue: \"#7b68ee\",\r\n            mediumspringgreen: \"#00fa9a\",\r\n            mediumturquoise: \"#48d1cc\",\r\n            mediumvioletred: \"#c71585\",\r\n            midnightblue: \"#191970\",\r\n            mintcream: \"#f5fffa\",\r\n            mistyrose: \"#ffe4e1\",\r\n            moccasin: \"#ffe4b5\",\r\n            navajowhite: \"#ffdead\",\r\n            navy: \"#000080\",\r\n            oldlace: \"#fdf5e6\",\r\n            olive: \"#808000\",\r\n            olivedrab: \"#6b8e23\",\r\n            orange: \"#ffa500\",\r\n            orangered: \"#ff4500\",\r\n            orchid: \"#da70d6\",\r\n            palegoldenrod: \"#eee8aa\",\r\n            palegreen: \"#98fb98\",\r\n            paleturquoise: \"#afeeee\",\r\n            palevioletred: \"#d87093\",\r\n            papayawhip: \"#ffefd5\",\r\n            peachpuff: \"#ffdab9\",\r\n            peru: \"#cd853f\",\r\n            pink: \"#ffc0cb\",\r\n            plum: \"#dda0dd\",\r\n            powderblue: \"#b0e0e6\",\r\n            purple: \"#800080\",\r\n            red: \"#ff0000\",\r\n            rosybrown: \"#bc8f8f\",\r\n            royalblue: \"#4169e1\",\r\n            saddlebrown: \"#8b4513\",\r\n            salmon: \"#fa8072\",\r\n            sandybrown: \"#f4a460\",\r\n            seagreen: \"#2e8b57\",\r\n            seashell: \"#fff5ee\",\r\n            sienna: \"#a0522d\",\r\n            silver: \"#c0c0c0\",\r\n            skyblue: \"#87ceeb\",\r\n            slateblue: \"#6a5acd\",\r\n            slategray: \"#708090\",\r\n            snow: \"#fffafa\",\r\n            springgreen: \"#00ff7f\",\r\n            steelblue: \"#4682b4\",\r\n            tan: \"#d2b48c\",\r\n            teal: \"#008080\",\r\n            thistle: \"#d8bfd8\",\r\n            tomato: \"#ff6347\",\r\n            turquoise: \"#40e0d0\",\r\n            violet: \"#ee82ee\",\r\n            wheat: \"#f5deb3\",\r\n            white: \"#ffffff\",\r\n            whitesmoke: \"#f5f5f5\",\r\n            yellow: \"#ffff00\",\r\n            yellowgreen: \"#9acd32\"\r\n        };\r\n\r\n        // Maintain drawing state params during gl.save and gl.restore. see saveDrawState() and restoreDrawState()\r\n        var drawState = {}, drawStateStack = [];\r\n\r\n        // A fast simple shallow clone\r\n        function cloneObject(obj) {\r\n            var target = {};\r\n            for (var i in obj) {\r\n                if (obj.hasOwnProperty(i)) {\r\n                    target[i] = obj[i];\r\n                }\r\n            }\r\n            return target;\r\n        }\r\n\r\n        function saveDrawState() {\r\n            var bakedDrawState = {\r\n                fillStyle: [drawState.fillStyle[0], drawState.fillStyle[1], drawState.fillStyle[2], drawState.fillStyle[3]],\r\n                strokeStyle: [drawState.strokeStyle[0], drawState.strokeStyle[1], drawState.strokeStyle[2], drawState.strokeStyle[3]],\r\n                globalAlpha: drawState.globalAlpha,\r\n                globalCompositeOperation: drawState.globalCompositeOperation,\r\n                lineCap: drawState.lineCap,\r\n                lineJoin: drawState.lineJoin,\r\n                lineWidth: drawState.lineWidth,\r\n                miterLimit: drawState.miterLimit,\r\n                shadowColor: drawState.shadowColor,\r\n                shadowBlur: drawState.shadowBlur,\r\n                shadowOffsetX: drawState.shadowOffsetX,\r\n                shadowOffsetY: drawState.shadowOffsetY,\r\n                textAlign: drawState.textAlign,\r\n                font: drawState.font,\r\n                textBaseline: drawState.textBaseline,\r\n                imageSmoothingEnabled: drawState.imageSmoothingEnabled\r\n            };\r\n\r\n            drawStateStack.push(bakedDrawState);\r\n        }\r\n\r\n        function restoreDrawState() {\r\n            if (drawStateStack.length) {\r\n                drawState = drawStateStack.pop();\r\n            }\r\n        }\r\n\r\n        // WebGL requires colors as a vector while Canvas2D sets colors as an rgba string\r\n        // These getters and setters store the original rgba string as well as convert to a vector\r\n        drawState.fillStyle = [0, 0, 0, 1]; // default black\r\n\r\n        Object.defineProperty(gl, \"fillStyle\", {\r\n            get: function () {\r\n                return colorVecToString(drawState.fillStyle);\r\n            },\r\n            set: function (value) {\r\n                drawState.fillStyle = colorStringToVec4(value) || drawState.fillStyle;\r\n            }\r\n        });\r\n\r\n        drawState.strokeStyle = [0, 0, 0, 1]; // default black\r\n\r\n        Object.defineProperty(gl, \"strokeStyle\", {\r\n            get: function () {\r\n                return colorVecToString(drawState.strokeStyle);\r\n            },\r\n            set: function (value) {\r\n                drawState.strokeStyle = colorStringToVec4(value) || drawStyle.strokeStyle;\r\n            }\r\n        });\r\n\r\n        // WebGL already has a lineWidth() function but Canvas2D requires a lineWidth property\r\n        // Store the original lineWidth() function for later use\r\n        gl.$lineWidth = gl.lineWidth;\r\n        drawState.lineWidth = 1.0;\r\n\r\n        Object.defineProperty(gl, \"lineWidth\", {\r\n            get: function () {\r\n                return drawState.lineWidth;\r\n            },\r\n            set: function (value) {\r\n                if (value > 0) {\r\n                    gl.$lineWidth(value);\r\n                    drawState.lineWidth = value;\r\n                }\r\n            }\r\n        });\r\n\r\n        // Currently unsupported attributes and their default values\r\n        drawState.lineCap = \"butt\";\r\n\r\n        Object.defineProperty(gl, \"lineCap\", {\r\n            get: function () {\r\n                return drawState.lineCap;\r\n            },\r\n            set: function (value) {\r\n                drawState.lineCap = value;\r\n            }\r\n        });\r\n\r\n        drawState.lineJoin = \"miter\";\r\n\r\n        Object.defineProperty(gl, \"lineJoin\", {\r\n            get: function () {\r\n                return drawState.lineJoin;\r\n            },\r\n            set: function (value) {\r\n                drawState.lineJoin = value;\r\n            }\r\n        });\r\n\r\n        drawState.miterLimit = 10;\r\n\r\n        Object.defineProperty(gl, \"miterLimit\", {\r\n            get: function () {\r\n                return drawState.miterLimit;\r\n            },\r\n            set: function (value) {\r\n                drawState.miterLimit = value;\r\n            }\r\n        });\r\n\r\n        drawState.shadowOffsetX = 0;\r\n\r\n        Object.defineProperty(gl, \"shadowOffsetX\", {\r\n            get: function () {\r\n                return drawState.shadowOffsetX;\r\n            },\r\n            set: function (value) {\r\n                drawState.shadowOffsetX = value;\r\n            }\r\n        });\r\n\r\n        drawState.shadowOffsetY = 0;\r\n\r\n        Object.defineProperty(gl, \"shadowOffsetY\", {\r\n            get: function () {\r\n                return drawState.shadowOffsetY;\r\n            },\r\n            set: function (value) {\r\n                drawState.shadowOffsetY = value;\r\n            }\r\n        });\r\n\r\n        drawState.shadowBlur = 0;\r\n\r\n        Object.defineProperty(gl, \"shadowBlur\", {\r\n            get: function () {\r\n                return drawState.shadowBlur;\r\n            },\r\n            set: function (value) {\r\n                drawState.shadowBlur = value;\r\n            }\r\n        });\r\n\r\n        drawState.shadowColor = \"rgba(0, 0, 0, 0.0)\";\r\n\r\n        Object.defineProperty(gl, \"shadowColor\", {\r\n            get: function () {\r\n                return drawState.shadowColor;\r\n            },\r\n            set: function (value) {\r\n                drawState.shadowColor = value;\r\n            }\r\n        });\r\n\r\n        drawState.font = \"10px sans-serif\";\r\n\r\n        Object.defineProperty(gl, \"font\", {\r\n            get: function () {\r\n                return drawState.font;\r\n            },\r\n            set: function (value) {\r\n                textCtx.font = value;\r\n                drawState.font = value;\r\n            }\r\n        });\r\n\r\n        drawState.textAlign = \"start\";\r\n\r\n        Object.defineProperty(gl, \"textAlign\", {\r\n            get: function () {\r\n                return drawState.textAlign;\r\n            },\r\n            set: function (value) {\r\n                drawState.textAlign = value;\r\n            }\r\n        });\r\n\r\n        drawState.textBaseline = \"alphabetic\";\r\n\r\n        Object.defineProperty(gl, \"textBaseline\", {\r\n            get: function () {\r\n                return drawState.textBaseline;\r\n            },\r\n            set: function (value) {\r\n                drawState.textBaseline = value;\r\n            }\r\n        });\r\n\r\n        // This attribute will need to control global alpha of objects drawn.\r\n        drawState.globalAlpha = 1.0;\r\n\r\n        Object.defineProperty(gl, \"globalAlpha\", {\r\n            get: function () {\r\n                return drawState.globalAlpha;\r\n            },\r\n            set: function (value) {\r\n                drawState.globalAlpha = value;\r\n            }\r\n        });\r\n\r\n        // This attribute will need to control smoothing of objects drawn.\r\n        drawState.imageSmoothingEnabled = true;\r\n\r\n        Object.defineProperty(gl, \"imageSmoothingEnabled\", {\r\n            get: function () {\r\n                return drawState.imageSmoothingEnabled;\r\n            },\r\n            set: function (value) {\r\n                drawState.imageSmoothingEnabled = !!value;\r\n            }\r\n        });\r\n\r\n        // This attribute will need to set the gl.blendFunc mode\r\n        drawState.globalCompositeOperation = \"source-over\";\r\n\r\n        Object.defineProperty(gl, \"globalCompositeOperation\", {\r\n            get: function () {\r\n                return drawState.globalCompositeOperation;\r\n            },\r\n            set: function (value) {\r\n                drawState.globalCompositeOperation = value;\r\n            }\r\n        });\r\n\r\n        // Need a solution for drawing text that isnt stupid slow\r\n        gl.fillText = function fillText(text, x, y) {\r\n            // if it exist --key\r\n            textCtx.clearRect(0, 0, gl2d.canvas.width, gl2d.canvas.height);\r\n            textCtx.fillStyle = gl.fillStyle;\r\n            textCtx.fillText(text, x, y);\r\n\r\n            gl.drawImage(textCanvas, 0, 0);\r\n        };\r\n\r\n        gl.strokeText = function strokeText() {\r\n        };\r\n\r\n        gl.measureText = function measureText() {\r\n            return 1;\r\n        };\r\n\r\n        var tempCanvas = document.createElement('canvas');\r\n        var tempCtx = tempCanvas.getContext('2d');\r\n\r\n        gl.save = function save() {\r\n            gl2d.transform.pushMatrix();\r\n            saveDrawState();\r\n        };\r\n\r\n        gl.restore = function restore() {\r\n            gl2d.transform.popMatrix();\r\n            restoreDrawState();\r\n        };\r\n\r\n        gl.translate = function translate(x, y) {\r\n            gl2d.transform.translate(x, y);\r\n        };\r\n\r\n        gl.rotate = function rotate(a) {\r\n            gl2d.transform.rotate(a);\r\n        };\r\n\r\n        gl.scale = function scale(x, y) {\r\n            gl2d.transform.scale(x, y);\r\n        };\r\n\r\n        gl.createImageData = function createImageData(width, height) {\r\n            return tempCtx.createImageData(width, height);\r\n        };\r\n\r\n        gl.getImageData = function getImageData(x, y, width, height) {\r\n            var data = tempCtx.createImageData(width, height);\r\n            var buffer = new Uint8Array(width * height * 4);\r\n            gl.readPixels(x, y, width, height, gl.RGBA, gl.UNSIGNED_BYTE, buffer);\r\n            var w = width * 4, h = height;\r\n            for (var i = 0, maxI = h / 2; i < maxI; ++i) {\r\n                for (var j = 0, maxJ = w; j < maxJ; ++j) {\r\n                    var index1 = i * w + j;\r\n                    var index2 = (h - i - 1) * w + j;\r\n                    data.data[index1] = buffer[index2];\r\n                    data.data[index2] = buffer[index1];\r\n                } //for\r\n            } //for\r\n\r\n            return data;\r\n        };\r\n\r\n        gl.putImageData = function putImageData(imageData, x, y) {\r\n            gl.drawImage(imageData, x, y);\r\n        };\r\n\r\n        gl.transform = function transform(m11, m12, m21, m22, dx, dy) {\r\n            gl2d.transform.tr(m11, m12, m21, m22, dx, dy);\r\n        };\r\n\r\n        function sendTransformStack(sp) {\r\n            var stack = gl2d.transform.m_stack;\r\n            for (var i = 0, maxI = gl2d.transform.c_stack + 1; i < maxI; ++i) {\r\n                gl.uniformMatrix3fv(sp.uTransforms[i], false, stack[maxI - 1 - i]);\r\n            } //for\r\n        }\r\n\r\n        gl.setTransform = function setTransform(m11, m12, m21, m22, dx, dy) {\r\n            gl2d.transform.setIdentity();\r\n            gl.transform.apply(this, arguments);\r\n        };\r\n\r\n        gl.fillRect = function fillRect(x, y, width, height) {\r\n            var transform = gl2d.transform;\r\n            var shaderProgram = gl2d.initShaders(transform.c_stack + 2, 0);\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, gl.rectVertexPositionBuffer);\r\n            gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, 4, gl.FLOAT, false, 0, 0);\r\n\r\n            transform.pushMatrix();\r\n\r\n            transform.translate(x, y);\r\n            transform.scale(width, height);\r\n\r\n            sendTransformStack(shaderProgram);\r\n\r\n            gl.uniform4f(shaderProgram.uColor, drawState.fillStyle[0], drawState.fillStyle[1], drawState.fillStyle[2], drawState.fillStyle[3]);\r\n\r\n            gl.drawArrays(gl.TRIANGLE_FAN, 0, 4);\r\n\r\n            transform.popMatrix();\r\n        };\r\n\r\n        gl.strokeRect = function strokeRect(x, y, width, height) {\r\n            var transform = gl2d.transform;\r\n            var shaderProgram = gl2d.initShaders(transform.c_stack + 2, 0);\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, gl.rectVertexPositionBuffer);\r\n            gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, 4, gl.FLOAT, false, 0, 0);\r\n\r\n            transform.pushMatrix();\r\n\r\n            transform.translate(x, y);\r\n            transform.scale(width, height);\r\n\r\n            sendTransformStack(shaderProgram);\r\n\r\n            gl.uniform4f(shaderProgram.uColor, drawState.strokeStyle[0], drawState.strokeStyle[1], drawState.strokeStyle[2], drawState.strokeStyle[3]);\r\n\r\n            gl.drawArrays(gl.LINE_LOOP, 0, 4);\r\n\r\n            transform.popMatrix();\r\n        };\r\n\r\n        gl.clearRect = function clearRect(x, y, width, height) {\r\n        };\r\n\r\n        var subPaths = [];\r\n\r\n        function SubPath(x, y) {\r\n            this.closed = false;\r\n            this.verts = [x, y, 0, 0];\r\n        }\r\n\r\n        // Empty the list of subpaths so that the context once again has zero subpaths\r\n        gl.beginPath = function beginPath() {\r\n            subPaths.length = 0;\r\n        };\r\n\r\n        // Mark last subpath as closed and create a new subpath with the same starting point as the previous subpath\r\n        gl.closePath = function closePath() {\r\n            if (subPaths.length) {\r\n                // Mark last subpath closed.\r\n                var prevPath = subPaths[subPaths.length - 1], startX = prevPath.verts[0], startY = prevPath.verts[1];\r\n                prevPath.closed = true;\r\n\r\n                // Create new subpath using the starting position of previous subpath\r\n                var newPath = new SubPath(startX, startY);\r\n                subPaths.push(newPath);\r\n            }\r\n        };\r\n\r\n        // Create a new subpath with the specified point as its first (and only) point\r\n        gl.moveTo = function moveTo(x, y) {\r\n            subPaths.push(new SubPath(x, y));\r\n        };\r\n\r\n        gl.lineTo = function lineTo(x, y) {\r\n            if (subPaths.length) {\r\n                subPaths[subPaths.length - 1].verts.push(x, y, 0, 0);\r\n            } else {\r\n                // Create a new subpath if none currently exist\r\n                gl.moveTo(x, y);\r\n            }\r\n        };\r\n\r\n        gl.quadraticApproximateCount = 50;\r\n        gl.quadraticCurveTo = function quadraticCurveTo(hx, hy, x, y) {\r\n            if (subPaths.length) {\r\n                var verts = subPaths[subPaths.length - 1].verts,\r\n                    fromx = verts[verts.length - 4],\r\n                    fromy = verts[verts.length - 3],\r\n                    t, i, tx, ty;\r\n                for (var j = 0; j < gl.quadraticApproximateCount; j++) {\r\n                    t = j / gl.quadraticApproximateCount;\r\n                    i = 1 - t;\r\n                    tx = i * i * fromx + 2 * i * t * hx + t * t * x;\r\n                    ty = i * i * fromy + 2 * i * t * hy + t * t * y;\r\n                    verts.push(tx, ty, 0, 0);\r\n                }\r\n            } else {\r\n                gl.moveTo(x, y);\r\n            }\r\n        };\r\n\r\n        gl.bezierApproximateCount = 50;\r\n        gl.bezierCurveTo = function quadraticCurveTo(h1x, h1y, h2x, h2y, x, y) {\r\n            if (subPaths.length) {\r\n                var verts = subPaths[subPaths.length - 1].verts,\r\n                    fromx = verts[verts.length - 4],\r\n                    fromy = verts[verts.length - 3],\r\n                    t, i, tx, ty;\r\n                for (var j = 0; j < gl.bezierApproximateCount; j++) {\r\n                    t = j / gl.bezierApproximateCount;\r\n                    i = 1 - t;\r\n                    tx = i * i * i * fromx + 3 * i * i * t * h1x + 3 * i * t * t * h2x + t * t * t * x;\r\n                    ty = i * i * i * fromy + 3 * i * i * t * h1y + 3 * i * t * t * h2y + t * t * t * y;\r\n                    verts.push(tx, ty, 0, 0);\r\n                }\r\n            } else {\r\n                gl.moveTo(x, y);\r\n            }\r\n        };\r\n\r\n        gl.arcTo = function arcTo() {\r\n            if (subPaths.length) {\r\n                ;\r\n            } else {\r\n                gl.moveTo(x, y);\r\n            }\r\n        };\r\n\r\n        // Adds a closed rect subpath and creates a new subpath\r\n        gl.rect = function rect(x, y, w, h) {\r\n            gl.moveTo(x, y);\r\n            gl.lineTo(x + w, y);\r\n            gl.lineTo(x + w, y + h);\r\n            gl.lineTo(x, y + h);\r\n            gl.closePath();\r\n        };\r\n\r\n        gl.arcApproximateCount = 100;\r\n        gl.arc = function arc(cx, cy, radius, startAngle, endAngle, anticlockwise) {\r\n            if (subPaths.length) {\r\n                var verts = subPaths[subPaths.length - 1].verts;\r\n\r\n                // startAngle\r\n                var x = cx + radius * Math.cos(startAngle),\r\n                    y = cy + radius * Math.sin(startAngle);\r\n                verts.push(x, y, 0, 0);\r\n\r\n                while (startAngle > Math.PI * 2)\r\n                    startAngle -= Math.PI * 2;\r\n                while (endAngle > Math.PI * 2)\r\n                    endAngle -= Math.PI * 2;\r\n                while (startAngle < -Math.PI * 2)\r\n                    startAngle += Math.PI * 2;\r\n                while (endAngle < -Math.PI * 2)\r\n                    endAngle += Math.PI * 2;\r\n                if (startAngle == endAngle)\r\n                    return;\r\n\r\n                var count = 1 / gl.arcApproximateCount,\r\n                    fixed = gl.arcApproximateCount,\r\n                    t;\r\n                if (anticlockwise) {\r\n                    endAngle -= Math.PI * 2;\r\n                    count = -count;\r\n                }\r\n                for (var i = startAngle; (i > endAngle && anticlockwise) || (i < endAngle && !anticlockwise); i += count) {\r\n                    if (t == (t = (i * fixed | 0) / fixed))\r\n                        continue;\r\n                    x = cx + radius * Math.cos(t);\r\n                    y = cy + radius * Math.sin(t);\r\n                    verts.push(x, y, 0, 0);\r\n                }\r\n            } else {\r\n                gl.moveTo(x, y);\r\n            }\r\n        };\r\n\r\n        function fillSubPath(index) {\r\n            var transform = gl2d.transform;\r\n            var shaderProgram = gl2d.initShaders(transform.c_stack + 2, 0);\r\n\r\n            var subPath = subPaths[index];\r\n            var verts = subPath.verts;\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, gl.pathVertexPositionBuffer);\r\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(verts), gl.STATIC_DRAW);\r\n\r\n            gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, 4, gl.FLOAT, false, 0, 0);\r\n\r\n            transform.pushMatrix();\r\n\r\n            sendTransformStack(shaderProgram);\r\n\r\n            gl.uniform4f(shaderProgram.uColor, drawState.fillStyle[0], drawState.fillStyle[1], drawState.fillStyle[2], drawState.fillStyle[3]);\r\n\r\n            gl.drawArrays(gl.TRIANGLE_FAN, 0, verts.length / 4);\r\n\r\n            transform.popMatrix();\r\n        }\r\n\r\n        gl.fill = function fill() {\r\n            for (var i = 0; i < subPaths.length; i++) {\r\n                fillSubPath(i);\r\n            }\r\n        };\r\n\r\n        function strokeSubPath(index) {\r\n            var transform = gl2d.transform;\r\n            var shaderProgram = gl2d.initShaders(transform.c_stack + 2, 0);\r\n\r\n            var subPath = subPaths[index];\r\n            var verts = subPath.verts;\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, gl.pathVertexPositionBuffer);\r\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(verts), gl.STATIC_DRAW);\r\n\r\n            gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, 4, gl.FLOAT, false, 0, 0);\r\n\r\n            transform.pushMatrix();\r\n\r\n            sendTransformStack(shaderProgram);\r\n\r\n            gl.uniform4f(shaderProgram.uColor, drawState.strokeStyle[0], drawState.strokeStyle[1], drawState.strokeStyle[2], drawState.strokeStyle[3]);\r\n\r\n            if (subPath.closed) {\r\n                gl.drawArrays(gl.LINE_LOOP, 0, verts.length / 4);\r\n            } else {\r\n                gl.drawArrays(gl.LINE_STRIP, 0, verts.length / 4);\r\n            }\r\n\r\n            transform.popMatrix();\r\n        }\r\n\r\n        gl.stroke = function stroke() {\r\n            for (var i = 0; i < subPaths.length; i++) {\r\n                strokeSubPath(i);\r\n            }\r\n        };\r\n\r\n        gl.clip = function clip() {\r\n        };\r\n\r\n        gl.isPointInPath = function isPointInPath() {\r\n        };\r\n\r\n        gl.drawFocusRing = function drawFocusRing() {\r\n        };\r\n\r\n\r\n        var imageCache = [], textureCache = [];\r\n\r\n        function Texture(image) {\r\n            this.obj = gl.createTexture();\r\n            this.index = textureCache.push(this);\r\n\r\n            imageCache.push(image);\r\n\r\n            // we may wish to consider tiling large images like this instead of scaling and\r\n            // adjust appropriately (flip to next texture source and tile offset) when drawing\r\n            if (image.width > gl2d.maxTextureSize || image.height > gl2d.maxTextureSize) {\r\n                var canvas = document.createElement(\"canvas\");\r\n\r\n                canvas.width = (image.width > gl2d.maxTextureSize) ? gl2d.maxTextureSize : image.width;\r\n                canvas.height = (image.height > gl2d.maxTextureSize) ? gl2d.maxTextureSize : image.height;\r\n\r\n                var ctx = canvas.getContext(\"2d\");\r\n\r\n                ctx.drawImage(image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height);\r\n\r\n                image = canvas;\r\n            }\r\n\r\n            var GL_FUNCTION = gl.LINEAR;\r\n            var GL_MIPMAP_FUNCTION = gl.LINEAR_MIPMAP_LINEAR;\r\n\r\n            if (!drawState.imageSmoothingEnabled) {\r\n                GL_FUNCTION = gl.NEAREST;\r\n                GL_MIPMAP_FUNCTION = gl.LINEAR_MIPMAP_NEAREST;\r\n            }\r\n\r\n            gl.bindTexture(gl.TEXTURE_2D, this.obj);\r\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, GL_FUNCTION);\r\n\r\n            // Enable Mip mapping on power-of-2 textures\r\n            if (isPOT(image.width) && isPOT(image.height)) {\r\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, GL_MIPMAP_FUNCTION);\r\n                gl.generateMipmap(gl.TEXTURE_2D);\r\n            } else {\r\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, GL_FUNCTION);\r\n            }\r\n\r\n            // Unbind texture\r\n            gl.bindTexture(gl.TEXTURE_2D, null);\r\n        }\r\n\r\n        gl.drawImage = function drawImage(image, a, b, c, d, e, f, g, h) {\r\n            var transform = gl2d.transform;\r\n\r\n            transform.pushMatrix();\r\n\r\n            var sMask = shaderMask.texture;\r\n            var doCrop = false;\r\n\r\n            //drawImage(image, dx, dy)\r\n            if (arguments.length === 3) {\r\n                transform.translate(a, b);\r\n                transform.scale(image.width, image.height);\r\n            }\r\n\r\n            //drawImage(image, dx, dy, dw, dh)\r\n            else if (arguments.length === 5) {\r\n                transform.translate(a, b);\r\n                transform.scale(c, d);\r\n            }\r\n\r\n            //drawImage(image, sx, sy, sw, sh, dx, dy, dw, dh)\r\n            else if (arguments.length === 9) {\r\n                transform.translate(e, f);\r\n                transform.scale(g, h);\r\n                sMask = sMask | shaderMask.crop;\r\n                doCrop = true;\r\n            }\r\n\r\n            var shaderProgram = gl2d.initShaders(transform.c_stack + 1, sMask);\r\n\r\n            var texture, cacheIndex = imageCache.indexOf(image);\r\n\r\n            if (cacheIndex !== -1) {\r\n                texture = textureCache[cacheIndex];\r\n            } else {\r\n                texture = new Texture(image);\r\n            }\r\n\r\n            if (doCrop) {\r\n                gl.uniform4f(shaderProgram.uCropSource, a / image.width, b / image.height, c / image.width, d / image.height);\r\n            }\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, gl.rectVertexPositionBuffer);\r\n            gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, 4, gl.FLOAT, false, 0, 0);\r\n\r\n            gl.bindTexture(gl.TEXTURE_2D, texture.obj);\r\n            gl.activeTexture(gl.TEXTURE0);\r\n\r\n            gl.uniform1i(shaderProgram.uSampler, 0);\r\n\r\n            sendTransformStack(shaderProgram);\r\n            gl.drawArrays(gl.TRIANGLE_FAN, 0, 4);\r\n\r\n            transform.popMatrix();\r\n        };\r\n\r\n        // This enables the user to detect whether they got a webgl-2d context or a 2d context.\r\n        Object.defineProperty(gl, \"isWebGL\", {\r\n            configurable: false,\r\n            enumerable: true,\r\n            writable: false,\r\n            value: true\r\n        });\r\n    };\r\n\r\n    return WebGL2D;\r\n}));\r\n"],"sourceRoot":"/source/"}