{"version":3,"sources":["jquery.j2d.js","utils/DeviceUtil.js","utils/MathUtil.js","utils/Vector2d.js","utils/Vector2dInteger.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAcqB,GAAG,YAAH,GAAG;8BAAH,GAAG;;;sBAAH,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCRH,UAAU;iBAAV,UAAU;kCAAV,UAAU;;;;;;qBAAV,UAAU;;;;;;;;;;;;;;;;;;;;;;;eAAV,UAAU;;;sBAAV,UAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCLV,QAAQ;iBAAR,QAAQ;kCAAR,QAAQ;;;qBAAR,QAAQ;;;;;;;;;;;;;;;;;;;;;;;eAAR,QAAQ;;;sBAAR,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCAR,QAAQ;iBAAR,QAAQ;kCAAR,QAAQ;;;;;;qBAAR,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eAAR,QAAQ;;;sBAAR,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCER,eAAe;kBAAf,eAAe;;iBAAf,eAAe;kCAAf,eAAe;;0EAAf,eAAe;;;qBAAf,eAAe;;;;;;;;;eAAf,eAAe;;;sBAAf,eAAe","file":"jquery.j2d.js","sourcesContent":["/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\nimport $ from \"jquery\";\r\n\r\nvar defaults = {\r\n    id: undefined,\r\n    io: undefined,\r\n    deltaTime: 0,\r\n    pause: false,\r\n    ready: false,\r\n\r\n    frameLimit: 60,\r\n    smoothing: true,\r\n\r\n    webGL: false\r\n};\r\n\r\n\r\nexport default class J2D {\r\n    constructor() {\r\n    }\r\n}\r\n\r\nJ2D.initPlugin = function () {\r\n    if (window.j2dPlugin !== undefined) return null;\r\n    window.j2dPlugin = {pluginInit: true};\r\n\r\n    $.fn.j2d = function (options) {\r\n        this.filter('div.canvas:not([guid])').each(function () {\r\n            var options = $.extend(true, {}, defaults, options);\r\n\r\n            var guid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n                var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n                return v.toString(16);\r\n            });\r\n            $(this).attr('guid', guid);\r\n            var id = $(this).attr('id');\r\n            if (typeof id === typeof undefined || id === false) {\r\n                $(this).attr('id', guid);\r\n            }\r\n            var tabIndex = $(this).attr('tabindex');\r\n            if (typeof tabIndex === typeof undefined || tabIndex === false) {\r\n                $(this).attr('tabindex', '-1');\r\n            }\r\n            $(this).data('j2d', new J2D(guid, $(this), options)).addClass('j2d');\r\n            $(this).click().focus();\r\n        });\r\n\r\n        var $array = [];\r\n        this.filter('div.canvas[guid]').each(function () {\r\n            $array.push($(this).data('j2d'));\r\n        });\r\n\r\n        if (1 === $array.length) {\r\n            return $(this).data('j2d');\r\n        } else {\r\n            return $array;\r\n        }\r\n    };\r\n\r\n    var isFullScreen = function () {\r\n        return !!(document.webkitFullscreenElement\r\n            || document.webkitCurrentFullScreenElement\r\n            || document.mozFullScreenElement\r\n            || document.msFullscreenElement\r\n        );\r\n    };\r\n\r\n    $(document).on('fullscreenchange webkitfullscreenchange mozfullscreenchange MSFullscreenChange', function (e) {\r\n        var fullScreen = isFullScreen();\r\n        if (!fullScreen) {\r\n            $('div.canvas[guid].active').data('j2d').scene.resizeToFullPage(fullScreen);\r\n            $('div.canvas[guid]:not(.active)').toggle(!fullScreen);\r\n        }\r\n    });\r\n\r\n    $(document).on('click', 'div.canvas[guid].pause', function () {\r\n        $(this).data('j2d').resume();\r\n\r\n        var current = this;\r\n        $('div.canvas[guid]:not(.pause-disable):not(:focus)').each(function () {\r\n            if (current !== this) $(this).removeClass('active').data('j2d').pause();\r\n        });\r\n        $('div.canvas[guid].active.pause-disable:not(:focus)').each(function () {\r\n            if (current !== this) $(this).removeClass('active');\r\n        });\r\n    });\r\n\r\n    $(document).on('click touch mouseenter', 'div.canvas[guid]:not(.resume-by-click):not(:focus)', function (e) {\r\n        $(this).addClass('active').focus().data('j2d').resume();\r\n\r\n        var current = this;\r\n        $('div.canvas[guid]:not(.pause-disable):not(:focus)').each(function () {\r\n            if (current !== this) $(this).removeClass('active').data('j2d').pause();\r\n        });\r\n        $('div.canvas[guid].active.pause-disable:not(:focus)').each(function () {\r\n            if (current !== this) $(this).removeClass('active');\r\n        });\r\n    });\r\n\r\n    $(window).on('focus', function () {\r\n        $('div.canvas[guid].active').each(function () {\r\n            $(this).data('j2d').resume();\r\n        });\r\n    }).on('blur', function () {\r\n        $('div.canvas[guid]').each(function () {\r\n            $(this).data('j2d').pause();\r\n        });\r\n    });\r\n\r\n    $(window).on('resize', function () {\r\n        $('div.canvas[guid]').each(function () {\r\n            $(this).data('j2d').device.resize();\r\n        });\r\n        var fullScreen = isFullScreen();\r\n        if (fullScreen) {\r\n            $('div.canvas[guid].active').data('j2d').scene.resizeToFullPage(fullScreen);\r\n        }\r\n    });\r\n\r\n    FrameManager.pulse();\r\n};\r\n\r\nwindow.J2D = (window.J2D === undefined) ? J2D : undefined;\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\nimport $ from \"jquery\";\r\nimport Vector2dInteger from \"Vector2dInteger\";\r\n\r\n/**\r\n * Class utility for get system browser window size\r\n *\r\n * @implements {IDeviceUtil}\r\n */\r\nexport default class DeviceUtil {\r\n    constructor() {\r\n        this.width = parseInt($(document).width()) < parseInt(screen.width) ? parseInt($(document).width()) : parseInt(screen.width);\r\n        this.height = parseInt($(document).height()) < parseInt(screen.height) ? parseInt($(document).height()) : parseInt(screen.height);\r\n    }\r\n\r\n    resize() {\r\n        this.width = window.innerWidth;\r\n        this.height = window.innerHeight;\r\n    }\r\n\r\n    getWidth() {\r\n        return this.width;\r\n    }\r\n\r\n    getHeight() {\r\n        return this.height;\r\n    }\r\n\r\n    getSize() {\r\n        return new Vector2d(this.width, this.height);\r\n    }\r\n}\r\n\r\nif (window.J2D === undefined) window.DeviceUtil = DeviceUtil;\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n/**\r\n * @implements {IMathUtil}\r\n */\r\nexport default class MathUtil {\r\n    static number2Integer(number) {\r\n        return number >> 0;\r\n    }\r\n\r\n    static randomColor(min, max, opacity) {\r\n        return 'rgba('\r\n            + MathUtil.random(min, max) + ', '\r\n            + MathUtil.random(min, max) + ', '\r\n            + MathUtil.random(min, max) + ', '\r\n            + opacity + ')';\r\n    }\r\n\r\n    static random(min, max, omitZero) {\r\n        var random = (Math.floor(Math.random() * (max - min + 1) + min));\r\n        return (omitZero && random == 0)\r\n            ? MathUtil.random(min, max, omitZero)\r\n            : random;\r\n    }\r\n\r\n    static degree2Radian(degree) {\r\n        return degree * (Math.PI / 180);\r\n    }\r\n}\r\n\r\nif (window.J2D === undefined) window.MathUtil = MathUtil;\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\n/**\r\n * @implements {IVector2d}\r\n */\r\nexport default class Vector2d {\r\n    constructor(x, y) {\r\n        this.x = x + 0.0;\r\n        this.y = y + 0.0;\r\n    }\r\n\r\n    getX() {\r\n        return this.x;\r\n    }\r\n\r\n    getY() {\r\n        return this.y;\r\n    }\r\n\r\n    getCoordinates() {\r\n        return this;\r\n    }\r\n\r\n    toArray() {\r\n        return [this.x, this.y];\r\n    }\r\n\r\n    fromArray(array) {\r\n        this.x = array[0] + 0.0;\r\n        this.y = array[1] + 0.0;\r\n\r\n        return this;\r\n    }\r\n\r\n    toString() {\r\n        return \"(\" + this.x + \",\" + this.y + \")\";\r\n    }\r\n}\r\n\r\nif (window.J2D === undefined) window.Vector2d = Vector2d;\r\n","/**\r\n * J2D (jQuery Canvas Graphic Engine plugin)\r\n *\r\n * @authors DeVinterX, Skaner(j2Ds)\r\n * @license BSD\r\n * @version 0.2.0-dev\r\n */\r\n\r\nimport Vector2d from \"Vector2d\";\r\n\r\n/**\r\n * @implements {IVector2dInteger}\r\n */\r\nexport default class Vector2dInteger extends Vector2d {\r\n    constructor(x, y) {\r\n        super(x >> 0, y >> 0);\r\n    }\r\n\r\n    fromArray(array) {\r\n        this.x = array[0] >> 0;\r\n        this.y = array[1] >> 0;\r\n\r\n        return this\r\n    }\r\n}\r\n\r\nif (window.J2D === undefined) window.Vector2dInteger = Vector2dInteger;\r\n"],"sourceRoot":"/source/"}