{"version":3,"sources":["j2d.circle.js","j2d/j2d.circle.js"],"names":["root","factory","define","amd","J2D","BaseNode","Scene","global","prototype","addCircleNode","position","radius","color","CircleNode","this","parent","j2d","call","vector","v2f","nodeName","mergeOptions","Object","create","constructor","draw","context","layer","options","visible","isLookScene","alpha","tmpAlpha","globalAlpha","lineWidth","fillStyle","beginPath","arc","x","scene","viewport","y","Math","PI","stroke","fill","undefined"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CCFC,SAAUA,EAAMC,GACS,kBAAXC,SAAyBA,OAAOC,IACvCD,OAAO,cAAe,aAAc,WAAY,aAAcD,GAE9DA,EAAQD,EAAKI,IAAKJ,EAAKK,SAAUL,EAAKM,QAE5CC,OAAQ,SAAUH,EAAKC,EAAUC,GAC/B,YAEKA,GAAME,UAAUC,gBACjBH,EAAME,UAAUC,cAAgB,SAAUC,EAAUC,EAAQC,GACxD,MAAO,IAAIC,GAAWC,KAAKC,OAAQL,EAAUC,EAAQC,IAI7D,IAAIC,GAAa,SAAUG,EAAKN,EAAUC,EAAQC,GAC9CP,EAASY,KAAKH,KAAME,EAAKN,EAAUM,EAAIE,OAAOC,IAAa,EAATR,EAAqB,EAATA,IAC9DG,KAAKM,SAAW,aAChBN,KAAKO,cACDT,MAAOA,EACPD,OAAQA,IAkChB,OA9BAE,GAAWL,UAAYc,OAAOC,OAAOlB,EAASG,WAC9CK,EAAWL,UAAUgB,YAAcX,EAEnCA,EAAWL,UAAUiB,KAAO,WACxB,GAAIC,GAAUZ,KAAKa,MAAMD,OACzB,IAAIZ,KAAKc,QAAQC,SAAWf,KAAKgB,cAAe,CAC5C,GAA0B,GAAtBhB,KAAKc,QAAQG,MAAY,CACzB,GAAIC,GAAWN,EAAQO,WACvBP,GAAQO,YAAcnB,KAAKc,QAAQG,MAEvCL,EAAQQ,UAAY,EACpBR,EAAQS,UAAYrB,KAAKc,QAAQhB,MAEjCc,EAAQU,YACRV,EAAQW,IACJvB,KAAKc,QAAQlB,SAAS4B,EAAIxB,KAAKE,IAAIuB,MAAMC,SAASF,EAAIxB,KAAKc,QAAQjB,OACnEG,KAAKc,QAAQlB,SAAS+B,EAAI3B,KAAKE,IAAIuB,MAAMC,SAASC,EAAI3B,KAAKc,QAAQjB,OACnEG,KAAKc,QAAQjB,OAAQ,EAAG,EAAI+B,KAAKC,IACjC,GAEJjB,EAAQkB,SACRlB,EAAQmB,OAEkB,GAAtB/B,KAAKc,QAAQG,QACbL,EAAQO,YAAcD,KAKfc,SAAfvC,OAAOH,MAAmBG,OAAOM,WAAaA,GAC3CA","file":"j2d/j2d.circle.js","sourcesContent":[null,"/**\r\n * J2D (jQuery plugin of the fork j2ds)\r\n *\r\n * @authors Skaner, likerRr, DeVinterX\r\n * @license zlib\r\n * @version 0.1.8\r\n * @see https://github.com/SkanerSoft/J2ds/commit/fa7474a338f040ecdf439390ab69f9e4b7052f4d\r\n */\r\n\r\n!function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('j2d.circle', ['jquery.j2d', 'j2d.base', 'j2d.scene'], factory);\r\n    } else {\r\n        factory(root.J2D, root.BaseNode, root.Scene);\r\n    }\r\n}(global, function (J2D, BaseNode, Scene) {\r\n    \"use strict\";\r\n\r\n    if (!Scene.prototype.addCircleNode) {\r\n        Scene.prototype.addCircleNode = function (position, radius, color) {\r\n            return new CircleNode(this.parent, position, radius, color);\r\n        };\r\n    }\r\n\r\n    var CircleNode = function (j2d, position, radius, color) {\r\n        BaseNode.call(this, j2d, position, j2d.vector.v2f(radius * 2, radius * 2));\r\n        this.nodeName = 'CircleNode';\r\n        this.mergeOptions({\r\n            color: color,\r\n            radius: radius\r\n        });\r\n    };\r\n\r\n    CircleNode.prototype = Object.create(BaseNode.prototype);\r\n    CircleNode.prototype.constructor = CircleNode;\r\n\r\n    CircleNode.prototype.draw = function () {\r\n        var context = this.layer.context;\r\n        if (this.options.visible && this.isLookScene()) {\r\n            if (this.options.alpha != 1) {\r\n                var tmpAlpha = context.globalAlpha;\r\n                context.globalAlpha = this.options.alpha;\r\n            }\r\n            context.lineWidth = 0;\r\n            context.fillStyle = this.options.color;\r\n\r\n            context.beginPath();\r\n            context.arc(\r\n                this.options.position.x - this.j2d.scene.viewport.x + this.options.radius,\r\n                this.options.position.y - this.j2d.scene.viewport.y + this.options.radius,\r\n                this.options.radius, 0, 2 * Math.PI,\r\n                true\r\n            );\r\n            context.stroke();\r\n            context.fill();\r\n\r\n            if (this.options.alpha != 1) {\r\n                context.globalAlpha = tmpAlpha;\r\n            }\r\n        }\r\n    };\r\n\r\n    if (global.J2D !== undefined) global.CircleNode = CircleNode;\r\n    return CircleNode;\r\n});\r\n"],"sourceRoot":"/source/"}