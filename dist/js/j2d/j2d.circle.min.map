{"version":3,"sources":["j2d/j2d.circle.js"],"names":["define","J2D","BaseNode","Scene","prototype","addCircleNode","position","radius","color","CircleNode","this","parent","j2d","call","vector","vec2df","nodeName","mergeOptions","Object","create","constructor","draw","context","layer","options","visible","isLookScene","alpha","tmpAlpha","globalAlpha","lineWidth","fillStyle","beginPath","arc","x","scene","viewport","y","Math","PI","stroke","fill"],"mappings":"AASAA,OAAO,cACH,aACA,WACA,aACD,SAAUC,EAAKC,EAAUC,GACxB,YAEKA,GAAMC,UAAUC,gBACjBF,EAAMC,UAAUC,cAAgB,SAAUC,EAAUC,EAAQC,GACxD,MAAO,IAAIC,GAAWC,KAAKC,OAAQL,EAAUC,EAAQC,IAI7D,IAAIC,GAAa,SAAUG,EAAKN,EAAUC,EAAQC,GAC9CN,EAASW,KAAKH,KAAME,EAAKN,EAAUM,EAAIE,OAAOC,OAAgB,EAATR,EAAqB,EAATA,IACjEG,KAAKM,SAAW,aAChBN,KAAKO,cACDT,MAAOA,EACPD,OAAQA,IAiChB,OA7BAE,GAAWL,UAAYc,OAAOC,OAAOjB,EAASE,WAC9CK,EAAWL,UAAUgB,YAAcX,EAEnCA,EAAWL,UAAUiB,KAAO,WACxB,GAAIC,GAAUZ,KAAKa,MAAMD,OACzB,IAAIZ,KAAKc,QAAQC,SAAWf,KAAKgB,cAAe,CAC5C,GAA0B,GAAtBhB,KAAKc,QAAQG,MAAY,CACzB,GAAIC,GAAWN,EAAQO,WACvBP,GAAQO,YAAcnB,KAAKc,QAAQG,MAEvCL,EAAQQ,UAAY,EACpBR,EAAQS,UAAYrB,KAAKc,QAAQhB,MAEjCc,EAAQU,YACRV,EAAQW,IACJvB,KAAKc,QAAQlB,SAAS4B,EAAIxB,KAAKE,IAAIuB,MAAMC,SAASF,EAAIxB,KAAKc,QAAQjB,OACnEG,KAAKc,QAAQlB,SAAS+B,EAAI3B,KAAKE,IAAIuB,MAAMC,SAASC,EAAI3B,KAAKc,QAAQjB,OACnEG,KAAKc,QAAQjB,OAAQ,EAAG,EAAI+B,KAAKC,IACjC,GAEJjB,EAAQkB,SACRlB,EAAQmB,OAEkB,GAAtB/B,KAAKc,QAAQG,QACbL,EAAQO,YAAcD,KAK3BnB","file":"j2d/j2d.circle.min","sourcesContent":["/**\r\n * J2D (jQuery plugin of the fork j2ds)\r\n *\r\n * @authors Skaner, likerRr, DeVinterX\r\n * @license zlib\r\n * @version 0.1.5a\r\n * @see https://github.com/SkanerSoft/J2ds/commit/501b8993fc41960794572dc481a5f2fe492da349\r\n */\r\n\r\ndefine('j2d.circle', [\r\n    'jquery.j2d',\r\n    'j2d.base',\r\n    'j2d.scene'\r\n], function (J2D, BaseNode, Scene) {\r\n    \"use strict\";\r\n\r\n    if (!Scene.prototype.addCircleNode) {\r\n        Scene.prototype.addCircleNode = function (position, radius, color) {\r\n            return new CircleNode(this.parent, position, radius, color);\r\n        };\r\n    }\r\n\r\n    var CircleNode = function (j2d, position, radius, color) {\r\n        BaseNode.call(this, j2d, position, j2d.vector.vec2df(radius * 2, radius * 2));\r\n        this.nodeName = 'CircleNode';\r\n        this.mergeOptions({\r\n            color: color,\r\n            radius: radius\r\n        });\r\n    };\r\n\r\n    CircleNode.prototype = Object.create(BaseNode.prototype);\r\n    CircleNode.prototype.constructor = CircleNode;\r\n\r\n    CircleNode.prototype.draw = function () {\r\n        var context = this.layer.context;\r\n        if (this.options.visible && this.isLookScene()) {\r\n            if (this.options.alpha != 1) {\r\n                var tmpAlpha = context.globalAlpha;\r\n                context.globalAlpha = this.options.alpha;\r\n            }\r\n            context.lineWidth = 0;\r\n            context.fillStyle = this.options.color;\r\n\r\n            context.beginPath();\r\n            context.arc(\r\n                this.options.position.x - this.j2d.scene.viewport.x + this.options.radius,\r\n                this.options.position.y - this.j2d.scene.viewport.y + this.options.radius,\r\n                this.options.radius, 0, 2 * Math.PI,\r\n                true\r\n            );\r\n            context.stroke();\r\n            context.fill();\r\n\r\n            if (this.options.alpha != 1) {\r\n                context.globalAlpha = tmpAlpha;\r\n            }\r\n        }\r\n    };\r\n\r\n    return CircleNode;\r\n});\r\n"],"sourceRoot":"/source/"}