{"version":3,"sources":["j2d.base.js","j2d/j2d.base.js"],"names":["root","factory","define","amd","J2D","Scene","global","prototype","addBaseNode","position","size","BaseNode","this","parent","j2d","nodeName","layer","scene","options","visible","alpha","angle","box","offset","x","y","mergeOptions","data","undefined","i","hasOwnProperty","constructor","Object","e","saveJSON","JSON","stringify","node","loadJSON","json","parse","resizeBox","setLayer","layers","getLayer","setVisible","isVisible","setAlpha","getAlpha","moveTo","to","t","move","vector","vec2df","getPosition","setPosition","Math","ceil","setSize","getSize","setParent","id","getDistance","sqrt","pow","getDistanceXY","abs","isIntersect","pos","x1","x2","y1","y2","isCollision","result","isLookScene","yes","viewport","width","height","turn","setRotation","getRotation","isOutScene","all","moveDir","speed","cos","math","rad","sin","drawBox","context","save","translate","rotate","lineWidth","strokeStyle","lineCap","beginPath","rect","stroke","restore"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CCFC,SAAUA,EAAMC,GACS,kBAAXC,SAAyBA,OAAOC,IACvCD,OAAO,YAAa,aAAc,aAAcD,GAEhDA,EAAQD,EAAKI,IAAKJ,EAAKK,QAE7BC,OAAQ,SAAUF,EAAKC,GACrB,YAEKA,GAAME,UAAUC,cACjBH,EAAME,UAAUC,YAAc,SAAUC,EAAUC,GAC9C,MAAO,IAAIC,GAASC,KAAKC,OAAQJ,EAAUC,IAInD,IAAIC,GAAW,SAAUG,EAAKL,EAAUC,GACpCE,KAAKG,SAAW,WAChBH,KAAKE,IAAMA,EACXF,KAAKI,MAAQF,EAAIG,MAEjBL,KAAKM,SACDC,SAAS,EACTC,MAAO,EACPX,SAAUA,EACVC,KAAMA,EACNG,QAAQ,EACRQ,MAAO,EACPC,KACIC,QACIC,EAAG,EACHC,EAAG,GAEPf,MACIc,EAAG,EACHC,EAAG,KAsPnB,OAhPAd,GAASJ,UAAUmB,aAAe,SAAUC,EAAMT,GAC9BU,SAAZV,IAAuBA,EAAUN,KAAKM,QAC1C,KAAK,GAAIW,KAAKF,GACV,GAAIA,EAAKG,eAAeD,GACpB,IACQF,EAAKE,GAAGE,aAAeC,OACvBd,EAAQW,GAAKjB,KAAKc,aAAaC,EAAKE,GAAIX,EAAQW,IAC7CX,EAAQW,GAAKF,EAAKE,GAC3B,MAAOI,GACLf,EAAQW,GAAKF,EAAKE,GAI9B,MAAOX,IAGXP,EAASJ,UAAU2B,SAAW,WAC1B,MAAOC,MAAKC,WACRC,KAAMzB,KAAKG,SACXY,KAAMf,KAAKM,WAInBP,EAASJ,UAAU+B,SAAW,SAAUC,GAEpC,GADAA,EAAOJ,KAAKK,MAAMD,GACd3B,KAAKG,WAAawB,EAAKF,KACvB,MAAOzB,MAAKc,aAAaa,EAAKZ,KAElC,MAAM,uCAGVhB,EAASJ,UAAUkC,UAAY,SAAUlB,EAAQb,GAC7CE,KAAKM,QAAQI,IAAIC,OAASA,EAC1BX,KAAKM,QAAQI,IAAIZ,KAAOA,GAG5BC,EAASJ,UAAUmC,SAAW,SAAU1B,GACpCJ,KAAKI,MAAQA,EAAQJ,KAAKE,IAAI6B,OAAOC,SAAS5B,GAASJ,KAAKE,IAAIG,OAGpEN,EAASJ,UAAUqC,SAAW,WAC1B,MAAOhC,MAAKI,OAGhBL,EAASJ,UAAUsC,WAAa,SAAU1B,GACtCP,KAAKM,QAAQC,QAAUA,GAG3BR,EAASJ,UAAUuC,UAAY,WAC3B,MAAOlC,MAAKM,QAAQC,SAGxBR,EAASJ,UAAUwC,SAAW,SAAU3B,GACxB,EAARA,IAAWA,EAAQ,GACnBA,EAAQ,IAAGA,EAAQ,GACvBR,KAAKM,QAAQE,MAAQA,GAGzBT,EAASJ,UAAUyC,SAAW,SAAU5B,GACpC,MAAOR,MAAKM,QAAQE,OAGxBT,EAASJ,UAAU0C,OAAS,SAAUC,EAAIC,GACtCA,EAAIA,EAAIA,EAAI,EACZvC,KAAKwC,KAAKxC,KAAKE,IAAIuC,OAAOC,QACpBJ,EAAG1B,EAAIZ,KAAK2C,cAAc/B,GAAK2B,GAC/BD,EAAGzB,EAAIb,KAAK2C,cAAc9B,GAAK0B,KAIzCxC,EAASJ,UAAUiD,YAAc,SAAU/C,GACvC,MAAiBmB,UAAbnB,EAMOG,KAAKM,QAAQT,cALpBG,KAAKM,QAAQT,SAAWG,KAAKE,IAAIuC,OAAOC,OACpC7C,EAASe,EAAIiC,KAAKC,KAAK9C,KAAKM,QAAQR,KAAKc,EAAI,GAC7Cf,EAASgB,EAAIgC,KAAKC,KAAK9C,KAAKM,QAAQR,KAAKe,EAAI,MAOzDd,EAASJ,UAAU6C,KAAO,SAAU3C,GAChCG,KAAKM,QAAQT,SAASe,GAAKf,EAASe,EACpCZ,KAAKM,QAAQT,SAASgB,GAAKhB,EAASgB,GAGxCd,EAASJ,UAAUgD,YAAc,WAC7B,MAAO3C,MAAKE,IAAIuC,OAAOC,OACnB1C,KAAKM,QAAQT,SAASe,EAAIiC,KAAKC,KAAK9C,KAAKM,QAAQR,KAAKc,EAAI,GAC1DZ,KAAKM,QAAQT,SAASgB,EAAIgC,KAAKC,KAAK9C,KAAKM,QAAQR,KAAKe,EAAI,KAIlEd,EAASJ,UAAUoD,QAAU,SAAUjD,GACnC,MAAakB,UAATlB,EAGOE,KAAKM,QAAQR,UAFpBE,KAAKM,QAAQR,KAAOA,IAO5BC,EAASJ,UAAUqD,QAAU,WACzB,MAAOhD,MAAKM,QAAQR,MAGxBC,EAASJ,UAAUsD,UAAY,SAAUC,GACrClD,KAAKC,OAASiD,GAGlBnD,EAASJ,UAAUwD,YAAc,SAAUD,GACvC,MAAOL,MAAKC,KAAKD,KAAKO,KACdP,KAAKQ,IAAIH,EAAGP,cAAc/B,EAAIZ,KAAK2C,cAAc/B,EAAG,GACpDiC,KAAKQ,IAAIH,EAAGP,cAAc9B,EAAIb,KAAK2C,cAAc9B,EAAG,MAKhEd,EAASJ,UAAU2D,cAAgB,SAAUJ,GACzC,MAAOlD,MAAKE,IAAIuC,OAAOC,OACnBG,KAAKU,IAAIL,EAAGP,cAAc/B,EAAIZ,KAAK2C,cAAc/B,GACjDiC,KAAKU,IAAIL,EAAGP,cAAc9B,EAAIb,KAAK2C,cAAc9B,KAIzDd,EAASJ,UAAU6D,YAAc,SAAUN,GACvC,GAAIO,IACAC,GAAI1D,KAAKM,QAAQT,SAASe,EAAIZ,KAAKM,QAAQI,IAAIC,OAAOC,EACtD+C,GAAIT,EAAG5C,QAAQT,SAASe,EAAIsC,EAAG5C,QAAQI,IAAIC,OAAOC,EAClDgD,GAAI5D,KAAKM,QAAQT,SAASgB,EAAIb,KAAKM,QAAQI,IAAIC,OAAOE,EACtDgD,GAAIX,EAAG5C,QAAQT,SAASgB,EAAIqC,EAAG5C,QAAQI,IAAIC,OAAOE,GAGlDf,GACA4D,GAAI1D,KAAKM,QAAQR,KAAKc,EAAIZ,KAAKM,QAAQI,IAAIZ,KAAKc,EAChD+C,GAAIT,EAAG5C,QAAQR,KAAKc,EAAIsC,EAAG5C,QAAQI,IAAIZ,KAAKc,EAC5CgD,GAAI5D,KAAKM,QAAQR,KAAKe,EAAIb,KAAKM,QAAQI,IAAIZ,KAAKe,EAChDgD,GAAIX,EAAG5C,QAAQR,KAAKe,EAAIqC,EAAG5C,QAAQI,IAAIZ,KAAKe,EAGhD,OACK4C,GAAIG,GAAK9D,EAAK8D,IAAMH,EAAII,IACxBJ,EAAIC,GAAK5D,EAAK4D,IAAMD,EAAIE,IAExBF,EAAIC,GAAKD,EAAIE,GAAK7D,EAAK6D,IACvBF,EAAIG,GAAKH,EAAII,GAAK/D,EAAK+D,IAIhC9D,EAASJ,UAAUmE,YAAc,SAAUZ,GACvC,GAAIa,IAAS,CAOb,OALK/D,MAAKsD,cAAcJ,GAAItC,EAAKZ,KAAKM,QAAQR,KAAKc,EAAI,EAAIsC,EAAG5C,QAAQR,KAAKc,EAAI,GAC1EZ,KAAKsD,cAAcJ,GAAIrC,EAAKb,KAAKM,QAAQR,KAAKe,EAAI,EAAIqC,EAAG5C,QAAQR,KAAKe,EAAI,IAE3EkD,GAAS,GAENA,GAGXhE,EAASJ,UAAUqE,YAAc,WAC7B,GAAIC,IAAM,CASV,QAPKjE,KAAKM,QAAQT,SAASe,EAAIZ,KAAKE,IAAIG,MAAM6D,SAAStD,EAAIZ,KAAKE,IAAIG,MAAM8D,OACtEnE,KAAKM,QAAQT,SAASe,EAAIZ,KAAKM,QAAQR,KAAKc,EAAIZ,KAAKE,IAAIG,MAAM6D,SAAStD,GACvEZ,KAAKM,QAAQT,SAASgB,EAAIb,KAAKE,IAAIG,MAAM6D,SAASrD,EAAIb,KAAKE,IAAIG,MAAM+D,QACtEpE,KAAKM,QAAQT,SAASgB,EAAIb,KAAKM,QAAQR,KAAKe,EAAIb,KAAKE,IAAIG,MAAM6D,SAASrD,KAExEoD,GAAM,GAEHA,GAGXlE,EAASJ,UAAU0E,KAAO,SAAU5D,GAChCT,KAAKM,QAAQG,MAAST,KAAKM,QAAQG,MAAQ,IAC3CT,KAAKM,QAAQG,OAASA,GAG1BV,EAASJ,UAAU2E,YAAc,SAAU7D,GACvCT,KAAKM,QAAQG,MAAQA,EAAQ,KAGjCV,EAASJ,UAAU4E,YAAc,SAAU9D,GACvC,MAAOT,MAAKM,QAAQG,OAGxBV,EAASJ,UAAU6E,WAAa,WAC5B,OACI5D,EAAIZ,KAAKM,QAAQT,SAASe,EAAIZ,KAAKM,QAAQR,KAAKc,GAAKZ,KAAKE,IAAIG,MAAM6D,SAAStD,EAAIZ,KAAKE,IAAIG,MAAM8D,MAC1F,EAAMnE,KAAKM,QAAQT,SAASe,GAAKZ,KAAKE,IAAIG,MAAM6D,SAAStD,EAAK,GAAK,EACzEC,EAAIb,KAAKM,QAAQT,SAASgB,EAAIb,KAAKM,QAAQR,KAAKe,GAAKb,KAAKE,IAAIG,MAAM6D,SAASrD,EAAIb,KAAKE,IAAIG,MAAM+D,OAC1F,EAAMpE,KAAKM,QAAQT,SAASgB,GAAKb,KAAKE,IAAIG,MAAM6D,SAASrD,EAAK,GAAK,EACzE4D,IAAMzE,KAAKY,GAAKZ,KAAKa,IAI7Bd,EAASJ,UAAU+E,QAAU,SAAUC,GACnC3E,KAAKM,QAAQT,SAASe,GAAK+D,EAAS9B,KAAK+B,IAAI5E,KAAKE,IAAI2E,KAAKC,IAAI9E,KAAKM,QAAQG,QAC5ET,KAAKM,QAAQT,SAASgB,GAAK8D,EAAS9B,KAAKkC,IAAI/E,KAAKE,IAAI2E,KAAKC,IAAI9E,KAAKM,QAAQG,SAGhFV,EAASJ,UAAUqF,QAAU,WACzB,GAAIC,GAAUjF,KAAKI,MAAM6E,OAErBjF,MAAKM,QAAQG,QACbwE,EAAQC,OACRD,EAAQE,UAAUnF,KAAK2C,cAAc/B,EAAIZ,KAAKE,IAAIG,MAAM6D,SAAStD,EAAGZ,KAAK2C,cAAc9B,EAAIb,KAAKE,IAAIG,MAAM6D,SAASrD,GACnHoE,EAAQG,OAAOpF,KAAKE,IAAI2E,KAAKC,IAAI9E,KAAKM,QAAQG,QAC9CwE,EAAQE,YAAYnF,KAAK2C,cAAc/B,EAAIZ,KAAKE,IAAIG,MAAM6D,SAAStD,KAAMZ,KAAK2C,cAAc9B,EAAIb,KAAKE,IAAIG,MAAM6D,SAASrD,KAG5HoE,EAAQI,UAAY,EACpBJ,EAAQK,YAAc,QACtBL,EAAQM,QAAU,QAClBN,EAAQO,YAERP,EAAQQ,KACJzF,KAAKM,QAAQT,SAASe,EAAIZ,KAAKE,IAAIG,MAAM6D,SAAStD,EAClDZ,KAAKM,QAAQT,SAASgB,EAAIb,KAAKE,IAAIG,MAAM6D,SAASrD,EAClDb,KAAKM,QAAQR,KAAKc,EAAGZ,KAAKM,QAAQR,KAAKe,GAC3CoE,EAAQS,SAERT,EAAQK,YAAc,SAEtBL,EAAQO,YACRP,EAAQQ,KACJzF,KAAKM,QAAQI,IAAIC,OAAOC,EAAIZ,KAAKM,QAAQT,SAASe,EAAIZ,KAAKE,IAAIG,MAAM6D,SAAStD,EAC9EZ,KAAKM,QAAQI,IAAIC,OAAOE,EAAIb,KAAKM,QAAQT,SAASgB,EAAIb,KAAKE,IAAIG,MAAM6D,SAASrD,EAC9Eb,KAAKM,QAAQI,IAAIZ,KAAKc,EAAIZ,KAAKM,QAAQR,KAAKc,EAC5CZ,KAAKM,QAAQI,IAAIZ,KAAKe,EAAIb,KAAKM,QAAQR,KAAKe,GAEhDoE,EAAQS,SAERT,EAAQM,QAAU,OACdvF,KAAKM,QAAQG,OACbwE,EAAQU,WAIG3E,SAAftB,OAAOF,MAAmBE,OAAOK,SAAWA,GACzCA","file":"j2d/j2d.base.js","sourcesContent":[null,"/**\r\n * J2D (jQuery plugin of the fork j2ds)\r\n *\r\n * @authors Skaner, likerRr, DeVinterX\r\n * @license zlib\r\n * @version 0.1.6\r\n * @see https://github.com/SkanerSoft/J2ds/commit/be23ec0c5eb07270f087aebcb1de56c50b8a0343\r\n */\r\n\r\n!function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('j2d.base', ['jquery.j2d', 'j2d.scene'], factory);\r\n    } else {\r\n        factory(root.J2D, root.Scene);\r\n    }\r\n}(global, function (J2D, Scene) {\r\n    \"use strict\";\r\n\r\n    if (!Scene.prototype.addBaseNode) {\r\n        Scene.prototype.addBaseNode = function (position, size) {\r\n            return new BaseNode(this.parent, position, size);\r\n        };\r\n    }\r\n\r\n    var BaseNode = function (j2d, position, size) {\r\n        this.nodeName = 'BaseNode';\r\n        this.j2d = j2d;\r\n        this.layer = j2d.scene;\r\n\r\n        this.options = {\r\n            visible: true,\r\n            alpha: 1,\r\n            position: position,\r\n            size: size,\r\n            parent: false,\r\n            angle: 0,\r\n            box: {\r\n                offset: {\r\n                    x: 0,\r\n                    y: 0\r\n                },\r\n                size: {\r\n                    x: 0,\r\n                    y: 0\r\n                }\r\n            }\r\n        };\r\n    };\r\n\r\n    BaseNode.prototype.mergeOptions = function (data, options) {\r\n        if (options === undefined) options = this.options;\r\n        for (var i in data) {\r\n            if (data.hasOwnProperty(i)) {\r\n                try {\r\n                    if (data[i].constructor == Object) {\r\n                        options[i] = this.mergeOptions(data[i], options[i]);\r\n                    } else options[i] = data[i];\r\n                } catch (e) {\r\n                    options[i] = data[i];\r\n                }\r\n            }\r\n        }\r\n        return options;\r\n    };\r\n\r\n    BaseNode.prototype.saveJSON = function () {\r\n        return JSON.stringify({\r\n            node: this.nodeName,\r\n            data: this.options\r\n        });\r\n    };\r\n\r\n    BaseNode.prototype.loadJSON = function (json) {\r\n        json = JSON.parse(json);\r\n        if (this.nodeName === json.node) {\r\n            return this.mergeOptions(json.data);\r\n        }\r\n        throw 'Node type invalid to loadJSON data.';\r\n    };\r\n\r\n    BaseNode.prototype.resizeBox = function (offset, size) {\r\n        this.options.box.offset = offset;\r\n        this.options.box.size = size;\r\n    };\r\n\r\n    BaseNode.prototype.setLayer = function (layer) {\r\n        this.layer = layer ? this.j2d.layers.getLayer(layer) : this.j2d.scene;\r\n    };\r\n\r\n    BaseNode.prototype.getLayer = function () {\r\n        return this.layer;\r\n    };\r\n\r\n    BaseNode.prototype.setVisible = function (visible) {\r\n        this.options.visible = visible;\r\n    };\r\n\r\n    BaseNode.prototype.isVisible = function () {\r\n        return this.options.visible;\r\n    };\r\n\r\n    BaseNode.prototype.setAlpha = function (alpha) {\r\n        if (alpha < 0) alpha = 0;\r\n        if (alpha > 1) alpha = 1;\r\n        this.options.alpha = alpha;\r\n    };\r\n\r\n    BaseNode.prototype.getAlpha = function (alpha) {\r\n        return this.options.alpha;\r\n    };\r\n\r\n    BaseNode.prototype.moveTo = function (to, t) {\r\n        t = t ? t : 1;\r\n        this.move(this.j2d.vector.vec2df(\r\n            ((to.x - this.getPosition().x) / t),\r\n            ((to.y - this.getPosition().y) / t)\r\n        ));\r\n    };\r\n\r\n    BaseNode.prototype.setPosition = function (position) {\r\n        if (position !== undefined) {\r\n            this.options.position = this.j2d.vector.vec2df(\r\n                position.x - Math.ceil(this.options.size.x / 2),\r\n                position.y - Math.ceil(this.options.size.y / 2)\r\n            );\r\n        } else {\r\n            return this.options.position;\r\n        }\r\n    };\r\n\r\n    BaseNode.prototype.move = function (position) {\r\n        this.options.position.x += position.x;\r\n        this.options.position.y += position.y;\r\n    };\r\n\r\n    BaseNode.prototype.getPosition = function () {\r\n        return this.j2d.vector.vec2df(\r\n            this.options.position.x + Math.ceil(this.options.size.x / 2),\r\n            this.options.position.y + Math.ceil(this.options.size.y / 2)\r\n        );\r\n    };\r\n\r\n    BaseNode.prototype.setSize = function (size) {\r\n        if (size !== undefined) {\r\n            this.options.size = size;\r\n        } else {\r\n            return this.options.size;\r\n        }\r\n\r\n    };\r\n\r\n    BaseNode.prototype.getSize = function () {\r\n        return this.options.size;\r\n    };\r\n\r\n    BaseNode.prototype.setParent = function (id) {\r\n        this.parent = id;\r\n    };\r\n\r\n    BaseNode.prototype.getDistance = function (id) {\r\n        return Math.ceil(Math.sqrt(\r\n                Math.pow(id.getPosition().x - this.getPosition().x, 2) +\r\n                Math.pow(id.getPosition().y - this.getPosition().y, 2)\r\n            )\r\n        );\r\n    };\r\n\r\n    BaseNode.prototype.getDistanceXY = function (id) {\r\n        return this.j2d.vector.vec2df(\r\n            Math.abs(id.getPosition().x - this.getPosition().x),\r\n            Math.abs(id.getPosition().y - this.getPosition().y)\r\n        );\r\n    };\r\n\r\n    BaseNode.prototype.isIntersect = function (id) {\r\n        var pos = {\r\n            x1: this.options.position.x + this.options.box.offset.x,\r\n            x2: id.options.position.x + id.options.box.offset.x,\r\n            y1: this.options.position.y + this.options.box.offset.y,\r\n            y2: id.options.position.y + id.options.box.offset.y\r\n        };\r\n\r\n        var size = {\r\n            x1: this.options.size.x + this.options.box.size.x,\r\n            x2: id.options.size.x + id.options.box.size.x,\r\n            y1: this.options.size.y + this.options.box.size.y,\r\n            y2: id.options.size.y + id.options.box.size.y\r\n        };\r\n\r\n        return (\r\n            (pos.y1 + size.y1 >= pos.y2) &&\r\n            (pos.x1 + size.x1 >= pos.x2)\r\n            ) && (\r\n            (pos.x1 < pos.x2 + size.x2) &&\r\n            (pos.y1 < pos.y2 + size.y2)\r\n            );\r\n    };\r\n\r\n    BaseNode.prototype.isCollision = function (id) {\r\n        var result = false;\r\n        if (\r\n            (this.getDistanceXY(id).x < (this.options.size.x / 2 + id.options.size.x / 2)) &&\r\n            (this.getDistanceXY(id).y < (this.options.size.y / 2 + id.options.size.y / 2))\r\n        ) {\r\n            result = true;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    BaseNode.prototype.isLookScene = function () {\r\n        var yes = true;\r\n        if (\r\n            (this.options.position.x > this.j2d.scene.viewport.x + this.j2d.scene.width ||\r\n            this.options.position.x + this.options.size.x < this.j2d.scene.viewport.x) ||\r\n            (this.options.position.y > this.j2d.scene.viewport.y + this.j2d.scene.height ||\r\n            this.options.position.y + this.options.size.y < this.j2d.scene.viewport.y)\r\n        ) {\r\n            yes = false;\r\n        }\r\n        return yes;\r\n    };\r\n\r\n    BaseNode.prototype.turn = function (angle) {\r\n        this.options.angle = (this.options.angle % 360);\r\n        this.options.angle += angle;\r\n    };\r\n\r\n    BaseNode.prototype.setRotation = function (angle) {\r\n        this.options.angle = angle % 360;\r\n    };\r\n\r\n    BaseNode.prototype.getRotation = function (angle) {\r\n        return this.options.angle;\r\n    };\r\n\r\n    BaseNode.prototype.isOutScene = function () {\r\n        return {\r\n            x: (this.options.position.x + this.options.size.x >= this.j2d.scene.viewport.x + this.j2d.scene.width)\r\n                ? 1 : ((this.options.position.x <= this.j2d.scene.viewport.x) ? -1 : 0),\r\n            y: (this.options.position.y + this.options.size.y >= this.j2d.scene.viewport.y + this.j2d.scene.height)\r\n                ? 1 : ((this.options.position.y <= this.j2d.scene.viewport.y) ? -1 : 0),\r\n            all: (this.x || this.y)\r\n        };\r\n    };\r\n\r\n    BaseNode.prototype.moveDir = function (speed) {\r\n        this.options.position.x += speed * (Math.cos(this.j2d.math.rad(this.options.angle)));\r\n        this.options.position.y += speed * (Math.sin(this.j2d.math.rad(this.options.angle)));\r\n    };\r\n\r\n    BaseNode.prototype.drawBox = function () {\r\n        var context = this.layer.context;\r\n\r\n        if (this.options.angle) {\r\n            context.save();\r\n            context.translate(this.getPosition().x - this.j2d.scene.viewport.x, this.getPosition().y - this.j2d.scene.viewport.y);\r\n            context.rotate(this.j2d.math.rad(this.options.angle));\r\n            context.translate(-(this.getPosition().x - this.j2d.scene.viewport.x), -(this.getPosition().y - this.j2d.scene.viewport.y));\r\n        }\r\n\r\n        context.lineWidth = 2;\r\n        context.strokeStyle = 'black';\r\n        context.lineCap = 'round';\r\n        context.beginPath();\r\n\r\n        context.rect(\r\n            this.options.position.x - this.j2d.scene.viewport.x,\r\n            this.options.position.y - this.j2d.scene.viewport.y,\r\n            this.options.size.x, this.options.size.y);\r\n        context.stroke();\r\n\r\n        context.strokeStyle = 'yellow';\r\n\r\n        context.beginPath();\r\n        context.rect(\r\n            this.options.box.offset.x + this.options.position.x - this.j2d.scene.viewport.x,\r\n            this.options.box.offset.y + this.options.position.y - this.j2d.scene.viewport.y,\r\n            this.options.box.size.x + this.options.size.x,\r\n            this.options.box.size.y + this.options.size.y\r\n        );\r\n        context.stroke();\r\n\r\n        context.lineCap = 'butt';\r\n        if (this.options.angle) {\r\n            context.restore();\r\n        }\r\n    };\r\n\r\n    if (global.J2D !== undefined) global.BaseNode = BaseNode;\r\n    return BaseNode;\r\n});\r\n"],"sourceRoot":"/source/"}