{"version":3,"sources":["j2d/j2d.base.js"],"names":["define","J2D","prototype","scene","addBaseNode","pos","size","BaseNode","this","parent","j2d","visible","alpha","angle","layer","box","offset","x","y","resizeBox","setLayer","layers","getLayer","setVisible","isVisible","setAlpha","getAlpha","moveTo","to","t","move","vector","vec2df","getPosition","setPosition","Math","ceil","setSize","getSize","setParent","id","getDistance","sqrt","pow","getDistanceXY","abs","isIntersect","x1","x2","y1","y2","isCollision","result","isLookScene","yes","viewport","width","height","turn","setRotation","getRotation","isOutScene","o","all","moveDir","speed","cos","math","rad","sin","drawBox","context","save","translate","rotate","lineWidth","strokeStyle","beginPath","rect","stroke","restore"],"mappings":"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","file":"j2d/j2d.base.min","sourcesContent":["/**\r\n * J2D (jQuery plugin of the fork j2ds)\r\n *\r\n * @authors Skaner, likerRr, DeVinterX\r\n * @license zlib\r\n * @version 0.1.4\r\n * @see https://github.com/SkanerSoft/J2ds/commit/501b8993fc41960794572dc481a5f2fe492da349\r\n */\r\n\r\ndefine('j2d.base', [\r\n    'jquery.j2d'\r\n], function (J2D) {\r\n    \"use strict\";\r\n\r\n    if (!J2D.prototype.scene.addBaseNode) {\r\n        J2D.prototype.scene.addBaseNode = function (pos, size) {\r\n            return new BaseNode(this.parent, pos, size);\r\n        };\r\n    }\r\n\r\n    var BaseNode = function (j2d, pos, size) {\r\n        this.j2d = j2d;\r\n        this.visible = true;\r\n        this.alpha = 1;\r\n        this.pos = pos;\r\n        this.size = size;\r\n        this.parent = false;\r\n        this.angle = 0;\r\n        this.layer = j2d.scene;\r\n        this.box = {\r\n            offset: {x: 0, y: 0},\r\n            size: {x: 0, y: 0}\r\n        };\r\n    };\r\n\r\n    BaseNode.prototype.resizeBox = function (offset, size) {\r\n        this.box.offset = offset;\r\n        this.box.size = size;\r\n    };\r\n\r\n    BaseNode.prototype.setLayer = function (layer) {\r\n        this.layer = layer ? this.j2d.layers.getLayer(layer) : this.j2d.scene;\r\n    };\r\n\r\n    BaseNode.prototype.getLayer = function () {\r\n        return this.layer;\r\n    };\r\n\r\n    BaseNode.prototype.setVisible = function (visible) {\r\n        this.visible = visible;\r\n    };\r\n\r\n    BaseNode.prototype.isVisible = function () {\r\n        return this.visible;\r\n    };\r\n\r\n    BaseNode.prototype.setAlpha = function (alpha) {\r\n        if (alpha < 0) alpha = 0;\r\n        if (alpha > 1) alpha = 1;\r\n        this.alpha = alpha;\r\n    };\r\n\r\n    BaseNode.prototype.getAlpha = function (alpha) {\r\n        return this.alpha;\r\n    };\r\n\r\n    BaseNode.prototype.moveTo = function (to, t) {\r\n        t = t ? t : 1;\r\n        this.move(this.j2d.vector.vec2df(\r\n            ((to.x - this.getPosition().x) / t),\r\n            ((to.y - this.getPosition().y) / t)\r\n        ));\r\n    };\r\n\r\n    BaseNode.prototype.setPosition = function (pos) {\r\n        this.pos = this.j2d.vector.vec2df(pos.x - Math.ceil(this.size.x / 2), pos.y - Math.ceil(this.size.y / 2));\r\n    };\r\n\r\n    BaseNode.prototype.move = function (pos) {\r\n        this.pos.x += pos.x;\r\n        this.pos.y += pos.y;\r\n    };\r\n\r\n    BaseNode.prototype.getPosition = function () {\r\n        return this.j2d.vector.vec2df(this.pos.x + Math.ceil(this.size.x / 2), this.pos.y + Math.ceil(this.size.y / 2));\r\n    };\r\n\r\n    BaseNode.prototype.setSize = function (size) {\r\n        this.size = size;\r\n    };\r\n\r\n    BaseNode.prototype.getSize = function () {\r\n        return this.size;\r\n    };\r\n\r\n    BaseNode.prototype.setParent = function (id) {\r\n        this.parent = id;\r\n    };\r\n\r\n    BaseNode.prototype.getDistance = function (id) {\r\n        return Math.ceil(Math.sqrt(\r\n                Math.pow(id.getPosition().x - this.getPosition().x, 2) +\r\n                Math.pow(id.getPosition().y - this.getPosition().y, 2)\r\n            )\r\n        );\r\n    };\r\n\r\n    BaseNode.prototype.getDistanceXY = function (id) {\r\n        return this.j2d.vector.vec2df(Math.abs(id.getPosition().x - this.getPosition().x), Math.abs(id.getPosition().y - this.getPosition().y));\r\n    };\r\n\r\n    BaseNode.prototype.isIntersect = function (id) {\r\n        var pos = {\r\n            x1: this.pos.x + this.box.offset.x,\r\n            x2: id.pos.x + id.box.offset.x,\r\n            y1: this.pos.y + this.box.offset.y,\r\n            y2: id.pos.y + id.box.offset.y\r\n        };\r\n\r\n        var size = {\r\n            x1: this.size.x + this.box.size.x,\r\n            x2: id.size.x + id.box.size.x,\r\n            y1: this.size.y + this.box.size.y,\r\n            y2: id.size.y + id.box.size.y\r\n        };\r\n\r\n        return (\r\n            (pos.y1 + size.y1 >= pos.y2) &&\r\n            (pos.x1 + size.x1 >= pos.x2)\r\n            ) && (\r\n            (pos.x1 < pos.x2 + size.x2) &&\r\n            (pos.y1 < pos.y2 + size.y2)\r\n            );\r\n    };\r\n\r\n    BaseNode.prototype.isCollision = function (id) {\r\n        var result = false;\r\n        if (\r\n            (this.getDistanceXY(id).x < (this.size.x / 2 + id.size.x / 2)) &&\r\n            (this.getDistanceXY(id).y < (this.size.y / 2 + id.size.y / 2))\r\n        ) {\r\n            result = true;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    BaseNode.prototype.isLookScene = function () {\r\n        var yes = true;\r\n        if (\r\n            (this.pos.x > this.j2d.scene.viewport.x + this.j2d.scene.width ||\r\n            this.pos.x + this.size.x < this.j2d.scene.viewport.x) ||\r\n            (this.pos.y > this.j2d.scene.viewport.y + this.j2d.scene.height ||\r\n            this.pos.y + this.size.y < this.j2d.scene.viewport.y)\r\n        ) {\r\n            yes = false;\r\n        }\r\n        return yes;\r\n    };\r\n\r\n    BaseNode.prototype.turn = function (angle) {\r\n        this.angle = (this.angle % 360);\r\n        this.angle += angle;\r\n    };\r\n\r\n    BaseNode.prototype.setRotation = function (angle) {\r\n        this.angle = angle % 360;\r\n    };\r\n\r\n    BaseNode.prototype.getRotation = function (angle) {\r\n        return this.angle;\r\n    };\r\n\r\n    BaseNode.prototype.isOutScene = function () {\r\n        var o = {};\r\n\r\n        if (this.pos.x + this.size.x >= this.j2d.scene.viewport.x + this.j2d.scene.width) {\r\n            o.x = 1;\r\n        } else if (this.pos.x <= this.j2d.scene.viewport.x) {\r\n            o.x = -1;\r\n        } else {\r\n            o.x = 0;\r\n        }\r\n\r\n        if (this.pos.y + this.size.y >= this.j2d.scene.viewport.y + this.j2d.scene.height) {\r\n            o.y = 1;\r\n        } else if (this.pos.y <= this.j2d.scene.viewport.y) {\r\n            o.y = -1;\r\n        } else {\r\n            o.y = 0;\r\n        }\r\n\r\n        o.all = (o.x || o.y);\r\n\r\n        return o;\r\n    };\r\n\r\n    BaseNode.prototype.moveDir = function (speed) {\r\n        this.pos.x += speed * (Math.cos(this.j2d.math.rad(this.angle)));\r\n        this.pos.y += speed * (Math.sin(this.j2d.math.rad(this.angle)));\r\n    };\r\n\r\n    BaseNode.prototype.drawBox = function () {\r\n        var context = this.layer.context;\r\n\r\n        if (this.angle) {\r\n            context.save();\r\n            context.translate(this.getPosition().x - this.j2d.scene.viewport.x, this.getPosition().y - this.j2d.scene.viewport.y);\r\n            context.rotate(this.j2d.math.rad(this.angle));\r\n            context.translate(-(this.getPosition().x - this.j2d.scene.viewport.x), -(this.getPosition().y - this.j2d.scene.viewport.y));\r\n        }\r\n\r\n        context.lineWidth = 2;\r\n        context.strokeStyle = 'black';\r\n        context.beginPath();\r\n\r\n        context.rect(\r\n            this.pos.x - this.j2d.scene.viewport.x,\r\n            this.pos.y - this.j2d.scene.viewport.y,\r\n            this.size.x, this.size.y);\r\n        context.stroke();\r\n\r\n        context.strokeStyle = 'yellow';\r\n\r\n        context.beginPath();\r\n        context.rect(this.box.offset.x + this.pos.x - this.j2d.scene.viewport.x, this.box.offset.y + this.pos.y - this.j2d.scene.viewport.y,\r\n            this.box.size.x + this.size.x, this.box.size.y + this.size.y);\r\n        context.stroke();\r\n\r\n        if (this.angle) {\r\n            context.restore();\r\n        }\r\n    };\r\n\r\n    return BaseNode;\r\n});\r\n"],"sourceRoot":"/source/"}