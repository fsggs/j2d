{"version":3,"sources":["j2d/j2d.textures.js"],"names":["define","J2D","TextureManager","loadImageMap","createImageMap","templates","width","height","callback","imageObject","img","undefined","document","createElement","context","getContext","getAnimation","sourceX","sourceY","sourceW","sourceH","frameCount","imageMap","this","path","loaded","crossOrigin","src","onload","ellipsis","size","color","fillRect","fillStyle","x","y","strokeRect","lineWidth","strokeStyle","gradientL","colors","izHorizontal","gradient","createLinearGradient","step","length","i","j","addColorStop","gradientR","pos1","r1","pos2","r2","createRadialGradient","prototype","getTextureManager"],"mappings":"AASAA,OAAO,gBACH,aACA,YACD,SAAUC,GACT,YAEA,IAAIC,IACAC,cAAc,EACdC,gBAAgB,EAChBC,aA6GJ,OA1GAH,GAAeE,eAAiB,SAAUE,EAAOC,EAAQC,GACrD,GAAIC,IACAC,IAAKC,OACLL,MAAOA,EACPC,OAAQA,EAsBZ,OAnBAE,GAAYC,IAAME,SAASC,cAAc,UACzCJ,EAAYK,QAAUL,EAAYC,IAAIK,WAAW,MACjDN,EAAYC,IAAIJ,MAAQG,EAAYH,MACpCG,EAAYC,IAAIH,OAASE,EAAYF,OAErCC,EAASC,EAAYK,SAGrBL,EAAYO,aAAe,SAAUC,EAASC,EAASC,EAASC,EAASC,GACrE,OACIC,SAAUC,KACVN,QAASA,EACTC,QAASA,EACTC,QAASA,EACTC,QAASA,EACTC,WAAYA,EAAa,IAI1BZ,GAGXP,EAAeC,aAAe,SAAUqB,GACpC,GAAIf,IACAC,IAAKC,OACLL,MAAO,EACPC,OAAQ,EACRkB,QAAQ,EAyBZ,OAtBAhB,GAAYC,IAAME,SAASC,cAAc,OACzCJ,EAAYiB,YAAc,YAC1BjB,EAAYC,IAAIiB,IAAMH,EACtBf,EAAYC,IAAIkB,OAAS,WACrBnB,EAAYH,MAAQG,EAAYC,IAAIJ,MACpCG,EAAYF,OAASE,EAAYC,IAAIH,OACrCE,EAAYgB,QAAS,GAKzBhB,EAAYO,aAAe,SAAUC,EAASC,EAASC,EAASC,EAASC,GACrE,OACIC,SAAUC,KACVN,QAASA,EACTC,QAASA,EACTC,QAASA,EACTC,QAASA,EACTC,WAAYA,EAAa,IAI1BZ,GAKXP,EAAeG,UAAUwB,SAAW,SAAUf,EAASgB,EAAMC,KAI7D7B,EAAeG,UAAU2B,SAAW,SAAUlB,EAASgB,EAAMC,GACzDjB,EAAQmB,UAAYF,EACpBjB,EAAQkB,SAAS,EAAG,EAAGF,EAAKI,EAAGJ,EAAKK,IAGxCjC,EAAeG,UAAU+B,WAAa,SAAUtB,EAASgB,EAAMC,EAAOM,GAClEvB,EAAQwB,YAAcP,EACtBjB,EAAQuB,UAAYA,EACpBvB,EAAQsB,WAAW,EAAG,EAAGN,EAAKI,EAAGJ,EAAKK,IAG1CjC,EAAeG,UAAUkC,UAAY,SAAUzB,EAASgB,EAAMU,EAAQC,GAClE,GAAIC,GAAW5B,EAAQ6B,qBAAqB,EAAG,EAAGb,EAAKI,EAAG,GACtDU,EAAO,EAAIJ,EAAOK,MACjBJ,KACDC,EAAW5B,EAAQ6B,qBAAqB,EAAG,EAAG,EAAGb,EAAKK,GAE1D,KAAK,GAAIW,GAAIF,EAAO,EAAGG,EAAI,EAAGA,EAAIP,EAAOK,OAAQE,GAAK,EAAGD,GAAKF,EAC1DF,EAASM,aAAaF,EAAGN,EAAOO,GAEpCjC,GAAQmB,UAAYS,EACpB5B,EAAQkB,SAAS,EAAG,EAAGF,EAAKI,EAAGJ,EAAKK,IAGxCjC,EAAeG,UAAU4C,UAAY,SAAUnC,EAASgB,EAAMoB,EAAMC,EAAIC,EAAMC,EAAIb,GAG9E,IAAK,GAFDE,GAAW5B,EAAQwC,qBAAqBJ,EAAKhB,EAAGgB,EAAKf,EAAGgB,EAAIC,EAAKlB,EAAGkB,EAAKjB,EAAGkB,GAC5ET,EAAO,EAAIJ,EAAOK,OACbC,EAAIF,EAAO,EAAGG,EAAI,EAAGA,EAAIP,EAAOK,OAAQE,GAAK,EAAGD,GAAKF,EAC1DF,EAASM,aAAaF,EAAGN,EAAOO,GAEpCjC,GAAQmB,UAAYS,EACpB5B,EAAQkB,SAAS,EAAG,EAAGF,EAAKI,EAAGJ,EAAKK,IAGxClC,EAAIsD,UAAUC,kBAAoB,WAC9B,MAAOtD,IAGJA","file":"j2d/j2d.textures.min","sourcesContent":["/**\r\n * J2D (jQuery plugin of the fork j2ds)\r\n *\r\n * @authors Skaner, likerRr, DeVinterX\r\n * @license zlib\r\n * @version 0.1.4\r\n * @see https://github.com/SkanerSoft/J2ds/commit/501b8993fc41960794572dc481a5f2fe492da349\r\n */\r\n\r\ndefine('j2d.textures', [\r\n    'jquery.j2d',\r\n    'j2d.base'\r\n], function (J2D) {\r\n    \"use strict\";\r\n\r\n    var TextureManager = {\r\n        loadImageMap: false,   // загрузка из файла\r\n        createImageMap: false,    // создание анимации напрямую, минуя imageMap\r\n        templates: {}\r\n    };\r\n\r\n    TextureManager.createImageMap = function (width, height, callback) {\r\n        var imageObject = {\r\n            img: undefined,\r\n            width: width,\r\n            height: height\r\n        };\r\n\r\n        imageObject.img = document.createElement('canvas');\r\n        imageObject.context = imageObject.img.getContext('2d');\r\n        imageObject.img.width = imageObject.width;\r\n        imageObject.img.height = imageObject.height;\r\n\r\n        callback(imageObject.context);\r\n\r\n        /* Функции */\r\n        imageObject.getAnimation = function (sourceX, sourceY, sourceW, sourceH, frameCount) {\r\n            return {\r\n                imageMap: this,\r\n                sourceX: sourceX,\r\n                sourceY: sourceY,\r\n                sourceW: sourceW,\r\n                sourceH: sourceH,\r\n                frameCount: frameCount - 1\r\n            };\r\n        };\r\n\r\n        return imageObject;\r\n    };\r\n\r\n    TextureManager.loadImageMap = function (path) {\r\n        var imageObject = {\r\n            img: undefined,\r\n            width: 0,\r\n            height: 0,\r\n            loaded: false\r\n        };\r\n\r\n        imageObject.img = document.createElement('img');\r\n        imageObject.crossOrigin = 'anonymous';\r\n        imageObject.img.src = path;\r\n        imageObject.img.onload = function () {\r\n            imageObject.width = imageObject.img.width;\r\n            imageObject.height = imageObject.img.height;\r\n            imageObject.loaded = true;\r\n        };\r\n        /* Свойства */\r\n\r\n        /* Функции */\r\n        imageObject.getAnimation = function (sourceX, sourceY, sourceW, sourceH, frameCount) {\r\n            return {\r\n                imageMap: this,\r\n                sourceX: sourceX,\r\n                sourceY: sourceY,\r\n                sourceW: sourceW,\r\n                sourceH: sourceH,\r\n                frameCount: frameCount - 1\r\n            };\r\n        };\r\n\r\n        return imageObject;\r\n    };\r\n\r\n    /*----------- шаблоны текстур -------------*/\r\n\r\n    TextureManager.templates.ellipsis = function (context, size, color) {\r\n\r\n    };\r\n\r\n    TextureManager.templates.fillRect = function (context, size, color) {\r\n        context.fillStyle = color;\r\n        context.fillRect(0, 0, size.x, size.y);\r\n    };\r\n\r\n    TextureManager.templates.strokeRect = function (context, size, color, lineWidth) {\r\n        context.strokeStyle = color;\r\n        context.lineWidth = lineWidth;\r\n        context.strokeRect(0, 0, size.x, size.y);\r\n    };\r\n\r\n    TextureManager.templates.gradientL = function (context, size, colors, izHorizontal) {\r\n        var gradient = context.createLinearGradient(0, 0, size.x, 0);\r\n        var step = 1 / colors.length;\r\n        if (!izHorizontal) {\r\n            gradient = context.createLinearGradient(0, 0, 0, size.y);\r\n        }\r\n        for (var i = step / 2, j = 0; j < colors.length; j += 1, i += step) {\r\n            gradient.addColorStop(i, colors[j]);\r\n        }\r\n        context.fillStyle = gradient;\r\n        context.fillRect(0, 0, size.x, size.y);\r\n    };\r\n\r\n    TextureManager.templates.gradientR = function (context, size, pos1, r1, pos2, r2, colors) {\r\n        var gradient = context.createRadialGradient(pos1.x, pos1.y, r1, pos2.x, pos2.y, r2);\r\n        var step = 1 / colors.length;\r\n        for (var i = step / 2, j = 0; j < colors.length; j += 1, i += step) {\r\n            gradient.addColorStop(i, colors[j]);\r\n        }\r\n        context.fillStyle = gradient;\r\n        context.fillRect(0, 0, size.x, size.y);\r\n    };\r\n\r\n    J2D.prototype.getTextureManager = function () {\r\n        return TextureManager;\r\n    };\r\n\r\n    return TextureManager;\r\n});\r\n"],"sourceRoot":"/source/"}