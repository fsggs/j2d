{"version":3,"sources":["j2d.webGL2d.js","j2d/j2d.webGL2d.js"],"names":["root","factory","define","amd","global","isPOT","value","Transform","mat","this","clearStack","mat3","identity","multiply","m1","m2","m10","m11","m12","m13","m14","m15","m16","m17","m18","m20","m21","m22","m23","m24","m25","m26","m27","m28","vec2_multiply","mOut","transpose","m","STACK_DEPTH_LIMIT","prototype","init_mat","m_stack","m_cache","c_stack","valid","result","i","getIdentity","undefined","setIdentity","getResult","pushMatrix","popMatrix","translateMatrix","translate","x","y","trMatrix","tr","a","b","c","d","e","f","scaleMatrix","scale","rotateMatrix","rotate","ang","sAng","cAng","Math","sin","cos","WebGL2D","canvas","options","gl","fs","vs","shaderProgram","transform","shaderPool","maxTextureSize","gl2d","$getContext","getContext","context","force","width","height","initShaders","initBuffers","initCanvas2DAPI","enable","BLEND","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","getParameter","MAX_TEXTURE_SIZE","postInit","shaderMask","texture","crop","path","getFragmentShaderSource","sMask","fsSource","join","getVertexShaderSource","stackDepth","vsSource","transformStackDepth","storedShader","useProgram","createShader","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","VERTEX_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","vertexPositionAttribute","getAttribLocation","enableVertexAttribArray","uColor","getUniformLocation","uSampler","uCropSource","pMatrix","uTransforms","uniformMatrix4fv","viewport","rectVerts","Float32Array","rectVertexPositionBuffer","createBuffer","rectVertexColorBuffer","pathVertexPositionBuffer","pathVertexColorBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","instances","push","hue2rgb","p","q","t","HSLAToRGBA","h","s","l","r","g","colorStringToVec4","match","channel","isPercent","hasAlpha","alphaChannel","sameType","reRGBAColor","exec","parseFloat","isNaN","reHSLAColor","reHex6Color","colorInt","parseInt","reHex3Color","hexString","toLowerCase","colorKeywords","colorVecToString","vec4","saveDrawState","bakedDrawState","fillStyle","drawState","strokeStyle","globalAlpha","globalCompositeOperation","lineCap","lineJoin","lineWidth","miterLimit","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","textAlign","font","textBaseline","imageSmoothingEnabled","drawStateStack","restoreDrawState","length","pop","sendTransformStack","sp","stack","maxI","uniformMatrix3fv","SubPath","closed","verts","fillSubPath","index","subPath","subPaths","vertexAttribPointer","FLOAT","uniform4f","drawArrays","TRIANGLE_FAN","strokeSubPath","LINE_LOOP","LINE_STRIP","Texture","image","obj","createTexture","textureCache","imageCache","document","createElement","ctx","drawImage","GL_FUNCTION","LINEAR","GL_MIPMAP_FUNCTION","LINEAR_MIPMAP_LINEAR","NEAREST","LINEAR_MIPMAP_NEAREST","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","generateMipmap","textCanvas","textCtx","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","Object","defineProperty","get","set","drawStyle","$lineWidth","fillText","text","clearRect","strokeText","measureText","tempCanvas","tempCtx","save","restore","createImageData","getImageData","data","buffer","Uint8Array","readPixels","w","j","maxJ","index1","index2","putImageData","imageData","dx","dy","setTransform","apply","arguments","fillRect","strokeRect","beginPath","closePath","prevPath","startX","startY","newPath","moveTo","lineTo","quadraticApproximateCount","quadraticCurveTo","hx","hy","tx","ty","fromx","fromy","bezierApproximateCount","bezierCurveTo","h1x","h1y","h2x","h2y","arcTo","rect","arcApproximateCount","arc","cx","cy","radius","startAngle","endAngle","anticlockwise","PI","count","fixed","fill","stroke","clip","isPointInPath","drawFocusRing","doCrop","cacheIndex","indexOf","activeTexture","TEXTURE0","uniform1i","configurable","enumerable","writable"],"mappings":"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","file":"j2d/j2d.webGL2d.js","sourcesContent":[null,"/**\r\n *  WebGL-2D.js - HTML5 Canvas2D API in a WebGL context\r\n *\r\n *  Created by Corban Brook <corbanbrook@gmail.com> on 2011-03-02.\r\n *  Amended to by Bobby Richter <secretrobotron@gmail.com> on 2011-03-03\r\n *  CubicVR.js by Charles Cliffe <cj@cubicproductions.com> on 2011-03-03\r\n */\r\n\r\n!function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('j2d.webGL2d', [], factory);\r\n    } else {\r\n        factory();\r\n    }\r\n}(global, function () {\r\n    \"use strict\";\r\n\r\n    // Vector & Matrix libraries from CubicVR.js\r\n    var M_PI = 3.1415926535897932384626433832795028841968;\r\n    var M_TWO_PI = 2.0 * M_PI;\r\n    var M_HALF_PI = M_PI / 2.0;\r\n\r\n    function isPOT(value) {\r\n        return value > 0 && ((value - 1) & value) === 0;\r\n    }\r\n\r\n    var vec3 = {\r\n        length: function (pt) {\r\n            return Math.sqrt(pt[0] * pt[0] + pt[1] * pt[1] + pt[2] * pt[2]);\r\n        },\r\n\r\n        normalize: function (pt) {\r\n            var d = Math.sqrt((pt[0] * pt[0]) + (pt[1] * pt[1]) + (pt[2] * pt[2]));\r\n            if (d === 0) {\r\n                return [0, 0, 0];\r\n            }\r\n            return [pt[0] / d, pt[1] / d, pt[2] / d];\r\n        },\r\n\r\n        dot: function (v1, v2) {\r\n            return v1[0] * v2[0] + v1[1] * v2[1] + v1[2] * v2[2];\r\n        },\r\n\r\n        angle: function (v1, v2) {\r\n            return Math.acos((v1[0] * v2[0] + v1[1] * v2[1] + v1[2] * v2[2]) / (Math.sqrt(v1[0] * v1[0] + v1[1] * v1[1] + v1[2] * v1[2]) * Math.sqrt(v2[0] * v2[0] + v2[1] * v2[1] + v2[2] * v2[2])));\r\n        },\r\n\r\n        cross: function (vectA, vectB) {\r\n            return [vectA[1] * vectB[2] - vectB[1] * vectA[2], vectA[2] * vectB[0] - vectB[2] * vectA[0], vectA[0] * vectB[1] - vectB[0] * vectA[1]];\r\n        },\r\n\r\n        multiply: function (vectA, constB) {\r\n            return [vectA[0] * constB, vectA[1] * constB, vectA[2] * constB];\r\n        },\r\n\r\n        add: function (vectA, vectB) {\r\n            return [vectA[0] + vectB[0], vectA[1] + vectB[1], vectA[2] + vectB[2]];\r\n        },\r\n\r\n        subtract: function (vectA, vectB) {\r\n            return [vectA[0] - vectB[0], vectA[1] - vectB[1], vectA[2] - vectB[2]];\r\n        },\r\n\r\n        equal: function (a, b) {\r\n            var epsilon = 0.0000001;\r\n            if ((a === undefined) && (b === undefined)) {\r\n                return true;\r\n            }\r\n            if ((a === undefined) || (b === undefined)) {\r\n                return false;\r\n            }\r\n            return (Math.abs(a[0] - b[0]) < epsilon && Math.abs(a[1] - b[1]) < epsilon && Math.abs(a[2] - b[2]) < epsilon);\r\n        }\r\n    };\r\n\r\n    var mat3 = {\r\n        identity: [1.0, 0.0, 0.0,\r\n            0.0, 1.0, 0.0,\r\n            0.0, 0.0, 1.0],\r\n\r\n        multiply: function (m1, m2) {\r\n            var m10 = m1[0], m11 = m1[1], m12 = m1[2], m13 = m1[3], m14 = m1[4], m15 = m1[5], m16 = m1[6], m17 = m1[7], m18 = m1[8],\r\n                m20 = m2[0], m21 = m2[1], m22 = m2[2], m23 = m2[3], m24 = m2[4], m25 = m2[5], m26 = m2[6], m27 = m2[7], m28 = m2[8];\r\n\r\n            m2[0] = m20 * m10 + m23 * m11 + m26 * m12;\r\n            m2[1] = m21 * m10 + m24 * m11 + m27 * m12;\r\n            m2[2] = m22 * m10 + m25 * m11 + m28 * m12;\r\n            m2[3] = m20 * m13 + m23 * m14 + m26 * m15;\r\n            m2[4] = m21 * m13 + m24 * m14 + m27 * m15;\r\n            m2[5] = m22 * m13 + m25 * m14 + m28 * m15;\r\n            m2[6] = m20 * m16 + m23 * m17 + m26 * m18;\r\n            m2[7] = m21 * m16 + m24 * m17 + m27 * m18;\r\n            m2[8] = m22 * m16 + m25 * m17 + m28 * m18;\r\n        },\r\n\r\n        vec2_multiply: function (m1, m2) {\r\n            var mOut = [];\r\n            mOut[0] = m2[0] * m1[0] + m2[3] * m1[1] + m2[6];\r\n            mOut[1] = m2[1] * m1[0] + m2[4] * m1[1] + m2[7];\r\n            return mOut;\r\n        },\r\n\r\n        transpose: function (m) {\r\n            return [m[0], m[3], m[6], m[1], m[4], m[7], m[2], m[5], m[8]];\r\n        }\r\n    }; //mat3\r\n\r\n    // Transform library from CubicVR.js\r\n    function Transform(mat) {\r\n        return this.clearStack(mat);\r\n    }\r\n\r\n    var STACK_DEPTH_LIMIT = 16;\r\n\r\n    Transform.prototype.clearStack = function (init_mat) {\r\n        this.m_stack = [];\r\n        this.m_cache = [];\r\n        this.c_stack = 0;\r\n        this.valid = 0;\r\n        this.result = null;\r\n\r\n        for (var i = 0; i < STACK_DEPTH_LIMIT; i++) {\r\n            this.m_stack[i] = this.getIdentity();\r\n        }\r\n\r\n        if (init_mat !== undefined) {\r\n            this.m_stack[0] = init_mat;\r\n        } else {\r\n            this.setIdentity();\r\n        }\r\n    }; //clearStack\r\n\r\n    Transform.prototype.setIdentity = function () {\r\n        this.m_stack[this.c_stack] = this.getIdentity();\r\n        if (this.valid === this.c_stack && this.c_stack) {\r\n            this.valid--;\r\n        }\r\n    };\r\n\r\n    Transform.prototype.getIdentity = function () {\r\n        return [1.0, 0.0, 0.0,\r\n            0.0, 1.0, 0.0,\r\n            0.0, 0.0, 1.0];\r\n    };\r\n\r\n    Transform.prototype.getResult = function () {\r\n        if (!this.c_stack) {\r\n            return this.m_stack[0];\r\n        }\r\n\r\n        var m = mat3.identity;\r\n\r\n        if (this.valid > this.c_stack - 1) {\r\n            this.valid = this.c_stack - 1;\r\n        }\r\n\r\n        for (var i = this.valid; i < this.c_stack + 1; i++) {\r\n            m = mat3.multiply(this.m_stack[i], m);\r\n            this.m_cache[i] = m;\r\n        }\r\n\r\n        this.valid = this.c_stack - 1;\r\n\r\n        this.result = this.m_cache[this.c_stack];\r\n\r\n        return this.result;\r\n    };\r\n\r\n    Transform.prototype.pushMatrix = function () {\r\n        this.c_stack++;\r\n        this.m_stack[this.c_stack] = this.getIdentity();\r\n    };\r\n\r\n    Transform.prototype.popMatrix = function () {\r\n        if (this.c_stack === 0) {\r\n            return;\r\n        }\r\n        this.c_stack--;\r\n    };\r\n\r\n    var translateMatrix = Transform.prototype.getIdentity();\r\n\r\n    Transform.prototype.translate = function (x, y) {\r\n        translateMatrix[6] = x;\r\n        translateMatrix[7] = y;\r\n\r\n        mat3.multiply(translateMatrix, this.m_stack[this.c_stack]);\r\n\r\n        /*\r\n         if (this.valid === this.c_stack && this.c_stack) {\r\n         this.valid--;\r\n         }\r\n         */\r\n    };\r\n\r\n    var trMatrix = Transform.prototype.getIdentity();\r\n\r\n    Transform.prototype.tr = function (a, b, c, d, e, f) {\r\n        trMatrix[0] = a;\r\n        trMatrix[1] = b;\r\n        trMatrix[3] = c;\r\n        trMatrix[4] = d;\r\n        trMatrix[6] = e;\r\n        trMatrix[7] = f;\r\n\r\n        mat3.multiply(trMatrix, this.m_stack[this.c_stack]);\r\n    };\r\n\r\n    var scaleMatrix = Transform.prototype.getIdentity();\r\n\r\n    Transform.prototype.scale = function (x, y) {\r\n        scaleMatrix[0] = x;\r\n        scaleMatrix[4] = y;\r\n\r\n        mat3.multiply(scaleMatrix, this.m_stack[this.c_stack]);\r\n\r\n        /*\r\n         if (this.valid === this.c_stack && this.c_stack) {\r\n         this.valid--;\r\n         }\r\n         */\r\n    };\r\n\r\n    var rotateMatrix = Transform.prototype.getIdentity();\r\n\r\n    Transform.prototype.rotate = function (ang) {\r\n        var sAng, cAng;\r\n\r\n        sAng = Math.sin(-ang);\r\n        cAng = Math.cos(-ang);\r\n\r\n        rotateMatrix[0] = cAng;\r\n        rotateMatrix[3] = sAng;\r\n        rotateMatrix[1] = -sAng;\r\n        rotateMatrix[4] = cAng;\r\n\r\n        mat3.multiply(rotateMatrix, this.m_stack[this.c_stack]);\r\n\r\n        /*\r\n         if (this.valid === this.c_stack && this.c_stack) {\r\n         this.valid--;\r\n         }\r\n         */\r\n    };\r\n\r\n    var WebGL2D = global.WebGL2D = function WebGL2D(canvas, options) {\r\n        this.canvas = canvas;\r\n        this.options = options || {};\r\n        this.gl = undefined;\r\n        this.fs = undefined;\r\n        this.vs = undefined;\r\n        this.shaderProgram = undefined;\r\n        this.transform = new Transform();\r\n        this.shaderPool = [];\r\n        this.maxTextureSize = undefined;\r\n\r\n        // Save a reference to the WebGL2D instance on the canvas object\r\n        canvas.gl2d = this;\r\n\r\n        // Store getContext function for later use\r\n        canvas.$getContext = canvas.getContext;\r\n\r\n        // Override getContext function with \"webgl-2d\" enabled version\r\n        canvas.getContext = (function (gl2d) {\r\n            return function (context) {\r\n                if ((gl2d.options.force || context === \"WebGL-2d\") && !(canvas.width === 0 || canvas.height === 0)) {\r\n                    if (gl2d.gl) {\r\n                        return gl2d.gl;\r\n                    }\r\n\r\n                    var gl = gl2d.gl = gl2d.canvas.$getContext(\"experimental-webgl\");\r\n\r\n                    // If we failed to get a WebGL context, return a normal 2D context instead.\r\n                    if ((typeof (gl) === \"undefined\") || (gl === null)) {\r\n                        return gl2d.canvas.$getContext(\"2d\");\r\n                    }\r\n\r\n                    gl2d.initShaders();\r\n                    gl2d.initBuffers();\r\n\r\n                    // Append Canvas2D API features to the WebGL context\r\n                    gl2d.initCanvas2DAPI();\r\n\r\n                    // Disables writing to dest-alpha\r\n                    // gl.colorMask(1,1,1,0)\r\n\r\n                    // Depth options\r\n                    //gl.enable(gl.DEPTH_TEST);\r\n                    //gl.depthFunc(gl.LEQUAL);\r\n\r\n                    // Blending options\r\n                    // See http://stackoverflow.com/questions/11521035/blending-with-html-background-in-webgl\r\n                    gl.enable(gl.BLEND);\r\n                    gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n\r\n                    gl2d.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\r\n\r\n                    return gl;\r\n                } else {\r\n                    return gl2d.canvas.$getContext(context);\r\n                }\r\n            };\r\n        }(this));\r\n\r\n        this.postInit();\r\n    };\r\n\r\n    // Enables WebGL2D on your canvas\r\n    WebGL2D.enable = function (canvas, options) {\r\n        return canvas.gl2d || new WebGL2D(canvas, options);\r\n    };\r\n\r\n\r\n    // Shader Pool BitMasks, i.e. sMask = (shaderMask.texture+shaderMask.stroke)\r\n    var shaderMask = {\r\n        texture: 1,\r\n        crop: 2,\r\n        path: 4\r\n    };\r\n\r\n\r\n    // Fragment shader source\r\n    WebGL2D.prototype.getFragmentShaderSource = function getFragmentShaderSource(sMask) {\r\n        var fsSource = [\r\n            \"#ifdef GL_ES\",\r\n            \"precision highp float;\",\r\n            \"#endif\",\r\n\r\n            \"#define hasTexture \" + ((sMask & shaderMask.texture) ? \"1\" : \"0\"),\r\n            \"#define hasCrop \" + ((sMask & shaderMask.crop) ? \"1\" : \"0\"),\r\n\r\n            \"varying vec4 vColor;\",\r\n\r\n            \"#if hasTexture\",\r\n            \"varying vec2 vTextureCoord;\",\r\n            \"uniform sampler2D uSampler;\",\r\n            \"#if hasCrop\",\r\n            \"uniform vec4 uCropSource;\",\r\n            \"#endif\",\r\n            \"#endif\",\r\n\r\n            \"void main(void) {\",\r\n            \"#if hasTexture\",\r\n            \"#if hasCrop\",\r\n            \"gl_FragColor = texture2D(uSampler, vec2(vTextureCoord.x * uCropSource.z, vTextureCoord.y * uCropSource.w) + uCropSource.xy);\",\r\n            \"#else\",\r\n            \"gl_FragColor = texture2D(uSampler, vTextureCoord);\",\r\n            \"#endif\",\r\n            \"#else\",\r\n            \"gl_FragColor = vColor;\",\r\n            \"#endif\",\r\n            \"}\"\r\n        ].join(\"\\n\");\r\n\r\n        return fsSource;\r\n    };\r\n\r\n    WebGL2D.prototype.getVertexShaderSource = function getVertexShaderSource(stackDepth, sMask) {\r\n        stackDepth = stackDepth || 1;\r\n\r\n        var vsSource = [\r\n            \"#define hasTexture \" + ((sMask & shaderMask.texture) ? \"1\" : \"0\"),\r\n            \"attribute vec4 aVertexPosition;\",\r\n\r\n            \"#if hasTexture\",\r\n            \"varying vec2 vTextureCoord;\",\r\n            \"#endif\",\r\n\r\n            \"uniform vec4 uColor;\",\r\n            \"uniform mat3 uTransforms[\" + stackDepth + \"];\",\r\n\r\n            \"varying vec4 vColor;\",\r\n\r\n            \"uniform mat4 pMatrix;\",\r\n\r\n            \"mat3 crunchStack(void) {\",\r\n            \"mat3 result = uTransforms[0];\",\r\n            \"for (int i = 1; i < \" + stackDepth + \"; ++i) {\",\r\n            \"result = uTransforms[i] * result;\",\r\n            \"}\",\r\n            \"return result;\",\r\n            \"}\",\r\n\r\n            \"void main(void) {\",\r\n            \"vec3 position = crunchStack() * vec3(aVertexPosition.x, aVertexPosition.y, 1.0);\",\r\n            \"gl_Position = pMatrix * vec4(position, 1.0);\",\r\n            \"vColor = uColor;\",\r\n            \"#if hasTexture\",\r\n            \"vTextureCoord = aVertexPosition.zw;\",\r\n            \"#endif\",\r\n            \"}\"\r\n        ].join(\"\\n\");\r\n        return vsSource;\r\n    };\r\n\r\n\r\n    // Initialize fragment and vertex shaders\r\n    WebGL2D.prototype.initShaders = function initShaders(transformStackDepth, sMask) {\r\n        var gl = this.gl;\r\n\r\n        transformStackDepth = transformStackDepth || 1;\r\n        sMask = sMask || 0;\r\n        var storedShader = this.shaderPool[transformStackDepth];\r\n\r\n        if (!storedShader) {\r\n            storedShader = this.shaderPool[transformStackDepth] = [];\r\n        }\r\n        storedShader = storedShader[sMask];\r\n\r\n        if (storedShader) {\r\n            gl.useProgram(storedShader);\r\n            this.shaderProgram = storedShader;\r\n        } else {\r\n            var fs = this.fs = gl.createShader(gl.FRAGMENT_SHADER);\r\n            gl.shaderSource(this.fs, this.getFragmentShaderSource(sMask));\r\n            gl.compileShader(this.fs);\r\n\r\n            if (!gl.getShaderParameter(this.fs, gl.COMPILE_STATUS)) {\r\n                throw \"fragment shader error: \" + gl.getShaderInfoLog(this.fs);\r\n            }\r\n\r\n            var vs = this.vs = gl.createShader(gl.VERTEX_SHADER);\r\n            gl.shaderSource(this.vs, this.getVertexShaderSource(transformStackDepth, sMask));\r\n            gl.compileShader(this.vs);\r\n\r\n            if (!gl.getShaderParameter(this.vs, gl.COMPILE_STATUS)) {\r\n                throw \"vertex shader error: \" + gl.getShaderInfoLog(this.vs);\r\n            }\r\n\r\n\r\n            var shaderProgram = this.shaderProgram = gl.createProgram();\r\n            shaderProgram.stackDepth = transformStackDepth;\r\n            gl.attachShader(shaderProgram, fs);\r\n            gl.attachShader(shaderProgram, vs);\r\n            gl.linkProgram(shaderProgram);\r\n\r\n            if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\r\n                throw \"Could not initialise shaders.\";\r\n            }\r\n\r\n            gl.useProgram(shaderProgram);\r\n\r\n            shaderProgram.vertexPositionAttribute = gl.getAttribLocation(shaderProgram, \"aVertexPosition\");\r\n            gl.enableVertexAttribArray(shaderProgram.vertexPositionAttribute);\r\n\r\n            shaderProgram.uColor = gl.getUniformLocation(shaderProgram, 'uColor');\r\n            shaderProgram.uSampler = gl.getUniformLocation(shaderProgram, 'uSampler');\r\n            shaderProgram.uCropSource = gl.getUniformLocation(shaderProgram, 'uCropSource');\r\n\r\n            shaderProgram.pMatrix = gl.getUniformLocation(shaderProgram, 'pMatrix');\r\n\r\n            shaderProgram.uTransforms = [];\r\n            for (var i = 0; i < transformStackDepth; ++i) {\r\n                shaderProgram.uTransforms[i] = gl.getUniformLocation(shaderProgram, 'uTransforms[' + i + ']');\r\n            } //for\r\n            this.shaderPool[transformStackDepth][sMask] = shaderProgram;\r\n        } //if\r\n\r\n        pMatrix[0] = 2 / this.canvas.width;\r\n        pMatrix[5] = -2 / this.canvas.height;\r\n\r\n        gl.uniformMatrix4fv(this.shaderProgram.pMatrix, false, pMatrix);\r\n\r\n        gl.viewport(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n        return this.shaderProgram;\r\n    };\r\n\r\n    // 2D Vertices and Texture UV coords\r\n    var rectVerts = new Float32Array([\r\n        0, 0, 0, 0,\r\n        0, 1, 0, 1,\r\n        1, 1, 1, 1,\r\n        1, 0, 1, 0\r\n    ]);\r\n\r\n    var pMatrix = new Float32Array(16);\r\n    pMatrix[10] = 1;\r\n    pMatrix[11] = 1;\r\n    pMatrix[12] = -1;\r\n    pMatrix[13] = 1;\r\n\r\n    WebGL2D.prototype.initBuffers = function initBuffers() {\r\n        var gl = this.gl;\r\n\r\n        gl.rectVertexPositionBuffer = gl.createBuffer();\r\n        gl.rectVertexColorBuffer = gl.createBuffer();\r\n\r\n        gl.pathVertexPositionBuffer = gl.createBuffer();\r\n        gl.pathVertexColorBuffer = gl.createBuffer();\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, gl.rectVertexPositionBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, rectVerts, gl.STATIC_DRAW);\r\n    };\r\n\r\n    // Maintains an array of all WebGL2D instances\r\n    WebGL2D.instances = [];\r\n\r\n    WebGL2D.prototype.postInit = function () {\r\n        WebGL2D.instances.push(this);\r\n    };\r\n\r\n    // Extends gl context with Canvas2D API\r\n    WebGL2D.prototype.initCanvas2DAPI = function initCanvas2DAPI() {\r\n        var gl2d = this,\r\n            gl = this.gl;\r\n\r\n\r\n        // Rendering Canvas for text fonts\r\n        var textCanvas = document.createElement(\"canvas\");\r\n        textCanvas.width = gl2d.canvas.width;\r\n        textCanvas.height = gl2d.canvas.height;\r\n        var textCtx = textCanvas.getContext(\"2d\");\r\n\r\n        var reRGBAColor = /^rgb(a)?\\(\\s*(-?[\\d]+)(%)?\\s*,\\s*(-?[\\d]+)(%)?\\s*,\\s*(-?[\\d]+)(%)?\\s*,?\\s*(-?[\\d\\.]+)?\\s*\\)$/;\r\n        var reHSLAColor = /^hsl(a)?\\(\\s*(-?[\\d\\.]+)\\s*,\\s*(-?[\\d\\.]+)%\\s*,\\s*(-?[\\d\\.]+)%\\s*,?\\s*(-?[\\d\\.]+)?\\s*\\)$/;\r\n        var reHex6Color = /^#([0-9A-Fa-f]{6})$/;\r\n        var reHex3Color = /^#([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])$/;\r\n\r\n        function hue2rgb(p, q, t) {\r\n            if (t < 0) t += 1;\r\n            if (t > 1) t -= 1;\r\n            if (t < 1 / 6) return p + (q - p) * 6 * t;\r\n            if (t < 1 / 2) return q;\r\n            if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\r\n            return p;\r\n        }\r\n\r\n        // http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n        function HSLAToRGBA(h, s, l, a) {\r\n            var r, g, b, p, q;\r\n\r\n            // Clamp and Normalize values\r\n            h = (((h % 360) + 360) % 360) / 360;\r\n            s = s > 100 ? 1 : s / 100;\r\n            s = s < 0 ? 0 : s;\r\n            l = l > 100 ? 1 : l / 100;\r\n            l = l < 0 ? 0 : l;\r\n\r\n            if (s == 0) {\r\n                r = g = b = l; // achromatic\r\n            } else {\r\n                q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n                p = 2 * l - q;\r\n\r\n                r = hue2rgb(p, q, h + 1 / 3);\r\n                g = hue2rgb(p, q, h);\r\n                b = hue2rgb(p, q, h - 1 / 3);\r\n            }\r\n\r\n            return [r, g, b, a];\r\n        }\r\n\r\n\r\n        // Converts rgb(a) color string to gl color vector\r\n        function colorStringToVec4(value) {\r\n            var result = [], match, channel, isPercent, hasAlpha, alphaChannel, sameType;\r\n\r\n            if ((match = reRGBAColor.exec(value))) {\r\n                hasAlpha = match[1], alphaChannel = parseFloat(match[8]);\r\n\r\n                if ((hasAlpha && isNaN(alphaChannel)) || (!hasAlpha && !isNaN(alphaChannel))) {\r\n                    return false;\r\n                }\r\n\r\n                sameType = match[3];\r\n\r\n                for (var i = 2; i < 8; i += 2) {\r\n                    channel = match[i], isPercent = match[i + 1];\r\n\r\n                    if (isPercent !== sameType) {\r\n                        return false;\r\n                    }\r\n\r\n                    // Clamp and normalize values\r\n                    if (isPercent) {\r\n                        channel = channel > 100 ? 1 : channel / 100;\r\n                        channel = channel < 0 ? 0 : channel;\r\n                    } else {\r\n                        channel = channel > 255 ? 1 : channel / 255;\r\n                        channel = channel < 0 ? 0 : channel;\r\n                    }\r\n\r\n                    result.push(channel);\r\n                }\r\n\r\n                result.push(hasAlpha ? alphaChannel : 1.0);\r\n            } else if ((match = reHSLAColor.exec(value))) {\r\n                hasAlpha = match[1], alphaChannel = parseFloat(match[5]);\r\n                result = HSLAToRGBA(match[2], match[3], match[4], parseFloat(hasAlpha && alphaChannel ? alphaChannel : 1.0));\r\n            } else if ((match = reHex6Color.exec(value))) {\r\n                var colorInt = parseInt(match[1], 16);\r\n                result = [((colorInt & 0xFF0000) >> 16) / 255, ((colorInt & 0x00FF00) >> 8) / 255, (colorInt & 0x0000FF) / 255, 1.0];\r\n            } else if ((match = reHex3Color.exec(value))) {\r\n                var hexString = \"#\" + [match[1], match[1], match[2], match[2], match[3], match[3]].join(\"\");\r\n                result = colorStringToVec4(hexString);\r\n            } else if (value.toLowerCase() in colorKeywords) {\r\n                result = colorStringToVec4(colorKeywords[value.toLowerCase()]);\r\n            } else if (value.toLowerCase() === \"transparent\") {\r\n                result = [0, 0, 0, 0];\r\n            } else {\r\n                // Color keywords not yet implemented, ie \"orange\", return hot pink\r\n                return false;\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        function colorVecToString(vec4) {\r\n            return \"rgba(\" + (vec4[0] * 255) + \", \" + (vec4[1] * 255) + \", \" + (vec4[2] * 255) + \", \" + parseFloat(vec4[3]) + \")\";\r\n        }\r\n\r\n        var colorKeywords = {\r\n            aliceblue: \"#f0f8ff\",\r\n            antiquewhite: \"#faebd7\",\r\n            aqua: \"#00ffff\",\r\n            aquamarine: \"#7fffd4\",\r\n            azure: \"#f0ffff\",\r\n            beige: \"#f5f5dc\",\r\n            bisque: \"#ffe4c4\",\r\n            black: \"#000000\",\r\n            blanchedalmond: \"#ffebcd\",\r\n            blue: \"#0000ff\",\r\n            blueviolet: \"#8a2be2\",\r\n            brown: \"#a52a2a\",\r\n            burlywood: \"#deb887\",\r\n            cadetblue: \"#5f9ea0\",\r\n            chartreuse: \"#7fff00\",\r\n            chocolate: \"#d2691e\",\r\n            coral: \"#ff7f50\",\r\n            cornflowerblue: \"#6495ed\",\r\n            cornsilk: \"#fff8dc\",\r\n            crimson: \"#dc143c\",\r\n            cyan: \"#00ffff\",\r\n            darkblue: \"#00008b\",\r\n            darkcyan: \"#008b8b\",\r\n            darkgoldenrod: \"#b8860b\",\r\n            darkgray: \"#a9a9a9\",\r\n            darkgreen: \"#006400\",\r\n            darkkhaki: \"#bdb76b\",\r\n            darkmagenta: \"#8b008b\",\r\n            darkolivegreen: \"#556b2f\",\r\n            darkorange: \"#ff8c00\",\r\n            darkorchid: \"#9932cc\",\r\n            darkred: \"#8b0000\",\r\n            darksalmon: \"#e9967a\",\r\n            darkseagreen: \"#8fbc8f\",\r\n            darkslateblue: \"#483d8b\",\r\n            darkslategray: \"#2f4f4f\",\r\n            darkturquoise: \"#00ced1\",\r\n            darkviolet: \"#9400d3\",\r\n            deeppink: \"#ff1493\",\r\n            deepskyblue: \"#00bfff\",\r\n            dimgray: \"#696969\",\r\n            dodgerblue: \"#1e90ff\",\r\n            firebrick: \"#b22222\",\r\n            floralwhite: \"#fffaf0\",\r\n            forestgreen: \"#228b22\",\r\n            fuchsia: \"#ff00ff\",\r\n            gainsboro: \"#dcdcdc\",\r\n            ghostwhite: \"#f8f8ff\",\r\n            gold: \"#ffd700\",\r\n            goldenrod: \"#daa520\",\r\n            gray: \"#808080\",\r\n            green: \"#008000\",\r\n            greenyellow: \"#adff2f\",\r\n            grey: \"#808080\",\r\n            honeydew: \"#f0fff0\",\r\n            hotpink: \"#ff69b4\",\r\n            indianred: \"#cd5c5c\",\r\n            indigo: \"#4b0082\",\r\n            ivory: \"#fffff0\",\r\n            khaki: \"#f0e68c\",\r\n            lavender: \"#e6e6fa\",\r\n            lavenderblush: \"#fff0f5\",\r\n            lawngreen: \"#7cfc00\",\r\n            lemonchiffon: \"#fffacd\",\r\n            lightblue: \"#add8e6\",\r\n            lightcoral: \"#f08080\",\r\n            lightcyan: \"#e0ffff\",\r\n            lightgoldenrodyellow: \"#fafad2\",\r\n            lightgrey: \"#d3d3d3\",\r\n            lightgreen: \"#90ee90\",\r\n            lightpink: \"#ffb6c1\",\r\n            lightsalmon: \"#ffa07a\",\r\n            lightseagreen: \"#20b2aa\",\r\n            lightskyblue: \"#87cefa\",\r\n            lightslategray: \"#778899\",\r\n            lightsteelblue: \"#b0c4de\",\r\n            lightyellow: \"#ffffe0\",\r\n            lime: \"#00ff00\",\r\n            limegreen: \"#32cd32\",\r\n            linen: \"#faf0e6\",\r\n            magenta: \"#ff00ff\",\r\n            maroon: \"#800000\",\r\n            mediumaquamarine: \"#66cdaa\",\r\n            mediumblue: \"#0000cd\",\r\n            mediumorchid: \"#ba55d3\",\r\n            mediumpurple: \"#9370d8\",\r\n            mediumseagreen: \"#3cb371\",\r\n            mediumslateblue: \"#7b68ee\",\r\n            mediumspringgreen: \"#00fa9a\",\r\n            mediumturquoise: \"#48d1cc\",\r\n            mediumvioletred: \"#c71585\",\r\n            midnightblue: \"#191970\",\r\n            mintcream: \"#f5fffa\",\r\n            mistyrose: \"#ffe4e1\",\r\n            moccasin: \"#ffe4b5\",\r\n            navajowhite: \"#ffdead\",\r\n            navy: \"#000080\",\r\n            oldlace: \"#fdf5e6\",\r\n            olive: \"#808000\",\r\n            olivedrab: \"#6b8e23\",\r\n            orange: \"#ffa500\",\r\n            orangered: \"#ff4500\",\r\n            orchid: \"#da70d6\",\r\n            palegoldenrod: \"#eee8aa\",\r\n            palegreen: \"#98fb98\",\r\n            paleturquoise: \"#afeeee\",\r\n            palevioletred: \"#d87093\",\r\n            papayawhip: \"#ffefd5\",\r\n            peachpuff: \"#ffdab9\",\r\n            peru: \"#cd853f\",\r\n            pink: \"#ffc0cb\",\r\n            plum: \"#dda0dd\",\r\n            powderblue: \"#b0e0e6\",\r\n            purple: \"#800080\",\r\n            red: \"#ff0000\",\r\n            rosybrown: \"#bc8f8f\",\r\n            royalblue: \"#4169e1\",\r\n            saddlebrown: \"#8b4513\",\r\n            salmon: \"#fa8072\",\r\n            sandybrown: \"#f4a460\",\r\n            seagreen: \"#2e8b57\",\r\n            seashell: \"#fff5ee\",\r\n            sienna: \"#a0522d\",\r\n            silver: \"#c0c0c0\",\r\n            skyblue: \"#87ceeb\",\r\n            slateblue: \"#6a5acd\",\r\n            slategray: \"#708090\",\r\n            snow: \"#fffafa\",\r\n            springgreen: \"#00ff7f\",\r\n            steelblue: \"#4682b4\",\r\n            tan: \"#d2b48c\",\r\n            teal: \"#008080\",\r\n            thistle: \"#d8bfd8\",\r\n            tomato: \"#ff6347\",\r\n            turquoise: \"#40e0d0\",\r\n            violet: \"#ee82ee\",\r\n            wheat: \"#f5deb3\",\r\n            white: \"#ffffff\",\r\n            whitesmoke: \"#f5f5f5\",\r\n            yellow: \"#ffff00\",\r\n            yellowgreen: \"#9acd32\"\r\n        };\r\n\r\n        // Maintain drawing state params during gl.save and gl.restore. see saveDrawState() and restoreDrawState()\r\n        var drawState = {}, drawStateStack = [];\r\n\r\n        // A fast simple shallow clone\r\n        function cloneObject(obj) {\r\n            var target = {};\r\n            for (var i in obj) {\r\n                if (obj.hasOwnProperty(i)) {\r\n                    target[i] = obj[i];\r\n                }\r\n            }\r\n            return target;\r\n        }\r\n\r\n        function saveDrawState() {\r\n            var bakedDrawState = {\r\n                fillStyle: [drawState.fillStyle[0], drawState.fillStyle[1], drawState.fillStyle[2], drawState.fillStyle[3]],\r\n                strokeStyle: [drawState.strokeStyle[0], drawState.strokeStyle[1], drawState.strokeStyle[2], drawState.strokeStyle[3]],\r\n                globalAlpha: drawState.globalAlpha,\r\n                globalCompositeOperation: drawState.globalCompositeOperation,\r\n                lineCap: drawState.lineCap,\r\n                lineJoin: drawState.lineJoin,\r\n                lineWidth: drawState.lineWidth,\r\n                miterLimit: drawState.miterLimit,\r\n                shadowColor: drawState.shadowColor,\r\n                shadowBlur: drawState.shadowBlur,\r\n                shadowOffsetX: drawState.shadowOffsetX,\r\n                shadowOffsetY: drawState.shadowOffsetY,\r\n                textAlign: drawState.textAlign,\r\n                font: drawState.font,\r\n                textBaseline: drawState.textBaseline,\r\n                imageSmoothingEnabled: drawState.imageSmoothingEnabled\r\n            };\r\n\r\n            drawStateStack.push(bakedDrawState);\r\n        }\r\n\r\n        function restoreDrawState() {\r\n            if (drawStateStack.length) {\r\n                drawState = drawStateStack.pop();\r\n            }\r\n        }\r\n\r\n        // WebGL requires colors as a vector while Canvas2D sets colors as an rgba string\r\n        // These getters and setters store the original rgba string as well as convert to a vector\r\n        drawState.fillStyle = [0, 0, 0, 1]; // default black\r\n\r\n        Object.defineProperty(gl, \"fillStyle\", {\r\n            get: function () {\r\n                return colorVecToString(drawState.fillStyle);\r\n            },\r\n            set: function (value) {\r\n                drawState.fillStyle = colorStringToVec4(value) || drawState.fillStyle;\r\n            }\r\n        });\r\n\r\n        drawState.strokeStyle = [0, 0, 0, 1]; // default black\r\n\r\n        Object.defineProperty(gl, \"strokeStyle\", {\r\n            get: function () {\r\n                return colorVecToString(drawState.strokeStyle);\r\n            },\r\n            set: function (value) {\r\n                drawState.strokeStyle = colorStringToVec4(value) || drawStyle.strokeStyle;\r\n            }\r\n        });\r\n\r\n        // WebGL already has a lineWidth() function but Canvas2D requires a lineWidth property\r\n        // Store the original lineWidth() function for later use\r\n        gl.$lineWidth = gl.lineWidth;\r\n        drawState.lineWidth = 1.0;\r\n\r\n        Object.defineProperty(gl, \"lineWidth\", {\r\n            get: function () {\r\n                return drawState.lineWidth;\r\n            },\r\n            set: function (value) {\r\n                if (value > 0) {\r\n                    gl.$lineWidth(value);\r\n                    drawState.lineWidth = value;\r\n                }\r\n            }\r\n        });\r\n\r\n        // Currently unsupported attributes and their default values\r\n        drawState.lineCap = \"butt\";\r\n\r\n        Object.defineProperty(gl, \"lineCap\", {\r\n            get: function () {\r\n                return drawState.lineCap;\r\n            },\r\n            set: function (value) {\r\n                drawState.lineCap = value;\r\n            }\r\n        });\r\n\r\n        drawState.lineJoin = \"miter\";\r\n\r\n        Object.defineProperty(gl, \"lineJoin\", {\r\n            get: function () {\r\n                return drawState.lineJoin;\r\n            },\r\n            set: function (value) {\r\n                drawState.lineJoin = value;\r\n            }\r\n        });\r\n\r\n        drawState.miterLimit = 10;\r\n\r\n        Object.defineProperty(gl, \"miterLimit\", {\r\n            get: function () {\r\n                return drawState.miterLimit;\r\n            },\r\n            set: function (value) {\r\n                drawState.miterLimit = value;\r\n            }\r\n        });\r\n\r\n        drawState.shadowOffsetX = 0;\r\n\r\n        Object.defineProperty(gl, \"shadowOffsetX\", {\r\n            get: function () {\r\n                return drawState.shadowOffsetX;\r\n            },\r\n            set: function (value) {\r\n                drawState.shadowOffsetX = value;\r\n            }\r\n        });\r\n\r\n        drawState.shadowOffsetY = 0;\r\n\r\n        Object.defineProperty(gl, \"shadowOffsetY\", {\r\n            get: function () {\r\n                return drawState.shadowOffsetY;\r\n            },\r\n            set: function (value) {\r\n                drawState.shadowOffsetY = value;\r\n            }\r\n        });\r\n\r\n        drawState.shadowBlur = 0;\r\n\r\n        Object.defineProperty(gl, \"shadowBlur\", {\r\n            get: function () {\r\n                return drawState.shadowBlur;\r\n            },\r\n            set: function (value) {\r\n                drawState.shadowBlur = value;\r\n            }\r\n        });\r\n\r\n        drawState.shadowColor = \"rgba(0, 0, 0, 0.0)\";\r\n\r\n        Object.defineProperty(gl, \"shadowColor\", {\r\n            get: function () {\r\n                return drawState.shadowColor;\r\n            },\r\n            set: function (value) {\r\n                drawState.shadowColor = value;\r\n            }\r\n        });\r\n\r\n        drawState.font = \"10px sans-serif\";\r\n\r\n        Object.defineProperty(gl, \"font\", {\r\n            get: function () {\r\n                return drawState.font;\r\n            },\r\n            set: function (value) {\r\n                textCtx.font = value;\r\n                drawState.font = value;\r\n            }\r\n        });\r\n\r\n        drawState.textAlign = \"start\";\r\n\r\n        Object.defineProperty(gl, \"textAlign\", {\r\n            get: function () {\r\n                return drawState.textAlign;\r\n            },\r\n            set: function (value) {\r\n                drawState.textAlign = value;\r\n            }\r\n        });\r\n\r\n        drawState.textBaseline = \"alphabetic\";\r\n\r\n        Object.defineProperty(gl, \"textBaseline\", {\r\n            get: function () {\r\n                return drawState.textBaseline;\r\n            },\r\n            set: function (value) {\r\n                drawState.textBaseline = value;\r\n            }\r\n        });\r\n\r\n        // This attribute will need to control global alpha of objects drawn.\r\n        drawState.globalAlpha = 1.0;\r\n\r\n        Object.defineProperty(gl, \"globalAlpha\", {\r\n            get: function () {\r\n                return drawState.globalAlpha;\r\n            },\r\n            set: function (value) {\r\n                drawState.globalAlpha = value;\r\n            }\r\n        });\r\n\r\n        // This attribute will need to control smoothing of objects drawn.\r\n        drawState.imageSmoothingEnabled = true;\r\n\r\n        Object.defineProperty(gl, \"imageSmoothingEnabled\", {\r\n            get: function () {\r\n                return drawState.imageSmoothingEnabled;\r\n            },\r\n            set: function (value) {\r\n                drawState.imageSmoothingEnabled = !!value;\r\n            }\r\n        });\r\n\r\n        // This attribute will need to set the gl.blendFunc mode\r\n        drawState.globalCompositeOperation = \"source-over\";\r\n\r\n        Object.defineProperty(gl, \"globalCompositeOperation\", {\r\n            get: function () {\r\n                return drawState.globalCompositeOperation;\r\n            },\r\n            set: function (value) {\r\n                drawState.globalCompositeOperation = value;\r\n            }\r\n        });\r\n\r\n        // Need a solution for drawing text that isnt stupid slow\r\n        gl.fillText = function fillText(text, x, y) {\r\n            // if it exist --key\r\n            textCtx.clearRect(0, 0, gl2d.canvas.width, gl2d.canvas.height);\r\n            textCtx.fillStyle = gl.fillStyle;\r\n            textCtx.fillText(text, x, y);\r\n\r\n            gl.drawImage(textCanvas, 0, 0);\r\n        };\r\n\r\n        gl.strokeText = function strokeText() {\r\n        };\r\n\r\n        gl.measureText = function measureText() {\r\n            return 1;\r\n        };\r\n\r\n        var tempCanvas = document.createElement('canvas');\r\n        var tempCtx = tempCanvas.getContext('2d');\r\n\r\n        gl.save = function save() {\r\n            gl2d.transform.pushMatrix();\r\n            saveDrawState();\r\n        };\r\n\r\n        gl.restore = function restore() {\r\n            gl2d.transform.popMatrix();\r\n            restoreDrawState();\r\n        };\r\n\r\n        gl.translate = function translate(x, y) {\r\n            gl2d.transform.translate(x, y);\r\n        };\r\n\r\n        gl.rotate = function rotate(a) {\r\n            gl2d.transform.rotate(a);\r\n        };\r\n\r\n        gl.scale = function scale(x, y) {\r\n            gl2d.transform.scale(x, y);\r\n        };\r\n\r\n        gl.createImageData = function createImageData(width, height) {\r\n            return tempCtx.createImageData(width, height);\r\n        };\r\n\r\n        gl.getImageData = function getImageData(x, y, width, height) {\r\n            var data = tempCtx.createImageData(width, height);\r\n            var buffer = new Uint8Array(width * height * 4);\r\n            gl.readPixels(x, y, width, height, gl.RGBA, gl.UNSIGNED_BYTE, buffer);\r\n            var w = width * 4, h = height;\r\n            for (var i = 0, maxI = h / 2; i < maxI; ++i) {\r\n                for (var j = 0, maxJ = w; j < maxJ; ++j) {\r\n                    var index1 = i * w + j;\r\n                    var index2 = (h - i - 1) * w + j;\r\n                    data.data[index1] = buffer[index2];\r\n                    data.data[index2] = buffer[index1];\r\n                } //for\r\n            } //for\r\n\r\n            return data;\r\n        };\r\n\r\n        gl.putImageData = function putImageData(imageData, x, y) {\r\n            gl.drawImage(imageData, x, y);\r\n        };\r\n\r\n        gl.transform = function transform(m11, m12, m21, m22, dx, dy) {\r\n            gl2d.transform.tr(m11, m12, m21, m22, dx, dy);\r\n        };\r\n\r\n        function sendTransformStack(sp) {\r\n            var stack = gl2d.transform.m_stack;\r\n            for (var i = 0, maxI = gl2d.transform.c_stack + 1; i < maxI; ++i) {\r\n                gl.uniformMatrix3fv(sp.uTransforms[i], false, stack[maxI - 1 - i]);\r\n            } //for\r\n        }\r\n\r\n        gl.setTransform = function setTransform(m11, m12, m21, m22, dx, dy) {\r\n            gl2d.transform.setIdentity();\r\n            gl.transform.apply(this, arguments);\r\n        };\r\n\r\n        gl.fillRect = function fillRect(x, y, width, height) {\r\n            var transform = gl2d.transform;\r\n            var shaderProgram = gl2d.initShaders(transform.c_stack + 2, 0);\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, gl.rectVertexPositionBuffer);\r\n            gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, 4, gl.FLOAT, false, 0, 0);\r\n\r\n            transform.pushMatrix();\r\n\r\n            transform.translate(x, y);\r\n            transform.scale(width, height);\r\n\r\n            sendTransformStack(shaderProgram);\r\n\r\n            gl.uniform4f(shaderProgram.uColor, drawState.fillStyle[0], drawState.fillStyle[1], drawState.fillStyle[2], drawState.fillStyle[3]);\r\n\r\n            gl.drawArrays(gl.TRIANGLE_FAN, 0, 4);\r\n\r\n            transform.popMatrix();\r\n        };\r\n\r\n        gl.strokeRect = function strokeRect(x, y, width, height) {\r\n            var transform = gl2d.transform;\r\n            var shaderProgram = gl2d.initShaders(transform.c_stack + 2, 0);\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, gl.rectVertexPositionBuffer);\r\n            gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, 4, gl.FLOAT, false, 0, 0);\r\n\r\n            transform.pushMatrix();\r\n\r\n            transform.translate(x, y);\r\n            transform.scale(width, height);\r\n\r\n            sendTransformStack(shaderProgram);\r\n\r\n            gl.uniform4f(shaderProgram.uColor, drawState.strokeStyle[0], drawState.strokeStyle[1], drawState.strokeStyle[2], drawState.strokeStyle[3]);\r\n\r\n            gl.drawArrays(gl.LINE_LOOP, 0, 4);\r\n\r\n            transform.popMatrix();\r\n        };\r\n\r\n        gl.clearRect = function clearRect(x, y, width, height) {\r\n        };\r\n\r\n        var subPaths = [];\r\n\r\n        function SubPath(x, y) {\r\n            this.closed = false;\r\n            this.verts = [x, y, 0, 0];\r\n        }\r\n\r\n        // Empty the list of subpaths so that the context once again has zero subpaths\r\n        gl.beginPath = function beginPath() {\r\n            subPaths.length = 0;\r\n        };\r\n\r\n        // Mark last subpath as closed and create a new subpath with the same starting point as the previous subpath\r\n        gl.closePath = function closePath() {\r\n            if (subPaths.length) {\r\n                // Mark last subpath closed.\r\n                var prevPath = subPaths[subPaths.length - 1], startX = prevPath.verts[0], startY = prevPath.verts[1];\r\n                prevPath.closed = true;\r\n\r\n                // Create new subpath using the starting position of previous subpath\r\n                var newPath = new SubPath(startX, startY);\r\n                subPaths.push(newPath);\r\n            }\r\n        };\r\n\r\n        // Create a new subpath with the specified point as its first (and only) point\r\n        gl.moveTo = function moveTo(x, y) {\r\n            subPaths.push(new SubPath(x, y));\r\n        };\r\n\r\n        gl.lineTo = function lineTo(x, y) {\r\n            if (subPaths.length) {\r\n                subPaths[subPaths.length - 1].verts.push(x, y, 0, 0);\r\n            } else {\r\n                // Create a new subpath if none currently exist\r\n                gl.moveTo(x, y);\r\n            }\r\n        };\r\n\r\n        gl.quadraticApproximateCount = 50;\r\n        gl.quadraticCurveTo = function quadraticCurveTo(hx, hy, x, y) {\r\n            if (subPaths.length) {\r\n                var verts = subPaths[subPaths.length - 1].verts,\r\n                    fromx = verts[verts.length - 4],\r\n                    fromy = verts[verts.length - 3],\r\n                    t, i, tx, ty;\r\n                for (var j = 0; j < gl.quadraticApproximateCount; j++) {\r\n                    t = j / gl.quadraticApproximateCount;\r\n                    i = 1 - t;\r\n                    tx = i * i * fromx + 2 * i * t * hx + t * t * x;\r\n                    ty = i * i * fromy + 2 * i * t * hy + t * t * y;\r\n                    verts.push(tx, ty, 0, 0);\r\n                }\r\n            } else {\r\n                gl.moveTo(x, y);\r\n            }\r\n        };\r\n\r\n        gl.bezierApproximateCount = 50;\r\n        gl.bezierCurveTo = function quadraticCurveTo(h1x, h1y, h2x, h2y, x, y) {\r\n            if (subPaths.length) {\r\n                var verts = subPaths[subPaths.length - 1].verts,\r\n                    fromx = verts[verts.length - 4],\r\n                    fromy = verts[verts.length - 3],\r\n                    t, i, tx, ty;\r\n                for (var j = 0; j < gl.bezierApproximateCount; j++) {\r\n                    t = j / gl.bezierApproximateCount;\r\n                    i = 1 - t;\r\n                    tx = i * i * i * fromx + 3 * i * i * t * h1x + 3 * i * t * t * h2x + t * t * t * x;\r\n                    ty = i * i * i * fromy + 3 * i * i * t * h1y + 3 * i * t * t * h2y + t * t * t * y;\r\n                    verts.push(tx, ty, 0, 0);\r\n                }\r\n            } else {\r\n                gl.moveTo(x, y);\r\n            }\r\n        };\r\n\r\n        gl.arcTo = function arcTo() {\r\n            if (subPaths.length) {\r\n                ;\r\n            } else {\r\n                gl.moveTo(x, y);\r\n            }\r\n        };\r\n\r\n        // Adds a closed rect subpath and creates a new subpath\r\n        gl.rect = function rect(x, y, w, h) {\r\n            gl.moveTo(x, y);\r\n            gl.lineTo(x + w, y);\r\n            gl.lineTo(x + w, y + h);\r\n            gl.lineTo(x, y + h);\r\n            gl.closePath();\r\n        };\r\n\r\n        gl.arcApproximateCount = 100;\r\n        gl.arc = function arc(cx, cy, radius, startAngle, endAngle, anticlockwise) {\r\n            if (subPaths.length) {\r\n                var verts = subPaths[subPaths.length - 1].verts;\r\n\r\n                // startAngle\r\n                var x = cx + radius * Math.cos(startAngle),\r\n                    y = cy + radius * Math.sin(startAngle);\r\n                verts.push(x, y, 0, 0);\r\n\r\n                while (startAngle > Math.PI * 2)\r\n                    startAngle -= Math.PI * 2;\r\n                while (endAngle > Math.PI * 2)\r\n                    endAngle -= Math.PI * 2;\r\n                while (startAngle < -Math.PI * 2)\r\n                    startAngle += Math.PI * 2;\r\n                while (endAngle < -Math.PI * 2)\r\n                    endAngle += Math.PI * 2;\r\n                if (startAngle == endAngle)\r\n                    return;\r\n\r\n                var count = 1 / gl.arcApproximateCount,\r\n                    fixed = gl.arcApproximateCount,\r\n                    t;\r\n                if (anticlockwise) {\r\n                    endAngle -= Math.PI * 2;\r\n                    count = -count;\r\n                }\r\n                for (var i = startAngle; (i > endAngle && anticlockwise) || (i < endAngle && !anticlockwise); i += count) {\r\n                    if (t == (t = (i * fixed | 0) / fixed))\r\n                        continue;\r\n                    x = cx + radius * Math.cos(t);\r\n                    y = cy + radius * Math.sin(t);\r\n                    verts.push(x, y, 0, 0);\r\n                }\r\n            } else {\r\n                gl.moveTo(x, y);\r\n            }\r\n        };\r\n\r\n        function fillSubPath(index) {\r\n            var transform = gl2d.transform;\r\n            var shaderProgram = gl2d.initShaders(transform.c_stack + 2, 0);\r\n\r\n            var subPath = subPaths[index];\r\n            var verts = subPath.verts;\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, gl.pathVertexPositionBuffer);\r\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(verts), gl.STATIC_DRAW);\r\n\r\n            gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, 4, gl.FLOAT, false, 0, 0);\r\n\r\n            transform.pushMatrix();\r\n\r\n            sendTransformStack(shaderProgram);\r\n\r\n            gl.uniform4f(shaderProgram.uColor, drawState.fillStyle[0], drawState.fillStyle[1], drawState.fillStyle[2], drawState.fillStyle[3]);\r\n\r\n            gl.drawArrays(gl.TRIANGLE_FAN, 0, verts.length / 4);\r\n\r\n            transform.popMatrix();\r\n        }\r\n\r\n        gl.fill = function fill() {\r\n            for (var i = 0; i < subPaths.length; i++) {\r\n                fillSubPath(i);\r\n            }\r\n        };\r\n\r\n        function strokeSubPath(index) {\r\n            var transform = gl2d.transform;\r\n            var shaderProgram = gl2d.initShaders(transform.c_stack + 2, 0);\r\n\r\n            var subPath = subPaths[index];\r\n            var verts = subPath.verts;\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, gl.pathVertexPositionBuffer);\r\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(verts), gl.STATIC_DRAW);\r\n\r\n            gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, 4, gl.FLOAT, false, 0, 0);\r\n\r\n            transform.pushMatrix();\r\n\r\n            sendTransformStack(shaderProgram);\r\n\r\n            gl.uniform4f(shaderProgram.uColor, drawState.strokeStyle[0], drawState.strokeStyle[1], drawState.strokeStyle[2], drawState.strokeStyle[3]);\r\n\r\n            if (subPath.closed) {\r\n                gl.drawArrays(gl.LINE_LOOP, 0, verts.length / 4);\r\n            } else {\r\n                gl.drawArrays(gl.LINE_STRIP, 0, verts.length / 4);\r\n            }\r\n\r\n            transform.popMatrix();\r\n        }\r\n\r\n        gl.stroke = function stroke() {\r\n            for (var i = 0; i < subPaths.length; i++) {\r\n                strokeSubPath(i);\r\n            }\r\n        };\r\n\r\n        gl.clip = function clip() {\r\n        };\r\n\r\n        gl.isPointInPath = function isPointInPath() {\r\n        };\r\n\r\n        gl.drawFocusRing = function drawFocusRing() {\r\n        };\r\n\r\n\r\n        var imageCache = [], textureCache = [];\r\n\r\n        function Texture(image) {\r\n            this.obj = gl.createTexture();\r\n            this.index = textureCache.push(this);\r\n\r\n            imageCache.push(image);\r\n\r\n            // we may wish to consider tiling large images like this instead of scaling and\r\n            // adjust appropriately (flip to next texture source and tile offset) when drawing\r\n            if (image.width > gl2d.maxTextureSize || image.height > gl2d.maxTextureSize) {\r\n                var canvas = document.createElement(\"canvas\");\r\n\r\n                canvas.width = (image.width > gl2d.maxTextureSize) ? gl2d.maxTextureSize : image.width;\r\n                canvas.height = (image.height > gl2d.maxTextureSize) ? gl2d.maxTextureSize : image.height;\r\n\r\n                var ctx = canvas.getContext(\"2d\");\r\n\r\n                ctx.drawImage(image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height);\r\n\r\n                image = canvas;\r\n            }\r\n\r\n            var GL_FUNCTION = gl.LINEAR;\r\n            var GL_MIPMAP_FUNCTION = gl.LINEAR_MIPMAP_LINEAR;\r\n\r\n            if (!drawState.imageSmoothingEnabled) {\r\n                GL_FUNCTION = gl.NEAREST;\r\n                GL_MIPMAP_FUNCTION = gl.LINEAR_MIPMAP_NEAREST;\r\n            }\r\n\r\n            gl.bindTexture(gl.TEXTURE_2D, this.obj);\r\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, GL_FUNCTION);\r\n\r\n            // Enable Mip mapping on power-of-2 textures\r\n            if (isPOT(image.width) && isPOT(image.height)) {\r\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, GL_MIPMAP_FUNCTION);\r\n                gl.generateMipmap(gl.TEXTURE_2D);\r\n            } else {\r\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, GL_FUNCTION);\r\n            }\r\n\r\n            // Unbind texture\r\n            gl.bindTexture(gl.TEXTURE_2D, null);\r\n        }\r\n\r\n        gl.drawImage = function drawImage(image, a, b, c, d, e, f, g, h) {\r\n            var transform = gl2d.transform;\r\n\r\n            transform.pushMatrix();\r\n\r\n            var sMask = shaderMask.texture;\r\n            var doCrop = false;\r\n\r\n            //drawImage(image, dx, dy)\r\n            if (arguments.length === 3) {\r\n                transform.translate(a, b);\r\n                transform.scale(image.width, image.height);\r\n            }\r\n\r\n            //drawImage(image, dx, dy, dw, dh)\r\n            else if (arguments.length === 5) {\r\n                transform.translate(a, b);\r\n                transform.scale(c, d);\r\n            }\r\n\r\n            //drawImage(image, sx, sy, sw, sh, dx, dy, dw, dh)\r\n            else if (arguments.length === 9) {\r\n                transform.translate(e, f);\r\n                transform.scale(g, h);\r\n                sMask = sMask | shaderMask.crop;\r\n                doCrop = true;\r\n            }\r\n\r\n            var shaderProgram = gl2d.initShaders(transform.c_stack + 1, sMask);\r\n\r\n            var texture, cacheIndex = imageCache.indexOf(image);\r\n\r\n            if (cacheIndex !== -1) {\r\n                texture = textureCache[cacheIndex];\r\n            } else {\r\n                texture = new Texture(image);\r\n            }\r\n\r\n            if (doCrop) {\r\n                gl.uniform4f(shaderProgram.uCropSource, a / image.width, b / image.height, c / image.width, d / image.height);\r\n            }\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, gl.rectVertexPositionBuffer);\r\n            gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, 4, gl.FLOAT, false, 0, 0);\r\n\r\n            gl.bindTexture(gl.TEXTURE_2D, texture.obj);\r\n            gl.activeTexture(gl.TEXTURE0);\r\n\r\n            gl.uniform1i(shaderProgram.uSampler, 0);\r\n\r\n            sendTransformStack(shaderProgram);\r\n            gl.drawArrays(gl.TRIANGLE_FAN, 0, 4);\r\n\r\n            transform.popMatrix();\r\n        };\r\n\r\n        // This enables the user to detect whether they got a webgl-2d context or a 2d context.\r\n        Object.defineProperty(gl, \"isWebGL\", {\r\n            configurable: false,\r\n            enumerable: true,\r\n            writable: false,\r\n            value: true\r\n        });\r\n    };\r\n\r\n    return WebGL2D;\r\n});\r\n"],"sourceRoot":"/source/"}