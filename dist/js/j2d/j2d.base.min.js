/**
 * J2D (jQuery plugin of the fork j2Ds)
 *
 * @authors Skaner, DeVinterX
 * @license BSD, zlib
 * @version 0.1.8-dev
 */

if (global === undefined) var global = window;
if (typeof define !== 'function' || define.amd) global.J2D = {};

!function(t,o){"function"==typeof define&&define.amd?define("j2d.base",["jquery.j2d","j2d.scene"],o):o(t.J2D,t.Scene)}(global,function(t,o){"use strict";o.prototype.addBaseNode||(o.prototype.addBaseNode=function(t,o){return new i(this.parent,t,o)});var i=function(t,o,i){this.nodeName="BaseNode",this.j2d=t,this.layer=t.scene,this.options={visible:!0,alpha:1,position:o,size:i,parent:!1,angle:0,box:{offset:{x:0,y:0},size:{x:0,y:0}}}};return i.prototype.mergeOptions=function(t,o){void 0===o&&(o=this.options);for(var i in t)if(t.hasOwnProperty(i))try{t[i].constructor==Object?o[i]=this.mergeOptions(t[i],o[i]):o[i]=t[i]}catch(s){o[i]=t[i]}return o},i.prototype.saveJSON=function(){return JSON.stringify({node:this.nodeName,data:this.options})},i.prototype.loadJSON=function(t){if(t=JSON.parse(t),this.nodeName===t.node)return this.mergeOptions(t.data);throw"Node type invalid to loadJSON data."},i.prototype.resizeBox=function(t,o){this.options.box.offset=t,this.options.box.size=o},i.prototype.setLayer=function(t){this.layer=t?this.j2d.layers.getLayer(t):this.j2d.scene},i.prototype.getLayer=function(){return this.layer},i.prototype.setVisible=function(t){this.options.visible=t},i.prototype.isVisible=function(){return this.options.visible},i.prototype.setAlpha=function(t){0>t&&(t=0),t>1&&(t=1),this.options.alpha=t},i.prototype.getAlpha=function(t){return this.options.alpha},i.prototype.moveTo=function(t,o){o=o?o:1,this.move(this.j2d.vector.v2f((t.x-this.getPosition().x)/o,(t.y-this.getPosition().y)/o))},i.prototype.setPosition=function(t){return void 0===t?this.options.position:void(this.options.position=this.j2d.vector.v2f(t.x-Math.ceil(this.options.size.x/2),t.y-Math.ceil(this.options.size.y/2)))},i.prototype.move=function(t){this.options.position.x+=t.x,this.options.position.y+=t.y},i.prototype.getPosition=function(){return this.j2d.vector.v2f(this.options.position.x+Math.ceil(this.options.size.x/2),this.options.position.y+Math.ceil(this.options.size.y/2))},i.prototype.setSize=function(t){return void 0===t?this.options.size:void(this.options.size=t)},i.prototype.getSize=function(){return this.options.size},i.prototype.setParent=function(t){this.parent=t},i.prototype.getDistance=function(t){return Math.ceil(Math.sqrt(Math.pow(t.getPosition().x-this.getPosition().x,2)+Math.pow(t.getPosition().y-this.getPosition().y,2)))},i.prototype.getDistanceXY=function(t){return this.j2d.vector.v2f(Math.abs(t.getPosition().x-this.getPosition().x),Math.abs(t.getPosition().y-this.getPosition().y))},i.prototype.isIntersect=function(t){var o={x1:this.options.position.x+this.options.box.offset.x,x2:t.options.position.x+t.options.box.offset.x,y1:this.options.position.y+this.options.box.offset.y,y2:t.options.position.y+t.options.box.offset.y},i={x1:this.options.size.x+this.options.box.size.x,x2:t.options.size.x+t.options.box.size.x,y1:this.options.size.y+this.options.box.size.y,y2:t.options.size.y+t.options.box.size.y};return o.y1+i.y1>=o.y2&&o.x1+i.x1>=o.x2&&o.x1<o.x2+i.x2&&o.y1<o.y2+i.y2},i.prototype.isCollision=function(t){var o=!1;return this.getDistanceXY(t).x<this.options.size.x/2+t.options.size.x/2&&this.getDistanceXY(t).y<this.options.size.y/2+t.options.size.y/2&&(o=!0),o},i.prototype.isLookScene=function(){var t=!0;return(this.options.position.x>this.j2d.scene.viewport.x+this.j2d.scene.width||this.options.position.x+this.options.size.x<this.j2d.scene.viewport.x||this.options.position.y>this.j2d.scene.viewport.y+this.j2d.scene.height||this.options.position.y+this.options.size.y<this.j2d.scene.viewport.y)&&(t=!1),t},i.prototype.turn=function(t){this.options.angle=this.options.angle%360,this.options.angle+=t},i.prototype.setRotation=function(t){this.options.angle=t%360},i.prototype.getRotation=function(t){return this.options.angle},i.prototype.isOutScene=function(){return{x:this.options.position.x+this.options.size.x>=this.j2d.scene.viewport.x+this.j2d.scene.width?1:this.options.position.x<=this.j2d.scene.viewport.x?-1:0,y:this.options.position.y+this.options.size.y>=this.j2d.scene.viewport.y+this.j2d.scene.height?1:this.options.position.y<=this.j2d.scene.viewport.y?-1:0,all:this.x||this.y}},i.prototype.moveDir=function(t){this.options.position.x+=t*Math.cos(this.j2d.math.rad(this.options.angle)),this.options.position.y+=t*Math.sin(this.j2d.math.rad(this.options.angle))},i.prototype.drawBox=function(){var t=this.layer.context;this.options.angle&&(t.save(),t.translate(this.getPosition().x-this.j2d.scene.viewport.x,this.getPosition().y-this.j2d.scene.viewport.y),t.rotate(this.j2d.math.rad(this.options.angle)),t.translate(-(this.getPosition().x-this.j2d.scene.viewport.x),-(this.getPosition().y-this.j2d.scene.viewport.y))),t.lineWidth=2,t.strokeStyle="black",t.lineCap="round",t.beginPath(),t.rect(this.options.position.x-this.j2d.scene.viewport.x,this.options.position.y-this.j2d.scene.viewport.y,this.options.size.x,this.options.size.y),t.stroke(),t.strokeStyle="yellow",t.beginPath(),t.rect(this.options.box.offset.x+this.options.position.x-this.j2d.scene.viewport.x,this.options.box.offset.y+this.options.position.y-this.j2d.scene.viewport.y,this.options.box.size.x+this.options.size.x,this.options.box.size.y+this.options.size.y),t.stroke(),t.lineCap="butt",this.options.angle&&t.restore()},void 0!==global.J2D&&(global.BaseNode=i),i});
//# sourceMappingURL=j2d.base.min.map
