{"version":3,"sources":["j2d.storage.js","j2d/j2d.storage.js"],"names":["root","factory","define","amd","jQuery","global","$","undefined","map","method","defaults","cookiePrefix","cookieOptions","path","domain","document","expires","support","window","e","key","value","options","extend","this","getItem","returns","JSON","parse","cookie","arr","i","length","setItem","stringify","removeItem","clear","reg","RegExp","opts","split","test","trim","substr","indexOf","Storage","uid","storageType","storage","id","replace","c","r","Math","random","v","toString","prototype","load","name","exist","save","loadNode","node","loadJSON","saveNode","saveJSON","J2D"],"mappings":"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","file":"j2d/j2d.storage.js","sourcesContent":[null,"/**\r\n * J2D (jQuery plugin of the fork j2ds)\r\n *\r\n * @authors Skaner, likerRr, DeVinterX\r\n * @license BSD, zlib\r\n * @version 0.1.5a\r\n * @see https://github.com/SkanerSoft/J2ds/commit/501b8993fc41960794572dc481a5f2fe492da349\r\n */\r\n\r\n!function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('j2d.storage', ['jquery'], factory);\r\n    } else {\r\n        factory(root.jQuery);\r\n    }\r\n}(global, function ($) {\r\n    \"use strict\";\r\n\r\n    /*!\r\n     * jquery.storage.js 0.0.3 - https://github.com/yckart/jquery.storage.js\r\n     * The client-side storage for every browser, on any device.\r\n     *\r\n     * Copyright (c) 2012 Yannick Albert (http://yckart.com)\r\n     * Licensed under the MIT license (http://www.opensource.org/licenses/mit-license.php).\r\n     * 2013/02/10\r\n     **/\r\n    if ($['localStorage'] === undefined || $['sessionStorage'] === undefined) {\r\n        $.map(['localStorage', 'sessionStorage'], function (method) {\r\n            var defaults = {\r\n                cookiePrefix: 'fallback:' + method + ':',\r\n                cookieOptions: {\r\n                    path: '/',\r\n                    domain: document.domain,\r\n                    expires: ('localStorage' === method) ? {expires: 365} : undefined\r\n                }\r\n            };\r\n\r\n            try {\r\n                $.support[method] = method in window && window[method] !== null;\r\n            } catch (e) {\r\n                $.support[method] = false;\r\n            }\r\n\r\n            $[method] = function (key, value) {\r\n                var options = $.extend({}, defaults, $[method].options);\r\n\r\n                this.getItem = function (key) {\r\n                    var returns = function (key) {\r\n                        return JSON.parse($.support[method] ? window[method].getItem(key) : $.cookie(options.cookiePrefix + key));\r\n                    };\r\n                    if (typeof key === 'string') return returns(key);\r\n\r\n                    var arr = [],\r\n                        i = key.length;\r\n                    while (i--) arr[i] = returns(key[i]);\r\n                    return arr;\r\n                };\r\n\r\n                this.setItem = function (key, value) {\r\n                    value = JSON.stringify(value);\r\n                    return $.support[method] ?\r\n                        window[method].setItem(key, value) : $.cookie(options.cookiePrefix + key, value, options.cookieOptions);\r\n                };\r\n\r\n                this.removeItem = function (key) {\r\n                    return $.support[method]\r\n                        ? window[method].removeItem(key)\r\n                        : $.cookie(options.cookiePrefix + key, null, $.extend(options.cookieOptions, {\r\n                            expires: -1\r\n                        }\r\n                    ));\r\n                };\r\n\r\n                this.clear = function () {\r\n                    if ($.support[method]) {\r\n                        return window[method].clear();\r\n                    } else {\r\n                        var reg = new RegExp('^' + options.cookiePrefix, ''),\r\n                            opts = $.extend(options.cookieOptions, {\r\n                                expires: -1\r\n                            });\r\n\r\n                        if (document.cookie && document.cookie !== '') {\r\n                            $.map(document.cookie.split(';'), function (cookie) {\r\n                                if (reg.test(cookie = $.trim(cookie))) {\r\n                                    $.cookie(cookie.substr(0, cookie.indexOf('=')), null, opts);\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                };\r\n\r\n                if (typeof key !== \"undefined\") {\r\n                    return typeof value !== \"undefined\"\r\n                        ? ( value === null ? this.removeItem(key) : this.setItem(key, value) ) : this.getItem(key);\r\n                }\r\n\r\n                return this;\r\n            };\r\n\r\n            $[method].options = defaults;\r\n        });\r\n    }\r\n    /*!\r\n     * End plugin for jquery\r\n     */\r\n\r\n    var Storage = function (uid, storageType) {\r\n        this.storage = (storageType === 'sessionStorage') ? 'sessionStorage' : 'localStorage';\r\n        this.id = (uid !== undefined && typeof uid === 'string') ? uid : 'xxxxxxxx'.replace(/[xy]/g,\r\n            function (c) {\r\n                var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n                return v.toString(16);\r\n            }\r\n        );\r\n    };\r\n\r\n    Storage.prototype.load = function (name) {\r\n        return $[this.storage](this.id + '_' + name);\r\n    };\r\n\r\n    Storage.prototype.exist = function (name) {\r\n        return !!($[this.storage](this.id + '_' + name));\r\n    };\r\n\r\n    Storage.prototype.save = function (name, value) {\r\n        $[this.storage](this.id + '_' + name, value);\r\n    };\r\n\r\n    Storage.prototype.loadNode = function (name, node) {\r\n        return node.loadJSON($[this.storage](this.id + '_' + name));\r\n    };\r\n\r\n    Storage.prototype.saveNode = function (name, node) {\r\n        $[this.storage](this.id + '_' + name, node.saveJSON());\r\n    };\r\n\r\n    if (global.J2D !== undefined) global.Storage = Storage;\r\n    return Storage;\r\n});\r\n"],"sourceRoot":"/source/"}