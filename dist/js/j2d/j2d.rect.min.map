{"version":3,"sources":["j2d/j2d.rect.js"],"names":["define","J2D","BaseNode","Scene","prototype","addRectNode","position","size","color","RectNode","this","parent","j2d","call","mergeOptions","Object","create","constructor","draw","context","layer","options","visible","isLookScene","alpha","tmpAlpha","globalAlpha","angle","save","translate","getPosition","x","scene","viewport","y","rotate","math","rad","fillStyle","lineWidth","fillRect","restore"],"mappings":"AASAA,OAAO,YACH,aACA,WACA,aACD,SAAUC,EAAKC,EAAUC,GACxB,YAEKA,GAAMC,UAAUC,cACjBF,EAAMC,UAAUC,YAAc,SAAUC,EAAUC,EAAMC,GACpD,MAAO,IAAIC,GAASC,KAAKC,OAAQL,EAAUC,EAAMC,IAIzD,IAAIC,GAAW,SAAUG,EAAKN,EAAUC,EAAMC,GAC1CN,EAASW,KAAKH,KAAME,EAAKN,EAAUC,GACnCG,KAAKI,cACDN,MAAOA,IAyCf,OArCAC,GAASL,UAAYW,OAAOC,OAAOd,EAASE,WAC5CK,EAASL,UAAUa,YAAcR,EAEjCA,EAASL,UAAUc,KAAO,WACtB,GAAIC,GAAUT,KAAKU,MAAMD,OACzB,IAAIT,KAAKW,QAAQC,SAAWZ,KAAKa,cAAe,CAE5C,GAA0B,GAAtBb,KAAKW,QAAQG,MAAY,CACzB,GAAIC,GAAWN,EAAQO,WACvBP,GAAQO,YAAchB,KAAKW,QAAQG,MAGnCd,KAAKW,QAAQM,QACbR,EAAQS,OACRT,EAAQU,UAAUnB,KAAKoB,cAAcC,EAAIrB,KAAKE,IAAIoB,MAAMC,SAASF,EAAGrB,KAAKoB,cAAcI,EAAIxB,KAAKE,IAAIoB,MAAMC,SAASC,GACnHf,EAAQgB,OAAOzB,KAAKE,IAAIwB,KAAKC,IAAI3B,KAAKW,QAAQM,QAC9CR,EAAQU,YAAYnB,KAAKoB,cAAcC,EAAIrB,KAAKE,IAAIoB,MAAMC,SAASF,KAAMrB,KAAKoB,cAAcI,EAAIxB,KAAKE,IAAIoB,MAAMC,SAASC,KAG5Hf,EAAQmB,UAAY5B,KAAKW,QAAQb,MACjCW,EAAQoB,UAAY,EAEpBpB,EAAQqB,SACJ9B,KAAKW,QAAQf,SAASyB,EAAIrB,KAAKE,IAAIoB,MAAMC,SAASF,EAClDrB,KAAKW,QAAQf,SAAS4B,EAAIxB,KAAKE,IAAIoB,MAAMC,SAASC,EAClDxB,KAAKW,QAAQd,KAAKwB,EAAGrB,KAAKW,QAAQd,KAAK2B,GAEvCxB,KAAKW,QAAQM,OACbR,EAAQsB,UAGc,GAAtB/B,KAAKW,QAAQG,QACbL,EAAQO,YAAcD,KAK3BhB","file":"j2d/j2d.rect.min","sourcesContent":["/**\r\n * J2D (jQuery plugin of the fork j2ds)\r\n *\r\n * @authors Skaner, likerRr, DeVinterX\r\n * @license zlib\r\n * @version 0.1.5a\r\n * @see https://github.com/SkanerSoft/J2ds/commit/501b8993fc41960794572dc481a5f2fe492da349\r\n */\r\n\r\ndefine('j2d.rect', [\r\n    'jquery.j2d',\r\n    'j2d.base',\r\n    'j2d.scene'\r\n], function (J2D, BaseNode, Scene) {\r\n    \"use strict\";\r\n\r\n    if (!Scene.prototype.addRectNode) {\r\n        Scene.prototype.addRectNode = function (position, size, color) {\r\n            return new RectNode(this.parent, position, size, color);\r\n        };\r\n    }\r\n\r\n    var RectNode = function (j2d, position, size, color) {\r\n        BaseNode.call(this, j2d, position, size);\r\n        this.mergeOptions({\r\n            color: color\r\n        });\r\n    };\r\n\r\n    RectNode.prototype = Object.create(BaseNode.prototype);\r\n    RectNode.prototype.constructor = RectNode;\r\n\r\n    RectNode.prototype.draw = function () {\r\n        var context = this.layer.context;\r\n        if (this.options.visible && this.isLookScene()) {\r\n\r\n            if (this.options.alpha != 1) {\r\n                var tmpAlpha = context.globalAlpha;\r\n                context.globalAlpha = this.options.alpha;\r\n            }\r\n\r\n            if (this.options.angle) {\r\n                context.save();\r\n                context.translate(this.getPosition().x - this.j2d.scene.viewport.x, this.getPosition().y - this.j2d.scene.viewport.y);\r\n                context.rotate(this.j2d.math.rad(this.options.angle));\r\n                context.translate(-(this.getPosition().x - this.j2d.scene.viewport.x), -(this.getPosition().y - this.j2d.scene.viewport.y));\r\n            }\r\n\r\n            context.fillStyle = this.options.color;\r\n            context.lineWidth = 0;\r\n\r\n            context.fillRect(\r\n                this.options.position.x - this.j2d.scene.viewport.x,\r\n                this.options.position.y - this.j2d.scene.viewport.y,\r\n                this.options.size.x, this.options.size.y);\r\n\r\n            if (this.options.angle) {\r\n                context.restore();\r\n            }\r\n\r\n            if (this.options.alpha != 1) {\r\n                context.globalAlpha = tmpAlpha;\r\n            }\r\n        }\r\n    };\r\n\r\n    return RectNode;\r\n});\r\n"],"sourceRoot":"/source/"}