{"version":3,"sources":["j2d/j2d.layers.js"],"names":["define","WebGL2D","LayersManager","j2d","WebGL_API","this","parent","list","prototype","getLayer","id","add","zIndex","layer","layerName","canvas","document","createElement","width","scene","height","options","webGL","enable","context","getContext","shadowColor","style","position","left","top","opacity","angle","visible","fillColor","onContext","callback","fill","color","fillStyle","fillRect","setOpacity","getOpacity","setVisible","display","isVisible","setIndex","clear","clearRect","clearNode","node","isLookScene","pos","x","viewport","y","size","resize","save","restore","ready","element","append"],"mappings":"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","file":"j2d/j2d.layers.min","sourcesContent":["/**\r\n * J2D (jQuery plugin of the fork j2ds)\r\n *\r\n * @authors Skaner, likerRr, DeVinterX\r\n * @license zlib\r\n * @version 0.1.5a\r\n * @see https://github.com/SkanerSoft/J2ds/commit/d91880bd189a29b364cc6fd2a3af069f139c5f8a\r\n */\r\n\r\ndefine('j2d.layers', [], function () {\r\n    \"use strict\";\r\n\r\n    var WebGL2D;\r\n\r\n    var LayersManager = function (j2d, WebGL_API) {\r\n        this.parent = j2d;\r\n        this.list = {};\r\n\r\n        WebGL2D = WebGL_API;\r\n    };\r\n\r\n    LayersManager.prototype.getLayer = function (id) {\r\n        return this.list[id];\r\n    };\r\n    LayersManager.prototype.add = function (id, zIndex) {\r\n        if (this.list[id]) {\r\n            return false;\r\n        }\r\n\r\n        var layer = {};\r\n        var j2d = this.parent;\r\n\r\n        layer.layerName = id;\r\n        layer.canvas = document.createElement('canvas');\r\n        layer.canvas.width = j2d.scene.width;\r\n        layer.canvas.height = j2d.scene.height;\r\n        layer.width = j2d.scene.width;\r\n        layer.height = j2d.scene.height;\r\n        if (j2d.options.webGL) {\r\n            WebGL2D.enable(layer.canvas);\r\n            layer.context = layer.canvas.getContext('WebGL-2d');\r\n        } else {\r\n            layer.context = layer.canvas.getContext('2d');\r\n        }\r\n        layer.context.shadowColor = 'rgba(0,0,0,0)';\r\n        layer.canvas.style.zIndex = 1000 + zIndex;\r\n        layer.canvas.style.position = 'absolute';\r\n        layer.canvas.style.left = '0';\r\n        layer.canvas.style.top = '0';\r\n        layer.canvas.id = id;\r\n        layer.opacity = 1;\r\n        layer.angle = 0;\r\n        layer.visible = 1;\r\n\r\n        layer.fillColor = false;\r\n\r\n        layer.onContext = function (callback) {\r\n            callback(this.context);\r\n        };\r\n\r\n        layer.fill = function (color) {\r\n            this.fillColor = color;\r\n            this.context.fillStyle = color;\r\n            this.context.fillRect(0, 0, this.width, this.height);\r\n        };\r\n\r\n        layer.setOpacity = function (opacity) {\r\n            this.canvas.style.opacity = opacity;\r\n            this.opacity = opacity;\r\n        };\r\n\r\n        layer.getOpacity = function () {\r\n            return this.opacity;\r\n        };\r\n\r\n        layer.setVisible = function (visible) {\r\n            if (visible) {\r\n                this.canvas.style.display = 'block';\r\n                this.visible = true;\r\n            } else {\r\n                this.canvas.style.display = 'none';\r\n                this.visible = false;\r\n            }\r\n        };\r\n\r\n        layer.isVisible = function () {\r\n            return this.visible;\r\n        };\r\n\r\n        layer.setIndex = function (zIndex) {\r\n            this.canvas.style.zIndex = 1000 + zIndex;\r\n        };\r\n\r\n        layer.clear = function () {\r\n            this.context.clearRect(0, 0, this.width, this.height);\r\n        };\r\n\r\n        layer.clearNode = function (node) {\r\n            if (node.isLookScene()) {\r\n                this.context.clearRect(node.pos.x - j2d.scene.viewport.x, node.pos.y - j2d.scene.viewport.y, node.size.x, node.size.y);\r\n            }\r\n        };\r\n\r\n        layer.clearRect = function (pos, size) {\r\n            this.context.clearRect(pos.x - j2d.scene.viewport.x, pos.y - j2d.scene.viewport.y, size.x, size.y);\r\n        };\r\n\r\n        layer.resize = function (width, height) {\r\n            this.canvas.width = width;\r\n            this.canvas.height = height;\r\n            this.width = width;\r\n            this.height = height;\r\n\r\n            if (this.fillColor) {\r\n                this.context.save();\r\n\r\n                this.context.fillStyle = this.fillColor;\r\n                this.context.fillRect(0, 0, this.width, this.height);\r\n\r\n                this.context.restore();\r\n            }\r\n        };\r\n\r\n        this.list[id] = layer;\r\n\r\n        if (j2d.options.ready) {\r\n            j2d.element.append(this.list[id].canvas);\r\n        }\r\n\r\n        return layer;\r\n    };\r\n\r\n    return LayersManager;\r\n});\r\n"],"sourceRoot":"/source/"}