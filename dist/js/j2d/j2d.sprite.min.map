{"version":3,"sources":["j2d.sprite.js","j2d/j2d.sprite.js"],"names":["root","factory","define","amd","J2D","BaseNode","Scene","global","prototype","addSpriteNode","position","size","animation","SpriteNode","this","parent","j2d","call","nodeName","mergeOptions","tmpSpeed","frame","flip","x","y","Object","create","constructor","setFlip","options","draw","speed","visible","isLookScene","frameCount","drawFrame","context","layer","alpha","tmpAlpha","globalAlpha","lineWidth","angle","save","translate","getPosition","scene","viewport","rotate","math","rad","scale","drawImage","imageMap","img","sourceX","sourceW","sourceY","sourceH","restore","setAnimation","id","undefined"],"mappings":"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","file":"j2d/j2d.sprite.js","sourcesContent":[null,"/**\r\n * J2D (jQuery plugin of the fork j2ds)\r\n *\r\n * @authors Skaner, likerRr, DeVinterX\r\n * @license zlib\r\n * @version 0.1.5a\r\n * @see https://github.com/SkanerSoft/J2ds/commit/501b8993fc41960794572dc481a5f2fe492da349\r\n */\r\n\r\n!function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('j2d.sprite', ['jquery.j2d', 'j2d.base', 'j2d.scene'], factory);\r\n    } else {\r\n        factory(root.J2D, BaseNode, Scene);\r\n    }\r\n}(global, function (J2D, BaseNode, Scene) {\r\n    \"use strict\";\r\n\r\n    if (!Scene.prototype.addSpriteNode) {\r\n        Scene.prototype.addSpriteNode = function (position, size, animation) {\r\n            return new SpriteNode(this.parent, position, size, animation);\r\n        };\r\n    }\r\n\r\n    var SpriteNode = function (j2d, position, size, animation) {\r\n        BaseNode.call(this, j2d, position, size);\r\n        this.nodeName = 'SpriteNode';\r\n        this.mergeOptions({\r\n            tmpSpeed: 0,\r\n            frame: 0,\r\n            animation: animation,\r\n            flip: {\r\n                x: false,\r\n                y: false\r\n            }\r\n        });\r\n    };\r\n\r\n    SpriteNode.prototype = Object.create(BaseNode.prototype);\r\n    SpriteNode.prototype.constructor = SpriteNode;\r\n\r\n    SpriteNode.prototype.setFlip = function (x, y) {\r\n        this.options.flip = {\r\n            x: x,\r\n            y: y\r\n        };\r\n    };\r\n\r\n    SpriteNode.prototype.draw = function (speed) {\r\n        if (this.options.visible && this.isLookScene()) {\r\n            speed = speed || 1;\r\n\r\n            if (this.options.frame > this.options.animation.frameCount) {\r\n                this.options.frame = 0;\r\n            }\r\n            this.drawFrame(this.options.frame + 1);\r\n\r\n            if (this.options.tmpSpeed > speed) {\r\n                this.options.frame += 1;\r\n                this.options.tmpSpeed = 0;\r\n            } else {\r\n                this.options.tmpSpeed += 1;\r\n            }\r\n        }\r\n    };\r\n\r\n    // отрисовка одного кадра\r\n    SpriteNode.prototype.drawFrame = function (frame) {\r\n        var context = this.layer.context;\r\n        if (this.options.visible && this.isLookScene()) {\r\n\r\n            if (this.options.alpha != 1) {\r\n                var tmpAlpha = context.globalAlpha;\r\n                context.globalAlpha = this.options.alpha;\r\n            }\r\n\r\n            context.lineWidth = 0;\r\n\r\n            if (this.options.angle || this.options.flip.x || this.options.flip.y) {\r\n                context.save();\r\n                context.translate(this.getPosition().x - this.j2d.scene.viewport.x, this.getPosition().y - this.j2d.scene.viewport.y);\r\n                context.rotate(this.j2d.math.rad(this.options.angle));\r\n                context.scale(this.options.flip.x ? -1 : 1, this.options.flip.y ? -1 : 1);\r\n                context.translate(-(this.getPosition().x - this.j2d.scene.viewport.x), -(this.getPosition().y - this.j2d.scene.viewport.y));\r\n            }\r\n\r\n            frame = frame ? (frame - 1) : 0;\r\n\r\n            context.drawImage(\r\n                this.options.animation.imageMap.img,\r\n                (this.options.animation.sourceX + (this.options.animation.sourceW * frame)),\r\n                this.options.animation.sourceY,\r\n                this.options.animation.sourceW,\r\n                this.options.animation.sourceH,\r\n                this.options.position.x - this.j2d.scene.viewport.x,\r\n                this.options.position.y - this.j2d.scene.viewport.y,\r\n                this.options.size.x, this.options.size.y);\r\n\r\n            if (this.options.angle || this.options.flip.x || this.options.flip.y) {\r\n                context.restore();\r\n            }\r\n\r\n            if (this.options.alpha != 1) {\r\n                context.globalAlpha = tmpAlpha;\r\n            }\r\n        }\r\n    };\r\n\r\n    SpriteNode.prototype.setAnimation = function (id) {\r\n        if (this.options.animation != id) {\r\n            this.options.animation = id;\r\n        }\r\n    };\r\n\r\n    if (global.J2D !== undefined) global.SpriteNode = SpriteNode;\r\n    return SpriteNode;\r\n});\r\n"],"sourceRoot":"/source/"}