{"version":3,"sources":["j2d/j2d.sprite.js"],"names":["define","J2D","BaseNode","prototype","scene","addSpriteNode","pos","size","animation","SpriteNode","this","parent","j2d","call","tmpSpeed","frame","flip","x","y","Object","create","constructor","setFlip","draw","speed","visible","isLookScene","frameCount","drawFrame","context","layer","alpha","tmpAlpha","globalAlpha","lineWidth","angle","save","translate","getPosition","view","rotate","math","rad","scale","drawImage","imageMap","img","sourceX","sourceW","sourceY","sourceH","restore","setAnimation","id"],"mappings":"AASAA,OAAO,cACH,aACA,YACD,SAAUC,EAAKC,GACd,YAEKD,GAAIE,UAAUC,MAAMC,gBACrBJ,EAAIE,UAAUC,MAAMC,cAAgB,SAAUC,EAAKC,EAAMC,GACrD,MAAO,IAAIC,GAAWC,KAAKC,OAAQL,EAAKC,EAAMC,IAItD,IAAIC,GAAa,SAAUG,EAAKN,EAAKC,EAAMC,GAEvCN,EAASW,KAAKH,KAAME,EAAKN,EAAKC,GAE9BG,KAAKI,SAAW,EAChBJ,KAAKK,MAAQ,EACbL,KAAKF,UAAYA,EACjBE,KAAKM,MAAQC,GAAG,EAAOC,GAAG,GA0E9B,OAvEAT,GAAWN,UAAYgB,OAAOC,OAAOlB,EAASC,WAC9CM,EAAWN,UAAUkB,YAAcZ,EAEnCA,EAAWN,UAAUmB,QAAU,SAAUL,EAAGC,GACxCR,KAAKM,MAAQC,EAAGA,EAAGC,EAAGA,IAG1BT,EAAWN,UAAUoB,KAAO,SAAUC,GAC9Bd,KAAKe,SAAWf,KAAKgB,gBACrBF,EAAQA,GAAS,EAEbd,KAAKK,MAAQL,KAAKF,UAAUmB,aAC5BjB,KAAKK,MAAQ,GAEjBL,KAAKkB,UAAUlB,KAAKK,MAAQ,GAExBL,KAAKI,SAAWU,GAChBd,KAAKK,OAAS,EACdL,KAAKI,SAAW,GAGhBJ,KAAKI,UAAY,IAM7BL,EAAWN,UAAUyB,UAAY,SAAUb,GACvC,GAAIc,GAAUnB,KAAKoB,MAAMD,OACzB,IAAInB,KAAKe,SAAWf,KAAKgB,cAAe,CAEpC,GAAkB,GAAdhB,KAAKqB,MAAY,CACjB,GAAIC,GAAWH,EAAQI,WACvBJ,GAAQI,YAAcvB,KAAKqB,MAG/BF,EAAQK,UAAY,GAEhBxB,KAAKyB,OAASzB,KAAKM,KAAKC,GAAKP,KAAKM,KAAKE,KACvCW,EAAQO,OACRP,EAAQQ,UAAU3B,KAAK4B,cAAcrB,EAAIP,KAAKE,IAAIR,MAAMmC,KAAKtB,EAAGP,KAAK4B,cAAcpB,EAAIR,KAAKE,IAAIR,MAAMmC,KAAKrB,GAC3GW,EAAQW,OAAO9B,KAAKE,IAAI6B,KAAKC,IAAIhC,KAAKyB,QACtCN,EAAQc,MAAMjC,KAAKM,KAAKC,EAAI,GAAK,EAAGP,KAAKM,KAAKE,EAAI,GAAK,GACvDW,EAAQQ,YAAY3B,KAAK4B,cAAcrB,EAAIP,KAAKE,IAAIR,MAAMmC,KAAKtB,KAAMP,KAAK4B,cAAcpB,EAAIR,KAAKE,IAAIR,MAAMmC,KAAKrB,KAGpHH,EAAQA,EAASA,EAAQ,EAAK,EAE9Bc,EAAQe,UACJlC,KAAKF,UAAUqC,SAASC,IACvBpC,KAAKF,UAAUuC,QAAWrC,KAAKF,UAAUwC,QAAUjC,EAASL,KAAKF,UAAUyC,QAC5EvC,KAAKF,UAAUwC,QAAStC,KAAKF,UAAU0C,QACvCxC,KAAKJ,IAAIW,EAAIP,KAAKE,IAAIR,MAAMmC,KAAKtB,EAAGP,KAAKJ,IAAIY,EAAIR,KAAKE,IAAIR,MAAMmC,KAAKrB,EACrER,KAAKH,KAAKU,EAAGP,KAAKH,KAAKW,IAEvBR,KAAKyB,OAASzB,KAAKM,KAAKC,GAAKP,KAAKM,KAAKE,IACvCW,EAAQsB,UAGM,GAAdzC,KAAKqB,QACLF,EAAQI,YAAcD,KAKlCvB,EAAWN,UAAUiD,aAAe,SAAUC,GACtC3C,KAAKF,WAAa6C,IAClB3C,KAAKF,UAAY6C,IAIlB5C","file":"j2d/j2d.sprite.min","sourcesContent":["/**\r\n * J2D (jQuery plugin of the fork j2ds)\r\n *\r\n * @authors Skaner, likerRr, DeVinterX\r\n * @license zlib\r\n * @version 0.1.4\r\n * @see https://github.com/SkanerSoft/J2ds/commit/501b8993fc41960794572dc481a5f2fe492da349\r\n */\r\n\r\ndefine('j2d.sprite', [\r\n    'jquery.j2d',\r\n    'j2d.base'\r\n], function (J2D, BaseNode) {\r\n    \"use strict\";\r\n\r\n    if (!J2D.prototype.scene.addSpriteNode) {\r\n        J2D.prototype.scene.addSpriteNode = function (pos, size, animation) {\r\n            return new SpriteNode(this.parent, pos, size, animation);\r\n        };\r\n    }\r\n\r\n    var SpriteNode = function (j2d, pos, size, animation) {\r\n\r\n        BaseNode.call(this, j2d, pos, size);\r\n\r\n        this.tmpSpeed = 0;\r\n        this.frame = 0;\r\n        this.animation = animation;\r\n        this.flip = {x: false, y: false};\r\n    };\r\n\r\n    SpriteNode.prototype = Object.create(BaseNode.prototype);\r\n    SpriteNode.prototype.constructor = SpriteNode;\r\n\r\n    SpriteNode.prototype.setFlip = function (x, y) {\r\n        this.flip = {x: x, y: y};\r\n    };\r\n\r\n    SpriteNode.prototype.draw = function (speed) {\r\n        if (this.visible && this.isLookScene()) {\r\n            speed = speed || 1;\r\n\r\n            if (this.frame > this.animation.frameCount) {\r\n                this.frame = 0;\r\n            }\r\n            this.drawFrame(this.frame + 1);\r\n\r\n            if (this.tmpSpeed > speed) {\r\n                this.frame += 1;\r\n                this.tmpSpeed = 0;\r\n            }\r\n            else {\r\n                this.tmpSpeed += 1;\r\n            }\r\n        }\r\n    };\r\n\r\n    // отрисовка одного кадра\r\n    SpriteNode.prototype.drawFrame = function (frame) {\r\n        var context = this.layer.context;\r\n        if (this.visible && this.isLookScene()) {\r\n\r\n            if (this.alpha != 1) {\r\n                var tmpAlpha = context.globalAlpha;\r\n                context.globalAlpha = this.alpha;\r\n            }\r\n\r\n            context.lineWidth = 0;\r\n\r\n            if (this.angle || this.flip.x || this.flip.y) {\r\n                context.save();\r\n                context.translate(this.getPosition().x - this.j2d.scene.view.x, this.getPosition().y - this.j2d.scene.view.y);\r\n                context.rotate(this.j2d.math.rad(this.angle));\r\n                context.scale(this.flip.x ? -1 : 1, this.flip.y ? -1 : 1);\r\n                context.translate(-(this.getPosition().x - this.j2d.scene.view.x), -(this.getPosition().y - this.j2d.scene.view.y));\r\n            }\r\n\r\n            frame = frame ? (frame - 1) : 0;\r\n\r\n            context.drawImage(\r\n                this.animation.imageMap.img,\r\n                (this.animation.sourceX + (this.animation.sourceW * frame)), this.animation.sourceY,\r\n                this.animation.sourceW, this.animation.sourceH,\r\n                this.pos.x - this.j2d.scene.view.x, this.pos.y - this.j2d.scene.view.y,\r\n                this.size.x, this.size.y);\r\n\r\n            if (this.angle || this.flip.x || this.flip.y) {\r\n                context.restore();\r\n            }\r\n\r\n            if (this.alpha != 1) {\r\n                context.globalAlpha = tmpAlpha;\r\n            }\r\n        }\r\n    };\r\n\r\n    SpriteNode.prototype.setAnimation = function (id) {\r\n        if (this.animation != id) {\r\n            this.animation = id;\r\n        }\r\n    };\r\n\r\n    return SpriteNode;\r\n});\r\n"],"sourceRoot":"/source/"}