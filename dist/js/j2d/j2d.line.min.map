{"version":3,"sources":["j2d.line.js","j2d/j2d.line.js"],"names":["root","factory","define","amd","J2D","BaseNode","Scene","global","prototype","addLineNode","position","points","scale","color","width","fill","cFill","LineNode","this","parent","j2d","call","vector","vec2df","nodeName","mergeOptions","lineWidth","Object","create","constructor","draw","context","layer","options","visible","isLookScene","alpha","tmpAlpha","globalAlpha","angle","save","translate","getPosition","x","scene","viewport","y","rotate","math","rad","strokeStyle","lineCap","beginPath","moveTo","i","len","length","lineTo","stroke","fillStyle","restore","undefined","window"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CCHC,SAAUA,EAAMC,GACS,kBAAXC,SAAyBA,OAAOC,IACvCD,OAAO,YAAa,aAAc,WAAY,aAAcD,GAE5DA,EAAQD,EAAKI,IAAKC,SAAUC,QAElCC,OAAQ,SAAUH,EAAKC,EAAUC,GAC/B,YAEKA,GAAME,UAAUC,cACjBH,EAAME,UAAUC,YAAc,SAAUC,EAAUC,EAAQC,EAAOC,EAAOC,EAAOC,EAAMC,GACjF,MAAO,IAAIC,GAASC,KAAKC,OAAQT,EAAUC,EAAQC,EAAOC,EAAOC,EAAOC,EAAMC,IAItF,IAAIC,GAAW,SAAUG,EAAKV,EAAUC,EAAQC,EAAOC,EAAOC,EAAOC,EAAMC,GACvEX,EAASgB,KAAKH,KAAME,EAAKV,EAAUU,EAAIE,OAAOC,OAAO,EAAG,IACxDL,KAAKM,SAAW,WAChBN,KAAKO,cACDZ,MAAOA,EACPF,OAAQA,EACRI,KAAMA,IAAQ,EACdH,MAAOA,GAAS,EAChBI,MAAOA,EACPU,UAAWZ,IA4DnB,OAxDAG,GAAST,UAAYmB,OAAOC,OAAOvB,EAASG,WAC5CS,EAAST,UAAUqB,YAAcZ,EAEjCA,EAAST,UAAUsB,KAAO,WACtB,GAAIC,GAAUb,KAAKc,MAAMD,OACzB,IAAIb,KAAKe,QAAQC,SAAWhB,KAAKiB,cAAe,CAE5C,GAA0B,GAAtBjB,KAAKe,QAAQG,MAAY,CACzB,GAAIC,GAAWN,EAAQO,WACvBP,GAAQO,YAAcpB,KAAKe,QAAQG,MAGnClB,KAAKe,QAAQM,QACbR,EAAQS,OACRT,EAAQU,UAAUvB,KAAKwB,cAAcC,EAAIzB,KAAKE,IAAIwB,MAAMC,SAASF,EAAGzB,KAAKwB,cAAcI,EAAI5B,KAAKE,IAAIwB,MAAMC,SAASC,GACnHf,EAAQgB,OAAO7B,KAAKE,IAAI4B,KAAKC,IAAI/B,KAAKe,QAAQM,QAC9CR,EAAQU,YAAYvB,KAAKwB,cAAcC,EAAIzB,KAAKE,IAAIwB,MAAMC,SAASF,KAAMzB,KAAKwB,cAAcI,EAAI5B,KAAKE,IAAIwB,MAAMC,SAASC,KAG5Hf,EAAQmB,YAAchC,KAAKe,QAAQpB,MACnCkB,EAAQL,UAAYR,KAAKe,QAAQP,UACjCK,EAAQoB,QAAU,QAElBpB,EAAQqB,YACRrB,EAAQsB,OACJnC,KAAKe,QAAQvB,SAASiC,EAAIzB,KAAKE,IAAIwB,MAAMC,SAASF,EAClDzB,KAAKe,QAAQvB,SAASoC,EAAI5B,KAAKE,IAAIwB,MAAMC,SAASC,EAGtD,KAAK,GAAIQ,GAAI,EAAGC,EAAMrC,KAAKe,QAAQtB,OAAO6C,OAAYD,EAAJD,EAASA,GAAK,EAC5DvB,EAAQ0B,OACJvC,KAAKe,QAAQvB,SAASiC,EAAIzB,KAAKe,QAAQtB,OAAO2C,GAAG,GAAKpC,KAAKe,QAAQrB,MAAQM,KAAKE,IAAIwB,MAAMC,SAASF,EACnGzB,KAAKe,QAAQvB,SAASoC,EAAI5B,KAAKe,QAAQtB,OAAO2C,GAAG,GAAKpC,KAAKe,QAAQrB,MAAQM,KAAKE,IAAIwB,MAAMC,SAASC,EAI3Gf,GAAQ2B,SACJxC,KAAKe,QAAQlB,OACbgB,EAAQ4B,UAAYzC,KAAKe,QAAQjB,MACjCe,EAAQhB,QAGZgB,EAAQL,UAAY,EACpBK,EAAQoB,QAAU,OAEdjC,KAAKe,QAAQM,OACbR,EAAQ6B,UAGc,GAAtB1C,KAAKe,QAAQG,QACbL,EAAQO,YAAcD,KAKfwB,SAAfC,OAAO1D,MAAmB0D,OAAO7C,SAAWA,GACzCA","file":"j2d/j2d.line.js","sourcesContent":[null,"/**\r\n * J2D (jQuery plugin of the fork j2ds)\r\n *\r\n * @authors Skaner, likerRr, DeVinterX\r\n * @license zlib\r\n * @version 0.1.5a\r\n * @see https://github.com/SkanerSoft/J2ds/commit/501b8993fc41960794572dc481a5f2fe492da349\r\n */\r\n\r\n!function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('j2d.line', ['jquery.j2d', 'j2d.base', 'j2d.scene'], factory);\r\n    } else {\r\n        factory(root.J2D, BaseNode, Scene);\r\n    }\r\n}(global, function (J2D, BaseNode, Scene) {\r\n    \"use strict\";\r\n\r\n    if (!Scene.prototype.addLineNode) {\r\n        Scene.prototype.addLineNode = function (position, points, scale, color, width, fill, cFill) {\r\n            return new LineNode(this.parent, position, points, scale, color, width, fill, cFill);\r\n        };\r\n    }\r\n\r\n    var LineNode = function (j2d, position, points, scale, color, width, fill, cFill) {\r\n        BaseNode.call(this, j2d, position, j2d.vector.vec2df(0, 0));\r\n        this.nodeName = 'LineNode';\r\n        this.mergeOptions({\r\n            color: color,\r\n            points: points,\r\n            fill: fill || false,\r\n            scale: scale || 0,\r\n            cFill: cFill,\r\n            lineWidth: width\r\n        });\r\n    };\r\n\r\n    LineNode.prototype = Object.create(BaseNode.prototype);\r\n    LineNode.prototype.constructor = LineNode;\r\n\r\n    LineNode.prototype.draw = function () {\r\n        var context = this.layer.context;\r\n        if (this.options.visible && this.isLookScene()) {\r\n\r\n            if (this.options.alpha != 1) {\r\n                var tmpAlpha = context.globalAlpha;\r\n                context.globalAlpha = this.options.alpha;\r\n            }\r\n\r\n            if (this.options.angle) {\r\n                context.save();\r\n                context.translate(this.getPosition().x - this.j2d.scene.viewport.x, this.getPosition().y - this.j2d.scene.viewport.y);\r\n                context.rotate(this.j2d.math.rad(this.options.angle));\r\n                context.translate(-(this.getPosition().x - this.j2d.scene.viewport.x), -(this.getPosition().y - this.j2d.scene.viewport.y));\r\n            }\r\n\r\n            context.strokeStyle = this.options.color;\r\n            context.lineWidth = this.options.lineWidth;\r\n            context.lineCap = 'round';\r\n\r\n            context.beginPath();\r\n            context.moveTo(\r\n                this.options.position.x - this.j2d.scene.viewport.x,\r\n                this.options.position.y - this.j2d.scene.viewport.y\r\n            );\r\n\r\n            for (var i = 0, len = this.options.points.length; i < len; i += 1) {\r\n                context.lineTo(\r\n                    this.options.position.x + this.options.points[i][0] * this.options.scale - this.j2d.scene.viewport.x,\r\n                    this.options.position.y + this.options.points[i][1] * this.options.scale - this.j2d.scene.viewport.y\r\n                );\r\n            }\r\n\r\n            context.stroke();\r\n            if (this.options.fill) {\r\n                context.fillStyle = this.options.cFill;\r\n                context.fill();\r\n            }\r\n\r\n            context.lineWidth = 0;\r\n            context.lineCap = 'butt';\r\n\r\n            if (this.options.angle) {\r\n                context.restore();\r\n            }\r\n\r\n            if (this.options.alpha != 1) {\r\n                context.globalAlpha = tmpAlpha;\r\n            }\r\n        }\r\n    };\r\n\r\n    if (window.J2D !== undefined) window.LineNode = LineNode;\r\n    return LineNode;\r\n});\r\n"],"sourceRoot":"/source/"}