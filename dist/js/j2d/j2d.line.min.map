{"version":3,"sources":["j2d/j2d.line.js"],"names":["define","J2D","BaseNode","prototype","scene","addLineNode","pos","points","scale","color","width","fill","cFill","LineNode","this","parent","j2d","call","vector","vec2df","lineWidth","Object","create","constructor","draw","context","layer","visible","isLookScene","alpha","tmpAlpha","globalAlpha","angle","save","translate","getPosition","x","viewport","y","rotate","math","rad","strokeStyle","lineCap","beginPath","moveTo","i","len","length","lineTo","stroke","fillStyle","restore"],"mappings":"AASAA,OAAO,YACH,aACA,YACD,SAAUC,EAAKC,GACd,YAEKD,GAAIE,UAAUC,MAAMC,cACrBJ,EAAIE,UAAUC,MAAMC,YAAc,SAAUC,EAAKC,EAAQC,EAAOC,EAAOC,EAAOC,EAAMC,GAChF,MAAO,IAAIC,GAASC,KAAKC,OAAQT,EAAKC,EAAQC,EAAOC,EAAOC,EAAOC,EAAMC,IAIjF,IAAIC,GAAW,SAAUG,EAAKV,EAAKC,EAAQC,EAAOC,EAAOC,EAAOC,EAAMC,GAElEV,EAASe,KAAKH,KAAME,EAAKV,EAAKU,EAAIE,OAAOC,OAAO,EAAG,IAGnDL,KAAKL,MAAQA,EACbK,KAAKP,OAASA,EACdO,KAAKH,KAAOA,IAAQ,EACpBG,KAAKN,MAAQA,GAAS,EACtBM,KAAKF,MAAQA,EACbE,KAAKM,UAAkB,EAANV,EAuDrB,OApDAG,GAASV,UAAYkB,OAAOC,OAAOpB,EAASC,WAC5CU,EAASV,UAAUoB,YAAcV,EAEjCA,EAASV,UAAUqB,KAAO,WACtB,GAAIC,GAAUX,KAAKY,MAAMD,OACzB,IAAIX,KAAKa,SAAWb,KAAKc,cAAe,CAEpC,GAAkB,GAAdd,KAAKe,MAAY,CACjB,GAAIC,GAAWL,EAAQM,WACvBN,GAAQM,YAAcjB,KAAKe,MAG3Bf,KAAKkB,QACLP,EAAQQ,OACRR,EAAQS,UAAUpB,KAAKqB,cAAcC,EAAItB,KAAKE,IAAIZ,MAAMiC,SAASD,EAAGtB,KAAKqB,cAAcG,EAAIxB,KAAKE,IAAIZ,MAAMiC,SAASC,GACnHb,EAAQc,OAAOzB,KAAKE,IAAIwB,KAAKC,IAAI3B,KAAKkB,QACtCP,EAAQS,YAAYpB,KAAKqB,cAAcC,EAAItB,KAAKE,IAAIZ,MAAMiC,SAASD,KAAMtB,KAAKqB,cAAcG,EAAIxB,KAAKE,IAAIZ,MAAMiC,SAASC,KAG5Hb,EAAQiB,YAAc5B,KAAKL,MAC3BgB,EAAQL,UAAYN,KAAKM,UACzBK,EAAQkB,QAAU,QAElBlB,EAAQmB,YACRnB,EAAQoB,OAAO/B,KAAKR,IAAI8B,EAAItB,KAAKE,IAAIZ,MAAMiC,SAASD,EAChDtB,KAAKR,IAAIgC,EAAIxB,KAAKE,IAAIZ,MAAMiC,SAASC,EAEzC,KAAK,GAAIQ,GAAI,EAAGC,EAAMjC,KAAKP,OAAOyC,OAAYD,EAAJD,EAASA,GAAK,EACpDrB,EAAQwB,OACJnC,KAAKR,IAAI8B,EAAItB,KAAKP,OAAOuC,GAAG,GAAKhC,KAAKN,MAAQM,KAAKE,IAAIZ,MAAMiC,SAASD,EACtEtB,KAAKR,IAAIgC,EAAIxB,KAAKP,OAAOuC,GAAG,GAAKhC,KAAKN,MAAQM,KAAKE,IAAIZ,MAAMiC,SAASC,EAG9Eb,GAAQyB,SACJpC,KAAKH,OACLc,EAAQ0B,UAAYrC,KAAKF,MACzBa,EAAQd,QAGZc,EAAQL,UAAY,EACpBK,EAAQkB,QAAU,OAEd7B,KAAKkB,OACLP,EAAQ2B,UAGM,GAAdtC,KAAKe,QACLJ,EAAQM,YAAcD,KAK3BjB","file":"j2d/j2d.line.min","sourcesContent":["/**\r\n * J2D (jQuery plugin of the fork j2ds)\r\n *\r\n * @authors Skaner, likerRr, DeVinterX\r\n * @license zlib\r\n * @version 0.1.4\r\n * @see https://github.com/SkanerSoft/J2ds/commit/501b8993fc41960794572dc481a5f2fe492da349\r\n */\r\n\r\ndefine('j2d.line', [\r\n    'jquery.j2d',\r\n    'j2d.base'\r\n], function (J2D, BaseNode) {\r\n    \"use strict\";\r\n\r\n    if (!J2D.prototype.scene.addLineNode) {\r\n        J2D.prototype.scene.addLineNode = function (pos, points, scale, color, width, fill, cFill) {\r\n            return new LineNode(this.parent, pos, points, scale, color, width, fill, cFill);\r\n        };\r\n    }\r\n\r\n    var LineNode = function (j2d, pos, points, scale, color, width, fill, cFill) {\r\n\r\n        BaseNode.call(this, j2d, pos, j2d.vector.vec2df(0, 0));\r\n\r\n        /*Свойства*/\r\n        this.color = color;\r\n        this.points = points;\r\n        this.fill = fill || false;\r\n        this.scale = scale || 0;\r\n        this.cFill = cFill;\r\n        this.lineWidth = width*5;\r\n    };\r\n\r\n    LineNode.prototype = Object.create(BaseNode.prototype);\r\n    LineNode.prototype.constructor = LineNode;\r\n\r\n    LineNode.prototype.draw = function () {\r\n        var context = this.layer.context;\r\n        if (this.visible && this.isLookScene()) {\r\n\r\n            if (this.alpha != 1) {\r\n                var tmpAlpha = context.globalAlpha;\r\n                context.globalAlpha = this.alpha;\r\n            }\r\n\r\n            if (this.angle) {\r\n                context.save();\r\n                context.translate(this.getPosition().x - this.j2d.scene.viewport.x, this.getPosition().y - this.j2d.scene.viewport.y);\r\n                context.rotate(this.j2d.math.rad(this.angle));\r\n                context.translate(-(this.getPosition().x - this.j2d.scene.viewport.x), -(this.getPosition().y - this.j2d.scene.viewport.y));\r\n            }\r\n\r\n            context.strokeStyle = this.color;\r\n            context.lineWidth = this.lineWidth;\r\n            context.lineCap = 'round';\r\n\r\n            context.beginPath();\r\n            context.moveTo(this.pos.x - this.j2d.scene.viewport.x,\r\n                this.pos.y - this.j2d.scene.viewport.y);\r\n\r\n            for (var i = 0, len = this.points.length; i < len; i += 1) {\r\n                context.lineTo(\r\n                    this.pos.x + this.points[i][0] * this.scale - this.j2d.scene.viewport.x,\r\n                    this.pos.y + this.points[i][1] * this.scale - this.j2d.scene.viewport.y);\r\n            }\r\n\r\n            context.stroke();\r\n            if (this.fill) {\r\n                context.fillStyle = this.cFill;\r\n                context.fill();\r\n            }\r\n\r\n            context.lineWidth = 0;\r\n            context.lineCap = 'butt';\r\n\r\n            if (this.angle) {\r\n                context.restore();\r\n            }\r\n\r\n            if (this.alpha != 1) {\r\n                context.globalAlpha = tmpAlpha;\r\n            }\r\n        }\r\n    };\r\n\r\n    return LineNode;\r\n});\r\n"],"sourceRoot":"/source/"}